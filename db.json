{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"source/favicon-bak.ico","path":"favicon-bak.ico","modified":1,"renderable":0},{"_id":"source/images/raspberry-ros-config.png","path":"images/raspberry-ros-config.png","modified":1,"renderable":0},{"_id":"themes/maupassant-hexo-master/source/css/font-awesome.css","path":"css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/css/font-awesome.min.css","path":"css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/css/grids-responsive-min.css","path":"css/grids-responsive-min.css","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/css/jquery.fancybox.css","path":"css/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/css/jquery.fancybox.min.css","path":"css/jquery.fancybox.min.css","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/css/normalize.min.css","path":"css/normalize.min.css","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/css/octicons.css","path":"css/octicons.css","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/css/pure-min.css","path":"css/pure-min.css","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/css/style.css","path":"css/style.css","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/css/style2.css","path":"css/style2.css","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/css/style.scss","path":"css/style.scss","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/js/analytics.js","path":"js/analytics.js","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/js/badge.js","path":"js/badge.js","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/js/codeblock-resizer.js","path":"js/codeblock-resizer.js","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/js/busuanzi.pure.mini.js","path":"js/busuanzi.pure.mini.js","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/js/cwj3gfk.js","path":"js/cwj3gfk.js","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/js/fancybox.js","path":"js/fancybox.js","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/js/jquery.fancybox.min.js","path":"js/jquery.fancybox.min.js","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/js/share.js","path":"js/share.js","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/js/smartresize.js","path":"js/smartresize.js","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/fonts/fontawesome-webfont.woff2","path":"fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/fonts/fontawesome-webfont.woff","path":"fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/fonts/FontAwesome.otf","path":"fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/fonts/fontawesome-webfont.eot","path":"fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/fonts/fontawesome-webfont.ttf","path":"fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/maupassant-hexo-master/source/fonts/fontawesome-webfont.svg","path":"fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/.project","hash":"0fd964314a74e05ff5b7595158cd22a99bffe6fd","modified":1495847109300},{"_id":"source/favicon.ico","hash":"049fa96a82ba2e016adf1f34fe2d45a84826a804","modified":1495855324617},{"_id":"themes/maupassant-hexo-master/.travis.yml","hash":"0339959f29deddc365e8fe8bd85da524410b9a23","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/README.md","hash":"e75d6136d0355d0c231fb9bd27f93ef3e2d29477","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/_config.yml","hash":"37cfc17ca12cf7fdcc004064f0369d2a5d710395","modified":1495768439219},{"_id":"themes/maupassant-hexo-master/LICENSE","hash":"f0ac2f92770650c9835183f79010c0d307b34acd","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/package.json","hash":"81fb4e2ac051ecfb9a93f37b28910291b939771a","modified":1495628577000},{"_id":"source/favicon-bak.ico","hash":"789674bc844491ec7624454aa56890f94a2270f3","modified":1495789969865},{"_id":"source/about/index.md","hash":"dd8c1b91de53b43e33da43218a681abb39981054","modified":1495856686340},{"_id":"source/_posts/15个常用的javaScript正则表达式.md","hash":"7e09975cd9c1032c1a0a25c04d3c98ec30836b58","modified":1496193234982},{"_id":"source/_posts/Fedora启动SSH服务.md","hash":"6caaa4eb3a8a4f1a678d24cc221dd9fcf3b8e31c","modified":1495674141993},{"_id":"source/_posts/SASS.md","hash":"caba350a558cd1b9dd60e86baa054e91fa3be9d0","modified":1495769753807},{"_id":"source/_posts/Tomcat7优化配置.md","hash":"edc1b7ba295d82d540c03362d26cfc4644645c5e","modified":1495674250535},{"_id":"source/_posts/css-background.md","hash":"6953c43e027bfadce650b19462222785b840bcf8","modified":1496373093315},{"_id":"source/_posts/fedora安装jdk7.md","hash":"3347b7f7368ab225b97080907f419c763e8ad9e1","modified":1495674127833},{"_id":"source/_posts/VNC远程登录Raspbian图形界面.md","hash":"f3979b413162dbfd01cb0f8dffee7f6648e57d5c","modified":1495674259345},{"_id":"source/_posts/fedora安装vlc.md","hash":"2f3ff4390702b066415bd4158154b03337b5312d","modified":1495674134457},{"_id":"source/_posts/fedora清理垃圾常用命令.md","hash":"a41b5e145bba99e72ab2c48b915dec7fcfad7716","modified":1495674148960},{"_id":"source/_posts/fedora转换deb包.md","hash":"5128f5448866aa2237898e8b1e3f804e8ad6dc42","modified":1495674154864},{"_id":"source/_posts/github绑定顶级域名的方法.md","hash":"fb9c8c389fa1ad4f113604ba55b382b8a81b76d7","modified":1495674166727},{"_id":"source/_posts/hexo-Maupassant主题.md","hash":"02595bb8b1e7d96f2eebdcb8fe0db965802d5754","modified":1496217641032},{"_id":"source/_posts/hexo常用命令.md","hash":"4d884f20fdcc909997bfa4c416330e911c554c30","modified":1496217266037},{"_id":"source/_posts/js代码片段.md","hash":"d626b271b25832e6afaf577b8508fb3d0f200564","modified":1496216820087},{"_id":"source/_posts/less.md","hash":"bd46fe047387ef09241b7b63814763456e2ed654","modified":1495674266628},{"_id":"source/_posts/npm.md","hash":"e76ba00430ade5d5d30e0c36bc206ea783e33f77","modified":1496192212388},{"_id":"source/_posts/node+hexo.md","hash":"7c42a4c1540ce0e68f18d2aa0e3d3ba22b60b7eb","modified":1495674202306},{"_id":"source/_posts/react-weather-app.md","hash":"ab790224bddba337fc5b73acbaaf990e938ae400","modified":1496300490047},{"_id":"source/_posts/使用HTML5开发离线应用.md","hash":"24b553dde841adc1600a4157aba0386d529f9916","modified":1495674055800},{"_id":"source/_posts/在树莓派上安装配置samba.md","hash":"7d08b35eb052041ef7f53cb8872405fdc9c461cd","modified":1495674107503},{"_id":"source/_posts/在树莓派上搭建代码托管服务(SVN).md","hash":"599556aa13f73a0ec5290fdd6af9930e1112e4b3","modified":1495674118154},{"_id":"source/_posts/常见的移动端web问题解决方案.md","hash":"861300f1e2a076ecbad89a3880485f88d0ee0744","modified":1495763994300},{"_id":"source/_posts/常用JavaScript代码.md","hash":"cb557200fec2bfd1ac0a3a2174ea7b06650748b0","modified":1496192067387},{"_id":"source/_posts/搭建简单的nodejs服务器.md","hash":"fbb832c188f1ba1d003e8fe28867aaa366245bf9","modified":1495674043922},{"_id":"source/_posts/树莓派3-语音-实现文字转语音服务.md","hash":"2050de531902a35d0cc5b5920d03113132b53590","modified":1495674079152},{"_id":"source/_posts/树莓派常用设置.md","hash":"aef5b8c1b624dcf88fcaa72e67a689b80f365d0c","modified":1495789915163},{"_id":"source/_posts/树莓派设置支持中文.md","hash":"0a146b60d43105dab94ab80d659ee9cb1cdf2240","modified":1495674096046},{"_id":"source/_posts/移动web资源整理.md","hash":"5bc5c834abdc8428ee178297609b95c0f70de53a","modified":1495777688445},{"_id":"source/_posts/移动web页面给用户发送邮件的方法.md","hash":"5f656fdc0179b139f29a788719fd7f0470433640","modified":1495771328534},{"_id":"source/_posts/树莓派3-配置-根分区扩展到整张SD卡.md","hash":"650addba30080aa82046c9330b1fa21f7c4f6dac","modified":1495674069779},{"_id":"source/images/raspberry-ros-config.png","hash":"398fdb7b6f59b7454259e5945ad700c2f460f69a","modified":1495271260000},{"_id":"themes/maupassant-hexo-master/languages/de-DE.yml","hash":"5d3556a885e355a8c2da65ef3e7b3ee36a628bfa","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/languages/en.yml","hash":"e8887110dd01c4b6c41493b661b433b6b579b110","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/languages/fr-FR.yml","hash":"b47906ec0abf867fb3e3360bc046b7afb68aee25","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/languages/ko.yml","hash":"909a33e0befa6978e8e72157c6b415b48551ee31","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/languages/es-ES.yml","hash":"58e1d04bcd1834fa9d2960e18e027abbbccbedc9","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/languages/ru.yml","hash":"2476a631f4d3c668de04af85a6c2c97ba2a57e96","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/languages/zh-CN.yml","hash":"ec5c4b2667bb0cceb7fd0934ebe8631d6a701018","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/languages/zh-TW.yml","hash":"17b22e638fd21ab16d4c156b22f8c89ececad9f5","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/layout/base-without-sidebar.jade","hash":"60b5a70f7c61c91aca9fbf813bde26096ef4028f","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/layout/base.jade","hash":"41f3a0f5e3c5b722de9d058c458822e5122384e1","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/layout/index.jade","hash":"c6d0f760df9a5f02aaeddc16a5eb3494f044eaa9","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/layout/post.jade","hash":"cb7f56a871d6c855acf9ea2b234e7e23915e255a","modified":1495788951511},{"_id":"themes/maupassant-hexo-master/layout/archive.jade","hash":"0050c883b4f202add71c8664d65e6072179e7190","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/layout/single-column.jade","hash":"c35fff4d9b331a41af5bc10f4278ec3d9da503db","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/layout/timeline.jade","hash":"649281ace58d7ff08a6ecb10606799ae2f77bb38","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/layout/page.jade","hash":"8d70fd3b93f2c9087a9ea7ec538dcc1d413bea01","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/layout/_partial/comments.jade","hash":"e5d604bcaad6558ba56e036de3ef5a840d501155","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/layout/_partial/after_footer.jade","hash":"78424748d749d5df0f251e896c2d4d1a69b02b62","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/layout/_partial/footer.jade","hash":"a7518fb6d4798a89adb876b1354ea03819784a68","modified":1495770697048},{"_id":"themes/maupassant-hexo-master/layout/_partial/head.jade","hash":"6040f7f465c87a1dfcfd26a59a9cdd2dabe45779","modified":1495786635620},{"_id":"themes/maupassant-hexo-master/layout/_partial/helpers.jade","hash":"acdf9e2d52ee86c831fa15ce1570930c5779bc78","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/layout/_partial/mathjax.jade","hash":"b54b56faff9e47ab3ca3cdd55056c73e60776f3c","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/layout/_partial/mathjax2.jade","hash":"d6ac5dc4e9c7a1b866f1f92d88988cfb35aded4c","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/layout/_partial/paginator.jade","hash":"53f9cb77448e84a98da5eb688e2e12b173c555bb","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/layout/_partial/post_nav.jade","hash":"a2d698c84bb6da08195fe870dbd7215f65388d3f","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/layout/_partial/tag.jade","hash":"0f0e6770e9d5dd8040e330d71bbbfadd2df36a28","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/layout/_partial/totop.jade","hash":"8225bbc3cdb9648bc2e6872e5c616a9a1e4def4f","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/layout/_widget/category.jade","hash":"7c6aed762934ca51aa2669b886254da24b77bc14","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/layout/_widget/links.jade","hash":"f57a0c76d243882b2b77330132bdb43bc648948b","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/layout/_widget/recent_comments.jade","hash":"e119c5afa85abc60d139e2da99b0bfcd7a6530f8","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/layout/_widget/recent_posts.jade","hash":"19431336d724d2118e46da43683bce9063176541","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/layout/_widget/search.jade","hash":"193546282908e499813534f86d27ef6e0a1357b3","modified":1495788644544},{"_id":"themes/maupassant-hexo-master/layout/_widget/tag.jade","hash":"132f049ce677d0e38f50073174c4ee4b825d4a06","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/source/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1477601504000},{"_id":"themes/maupassant-hexo-master/source/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1477601505000},{"_id":"themes/maupassant-hexo-master/source/css/grids-responsive-min.css","hash":"622a1e56f8476757b5cdcb316b87e4914a619d9b","modified":1495783866397},{"_id":"themes/maupassant-hexo-master/source/css/jquery.fancybox.css","hash":"f42f761157f26244673eb2f4a9215c70956f80dc","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/source/css/jquery.fancybox.min.css","hash":"7063d841fd7e727d4978161c9d6beb6b7357bbc3","modified":1495785466833},{"_id":"themes/maupassant-hexo-master/source/css/normalize.min.css","hash":"4968fea2bb2288696fd90a34849061f947696c04","modified":1495783814952},{"_id":"themes/maupassant-hexo-master/source/css/octicons.css","hash":"0bebc0eb4ea548237695b45c0bdd36c4e3131271","modified":1495785724248},{"_id":"themes/maupassant-hexo-master/source/css/pure-min.css","hash":"89af72febbeab04fa1000ab62a101bdc512b7376","modified":1495783845263},{"_id":"themes/maupassant-hexo-master/source/css/style.css","hash":"378369d62d818ac1f37ff82af793a9072be2b0e7","modified":1495785340620},{"_id":"themes/maupassant-hexo-master/source/css/style2.css","hash":"aed85c021177cd8694b0d5e75a8029455c702ce4","modified":1495785716949},{"_id":"themes/maupassant-hexo-master/source/css/style.scss","hash":"b4a7dc1343687924f2e23ae137a2f72f30ab2d04","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/source/js/analytics.js","hash":"8db2e8c8a03019f83ab9b7f4f810e9be6cbaf4c3","modified":1495783939271},{"_id":"themes/maupassant-hexo-master/source/js/badge.js","hash":"b796315d32b5be6afd7d0e5f528ae907e7c80f53","modified":1495785689489},{"_id":"themes/maupassant-hexo-master/source/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/source/js/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1495788845488},{"_id":"themes/maupassant-hexo-master/source/js/cwj3gfk.js","hash":"3b639a8f18e202eb4a6f97041217973faa903058","modified":1495785433643},{"_id":"themes/maupassant-hexo-master/source/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/source/js/jquery.fancybox.min.js","hash":"43c14fa57d030ee693f1b16853eaa2b7b811d75d","modified":1495785532455},{"_id":"themes/maupassant-hexo-master/source/js/search.js","hash":"0c0630e2ef213701d393b041f10572e951a27985","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/source/js/share.js","hash":"6400d719d5eb14587d854a3dff6b290a3c06dc67","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/source/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/source/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1495628577000},{"_id":"themes/maupassant-hexo-master/source/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1477601504000},{"_id":"themes/maupassant-hexo-master/source/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1477601504000},{"_id":"themes/maupassant-hexo-master/source/js/jquery.min.js","hash":"1055018c28ab41087ef9ccefe411606893dabea2","modified":1495783914148},{"_id":"themes/maupassant-hexo-master/source/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1477601504000},{"_id":"themes/maupassant-hexo-master/source/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1477601504000},{"_id":"themes/maupassant-hexo-master/source/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1477601504000},{"_id":"themes/maupassant-hexo-master/source/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1477601504000},{"_id":"public/about/index.html","hash":"ee7adc6f4ac0bb6ed719a9a99db3c81d9715f87b","modified":1496375999430},{"_id":"public/2017/05/22/树莓派设置支持中文/index.html","hash":"704663e72098dc163afccc3ab6470128ebce81c0","modified":1496375999430},{"_id":"public/2017/05/22/树莓派3-配置-根分区扩展到整张SD卡/index.html","hash":"a8d64c50a8b14a061bb3449e7c506d3b8bdf0022","modified":1496375999430},{"_id":"public/2017/05/22/树莓派3-语音-实现文字转语音服务/index.html","hash":"14394db6cf7e6baeb1d2b9218f67279b4f8820c0","modified":1496375999430},{"_id":"public/2017/05/22/在树莓派上搭建代码托管服务(SVN)/index.html","hash":"ccf823ea3da8e98b148c9b9f940feb392e2488ba","modified":1496375999430},{"_id":"public/2017/05/22/在树莓派上安装配置samba/index.html","hash":"45055fa1599b607d4951d5866b20e56a20999b78","modified":1496375999430},{"_id":"public/2017/05/22/VNC远程登录Raspbian图形界面/index.html","hash":"92e8b23a6490e9903fab75f097290a5a39741328","modified":1496375999430},{"_id":"public/2017/05/22/github绑定顶级域名的方法/index.html","hash":"7ca56fdae10cdc20de0105250752764f7682f5ff","modified":1496375999430},{"_id":"public/2017/05/22/fedora转换deb包/index.html","hash":"06aec6e8a1eafa01393abb0ca0a6b95f2a8f7836","modified":1496375999430},{"_id":"public/2017/05/22/fedora清理垃圾常用命令/index.html","hash":"0a95f5e7bfd6e70b32844208cd2b80ed455aecf0","modified":1496375999430},{"_id":"public/2017/05/22/fedora安装vlc/index.html","hash":"809f9396eaa37169df23079329bc6109a44b8d55","modified":1496375999430},{"_id":"public/2017/05/22/fedora安装jdk7/index.html","hash":"e638025b5ed26706b1429a333f36d7310aa8557c","modified":1496375999430},{"_id":"public/2017/05/22/Fedora启动SSH服务/index.html","hash":"eb8fc224d327b6f08c2c7716f20e4553bbff01cb","modified":1496375999430},{"_id":"public/categories/前端/index.html","hash":"a326530ff8959d56c35d05c84a0cfafa367bcbfa","modified":1496375999430},{"_id":"public/categories/fedora/index.html","hash":"63dbcfc8b2e05d8a550f5596463d8855ba6afa79","modified":1496375999430},{"_id":"public/categories/Tomcat/index.html","hash":"848a27f7fb3051fc53d459e1deb846bfe259c64b","modified":1496375999430},{"_id":"public/categories/raspberry-pi/index.html","hash":"e1e754a1d492cd1f28c6c39bf39196083d5330d9","modified":1496375999430},{"_id":"public/categories/github/index.html","hash":"722cff3b68b79df2aa238c04c77bad7aaa6533c2","modified":1496375999430},{"_id":"public/categories/hexo/index.html","hash":"edd148b904d5fc4cd4888f4637456f1168e3e496","modified":1496375999430},{"_id":"public/categories/nodejs/index.html","hash":"d4f45abdc5f73f8b07c25b230fdccba01fb99918","modified":1496375999430},{"_id":"public/categories/react/index.html","hash":"7612656171ac71148e9c4301c8d1c9c0d63882a2","modified":1496375999430},{"_id":"public/categories/html/index.html","hash":"265a7319ecd7af0b6cb268c8c27b4a605a622693","modified":1496375999430},{"_id":"public/categories/移动端/index.html","hash":"070ebf9cffd9e501b582f54019eaa9702755052a","modified":1496375999430},{"_id":"public/archives/index.html","hash":"90a36b4f15b229cb62f31dc7cc2e48510a2a6712","modified":1496375999430},{"_id":"public/archives/page/2/index.html","hash":"868250b1f17e72c7788bd2727ba4979d74719e86","modified":1496375999430},{"_id":"public/archives/page/3/index.html","hash":"22e8ba46839c48684e9ba7ac6d933998e187aeb9","modified":1496375999430},{"_id":"public/archives/2017/index.html","hash":"5ef9070da462be65a2fe43d23f6e974ad47bca9e","modified":1496375999430},{"_id":"public/archives/2017/page/2/index.html","hash":"d0882aeba9c5f5c9734cb7423aa1407184353ba6","modified":1496375999430},{"_id":"public/archives/2017/page/3/index.html","hash":"8b492033bfcd29e0ca5f6b27ff3290fdfb42f66b","modified":1496375999430},{"_id":"public/archives/2017/05/index.html","hash":"db5945571e9859e8baf04f009b8c90c32598b74f","modified":1496375999430},{"_id":"public/archives/2017/05/page/2/index.html","hash":"dedc757f02eff62918f56c6e41e94f7468a97159","modified":1496375999445},{"_id":"public/archives/2017/05/page/3/index.html","hash":"1d8ad0e12a0ba40aac3716e5f70c6d0a9757095c","modified":1496375999445},{"_id":"public/archives/2017/06/index.html","hash":"fa1d7c2108e5ef9360aba9d66e28cf85585f070c","modified":1496375999445},{"_id":"public/page/2/index.html","hash":"eca236c60143aa6fd6d267c7454aa6d600dda2fa","modified":1496375999445},{"_id":"public/page/3/index.html","hash":"631234516552c068253e19c30133a06ffc9551a2","modified":1496375999445},{"_id":"public/tags/前端/index.html","hash":"1f18386adbe15e1aa15edf7782f6aa6d5598c5b7","modified":1496375999445},{"_id":"public/tags/前端/page/2/index.html","hash":"16ad79d4a9403ae7ec5d4041999bf32afb38f705","modified":1496375999445},{"_id":"public/tags/js/index.html","hash":"e3e46cdc2b35e5fe715d00d0150ec8e05f367bb8","modified":1496375999445},{"_id":"public/tags/正则表达式/index.html","hash":"926ce7191ed5b1c26df459aa8a9f7ad2b0ef870f","modified":1496375999445},{"_id":"public/tags/fedora/index.html","hash":"63dbcfc8b2e05d8a550f5596463d8855ba6afa79","modified":1496375999445},{"_id":"public/tags/SSH/index.html","hash":"3552c4f4fd1ee9fc457f280a3ddd22b5133cb421","modified":1496375999445},{"_id":"public/tags/linux/index.html","hash":"caf09603be7ddb620630a4ccdae0944b18f9de9b","modified":1496375999445},{"_id":"public/tags/linux/page/2/index.html","hash":"3a210df0b8d6196353b7978a2caa89aa8313b39c","modified":1496375999445},{"_id":"public/tags/SASS/index.html","hash":"21286beb1f4ad7c486a6d52bb360a97a4d3322d6","modified":1496375999445},{"_id":"public/tags/Tomcat/index.html","hash":"848a27f7fb3051fc53d459e1deb846bfe259c64b","modified":1496375999445},{"_id":"public/tags/java/index.html","hash":"54ea8a3f079525a9678c20d44b1700ac46b7b3e7","modified":1496375999445},{"_id":"public/tags/css/index.html","hash":"c2ad15fd7441f18cb7e059b1e83ee27288e74201","modified":1496375999445},{"_id":"public/tags/树莓派/index.html","hash":"e0e0d28f1b00ed39e87d1452261735863a9d5f31","modified":1496375999445},{"_id":"public/tags/物联网/index.html","hash":"dbb2110158f2510081f53ee82577ea58273715e7","modified":1496375999445},{"_id":"public/tags/远程登录/index.html","hash":"73d1c9f4e1fb2cb6d8bd7bbbf0ce09ccddd92741","modified":1496375999445},{"_id":"public/tags/vlc/index.html","hash":"a966e950b316785238180677cd655ca8c69233c0","modified":1496375999445},{"_id":"public/tags/清理垃圾/index.html","hash":"7886f43f4ef3983f13dcb85b9359468a4f9ed573","modified":1496375999445},{"_id":"public/tags/转换/index.html","hash":"eab6ce56bfbde0e2b747693f7839a4486f1e6a4b","modified":1496375999445},{"_id":"public/tags/github/index.html","hash":"722cff3b68b79df2aa238c04c77bad7aaa6533c2","modified":1496375999445},{"_id":"public/tags/域名/index.html","hash":"0db9fea6cc4064134ef225158439d8b53eefbf10","modified":1496375999445},{"_id":"public/tags/hexo/index.html","hash":"edd148b904d5fc4cd4888f4637456f1168e3e496","modified":1496375999445},{"_id":"public/tags/主题/index.html","hash":"f482c97b5d867ae3a1d559d8fc6e6d4ec82ab521","modified":1496375999445},{"_id":"public/tags/命令/index.html","hash":"24be5d3bc5739decba0b9ac39431608591941d0d","modified":1496375999445},{"_id":"public/tags/代码块/index.html","hash":"508e594850ecb5f752ad08cc36d8725ebb5d3fc1","modified":1496375999445},{"_id":"public/tags/less/index.html","hash":"f432ab390916ea0ade704376d505e328c5a12098","modified":1496375999445},{"_id":"public/tags/格式化/index.html","hash":"389f7d2aba9ee0fee9ea4bfb50ae48fb463c4259","modified":1496375999445},{"_id":"public/tags/npm/index.html","hash":"77eef770d4623f1e0e2454d92636c6043ebf04c9","modified":1496375999445},{"_id":"public/tags/node/index.html","hash":"03ca0b2c9aae2a05505902cd036574e80ef91d50","modified":1496375999445},{"_id":"public/tags/卸载/index.html","hash":"8a413d68f2507de704366302a903b1cd2f085293","modified":1496375999445},{"_id":"public/tags/react/index.html","hash":"7612656171ac71148e9c4301c8d1c9c0d63882a2","modified":1496375999445},{"_id":"public/tags/html/index.html","hash":"265a7319ecd7af0b6cb268c8c27b4a605a622693","modified":1496375999445},{"_id":"public/tags/移动端/index.html","hash":"070ebf9cffd9e501b582f54019eaa9702755052a","modified":1496375999445},{"_id":"public/tags/WEB/index.html","hash":"4aff3c273c2a59c2da65d1ed4bc0e57b38d72db1","modified":1496375999445},{"_id":"public/tags/服务器/index.html","hash":"b5bc8c3060a270085a884ee5ea86d094cd92d13b","modified":1496375999445},{"_id":"public/tags/邮件/index.html","hash":"7ffb4f676a01614ed0c94dfcef53cf4fb9fabac5","modified":1496375999445},{"_id":"public/2017/06/02/css-background/index.html","hash":"722ae18b100fa2233306e27b675d42f01a783dd8","modified":1496375999445},{"_id":"public/2017/06/01/react-weather-app/index.html","hash":"9668593ac9004b3722b251aa24aac64e0d6635f4","modified":1496375999445},{"_id":"public/2017/05/31/js代码片段/index.html","hash":"bd16138723a624964f56244d80b31a59b357c630","modified":1496375999445},{"_id":"public/2017/05/31/15个常用的javaScript正则表达式/index.html","hash":"cd5433f3bb09cc015f73cdfa20319cd7adfc31cf","modified":1496375999445},{"_id":"public/2017/05/26/移动web资源整理/index.html","hash":"ae0f1fd8000929281b7c52acfd69161ee622d275","modified":1496375999445},{"_id":"public/2017/05/26/移动web页面给用户发送邮件的方法/index.html","hash":"328c8f106a9088cb876ccc4abe608fd9b1fce967","modified":1496375999445},{"_id":"public/2017/05/26/常见的移动端web问题解决方案/index.html","hash":"ff670e6ffe0dc6c72fb2b7ab959cf2aae3d9a815","modified":1496375999445},{"_id":"public/2017/05/25/hexo-Maupassant主题/index.html","hash":"2d0219837a4f83a3d2e09ab638f8ad9fd8597c78","modified":1496375999445},{"_id":"public/2017/05/23/搭建简单的nodejs服务器/index.html","hash":"22cf5c042894a3ad96be36895d7e991d50cb23ee","modified":1496375999445},{"_id":"public/2017/05/22/SASS/index.html","hash":"314f272e6dd0306d041173cea0f33115a7bd847e","modified":1496375999445},{"_id":"public/2017/05/22/树莓派常用设置/index.html","hash":"cb86f052c668da8c21bc31d748089c3a9007bd0d","modified":1496375999445},{"_id":"public/2017/05/22/使用HTML5开发离线应用/index.html","hash":"c449e753f336abdab1c9946fd163c324b76bd772","modified":1496375999445},{"_id":"public/2017/05/22/Tomcat7优化配置/index.html","hash":"2450f5142328359efad8c48bba810d99aeba3e77","modified":1496375999445},{"_id":"public/2017/05/22/常用JavaScript代码/index.html","hash":"b3f74b04fa8a20fe43d0740db2aed8a6b13d97c9","modified":1496375999445},{"_id":"public/2017/05/22/npm/index.html","hash":"939d0beaad80e400f4989296ce2743ff58f378ae","modified":1496375999445},{"_id":"public/2017/05/22/node+hexo/index.html","hash":"88b07cd12f858484fd8683c211c778e5c597fc7c","modified":1496375999445},{"_id":"public/2017/05/22/less/index.html","hash":"68c984e8b3a2524dc35a7d81c9d436052be7aa46","modified":1496375999445},{"_id":"public/2017/05/22/hexo常用命令/index.html","hash":"0d8b6fe4e8db6eec74b4b42cc1b2fad535321e8f","modified":1496375999445},{"_id":"public/index.html","hash":"bbb860e559951c1f046d801818bd8ab48cefa673","modified":1496375999445},{"_id":"public/favicon.ico","hash":"049fa96a82ba2e016adf1f34fe2d45a84826a804","modified":1496375999461},{"_id":"public/images/raspberry-ros-config.png","hash":"398fdb7b6f59b7454259e5945ad700c2f460f69a","modified":1496375999461},{"_id":"public/favicon-bak.ico","hash":"789674bc844491ec7624454aa56890f94a2270f3","modified":1496375999492},{"_id":"public/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1496375999492},{"_id":"public/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1496375999492},{"_id":"public/css/grids-responsive-min.css","hash":"622a1e56f8476757b5cdcb316b87e4914a619d9b","modified":1496375999492},{"_id":"public/css/jquery.fancybox.css","hash":"f42f761157f26244673eb2f4a9215c70956f80dc","modified":1496375999492},{"_id":"public/css/jquery.fancybox.min.css","hash":"0c179394f6fd5d4a14b8bdb7438ab2c7b3db35ba","modified":1496375999492},{"_id":"public/css/normalize.min.css","hash":"4968fea2bb2288696fd90a34849061f947696c04","modified":1496375999492},{"_id":"public/css/octicons.css","hash":"2e624d974f3c3b0ce0fad2140b7e5c3916e596e9","modified":1496375999492},{"_id":"public/css/style2.css","hash":"040d2164f47317c073839c0a009df1bbaf7ce73e","modified":1496375999492},{"_id":"public/js/badge.js","hash":"6d3f655283d436463795206c340c5c9eaf60e928","modified":1496375999492},{"_id":"public/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1496375999492},{"_id":"public/js/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1496375999492},{"_id":"public/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1496375999492},{"_id":"public/js/search.js","hash":"0c0630e2ef213701d393b041f10572e951a27985","modified":1496375999492},{"_id":"public/js/share.js","hash":"6400d719d5eb14587d854a3dff6b290a3c06dc67","modified":1496375999492},{"_id":"public/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1496375999492},{"_id":"public/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1496375999492},{"_id":"public/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1496375999492},{"_id":"public/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1496375999492},{"_id":"public/css/pure-min.css","hash":"89af72febbeab04fa1000ab62a101bdc512b7376","modified":1496375999492},{"_id":"public/css/style.css","hash":"31cfb466354b424bf15697467e22f13b8254e224","modified":1496375999492},{"_id":"public/js/analytics.js","hash":"8db2e8c8a03019f83ab9b7f4f810e9be6cbaf4c3","modified":1496375999492},{"_id":"public/js/cwj3gfk.js","hash":"3b639a8f18e202eb4a6f97041217973faa903058","modified":1496375999492},{"_id":"public/js/jquery.fancybox.min.js","hash":"c80f0008e1e146cb49608442c2fe856525c55140","modified":1496375999492},{"_id":"public/js/jquery.min.js","hash":"1055018c28ab41087ef9ccefe411606893dabea2","modified":1496375999492},{"_id":"public/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1496375999492},{"_id":"public/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1496375999492},{"_id":"public/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1496375999492},{"_id":"public/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1496375999524}],"Category":[{"name":"前端","_id":"cj3fbmtr600034wvsjkhl9pk7"},{"name":"fedora","_id":"cj3fbmtrm00084wvse46hwaw2"},{"name":"Tomcat","_id":"cj3fbmts1000j4wvso08fs42j"},{"name":"raspberry pi","_id":"cj3fbmts1000r4wvs1xva1mu5"},{"name":"github","_id":"cj3fbmts1000y4wvs4sblg2vx"},{"name":"hexo","_id":"cj3fbmtsh00164wvs1xnt33h9"},{"name":"nodejs","_id":"cj3fbmtsh001l4wvsmjazijeq"},{"name":"react","_id":"cj3fbmtsx001t4wvsqipusg01"},{"name":"html","_id":"cj3fbmtsx001z4wvsj5i6u8tw"},{"name":"移动端","_id":"cj3fbmtsx00264wvse8fcv366"}],"Data":[],"Page":[{"title":"About ME","date":"2017-05-25T00:51:51.000Z","_content":"We will be good friends here! \n<a href=\"http://mpengju.com/Resume\">Click→<a>","source":"about/index.md","raw":"---\ntitle: About ME\ndate: 2017-05-25 08:51:51\n---\nWe will be good friends here! \n<a href=\"http://mpengju.com/Resume\">Click→<a>","updated":"2017-05-27T03:44:46.340Z","path":"about/index.html","comments":1,"layout":"page","_id":"cj3fbmt7n00004wvs0hc5ohvu","content":"<p>We will be good friends here!<br><a href=\"http://mpengju.com/Resume\">Click→<a></a></a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>We will be good friends here!<br><a href=\"http://mpengju.com/Resume\">Click→<a></a></a></p>\n"}],"Post":[{"title":"15个常用的javaScript正则表达式","_content":"\n## 1 用户名正则\n\n```\n//用户名正则，4到16位（字母，数字，下划线，减号）\nvar uPattern = /^[a-zA-Z0-9_-]{4,16}$/;\n//输出 true\nconsole.log(uPattern.test(\"iFat3\"));\n\n```\n\n## 2 密码强度正则\n\n```\n//密码强度正则，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符\nvar pPattern = /^.*(?=.{6,})(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*? ]).*$/;\n//输出 true\nconsole.log(\"==\"+pPattern.test(\"iFat3#\"));\n\n```\n\n## 3 整数正则\n\n```\n//正整数正则\nvar posPattern = /^\\d+$/;\n//负整数正则\nvar negPattern = /^-\\d+$/;\n//整数正则\nvar intPattern = /^-?\\d+$/;\n//输出 true\nconsole.log(posPattern.test(\"42\"));\n//输出 true\nconsole.log(negPattern.test(\"-42\"));\n//输出 true\nconsole.log(intPattern.test(\"-42\"));\n\n```\n\n## 4 数字正则\n\n可以是整数也可以是浮点数\n\n```\n//正数正则\nvar posPattern = /^\\d*\\.?\\d+$/;\n//负数正则\nvar negPattern = /^-\\d*\\.?\\d+$/;\n//数字正则\nvar numPattern = /^-?\\d*\\.?\\d+$/;\nconsole.log(posPattern.test(\"42.2\"));\nconsole.log(negPattern.test(\"-42.2\"));\nconsole.log(numPattern.test(\"-42.2\"));\n\n```\n\n## 5 Email正则\n\n```\n//Email正则\nvar ePattern = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n//输出 true\nconsole.log(ePattern.test(\"65974040@qq.com\"));\n\n```\n\n## 6 手机号码正则\n\n```\n//手机号正则\nvar mPattern = /^((13[0-9])|(14[5|7])|(15([0-3]|[5-9]))|(18[0,5-9]))\\d{8}$/;\n//输出 true\nconsole.log(mPattern.test(\"18600000000\"));\n\n```\n\n## 7 身份证号正则\n\n```\n//身份证号（18位）正则\nvar cP = /^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$/;\n//输出 true\nconsole.log(cP.test(\"11010519880605371X\"));\n\n```\n\n## 8 URL正则\n\n```\n//URL正则\nvar urlP= /^((https?|ftp|file):\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/;\n//输出 true\nconsole.log(urlP.test(\"http://42du.cn\"));\n\n```\n\n## 9 IPv4地址正则\n\n```\n//ipv4地址正则\nvar ipP = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n//输出 true\nconsole.log(ipP.test(\"115.28.47.26\"));\n\n```\n\n## 10 十六进制颜色正则\n\n```\n//RGB Hex颜色正则\nvar cPattern = /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/;\n//输出 true\nconsole.log(cPattern.test(\"#b8b8b8\"));\n\n```\n\n## 11 日期正则\n\n```\n//日期正则，简单判定,未做月份及日期的判定\nvar dP1 = /^\\d{4}(\\-)\\d{1,2}\\1\\d{1,2}$/;\n//输出 true\nconsole.log(dP1.test(\"2017-05-11\"));\n//输出 true\nconsole.log(dP1.test(\"2017-15-11\"));\n//日期正则，复杂判定\nvar dP2 = /^(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$/;\n//输出 true\nconsole.log(dP2.test(\"2017-02-11\"));\n//输出 false\nconsole.log(dP2.test(\"2017-15-11\"));\n//输出 false\nconsole.log(dP2.test(\"2017-02-29\"));\n\n```\n\n## 12 QQ号码正则\n\n```\n//QQ号正则，5至11位\nvar qqPattern = /^[1-9][0-9]{4,10}$/;\n//输出 true\nconsole.log(qqPattern.test(\"65974040\"));\n\n```\n\n## 13 微信号正则\n\n```\n//微信号正则，6至20位，以字母开头，字母，数字，减号，下划线\nvar wxPattern = /^[a-zA-Z]([-_a-zA-Z0-9]{5,19})+$/;\n//输出 true\nconsole.log(wxPattern.test(\"RuilongMao\"));\n\n```\n\n## 14 车牌号正则\n\n```\n//车牌号正则\nvar cPattern = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-Z0-9]{4}[A-Z0-9挂学警港澳]{1}$/;\n//输出 true\nconsole.log(cPattern.test(\"京K39006\"));\n\n```\n\n## 15 包含中文正则\n\n```\n//包含中文正则\nvar cnPattern = /[\\u4E00-\\u9FA5]/;\n//输出 true\nconsole.log(cnPattern.test(\"42度\"));\n```","source":"_posts/15个常用的javaScript正则表达式.md","raw":"---\ntitle: 15个常用的javaScript正则表达式\ntags: [前端,js,正则表达式]\ncategories: [前端]\n---\n\n## 1 用户名正则\n\n```\n//用户名正则，4到16位（字母，数字，下划线，减号）\nvar uPattern = /^[a-zA-Z0-9_-]{4,16}$/;\n//输出 true\nconsole.log(uPattern.test(\"iFat3\"));\n\n```\n\n## 2 密码强度正则\n\n```\n//密码强度正则，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符\nvar pPattern = /^.*(?=.{6,})(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*? ]).*$/;\n//输出 true\nconsole.log(\"==\"+pPattern.test(\"iFat3#\"));\n\n```\n\n## 3 整数正则\n\n```\n//正整数正则\nvar posPattern = /^\\d+$/;\n//负整数正则\nvar negPattern = /^-\\d+$/;\n//整数正则\nvar intPattern = /^-?\\d+$/;\n//输出 true\nconsole.log(posPattern.test(\"42\"));\n//输出 true\nconsole.log(negPattern.test(\"-42\"));\n//输出 true\nconsole.log(intPattern.test(\"-42\"));\n\n```\n\n## 4 数字正则\n\n可以是整数也可以是浮点数\n\n```\n//正数正则\nvar posPattern = /^\\d*\\.?\\d+$/;\n//负数正则\nvar negPattern = /^-\\d*\\.?\\d+$/;\n//数字正则\nvar numPattern = /^-?\\d*\\.?\\d+$/;\nconsole.log(posPattern.test(\"42.2\"));\nconsole.log(negPattern.test(\"-42.2\"));\nconsole.log(numPattern.test(\"-42.2\"));\n\n```\n\n## 5 Email正则\n\n```\n//Email正则\nvar ePattern = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n//输出 true\nconsole.log(ePattern.test(\"65974040@qq.com\"));\n\n```\n\n## 6 手机号码正则\n\n```\n//手机号正则\nvar mPattern = /^((13[0-9])|(14[5|7])|(15([0-3]|[5-9]))|(18[0,5-9]))\\d{8}$/;\n//输出 true\nconsole.log(mPattern.test(\"18600000000\"));\n\n```\n\n## 7 身份证号正则\n\n```\n//身份证号（18位）正则\nvar cP = /^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$/;\n//输出 true\nconsole.log(cP.test(\"11010519880605371X\"));\n\n```\n\n## 8 URL正则\n\n```\n//URL正则\nvar urlP= /^((https?|ftp|file):\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/;\n//输出 true\nconsole.log(urlP.test(\"http://42du.cn\"));\n\n```\n\n## 9 IPv4地址正则\n\n```\n//ipv4地址正则\nvar ipP = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n//输出 true\nconsole.log(ipP.test(\"115.28.47.26\"));\n\n```\n\n## 10 十六进制颜色正则\n\n```\n//RGB Hex颜色正则\nvar cPattern = /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/;\n//输出 true\nconsole.log(cPattern.test(\"#b8b8b8\"));\n\n```\n\n## 11 日期正则\n\n```\n//日期正则，简单判定,未做月份及日期的判定\nvar dP1 = /^\\d{4}(\\-)\\d{1,2}\\1\\d{1,2}$/;\n//输出 true\nconsole.log(dP1.test(\"2017-05-11\"));\n//输出 true\nconsole.log(dP1.test(\"2017-15-11\"));\n//日期正则，复杂判定\nvar dP2 = /^(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$/;\n//输出 true\nconsole.log(dP2.test(\"2017-02-11\"));\n//输出 false\nconsole.log(dP2.test(\"2017-15-11\"));\n//输出 false\nconsole.log(dP2.test(\"2017-02-29\"));\n\n```\n\n## 12 QQ号码正则\n\n```\n//QQ号正则，5至11位\nvar qqPattern = /^[1-9][0-9]{4,10}$/;\n//输出 true\nconsole.log(qqPattern.test(\"65974040\"));\n\n```\n\n## 13 微信号正则\n\n```\n//微信号正则，6至20位，以字母开头，字母，数字，减号，下划线\nvar wxPattern = /^[a-zA-Z]([-_a-zA-Z0-9]{5,19})+$/;\n//输出 true\nconsole.log(wxPattern.test(\"RuilongMao\"));\n\n```\n\n## 14 车牌号正则\n\n```\n//车牌号正则\nvar cPattern = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-Z0-9]{4}[A-Z0-9挂学警港澳]{1}$/;\n//输出 true\nconsole.log(cPattern.test(\"京K39006\"));\n\n```\n\n## 15 包含中文正则\n\n```\n//包含中文正则\nvar cnPattern = /[\\u4E00-\\u9FA5]/;\n//输出 true\nconsole.log(cnPattern.test(\"42度\"));\n```","slug":"15个常用的javaScript正则表达式","published":1,"date":"2017-05-31T00:49:44.413Z","updated":"2017-05-31T01:13:54.982Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmtqr00014wvsjnk3eql3","content":"<h2 id=\"1-用户名正则\"><a href=\"#1-用户名正则\" class=\"headerlink\" title=\"1 用户名正则\"></a>1 用户名正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//用户名正则，4到16位（字母，数字，下划线，减号）</div><div class=\"line\">var uPattern = /^[a-zA-Z0-9_-]&#123;4,16&#125;$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(uPattern.test(&quot;iFat3&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"2-密码强度正则\"><a href=\"#2-密码强度正则\" class=\"headerlink\" title=\"2 密码强度正则\"></a>2 密码强度正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//密码强度正则，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符</div><div class=\"line\">var pPattern = /^.*(?=.&#123;6,&#125;)(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&amp;*? ]).*$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(&quot;==&quot;+pPattern.test(&quot;iFat3#&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"3-整数正则\"><a href=\"#3-整数正则\" class=\"headerlink\" title=\"3 整数正则\"></a>3 整数正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">//正整数正则</div><div class=\"line\">var posPattern = /^\\d+$/;</div><div class=\"line\">//负整数正则</div><div class=\"line\">var negPattern = /^-\\d+$/;</div><div class=\"line\">//整数正则</div><div class=\"line\">var intPattern = /^-?\\d+$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(posPattern.test(&quot;42&quot;));</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(negPattern.test(&quot;-42&quot;));</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(intPattern.test(&quot;-42&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"4-数字正则\"><a href=\"#4-数字正则\" class=\"headerlink\" title=\"4 数字正则\"></a>4 数字正则</h2><p>可以是整数也可以是浮点数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">//正数正则</div><div class=\"line\">var posPattern = /^\\d*\\.?\\d+$/;</div><div class=\"line\">//负数正则</div><div class=\"line\">var negPattern = /^-\\d*\\.?\\d+$/;</div><div class=\"line\">//数字正则</div><div class=\"line\">var numPattern = /^-?\\d*\\.?\\d+$/;</div><div class=\"line\">console.log(posPattern.test(&quot;42.2&quot;));</div><div class=\"line\">console.log(negPattern.test(&quot;-42.2&quot;));</div><div class=\"line\">console.log(numPattern.test(&quot;-42.2&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"5-Email正则\"><a href=\"#5-Email正则\" class=\"headerlink\" title=\"5 Email正则\"></a>5 Email正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//Email正则</div><div class=\"line\">var ePattern = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]&#123;2,4&#125;)$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(ePattern.test(&quot;65974040@qq.com&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"6-手机号码正则\"><a href=\"#6-手机号码正则\" class=\"headerlink\" title=\"6 手机号码正则\"></a>6 手机号码正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//手机号正则</div><div class=\"line\">var mPattern = /^((13[0-9])|(14[5|7])|(15([0-3]|[5-9]))|(18[0,5-9]))\\d&#123;8&#125;$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(mPattern.test(&quot;18600000000&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"7-身份证号正则\"><a href=\"#7-身份证号正则\" class=\"headerlink\" title=\"7 身份证号正则\"></a>7 身份证号正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//身份证号（18位）正则</div><div class=\"line\">var cP = /^[1-9]\\d&#123;5&#125;(18|19|([23]\\d))\\d&#123;2&#125;((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d&#123;3&#125;[0-9Xx]$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(cP.test(&quot;11010519880605371X&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"8-URL正则\"><a href=\"#8-URL正则\" class=\"headerlink\" title=\"8 URL正则\"></a>8 URL正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//URL正则</div><div class=\"line\">var urlP= /^((https?|ftp|file):\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]&#123;2,6&#125;)([\\/\\w \\.-]*)*\\/?$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(urlP.test(&quot;http://42du.cn&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"9-IPv4地址正则\"><a href=\"#9-IPv4地址正则\" class=\"headerlink\" title=\"9 IPv4地址正则\"></a>9 IPv4地址正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//ipv4地址正则</div><div class=\"line\">var ipP = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.)&#123;3&#125;(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(ipP.test(&quot;115.28.47.26&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"10-十六进制颜色正则\"><a href=\"#10-十六进制颜色正则\" class=\"headerlink\" title=\"10 十六进制颜色正则\"></a>10 十六进制颜色正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//RGB Hex颜色正则</div><div class=\"line\">var cPattern = /^#?([a-fA-F0-9]&#123;6&#125;|[a-fA-F0-9]&#123;3&#125;)$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(cPattern.test(&quot;#b8b8b8&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"11-日期正则\"><a href=\"#11-日期正则\" class=\"headerlink\" title=\"11 日期正则\"></a>11 日期正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">//日期正则，简单判定,未做月份及日期的判定</div><div class=\"line\">var dP1 = /^\\d&#123;4&#125;(\\-)\\d&#123;1,2&#125;\\1\\d&#123;1,2&#125;$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(dP1.test(&quot;2017-05-11&quot;));</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(dP1.test(&quot;2017-15-11&quot;));</div><div class=\"line\">//日期正则，复杂判定</div><div class=\"line\">var dP2 = /^(?:(?!0000)[0-9]&#123;4&#125;-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]&#123;2&#125;(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(dP2.test(&quot;2017-02-11&quot;));</div><div class=\"line\">//输出 false</div><div class=\"line\">console.log(dP2.test(&quot;2017-15-11&quot;));</div><div class=\"line\">//输出 false</div><div class=\"line\">console.log(dP2.test(&quot;2017-02-29&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"12-QQ号码正则\"><a href=\"#12-QQ号码正则\" class=\"headerlink\" title=\"12 QQ号码正则\"></a>12 QQ号码正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//QQ号正则，5至11位</div><div class=\"line\">var qqPattern = /^[1-9][0-9]&#123;4,10&#125;$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(qqPattern.test(&quot;65974040&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"13-微信号正则\"><a href=\"#13-微信号正则\" class=\"headerlink\" title=\"13 微信号正则\"></a>13 微信号正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//微信号正则，6至20位，以字母开头，字母，数字，减号，下划线</div><div class=\"line\">var wxPattern = /^[a-zA-Z]([-_a-zA-Z0-9]&#123;5,19&#125;)+$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(wxPattern.test(&quot;RuilongMao&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"14-车牌号正则\"><a href=\"#14-车牌号正则\" class=\"headerlink\" title=\"14 车牌号正则\"></a>14 车牌号正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//车牌号正则</div><div class=\"line\">var cPattern = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]&#123;1&#125;[A-Z]&#123;1&#125;[A-Z0-9]&#123;4&#125;[A-Z0-9挂学警港澳]&#123;1&#125;$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(cPattern.test(&quot;京K39006&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"15-包含中文正则\"><a href=\"#15-包含中文正则\" class=\"headerlink\" title=\"15 包含中文正则\"></a>15 包含中文正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//包含中文正则</div><div class=\"line\">var cnPattern = /[\\u4E00-\\u9FA5]/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(cnPattern.test(&quot;42度&quot;));</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-用户名正则\"><a href=\"#1-用户名正则\" class=\"headerlink\" title=\"1 用户名正则\"></a>1 用户名正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//用户名正则，4到16位（字母，数字，下划线，减号）</div><div class=\"line\">var uPattern = /^[a-zA-Z0-9_-]&#123;4,16&#125;$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(uPattern.test(&quot;iFat3&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"2-密码强度正则\"><a href=\"#2-密码强度正则\" class=\"headerlink\" title=\"2 密码强度正则\"></a>2 密码强度正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//密码强度正则，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符</div><div class=\"line\">var pPattern = /^.*(?=.&#123;6,&#125;)(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&amp;*? ]).*$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(&quot;==&quot;+pPattern.test(&quot;iFat3#&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"3-整数正则\"><a href=\"#3-整数正则\" class=\"headerlink\" title=\"3 整数正则\"></a>3 整数正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">//正整数正则</div><div class=\"line\">var posPattern = /^\\d+$/;</div><div class=\"line\">//负整数正则</div><div class=\"line\">var negPattern = /^-\\d+$/;</div><div class=\"line\">//整数正则</div><div class=\"line\">var intPattern = /^-?\\d+$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(posPattern.test(&quot;42&quot;));</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(negPattern.test(&quot;-42&quot;));</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(intPattern.test(&quot;-42&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"4-数字正则\"><a href=\"#4-数字正则\" class=\"headerlink\" title=\"4 数字正则\"></a>4 数字正则</h2><p>可以是整数也可以是浮点数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">//正数正则</div><div class=\"line\">var posPattern = /^\\d*\\.?\\d+$/;</div><div class=\"line\">//负数正则</div><div class=\"line\">var negPattern = /^-\\d*\\.?\\d+$/;</div><div class=\"line\">//数字正则</div><div class=\"line\">var numPattern = /^-?\\d*\\.?\\d+$/;</div><div class=\"line\">console.log(posPattern.test(&quot;42.2&quot;));</div><div class=\"line\">console.log(negPattern.test(&quot;-42.2&quot;));</div><div class=\"line\">console.log(numPattern.test(&quot;-42.2&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"5-Email正则\"><a href=\"#5-Email正则\" class=\"headerlink\" title=\"5 Email正则\"></a>5 Email正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//Email正则</div><div class=\"line\">var ePattern = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]&#123;2,4&#125;)$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(ePattern.test(&quot;65974040@qq.com&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"6-手机号码正则\"><a href=\"#6-手机号码正则\" class=\"headerlink\" title=\"6 手机号码正则\"></a>6 手机号码正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//手机号正则</div><div class=\"line\">var mPattern = /^((13[0-9])|(14[5|7])|(15([0-3]|[5-9]))|(18[0,5-9]))\\d&#123;8&#125;$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(mPattern.test(&quot;18600000000&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"7-身份证号正则\"><a href=\"#7-身份证号正则\" class=\"headerlink\" title=\"7 身份证号正则\"></a>7 身份证号正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//身份证号（18位）正则</div><div class=\"line\">var cP = /^[1-9]\\d&#123;5&#125;(18|19|([23]\\d))\\d&#123;2&#125;((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d&#123;3&#125;[0-9Xx]$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(cP.test(&quot;11010519880605371X&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"8-URL正则\"><a href=\"#8-URL正则\" class=\"headerlink\" title=\"8 URL正则\"></a>8 URL正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//URL正则</div><div class=\"line\">var urlP= /^((https?|ftp|file):\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]&#123;2,6&#125;)([\\/\\w \\.-]*)*\\/?$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(urlP.test(&quot;http://42du.cn&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"9-IPv4地址正则\"><a href=\"#9-IPv4地址正则\" class=\"headerlink\" title=\"9 IPv4地址正则\"></a>9 IPv4地址正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//ipv4地址正则</div><div class=\"line\">var ipP = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.)&#123;3&#125;(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(ipP.test(&quot;115.28.47.26&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"10-十六进制颜色正则\"><a href=\"#10-十六进制颜色正则\" class=\"headerlink\" title=\"10 十六进制颜色正则\"></a>10 十六进制颜色正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//RGB Hex颜色正则</div><div class=\"line\">var cPattern = /^#?([a-fA-F0-9]&#123;6&#125;|[a-fA-F0-9]&#123;3&#125;)$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(cPattern.test(&quot;#b8b8b8&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"11-日期正则\"><a href=\"#11-日期正则\" class=\"headerlink\" title=\"11 日期正则\"></a>11 日期正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">//日期正则，简单判定,未做月份及日期的判定</div><div class=\"line\">var dP1 = /^\\d&#123;4&#125;(\\-)\\d&#123;1,2&#125;\\1\\d&#123;1,2&#125;$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(dP1.test(&quot;2017-05-11&quot;));</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(dP1.test(&quot;2017-15-11&quot;));</div><div class=\"line\">//日期正则，复杂判定</div><div class=\"line\">var dP2 = /^(?:(?!0000)[0-9]&#123;4&#125;-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]&#123;2&#125;(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(dP2.test(&quot;2017-02-11&quot;));</div><div class=\"line\">//输出 false</div><div class=\"line\">console.log(dP2.test(&quot;2017-15-11&quot;));</div><div class=\"line\">//输出 false</div><div class=\"line\">console.log(dP2.test(&quot;2017-02-29&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"12-QQ号码正则\"><a href=\"#12-QQ号码正则\" class=\"headerlink\" title=\"12 QQ号码正则\"></a>12 QQ号码正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//QQ号正则，5至11位</div><div class=\"line\">var qqPattern = /^[1-9][0-9]&#123;4,10&#125;$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(qqPattern.test(&quot;65974040&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"13-微信号正则\"><a href=\"#13-微信号正则\" class=\"headerlink\" title=\"13 微信号正则\"></a>13 微信号正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//微信号正则，6至20位，以字母开头，字母，数字，减号，下划线</div><div class=\"line\">var wxPattern = /^[a-zA-Z]([-_a-zA-Z0-9]&#123;5,19&#125;)+$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(wxPattern.test(&quot;RuilongMao&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"14-车牌号正则\"><a href=\"#14-车牌号正则\" class=\"headerlink\" title=\"14 车牌号正则\"></a>14 车牌号正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//车牌号正则</div><div class=\"line\">var cPattern = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]&#123;1&#125;[A-Z]&#123;1&#125;[A-Z0-9]&#123;4&#125;[A-Z0-9挂学警港澳]&#123;1&#125;$/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(cPattern.test(&quot;京K39006&quot;));</div></pre></td></tr></table></figure>\n<h2 id=\"15-包含中文正则\"><a href=\"#15-包含中文正则\" class=\"headerlink\" title=\"15 包含中文正则\"></a>15 包含中文正则</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">//包含中文正则</div><div class=\"line\">var cnPattern = /[\\u4E00-\\u9FA5]/;</div><div class=\"line\">//输出 true</div><div class=\"line\">console.log(cnPattern.test(&quot;42度&quot;));</div></pre></td></tr></table></figure>"},{"title":"fedora启动SSH","_content":"一、Fedora 启动sshd服务：\n\n1、先确认是否已安装ssh服务：\n\n```\n[root@localhost ~]# rpm -qa | grep openssh-server\n\n　openssh-server-5.3p1-19.fc12.i686 （这行表示已安装）\n```\n\n  若未安装ssh服务，可输入：\n\n```\nyum install openssh-server\n```\n\n  进行安装\n\n2、修改配置文件\n\n```\n#vi /etc/ssh/sshd_config\n\n  　#Port 22  监听的端口号，默认是22，可以自定义。\n\n　　#Protocol 2  支持的协议，默认就好，不用修改\n\n　　#PermitRootLogin yes 是否允许root直接登录，最好设置为no\n\n    #MMaxAuthTries 6 最大登录数，默认是6，建议设置为3，防止别人密码穷举。\n\n   修改完配置后，重启SSH服务：\n\n 　[root@localhost ~]# /etc/rc.d/init.d/sshd restart\n\n　  Stopping sshd: [ OK ]\n\nStarting sshd: [ OK ]:\n\n```\n\n3、查看sshd状态：\n\n```\n#service sshd status\n```\n\n4、将端口22（或者自定义的其他端口）加到防火墙的设置中，标记为Accept\n\n```\n#iptables -A INPUT -p tcp --dport 22 -j ACCEPT\n```\n\n（这句很重要，不然外部连接不了。）\n\n   也可以将上述参数加入防火墙配置中：\n\n```\n #vi /etc/sysconfig/iptables\n\n  加入：-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\n```\n\n保存后重启iptables即可\n\n详情可以查阅 [iptables的用法](http://blog.163.com/jackswu@yeah/blog/static/1406291232012511104940/)\n\n二、Fedora15/16/17 启动sshd服务：\n\n由于Fedora 15/16使用systemd服务，\n\n1、启动SSH服务与上面有些不同\n\n```\n# systemctl start sshd.service\n\n或者 #service sshd start\n\n也可以用 restart 和 stop控制sshd服务\n```\n\n2、设置系统启动时开启服务\n\n```\n# systemctl enable sshd.service\n```\n\n3、同样也需开启防火墙22端口\n\n```\n#iptables -A INPUT -p tcp --dport 22 -j ACCEPT\n```\n\n也可以将上述参数加入防火墙配置中：\n\n```\n #vi /etc/sysconfig/iptables\n\n   加入：-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\n```\n\n保存后重启iptables即可\n\n详情可以查阅 [iptables的用法](http://blog.163.com/jackswu@yeah/blog/static/1406291232012511104940/)\n","source":"_posts/Fedora启动SSH服务.md","raw":"---\ntitle: fedora启动SSH\ntags: [fedora,SSH,linux]\ncategories: fedora\n---\n一、Fedora 启动sshd服务：\n\n1、先确认是否已安装ssh服务：\n\n```\n[root@localhost ~]# rpm -qa | grep openssh-server\n\n　openssh-server-5.3p1-19.fc12.i686 （这行表示已安装）\n```\n\n  若未安装ssh服务，可输入：\n\n```\nyum install openssh-server\n```\n\n  进行安装\n\n2、修改配置文件\n\n```\n#vi /etc/ssh/sshd_config\n\n  　#Port 22  监听的端口号，默认是22，可以自定义。\n\n　　#Protocol 2  支持的协议，默认就好，不用修改\n\n　　#PermitRootLogin yes 是否允许root直接登录，最好设置为no\n\n    #MMaxAuthTries 6 最大登录数，默认是6，建议设置为3，防止别人密码穷举。\n\n   修改完配置后，重启SSH服务：\n\n 　[root@localhost ~]# /etc/rc.d/init.d/sshd restart\n\n　  Stopping sshd: [ OK ]\n\nStarting sshd: [ OK ]:\n\n```\n\n3、查看sshd状态：\n\n```\n#service sshd status\n```\n\n4、将端口22（或者自定义的其他端口）加到防火墙的设置中，标记为Accept\n\n```\n#iptables -A INPUT -p tcp --dport 22 -j ACCEPT\n```\n\n（这句很重要，不然外部连接不了。）\n\n   也可以将上述参数加入防火墙配置中：\n\n```\n #vi /etc/sysconfig/iptables\n\n  加入：-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\n```\n\n保存后重启iptables即可\n\n详情可以查阅 [iptables的用法](http://blog.163.com/jackswu@yeah/blog/static/1406291232012511104940/)\n\n二、Fedora15/16/17 启动sshd服务：\n\n由于Fedora 15/16使用systemd服务，\n\n1、启动SSH服务与上面有些不同\n\n```\n# systemctl start sshd.service\n\n或者 #service sshd start\n\n也可以用 restart 和 stop控制sshd服务\n```\n\n2、设置系统启动时开启服务\n\n```\n# systemctl enable sshd.service\n```\n\n3、同样也需开启防火墙22端口\n\n```\n#iptables -A INPUT -p tcp --dport 22 -j ACCEPT\n```\n\n也可以将上述参数加入防火墙配置中：\n\n```\n #vi /etc/sysconfig/iptables\n\n   加入：-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\n```\n\n保存后重启iptables即可\n\n详情可以查阅 [iptables的用法](http://blog.163.com/jackswu@yeah/blog/static/1406291232012511104940/)\n","slug":"Fedora启动SSH服务","published":1,"date":"2017-05-22T05:03:19.661Z","updated":"2017-05-25T01:02:21.993Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmtr600024wvsf3ryjm4o","content":"<p>一、Fedora 启动sshd服务：</p>\n<p>1、先确认是否已安装ssh服务：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]# rpm -qa | grep openssh-server</div><div class=\"line\"></div><div class=\"line\">　openssh-server-5.3p1-19.fc12.i686 （这行表示已安装）</div></pre></td></tr></table></figure>\n<p>  若未安装ssh服务，可输入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install openssh-server</div></pre></td></tr></table></figure>\n<p>  进行安装</p>\n<p>2、修改配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">#vi /etc/ssh/sshd_config</div><div class=\"line\"></div><div class=\"line\">  　#Port 22  监听的端口号，默认是22，可以自定义。</div><div class=\"line\"></div><div class=\"line\">　　#Protocol 2  支持的协议，默认就好，不用修改</div><div class=\"line\"></div><div class=\"line\">　　#PermitRootLogin yes 是否允许root直接登录，最好设置为no</div><div class=\"line\"></div><div class=\"line\">    #MMaxAuthTries 6 最大登录数，默认是6，建议设置为3，防止别人密码穷举。</div><div class=\"line\"></div><div class=\"line\">   修改完配置后，重启SSH服务：</div><div class=\"line\"></div><div class=\"line\"> 　[root@localhost ~]# /etc/rc.d/init.d/sshd restart</div><div class=\"line\"></div><div class=\"line\">　  Stopping sshd: [ OK ]</div><div class=\"line\"></div><div class=\"line\">Starting sshd: [ OK ]:</div></pre></td></tr></table></figure>\n<p>3、查看sshd状态：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">#service sshd status</div></pre></td></tr></table></figure>\n<p>4、将端口22（或者自定义的其他端口）加到防火墙的设置中，标记为Accept</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">#iptables -A INPUT -p tcp --dport 22 -j ACCEPT</div></pre></td></tr></table></figure>\n<p>（这句很重要，不然外部连接不了。）</p>\n<p>   也可以将上述参数加入防火墙配置中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#vi /etc/sysconfig/iptables</div><div class=\"line\"></div><div class=\"line\"> 加入：-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT</div></pre></td></tr></table></figure>\n<p>保存后重启iptables即可</p>\n<p>详情可以查阅 <a href=\"http://blog.163.com/jackswu@yeah/blog/static/1406291232012511104940/\" target=\"_blank\" rel=\"external\">iptables的用法</a></p>\n<p>二、Fedora15/16/17 启动sshd服务：</p>\n<p>由于Fedora 15/16使用systemd服务，</p>\n<p>1、启动SSH服务与上面有些不同</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># systemctl start sshd.service</div><div class=\"line\"></div><div class=\"line\">或者 #service sshd start</div><div class=\"line\"></div><div class=\"line\">也可以用 restart 和 stop控制sshd服务</div></pre></td></tr></table></figure>\n<p>2、设置系统启动时开启服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># systemctl enable sshd.service</div></pre></td></tr></table></figure>\n<p>3、同样也需开启防火墙22端口</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">#iptables -A INPUT -p tcp --dport 22 -j ACCEPT</div></pre></td></tr></table></figure>\n<p>也可以将上述参数加入防火墙配置中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#vi /etc/sysconfig/iptables</div><div class=\"line\"></div><div class=\"line\">  加入：-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT</div></pre></td></tr></table></figure>\n<p>保存后重启iptables即可</p>\n<p>详情可以查阅 <a href=\"http://blog.163.com/jackswu@yeah/blog/static/1406291232012511104940/\" target=\"_blank\" rel=\"external\">iptables的用法</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>一、Fedora 启动sshd服务：</p>\n<p>1、先确认是否已安装ssh服务：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@localhost ~]# rpm -qa | grep openssh-server</div><div class=\"line\"></div><div class=\"line\">　openssh-server-5.3p1-19.fc12.i686 （这行表示已安装）</div></pre></td></tr></table></figure>\n<p>  若未安装ssh服务，可输入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install openssh-server</div></pre></td></tr></table></figure>\n<p>  进行安装</p>\n<p>2、修改配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">#vi /etc/ssh/sshd_config</div><div class=\"line\"></div><div class=\"line\">  　#Port 22  监听的端口号，默认是22，可以自定义。</div><div class=\"line\"></div><div class=\"line\">　　#Protocol 2  支持的协议，默认就好，不用修改</div><div class=\"line\"></div><div class=\"line\">　　#PermitRootLogin yes 是否允许root直接登录，最好设置为no</div><div class=\"line\"></div><div class=\"line\">    #MMaxAuthTries 6 最大登录数，默认是6，建议设置为3，防止别人密码穷举。</div><div class=\"line\"></div><div class=\"line\">   修改完配置后，重启SSH服务：</div><div class=\"line\"></div><div class=\"line\"> 　[root@localhost ~]# /etc/rc.d/init.d/sshd restart</div><div class=\"line\"></div><div class=\"line\">　  Stopping sshd: [ OK ]</div><div class=\"line\"></div><div class=\"line\">Starting sshd: [ OK ]:</div></pre></td></tr></table></figure>\n<p>3、查看sshd状态：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">#service sshd status</div></pre></td></tr></table></figure>\n<p>4、将端口22（或者自定义的其他端口）加到防火墙的设置中，标记为Accept</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">#iptables -A INPUT -p tcp --dport 22 -j ACCEPT</div></pre></td></tr></table></figure>\n<p>（这句很重要，不然外部连接不了。）</p>\n<p>   也可以将上述参数加入防火墙配置中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#vi /etc/sysconfig/iptables</div><div class=\"line\"></div><div class=\"line\"> 加入：-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT</div></pre></td></tr></table></figure>\n<p>保存后重启iptables即可</p>\n<p>详情可以查阅 <a href=\"http://blog.163.com/jackswu@yeah/blog/static/1406291232012511104940/\" target=\"_blank\" rel=\"external\">iptables的用法</a></p>\n<p>二、Fedora15/16/17 启动sshd服务：</p>\n<p>由于Fedora 15/16使用systemd服务，</p>\n<p>1、启动SSH服务与上面有些不同</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># systemctl start sshd.service</div><div class=\"line\"></div><div class=\"line\">或者 #service sshd start</div><div class=\"line\"></div><div class=\"line\">也可以用 restart 和 stop控制sshd服务</div></pre></td></tr></table></figure>\n<p>2、设置系统启动时开启服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># systemctl enable sshd.service</div></pre></td></tr></table></figure>\n<p>3、同样也需开启防火墙22端口</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">#iptables -A INPUT -p tcp --dport 22 -j ACCEPT</div></pre></td></tr></table></figure>\n<p>也可以将上述参数加入防火墙配置中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#vi /etc/sysconfig/iptables</div><div class=\"line\"></div><div class=\"line\">  加入：-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT</div></pre></td></tr></table></figure>\n<p>保存后重启iptables即可</p>\n<p>详情可以查阅 <a href=\"http://blog.163.com/jackswu@yeah/blog/static/1406291232012511104940/\" target=\"_blank\" rel=\"external\">iptables的用法</a></p>\n"},{"title":"sass","_content":"# SASS基础教程——SASS基本语法与特性\n\n前一段时间，一直在聊SASS的环境、安装、调试以及转译等相关问题。但一直未真正的切入SASS是如何使用的。我在想，更多的同学其关注点还是如何使用SASS？如何在项目中运用SASS？那么从这篇文章开始，我们一起来走进SASS。\n\n当你想真正走入SASS的时候，个人建议您能按照前面几篇文章，在你的电脑中构建好SASS的环境，包括如何安装环境、安装SASS、调试SASS以及编译SASS。或许正因为前期有这么多事情要做，很多同学不敢轻意的踏入，其实没有大家想得那么复杂，不管是在Window下还是在Mac OS X下，这些都是非常简单的。如果你感兴趣，不仿在正式阅读下面的内容之前，先根据下面几篇文章完成一些很有必要的工作：\n\n做为一名页面仔来说，对于CSS并不会感到陌生。每天的工作都在为他打交道，或者说很多时候都在做一些复制粘贴性的工作。比如说，文字的排版，颜色的设置，边框设置，元素宽度调整，布局与网格制作等等。这些工作也让很多CSSER变得对自己从事的工作变得机械化，变得无趣，也失去了当初的激情。不知道大家是否有想过，通过另外一种方式来能完成我们的工作，让我们不在是一个复制代码的码农，让我们的工作不在机械，让我们的工作不在无趣。\n\n在这种环境之下，我想使用SASS来改变我的以前的工作方式，让SASS帮我完成以前依靠复制和粘贴的工作，也让SASS来帮我完成一些更具有意义的工作。\n\n## SASS优点\n\n要了SASS，我们先从他的优点说起。SASS是一种基于CSS的预处理语言，在CSS的基础上将代码抽象各简单化。SASS让你写CSS时提供更多的自由，它像一个篇程语言一样，可以给你的样式定义变量，嵌套等功能。更强大的是可以让你的CSS具有逻辑功能。类似于其他程序语言中的条件判断、循环等。\n\n举个栗子，或许大家更能理解。SASS可以将`Hex`,`rgb`,`rgba`，`hsl`和`hsla`颜色设置为变量，并在整个项目中重复使用他们。复杂一点的，你可以通过SASS的`mixins`生成一个网格的布局功能，然后在对应的类名通过`include`来调用，生成所需要的网格布局。另外还可以通过`extend`来调用你的前面生成的类名。要知道，所有这些都是与函数编程语言很类似。主要目的就是**让你写CSS时不在重复**。\n\n综合上面所述，SASS优点可以简单的规纳为以下几点：\n\n- 增加了一些编程特性\n- 简少CSS代码的重复性与代码的冗余\n- 维护方便\n- 适应性更强，可读性更强\n\n## SASS语法\n\nSASS到目前为止有两种语法规则。最新的语法称为“SCSS”，增强了对CSS3语法的支持。这意味着每个CSS3的语法也适用于SCSS。SCSS文件有自己的扩展名`.scss`。\n\n第二种语为称为SASS的老语法，也称为[缩进语法](http://sass-lang.com/docs/yardoc/file.INDENTED_SYNTAX.html)。受[HAML](http://ru.wikipedia.org/wiki/Haml)语法的影响，这个语法主要用来给那些追求CSS简洁的人使用。他不是使用大括号和分号，而是使用缩进来指定块。文件使用扩展名`.sass`。\n\n简单的理解，SASS分为两种语法，一种是**SCSS**，另一种就是**SASS**。到目前为止，我们所说的SASS其实就是其新语法，也就是——**SCSS**，只不过大家都还是习惯性的称之为SASS。这一点大家需要注意。\n\n这个时候，你肯定又会觉得很蛋疼，不就是一门语言吗？还搞出这么多个花样，还分什么`.sass`(SASS)和`.scss`(SCSS)。难道就不能只有一种吗？其实是可以的，如果你不想过多的去了解，那么你只需要记住SASS的新语法，也就是——**SCSS**。特别是对于新手，你只要知道SCSS的语法规则就OK了。\n\n但话说回来，如果你想了解SCSS的来龙去脉，你就一定会知道SASS，也就会碰到上面所说的，两种语法。那么在这些，我们顺便来看看SCSS和SASS语法规则上有何不同。\n\n### SCSS语法\n\nSCSS语法规则和CSS的语法规则可以说是完全一样，由选择器、属性和属性三部分组成，并且和大括号`{}`与分号`;`配合在一起使用。\n\n```\n选择器{\n    属性：属性值；\n}\n\n```\n\n例如有一段CSS代码如下：\n\n```\n.container {\n    width: 960px;\n    margin: 0 auto;\n}\n\n```\n\n那么在SCSS中，我们使用如下：\n\n```\n.container {\n    width: 960px;\n    margin: 0 auto;\n}\n\n```\n\n可以说SCSS和CSS的语法规则是一样的，这也是众多前端人员习喜欢使用SCSS的原因，因为他太像CSS了。和平时使用CSS的习惯基本上一致，无须为了使用SCSS而改变以前的书写代码习惯。\n\n### SASS语法\n\nSASS语法也称之为SASS的缩进语法，其目的是担供一个更简洁的语法。对于一些人来说，更多的是基于于CSS的美学吸引力，用SASS来代替SCSS语法。\n\nSASS语法和CSS语法不一样，他不是使用大括号`{}`和分号`;`来分隔块的样式，它使用的是类似于[HAML](http://haml.info/)语法，使用缩进和换行来分块，而不是使用分号来分隔语句。这通常会省去大量的篇幅，也缩小了文件大小。\n\n每个在SASS中语句，属性声明和选择器必须放在自己的线上。换句话说，选择器和样式的声明不用大括号`{}`区分，但必须分行书写。\n\n```\n选择器\n    属性：属性值\n\n```\n\n同样的，我们有一段CSS代码：\n\n```\n.container {\n    width: 960px;\n    margin: 0 auto;\n}\n\n```\n\n其对应的SASS代码如下：\n\n```\n.container\n    width: 960px\n    margin: 0 auto\n\n```\n\n在SASS语法中，有多个选择器时，每个选择器必须在一个行，而且用逗号`,`分隔。简单点说，一个选择器占一行，而且相邻两个选择器之间使用`,`分开：\n\n```\n.user #userTab,\n.posts #postTab\n    width: 100px\n    height:30px\n\n```\n\n我们简单来看一个SCSS、SASS和CSS三者之间语法的对比示例：\n\n##### SCSS\n\n```\n$blue:#3bbfce;\n$margin:16px;\n.container{\n    border-color:$blue;\n    color:darken($blue,9%);\n}\n.border {\n    padding: $margin / 2;\n    margin: $margin / 2;\n    border-color: $blue;\n}\n\n```\n\n##### SASS\n\n```\n$blue:#3bbfce\n$margin: 16px\n.container\n    border-color:$blue\n    color:darken($blue,9%)\n\n.border\n    padding: $margin / 2\n    margin: $margin / 2\n    border-color: $blue\n\n```\n\n编译出来的CSS\n\n```\n.container {\n    border-color: #3bbfce;\n    color: #2b9eab;\n}\n.border {\n    padding: 8px;\n    margin: 8px;\n    border-color: #3bbfce;\n}\n\n```\n\n就我个人而言，我推荐使用SCSS，因为它似乎更具可读性。从外表看，SCSS和CSS几乎是一样的。\n\n## SASS特征\n\n仅SCSS的语法外表看，和CSS可以说是基本一致。但事实并不如此，SASS有几个基本特征，那是CSS没有的。也就是说SASS有几大特征是与生俱有的，这几大特征就是：\n\n- 变量(**Variables**)：用来定义变量\n- 嵌套(**Nesting**)：样式和属性的嵌套\n- **Mixins**：抽取样式定义为模块\n- 选择器继承（**Selector Inheritance**）：继承选择样式\n\n接下来，我们分别来了解SASS这四个基本特性。这几个基本特性就类似于CSS中的一些基本功能，只有掌握了这几个特性，才能更好的理解和掌握SASS。\n\n### 变量（`Variables`）\n\n对于变量来说，应该是开发人员最好朋友之一。在SASS中你也可以声明变量，并在整个样式表中使用。SASS支持任何变量（例如：颜色、数值、文本等）。然后你可以在任意地方引用变量。\n\n在SASS中定义的变量，除了可以在样式中直接引用之外，还可以对变量进行一些基本的数学运算，而且还可以在一些[有用函数](http://sass-lang.com/docs/yardoc/Sass/Script/Functions.html)中引用。\n\nSASS声明变量必须用`$`开头，后面紧变量名和变量值，而且变量名和变量值之间需要使用分号`:`隔开。就像CSS属性设置一样：\n\n```\n$变量名:变量值;\n\n```\n\n在SASS和SCSS中定义变量方法是一样。我们来举个例子来看：\n\n```\n|------------SCSS--------------|----------------SASS----------------|\n/*声明变量*/                    |  /*声明变明*/\n$color: #333;                  |  $color: #333\n$bgcolor:#f36;                 |  $bgcolor:#f36\n                               |\n/*引用变量*/                    |  /*引用变量*/\nbody {                         |  body\n    color: $color;             |     color:$color\n    background-color: #f36;    |     background-color:$bgcolor\n}                              |\n\n```\n\n编译出来的CSS如下：\n\n```\nbody {\n    color: #333;\n    background-color:#f36;\n}\n\n```\n\n从上面的代码中我们可以看出， SASS中的变量是值级别的重复使用，可以将相同的值定义成变量统一管理起来。\n\nSASS中变量的特性适用于定义主题（也就是我们常说的换肤），我们可以将背景颜色、字体颜色、边框属性等常规样式统一定义，这样不同的主题只需要定义不同的变量文件就可以。\n\n### 嵌套(`Nesting`)\n\nSASS中的嵌套有两种，一种是选择器的嵌套，另外一种是样式的嵌套。然而这两种嵌套的目的都是一样的，减少代码量，增强代码的可读性。\n\n#### 选择器的嵌套\n\nSASS中选择器的嵌套指的是在一个选择器中嵌套另一个选择器来实现继承。比如说，我们在CSS中多个元素有一个相同的父元素，那么写样式会变得很乏味，我们需要一遍一遍的在每个元素前写这个父元素，除百给特定的元素添加类名`class`或者`ID`。\n\n```\nsection {\n    margin: 10px;\n}\nsection nav {\n    height: 25px;\n}\nsection nav a {\n    color: #0982c1;\n}\nsection nav a:hover {\n    text-decoration: underline;\n}\n\n```\n\n如果使用SASS中的选择器嵌套特性，我们可以在父元素的大括号`{}`里写这些元素。同时可以使用`&`符号来引用元素的父选择器。我们来看看SASS中如何将上面的CSS代码转换成SASS代码：\n\n##### SCSS\n\n```\nsection {\n    margin: 10px;\n    nav {\n        height: 25px;\n        a {\n            color: #0982c1;\n            &:hover{\n                text-decoration: underline;\n            }\n        }\n    }\n}\n\n```\n\n##### SASS\n\n```\nsection\n    margin: 10px\n    nav\n        height: 25px\n        a\n            color: #0982c1\n            &:hover\n                text-decoration: underline\n\n```\n\n#### 属性嵌套\n\n在很多时候，我们写CSS常会碰到属性的缩写，比如：`font`、`background`、`border`、`margin`、`padding`等，在SASS中我们可以使用属性嵌套。让我们的代码变得简单，明了。\n\n来简单的看一个实例，他会更具有说明力，大家也会更易于明白什么是SASS中的属性嵌套。下面这样的场景，我想大家都常看到：\n\n```\nli {\n    font-style: italic;\n    font-family: serif;\n    font-weight: bold;\n    font-size:1.2em;\n}\n\n```\n\n在SASS中，我们可以使用属性嵌套写成：\n\n```\n|------------SCSS--------------|--------------SASS----------------|\nli {                           |  li\n    font: {                    |     font:\n        style:italic;          |        style: italic\n        family:serif;          |        family: serif\n        weight:bold;           |        weight: bold\n        size:1.2em;            |        size:1.2em\n    }                          |\n}                              |\n\n```\n\n### Mixins\n\nMixins是SASS中最强大的特性之一，简单点来说，Mixins可以将一部分样式抽出，作为单独定义的模块，被很多选择器重复使用。平时在写样式时肯定碰到过，某段CSS样式经常要用到多个元素中，这样就需要重复的写多次。在SASS中，可以为这些公用的CSS样式定义一个Mixin，然后在CSS需要使用这些样式的地方直接调用定义好的Mixin。这是一个非常有用的特性，Mixins被作一个公认的选择器，还可以在Mixins中定义变量或者默认参数。\n\nSASS中声明Mixins需要使用`@mixin`，在后面紧跟Mixins的名：\n\n```\n@mixin Mixins名 {\n    /*样式规则*/\n}\n\n```\n\n同时在Mixins中，还可以定义参数，同时可以给这个参数设置一个默认值，但参数名需要使用`$`符号开始，而且和参数值之间需要使用`:`分开：\n\n```\n@mixin Mixins名（$参数名：参数值）{\n    /*样式规则*/\n}\n\n```\n\n来看一个简单的实例：\n\n```\n@mixin error($borderWidth:2px){\n    border: $borderWidth solid #f00;\n    color: #f00;\n}\n\n```\n\n定义好Mixins之后，在需要的使用的选择器中调用定义好的Mixins。在调用定义好的Mixins时，在SCSS和SASS两种语法中调用方式不一样。\n\n在SCSS中调用定义好的Mixins，需要使用`@include`关键词，然后在其后紧跟需要调用的Mixins。\n\n```\n选择器{\n    @include(Mixins名)；\n}\n\n```\n\n在上例的基础上，我们来看如何在需要的地方引用定义好的`error`Mixins：\n\n```\n.generic-error {\n    @include error();/*直接调用error Mixins*/\n}\n.login-error {\n    @include error(3px);/*调用error Mixins，并将$borderWidth参数重定义为3px*/\n}\n\n```\n\n上面的代码编译成CSS:\n\n```\n.generic-error {\n    border:2px solid #f00;\n    color: #f00;\n}\n.login-error {\n    border: 3px solid #f00;\n    color: #f00;\n}\n\n```\n\n除了上面一种调用定义好的Mixins之外，在老的语法中还支持另一种调用Mixins的方法。就是使用`+`，后面紧跟定义好的Mixins名：\n\n```\n选择器{\n  +Mixins名\n}\n\n```\n\n回到上面的实例中，我们来演示一下如何调用：\n\n```\n.generic-error\n    +error()\n.login-error\n    +error(3px)\n\n```\n\n此时编译出的CSS如下：\n\n```\n.generic-error {\n    border:2px solid #f00;\n    color: #f00;\n}\n.login-error {\n    border: 3px solid #f00;\n    color: #f00;\n}\n\n```\n\n### 选择器继承（`Selector Inheritance`）\n\n在CSS中的属性继承应该很熟悉。平时在写CSS样式也常碰到多个元素应用相同的样式，我们在CSS中常把具有相同样式的选择器并列写在一起：\n\n```\n.error,\n.badError {\n  border: 1px #f00;\n  background: #fdd;\n}\n\n.error.intrusion,\n.badError.intrusion {\n  font-size: 1.3em;\n  font-weight: bold;\n}\n\n.badError {\n  border-width: 3px;\n}\n\n```\n\n但往往需给单独的元素添加另外的样式，这个时候我们就需要把其中选择器单独出来写样式，如此一来我们维护样式就相当的麻烦。为了应对这个问题，SASS可以从一个选择器继承另一个选择器下的所有样式。\n\n在SASS的继承是把一个选择器的所有样式继承到另一个选择器上，在继承另一个选择器的样式时需要使用`@extend`开始，后面紧跟被继承的选择器：\n\n```\n选择器 {\n    @extend 定义的类\n}\n\n```\n\n例如：\n\n```\n/*定义一个类*/\n.block {\n    margin: 10px 5px;\n    padding:2px;\n}\np {\n    @extend .block;/*继承.block选择器下所有样式*/\n    border: 1px solid #eee;\n}\nul,ol {\n    @extend .block;/*继承.block选择器下所有样式*/\n    color:#333;\n    text-transform: uppercase;\n}\n\n```\n\n上面的SCSS代码将编译出CSS：\n\n```\n.block,\np,\nul,\nol {\n    margin: 10px 5px;\n    padding: 2px;\n}\np {\n    border: 1px solid #eee;\n}\nul,\nol {\n    color: #333;\n    text-transform: uppercase;\n}\n\n```\n\n正如上面所看到的，上面的代码`.block`的样式将会被插入到相应的你要继承的选择器中，但需要注意的是优先级的问题。\n\n但这种做法有时候会生成一些没必要的代码，比如说，仅有部分样式相同，但并不想独自创建一个类名，以免增生无用之代码，这个时候可以将类`.`换成`%`，在上例的基础上做以调整：\n\n```\n%block {\n    margin: 10px 5px;\n    padding: 2px;\n}\np {\n    @extend %block;\n    border: 1px solid #eee;\n}\nul,ol {\n    @extend %block;\n    color: #333;\n    text-transfomr:uppercase;\n}\n```\n\n此时编译出来的CSS如下：\n\n```\np, ul, ol {\n  margin: 10px 5px;\n  padding: 2px; }\n\np {\n  border: 1px solid #eee; }\n\nul, ol {\n  color: #333;\n  text-transfomr: uppercase; }\n\n```\n\n相比这下，使用`%`代替`.`定义公用样式，再通过`@extend`调用，编译出来的CSS要干净很多。\n\n## 结论\n\n在此文中，主要介绍了SASS的两种语法的规则以及与CSS语法规则的对比。同时分别介绍了SASS中的四个基本特性：**变量**、**嵌套**、**Mixins**和**继承**的基本使用规则。\n\n通过了解SASS的一基本语法和其特性，我们就可以继续深入SASS的下一层次学习。最后希望这篇文章能帮助大家更好的了解SASS的一些基础知识，并且在此基础上能进一步的往下深入。\n\n著作权归作者所有。\n\n商业转载请联系作者获得授权,非商业转载请注明出处。\n\n原文:\n\nhttp://www.w3cplus.com/preprocessor/sass-basic-syntax-and-features.html\n\n ©\n\nw3cplus.com\n","source":"_posts/SASS.md","raw":"---\ntitle: sass\ntags: [前端,SASS]\ncategories: 前端\n---\n# SASS基础教程——SASS基本语法与特性\n\n前一段时间，一直在聊SASS的环境、安装、调试以及转译等相关问题。但一直未真正的切入SASS是如何使用的。我在想，更多的同学其关注点还是如何使用SASS？如何在项目中运用SASS？那么从这篇文章开始，我们一起来走进SASS。\n\n当你想真正走入SASS的时候，个人建议您能按照前面几篇文章，在你的电脑中构建好SASS的环境，包括如何安装环境、安装SASS、调试SASS以及编译SASS。或许正因为前期有这么多事情要做，很多同学不敢轻意的踏入，其实没有大家想得那么复杂，不管是在Window下还是在Mac OS X下，这些都是非常简单的。如果你感兴趣，不仿在正式阅读下面的内容之前，先根据下面几篇文章完成一些很有必要的工作：\n\n做为一名页面仔来说，对于CSS并不会感到陌生。每天的工作都在为他打交道，或者说很多时候都在做一些复制粘贴性的工作。比如说，文字的排版，颜色的设置，边框设置，元素宽度调整，布局与网格制作等等。这些工作也让很多CSSER变得对自己从事的工作变得机械化，变得无趣，也失去了当初的激情。不知道大家是否有想过，通过另外一种方式来能完成我们的工作，让我们不在是一个复制代码的码农，让我们的工作不在机械，让我们的工作不在无趣。\n\n在这种环境之下，我想使用SASS来改变我的以前的工作方式，让SASS帮我完成以前依靠复制和粘贴的工作，也让SASS来帮我完成一些更具有意义的工作。\n\n## SASS优点\n\n要了SASS，我们先从他的优点说起。SASS是一种基于CSS的预处理语言，在CSS的基础上将代码抽象各简单化。SASS让你写CSS时提供更多的自由，它像一个篇程语言一样，可以给你的样式定义变量，嵌套等功能。更强大的是可以让你的CSS具有逻辑功能。类似于其他程序语言中的条件判断、循环等。\n\n举个栗子，或许大家更能理解。SASS可以将`Hex`,`rgb`,`rgba`，`hsl`和`hsla`颜色设置为变量，并在整个项目中重复使用他们。复杂一点的，你可以通过SASS的`mixins`生成一个网格的布局功能，然后在对应的类名通过`include`来调用，生成所需要的网格布局。另外还可以通过`extend`来调用你的前面生成的类名。要知道，所有这些都是与函数编程语言很类似。主要目的就是**让你写CSS时不在重复**。\n\n综合上面所述，SASS优点可以简单的规纳为以下几点：\n\n- 增加了一些编程特性\n- 简少CSS代码的重复性与代码的冗余\n- 维护方便\n- 适应性更强，可读性更强\n\n## SASS语法\n\nSASS到目前为止有两种语法规则。最新的语法称为“SCSS”，增强了对CSS3语法的支持。这意味着每个CSS3的语法也适用于SCSS。SCSS文件有自己的扩展名`.scss`。\n\n第二种语为称为SASS的老语法，也称为[缩进语法](http://sass-lang.com/docs/yardoc/file.INDENTED_SYNTAX.html)。受[HAML](http://ru.wikipedia.org/wiki/Haml)语法的影响，这个语法主要用来给那些追求CSS简洁的人使用。他不是使用大括号和分号，而是使用缩进来指定块。文件使用扩展名`.sass`。\n\n简单的理解，SASS分为两种语法，一种是**SCSS**，另一种就是**SASS**。到目前为止，我们所说的SASS其实就是其新语法，也就是——**SCSS**，只不过大家都还是习惯性的称之为SASS。这一点大家需要注意。\n\n这个时候，你肯定又会觉得很蛋疼，不就是一门语言吗？还搞出这么多个花样，还分什么`.sass`(SASS)和`.scss`(SCSS)。难道就不能只有一种吗？其实是可以的，如果你不想过多的去了解，那么你只需要记住SASS的新语法，也就是——**SCSS**。特别是对于新手，你只要知道SCSS的语法规则就OK了。\n\n但话说回来，如果你想了解SCSS的来龙去脉，你就一定会知道SASS，也就会碰到上面所说的，两种语法。那么在这些，我们顺便来看看SCSS和SASS语法规则上有何不同。\n\n### SCSS语法\n\nSCSS语法规则和CSS的语法规则可以说是完全一样，由选择器、属性和属性三部分组成，并且和大括号`{}`与分号`;`配合在一起使用。\n\n```\n选择器{\n    属性：属性值；\n}\n\n```\n\n例如有一段CSS代码如下：\n\n```\n.container {\n    width: 960px;\n    margin: 0 auto;\n}\n\n```\n\n那么在SCSS中，我们使用如下：\n\n```\n.container {\n    width: 960px;\n    margin: 0 auto;\n}\n\n```\n\n可以说SCSS和CSS的语法规则是一样的，这也是众多前端人员习喜欢使用SCSS的原因，因为他太像CSS了。和平时使用CSS的习惯基本上一致，无须为了使用SCSS而改变以前的书写代码习惯。\n\n### SASS语法\n\nSASS语法也称之为SASS的缩进语法，其目的是担供一个更简洁的语法。对于一些人来说，更多的是基于于CSS的美学吸引力，用SASS来代替SCSS语法。\n\nSASS语法和CSS语法不一样，他不是使用大括号`{}`和分号`;`来分隔块的样式，它使用的是类似于[HAML](http://haml.info/)语法，使用缩进和换行来分块，而不是使用分号来分隔语句。这通常会省去大量的篇幅，也缩小了文件大小。\n\n每个在SASS中语句，属性声明和选择器必须放在自己的线上。换句话说，选择器和样式的声明不用大括号`{}`区分，但必须分行书写。\n\n```\n选择器\n    属性：属性值\n\n```\n\n同样的，我们有一段CSS代码：\n\n```\n.container {\n    width: 960px;\n    margin: 0 auto;\n}\n\n```\n\n其对应的SASS代码如下：\n\n```\n.container\n    width: 960px\n    margin: 0 auto\n\n```\n\n在SASS语法中，有多个选择器时，每个选择器必须在一个行，而且用逗号`,`分隔。简单点说，一个选择器占一行，而且相邻两个选择器之间使用`,`分开：\n\n```\n.user #userTab,\n.posts #postTab\n    width: 100px\n    height:30px\n\n```\n\n我们简单来看一个SCSS、SASS和CSS三者之间语法的对比示例：\n\n##### SCSS\n\n```\n$blue:#3bbfce;\n$margin:16px;\n.container{\n    border-color:$blue;\n    color:darken($blue,9%);\n}\n.border {\n    padding: $margin / 2;\n    margin: $margin / 2;\n    border-color: $blue;\n}\n\n```\n\n##### SASS\n\n```\n$blue:#3bbfce\n$margin: 16px\n.container\n    border-color:$blue\n    color:darken($blue,9%)\n\n.border\n    padding: $margin / 2\n    margin: $margin / 2\n    border-color: $blue\n\n```\n\n编译出来的CSS\n\n```\n.container {\n    border-color: #3bbfce;\n    color: #2b9eab;\n}\n.border {\n    padding: 8px;\n    margin: 8px;\n    border-color: #3bbfce;\n}\n\n```\n\n就我个人而言，我推荐使用SCSS，因为它似乎更具可读性。从外表看，SCSS和CSS几乎是一样的。\n\n## SASS特征\n\n仅SCSS的语法外表看，和CSS可以说是基本一致。但事实并不如此，SASS有几个基本特征，那是CSS没有的。也就是说SASS有几大特征是与生俱有的，这几大特征就是：\n\n- 变量(**Variables**)：用来定义变量\n- 嵌套(**Nesting**)：样式和属性的嵌套\n- **Mixins**：抽取样式定义为模块\n- 选择器继承（**Selector Inheritance**）：继承选择样式\n\n接下来，我们分别来了解SASS这四个基本特性。这几个基本特性就类似于CSS中的一些基本功能，只有掌握了这几个特性，才能更好的理解和掌握SASS。\n\n### 变量（`Variables`）\n\n对于变量来说，应该是开发人员最好朋友之一。在SASS中你也可以声明变量，并在整个样式表中使用。SASS支持任何变量（例如：颜色、数值、文本等）。然后你可以在任意地方引用变量。\n\n在SASS中定义的变量，除了可以在样式中直接引用之外，还可以对变量进行一些基本的数学运算，而且还可以在一些[有用函数](http://sass-lang.com/docs/yardoc/Sass/Script/Functions.html)中引用。\n\nSASS声明变量必须用`$`开头，后面紧变量名和变量值，而且变量名和变量值之间需要使用分号`:`隔开。就像CSS属性设置一样：\n\n```\n$变量名:变量值;\n\n```\n\n在SASS和SCSS中定义变量方法是一样。我们来举个例子来看：\n\n```\n|------------SCSS--------------|----------------SASS----------------|\n/*声明变量*/                    |  /*声明变明*/\n$color: #333;                  |  $color: #333\n$bgcolor:#f36;                 |  $bgcolor:#f36\n                               |\n/*引用变量*/                    |  /*引用变量*/\nbody {                         |  body\n    color: $color;             |     color:$color\n    background-color: #f36;    |     background-color:$bgcolor\n}                              |\n\n```\n\n编译出来的CSS如下：\n\n```\nbody {\n    color: #333;\n    background-color:#f36;\n}\n\n```\n\n从上面的代码中我们可以看出， SASS中的变量是值级别的重复使用，可以将相同的值定义成变量统一管理起来。\n\nSASS中变量的特性适用于定义主题（也就是我们常说的换肤），我们可以将背景颜色、字体颜色、边框属性等常规样式统一定义，这样不同的主题只需要定义不同的变量文件就可以。\n\n### 嵌套(`Nesting`)\n\nSASS中的嵌套有两种，一种是选择器的嵌套，另外一种是样式的嵌套。然而这两种嵌套的目的都是一样的，减少代码量，增强代码的可读性。\n\n#### 选择器的嵌套\n\nSASS中选择器的嵌套指的是在一个选择器中嵌套另一个选择器来实现继承。比如说，我们在CSS中多个元素有一个相同的父元素，那么写样式会变得很乏味，我们需要一遍一遍的在每个元素前写这个父元素，除百给特定的元素添加类名`class`或者`ID`。\n\n```\nsection {\n    margin: 10px;\n}\nsection nav {\n    height: 25px;\n}\nsection nav a {\n    color: #0982c1;\n}\nsection nav a:hover {\n    text-decoration: underline;\n}\n\n```\n\n如果使用SASS中的选择器嵌套特性，我们可以在父元素的大括号`{}`里写这些元素。同时可以使用`&`符号来引用元素的父选择器。我们来看看SASS中如何将上面的CSS代码转换成SASS代码：\n\n##### SCSS\n\n```\nsection {\n    margin: 10px;\n    nav {\n        height: 25px;\n        a {\n            color: #0982c1;\n            &:hover{\n                text-decoration: underline;\n            }\n        }\n    }\n}\n\n```\n\n##### SASS\n\n```\nsection\n    margin: 10px\n    nav\n        height: 25px\n        a\n            color: #0982c1\n            &:hover\n                text-decoration: underline\n\n```\n\n#### 属性嵌套\n\n在很多时候，我们写CSS常会碰到属性的缩写，比如：`font`、`background`、`border`、`margin`、`padding`等，在SASS中我们可以使用属性嵌套。让我们的代码变得简单，明了。\n\n来简单的看一个实例，他会更具有说明力，大家也会更易于明白什么是SASS中的属性嵌套。下面这样的场景，我想大家都常看到：\n\n```\nli {\n    font-style: italic;\n    font-family: serif;\n    font-weight: bold;\n    font-size:1.2em;\n}\n\n```\n\n在SASS中，我们可以使用属性嵌套写成：\n\n```\n|------------SCSS--------------|--------------SASS----------------|\nli {                           |  li\n    font: {                    |     font:\n        style:italic;          |        style: italic\n        family:serif;          |        family: serif\n        weight:bold;           |        weight: bold\n        size:1.2em;            |        size:1.2em\n    }                          |\n}                              |\n\n```\n\n### Mixins\n\nMixins是SASS中最强大的特性之一，简单点来说，Mixins可以将一部分样式抽出，作为单独定义的模块，被很多选择器重复使用。平时在写样式时肯定碰到过，某段CSS样式经常要用到多个元素中，这样就需要重复的写多次。在SASS中，可以为这些公用的CSS样式定义一个Mixin，然后在CSS需要使用这些样式的地方直接调用定义好的Mixin。这是一个非常有用的特性，Mixins被作一个公认的选择器，还可以在Mixins中定义变量或者默认参数。\n\nSASS中声明Mixins需要使用`@mixin`，在后面紧跟Mixins的名：\n\n```\n@mixin Mixins名 {\n    /*样式规则*/\n}\n\n```\n\n同时在Mixins中，还可以定义参数，同时可以给这个参数设置一个默认值，但参数名需要使用`$`符号开始，而且和参数值之间需要使用`:`分开：\n\n```\n@mixin Mixins名（$参数名：参数值）{\n    /*样式规则*/\n}\n\n```\n\n来看一个简单的实例：\n\n```\n@mixin error($borderWidth:2px){\n    border: $borderWidth solid #f00;\n    color: #f00;\n}\n\n```\n\n定义好Mixins之后，在需要的使用的选择器中调用定义好的Mixins。在调用定义好的Mixins时，在SCSS和SASS两种语法中调用方式不一样。\n\n在SCSS中调用定义好的Mixins，需要使用`@include`关键词，然后在其后紧跟需要调用的Mixins。\n\n```\n选择器{\n    @include(Mixins名)；\n}\n\n```\n\n在上例的基础上，我们来看如何在需要的地方引用定义好的`error`Mixins：\n\n```\n.generic-error {\n    @include error();/*直接调用error Mixins*/\n}\n.login-error {\n    @include error(3px);/*调用error Mixins，并将$borderWidth参数重定义为3px*/\n}\n\n```\n\n上面的代码编译成CSS:\n\n```\n.generic-error {\n    border:2px solid #f00;\n    color: #f00;\n}\n.login-error {\n    border: 3px solid #f00;\n    color: #f00;\n}\n\n```\n\n除了上面一种调用定义好的Mixins之外，在老的语法中还支持另一种调用Mixins的方法。就是使用`+`，后面紧跟定义好的Mixins名：\n\n```\n选择器{\n  +Mixins名\n}\n\n```\n\n回到上面的实例中，我们来演示一下如何调用：\n\n```\n.generic-error\n    +error()\n.login-error\n    +error(3px)\n\n```\n\n此时编译出的CSS如下：\n\n```\n.generic-error {\n    border:2px solid #f00;\n    color: #f00;\n}\n.login-error {\n    border: 3px solid #f00;\n    color: #f00;\n}\n\n```\n\n### 选择器继承（`Selector Inheritance`）\n\n在CSS中的属性继承应该很熟悉。平时在写CSS样式也常碰到多个元素应用相同的样式，我们在CSS中常把具有相同样式的选择器并列写在一起：\n\n```\n.error,\n.badError {\n  border: 1px #f00;\n  background: #fdd;\n}\n\n.error.intrusion,\n.badError.intrusion {\n  font-size: 1.3em;\n  font-weight: bold;\n}\n\n.badError {\n  border-width: 3px;\n}\n\n```\n\n但往往需给单独的元素添加另外的样式，这个时候我们就需要把其中选择器单独出来写样式，如此一来我们维护样式就相当的麻烦。为了应对这个问题，SASS可以从一个选择器继承另一个选择器下的所有样式。\n\n在SASS的继承是把一个选择器的所有样式继承到另一个选择器上，在继承另一个选择器的样式时需要使用`@extend`开始，后面紧跟被继承的选择器：\n\n```\n选择器 {\n    @extend 定义的类\n}\n\n```\n\n例如：\n\n```\n/*定义一个类*/\n.block {\n    margin: 10px 5px;\n    padding:2px;\n}\np {\n    @extend .block;/*继承.block选择器下所有样式*/\n    border: 1px solid #eee;\n}\nul,ol {\n    @extend .block;/*继承.block选择器下所有样式*/\n    color:#333;\n    text-transform: uppercase;\n}\n\n```\n\n上面的SCSS代码将编译出CSS：\n\n```\n.block,\np,\nul,\nol {\n    margin: 10px 5px;\n    padding: 2px;\n}\np {\n    border: 1px solid #eee;\n}\nul,\nol {\n    color: #333;\n    text-transform: uppercase;\n}\n\n```\n\n正如上面所看到的，上面的代码`.block`的样式将会被插入到相应的你要继承的选择器中，但需要注意的是优先级的问题。\n\n但这种做法有时候会生成一些没必要的代码，比如说，仅有部分样式相同，但并不想独自创建一个类名，以免增生无用之代码，这个时候可以将类`.`换成`%`，在上例的基础上做以调整：\n\n```\n%block {\n    margin: 10px 5px;\n    padding: 2px;\n}\np {\n    @extend %block;\n    border: 1px solid #eee;\n}\nul,ol {\n    @extend %block;\n    color: #333;\n    text-transfomr:uppercase;\n}\n```\n\n此时编译出来的CSS如下：\n\n```\np, ul, ol {\n  margin: 10px 5px;\n  padding: 2px; }\n\np {\n  border: 1px solid #eee; }\n\nul, ol {\n  color: #333;\n  text-transfomr: uppercase; }\n\n```\n\n相比这下，使用`%`代替`.`定义公用样式，再通过`@extend`调用，编译出来的CSS要干净很多。\n\n## 结论\n\n在此文中，主要介绍了SASS的两种语法的规则以及与CSS语法规则的对比。同时分别介绍了SASS中的四个基本特性：**变量**、**嵌套**、**Mixins**和**继承**的基本使用规则。\n\n通过了解SASS的一基本语法和其特性，我们就可以继续深入SASS的下一层次学习。最后希望这篇文章能帮助大家更好的了解SASS的一些基础知识，并且在此基础上能进一步的往下深入。\n\n著作权归作者所有。\n\n商业转载请联系作者获得授权,非商业转载请注明出处。\n\n原文:\n\nhttp://www.w3cplus.com/preprocessor/sass-basic-syntax-and-features.html\n\n ©\n\nw3cplus.com\n","slug":"SASS","published":1,"date":"2017-05-22T05:03:19.701Z","updated":"2017-05-26T03:35:53.807Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmtr600054wvszsuvgita","content":"<h1 id=\"SASS基础教程——SASS基本语法与特性\"><a href=\"#SASS基础教程——SASS基本语法与特性\" class=\"headerlink\" title=\"SASS基础教程——SASS基本语法与特性\"></a>SASS基础教程——SASS基本语法与特性</h1><p>前一段时间，一直在聊SASS的环境、安装、调试以及转译等相关问题。但一直未真正的切入SASS是如何使用的。我在想，更多的同学其关注点还是如何使用SASS？如何在项目中运用SASS？那么从这篇文章开始，我们一起来走进SASS。</p>\n<p>当你想真正走入SASS的时候，个人建议您能按照前面几篇文章，在你的电脑中构建好SASS的环境，包括如何安装环境、安装SASS、调试SASS以及编译SASS。或许正因为前期有这么多事情要做，很多同学不敢轻意的踏入，其实没有大家想得那么复杂，不管是在Window下还是在Mac OS X下，这些都是非常简单的。如果你感兴趣，不仿在正式阅读下面的内容之前，先根据下面几篇文章完成一些很有必要的工作：</p>\n<p>做为一名页面仔来说，对于CSS并不会感到陌生。每天的工作都在为他打交道，或者说很多时候都在做一些复制粘贴性的工作。比如说，文字的排版，颜色的设置，边框设置，元素宽度调整，布局与网格制作等等。这些工作也让很多CSSER变得对自己从事的工作变得机械化，变得无趣，也失去了当初的激情。不知道大家是否有想过，通过另外一种方式来能完成我们的工作，让我们不在是一个复制代码的码农，让我们的工作不在机械，让我们的工作不在无趣。</p>\n<p>在这种环境之下，我想使用SASS来改变我的以前的工作方式，让SASS帮我完成以前依靠复制和粘贴的工作，也让SASS来帮我完成一些更具有意义的工作。</p>\n<h2 id=\"SASS优点\"><a href=\"#SASS优点\" class=\"headerlink\" title=\"SASS优点\"></a>SASS优点</h2><p>要了SASS，我们先从他的优点说起。SASS是一种基于CSS的预处理语言，在CSS的基础上将代码抽象各简单化。SASS让你写CSS时提供更多的自由，它像一个篇程语言一样，可以给你的样式定义变量，嵌套等功能。更强大的是可以让你的CSS具有逻辑功能。类似于其他程序语言中的条件判断、循环等。</p>\n<p>举个栗子，或许大家更能理解。SASS可以将<code>Hex</code>,<code>rgb</code>,<code>rgba</code>，<code>hsl</code>和<code>hsla</code>颜色设置为变量，并在整个项目中重复使用他们。复杂一点的，你可以通过SASS的<code>mixins</code>生成一个网格的布局功能，然后在对应的类名通过<code>include</code>来调用，生成所需要的网格布局。另外还可以通过<code>extend</code>来调用你的前面生成的类名。要知道，所有这些都是与函数编程语言很类似。主要目的就是<strong>让你写CSS时不在重复</strong>。</p>\n<p>综合上面所述，SASS优点可以简单的规纳为以下几点：</p>\n<ul>\n<li>增加了一些编程特性</li>\n<li>简少CSS代码的重复性与代码的冗余</li>\n<li>维护方便</li>\n<li>适应性更强，可读性更强</li>\n</ul>\n<h2 id=\"SASS语法\"><a href=\"#SASS语法\" class=\"headerlink\" title=\"SASS语法\"></a>SASS语法</h2><p>SASS到目前为止有两种语法规则。最新的语法称为“SCSS”，增强了对CSS3语法的支持。这意味着每个CSS3的语法也适用于SCSS。SCSS文件有自己的扩展名<code>.scss</code>。</p>\n<p>第二种语为称为SASS的老语法，也称为<a href=\"http://sass-lang.com/docs/yardoc/file.INDENTED_SYNTAX.html\" target=\"_blank\" rel=\"external\">缩进语法</a>。受<a href=\"http://ru.wikipedia.org/wiki/Haml\" target=\"_blank\" rel=\"external\">HAML</a>语法的影响，这个语法主要用来给那些追求CSS简洁的人使用。他不是使用大括号和分号，而是使用缩进来指定块。文件使用扩展名<code>.sass</code>。</p>\n<p>简单的理解，SASS分为两种语法，一种是<strong>SCSS</strong>，另一种就是<strong>SASS</strong>。到目前为止，我们所说的SASS其实就是其新语法，也就是——<strong>SCSS</strong>，只不过大家都还是习惯性的称之为SASS。这一点大家需要注意。</p>\n<p>这个时候，你肯定又会觉得很蛋疼，不就是一门语言吗？还搞出这么多个花样，还分什么<code>.sass</code>(SASS)和<code>.scss</code>(SCSS)。难道就不能只有一种吗？其实是可以的，如果你不想过多的去了解，那么你只需要记住SASS的新语法，也就是——<strong>SCSS</strong>。特别是对于新手，你只要知道SCSS的语法规则就OK了。</p>\n<p>但话说回来，如果你想了解SCSS的来龙去脉，你就一定会知道SASS，也就会碰到上面所说的，两种语法。那么在这些，我们顺便来看看SCSS和SASS语法规则上有何不同。</p>\n<h3 id=\"SCSS语法\"><a href=\"#SCSS语法\" class=\"headerlink\" title=\"SCSS语法\"></a>SCSS语法</h3><p>SCSS语法规则和CSS的语法规则可以说是完全一样，由选择器、属性和属性三部分组成，并且和大括号<code>{}</code>与分号<code>;</code>配合在一起使用。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">选择器&#123;</div><div class=\"line\">    属性：属性值；</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>例如有一段CSS代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">.container &#123;</div><div class=\"line\">    width: 960px;</div><div class=\"line\">    margin: 0 auto;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>那么在SCSS中，我们使用如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">.container &#123;</div><div class=\"line\">    width: 960px;</div><div class=\"line\">    margin: 0 auto;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>可以说SCSS和CSS的语法规则是一样的，这也是众多前端人员习喜欢使用SCSS的原因，因为他太像CSS了。和平时使用CSS的习惯基本上一致，无须为了使用SCSS而改变以前的书写代码习惯。</p>\n<h3 id=\"SASS语法-1\"><a href=\"#SASS语法-1\" class=\"headerlink\" title=\"SASS语法\"></a>SASS语法</h3><p>SASS语法也称之为SASS的缩进语法，其目的是担供一个更简洁的语法。对于一些人来说，更多的是基于于CSS的美学吸引力，用SASS来代替SCSS语法。</p>\n<p>SASS语法和CSS语法不一样，他不是使用大括号<code>{}</code>和分号<code>;</code>来分隔块的样式，它使用的是类似于<a href=\"http://haml.info/\" target=\"_blank\" rel=\"external\">HAML</a>语法，使用缩进和换行来分块，而不是使用分号来分隔语句。这通常会省去大量的篇幅，也缩小了文件大小。</p>\n<p>每个在SASS中语句，属性声明和选择器必须放在自己的线上。换句话说，选择器和样式的声明不用大括号<code>{}</code>区分，但必须分行书写。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">选择器</div><div class=\"line\">    属性：属性值</div></pre></td></tr></table></figure>\n<p>同样的，我们有一段CSS代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">.container &#123;</div><div class=\"line\">    width: 960px;</div><div class=\"line\">    margin: 0 auto;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>其对应的SASS代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">.container</div><div class=\"line\">    width: 960px</div><div class=\"line\">    margin: 0 auto</div></pre></td></tr></table></figure>\n<p>在SASS语法中，有多个选择器时，每个选择器必须在一个行，而且用逗号<code>,</code>分隔。简单点说，一个选择器占一行，而且相邻两个选择器之间使用<code>,</code>分开：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">.user #userTab,</div><div class=\"line\">.posts #postTab</div><div class=\"line\">    width: 100px</div><div class=\"line\">    height:30px</div></pre></td></tr></table></figure>\n<p>我们简单来看一个SCSS、SASS和CSS三者之间语法的对比示例：</p>\n<h5 id=\"SCSS\"><a href=\"#SCSS\" class=\"headerlink\" title=\"SCSS\"></a>SCSS</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">$blue:#3bbfce;</div><div class=\"line\">$margin:16px;</div><div class=\"line\">.container&#123;</div><div class=\"line\">    border-color:$blue;</div><div class=\"line\">    color:darken($blue,9%);</div><div class=\"line\">&#125;</div><div class=\"line\">.border &#123;</div><div class=\"line\">    padding: $margin / 2;</div><div class=\"line\">    margin: $margin / 2;</div><div class=\"line\">    border-color: $blue;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"SASS\"><a href=\"#SASS\" class=\"headerlink\" title=\"SASS\"></a>SASS</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">$blue:#3bbfce</div><div class=\"line\">$margin: 16px</div><div class=\"line\">.container</div><div class=\"line\">    border-color:$blue</div><div class=\"line\">    color:darken($blue,9%)</div><div class=\"line\"></div><div class=\"line\">.border</div><div class=\"line\">    padding: $margin / 2</div><div class=\"line\">    margin: $margin / 2</div><div class=\"line\">    border-color: $blue</div></pre></td></tr></table></figure>\n<p>编译出来的CSS</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">.container &#123;</div><div class=\"line\">    border-color: #3bbfce;</div><div class=\"line\">    color: #2b9eab;</div><div class=\"line\">&#125;</div><div class=\"line\">.border &#123;</div><div class=\"line\">    padding: 8px;</div><div class=\"line\">    margin: 8px;</div><div class=\"line\">    border-color: #3bbfce;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>就我个人而言，我推荐使用SCSS，因为它似乎更具可读性。从外表看，SCSS和CSS几乎是一样的。</p>\n<h2 id=\"SASS特征\"><a href=\"#SASS特征\" class=\"headerlink\" title=\"SASS特征\"></a>SASS特征</h2><p>仅SCSS的语法外表看，和CSS可以说是基本一致。但事实并不如此，SASS有几个基本特征，那是CSS没有的。也就是说SASS有几大特征是与生俱有的，这几大特征就是：</p>\n<ul>\n<li>变量(<strong>Variables</strong>)：用来定义变量</li>\n<li>嵌套(<strong>Nesting</strong>)：样式和属性的嵌套</li>\n<li><strong>Mixins</strong>：抽取样式定义为模块</li>\n<li>选择器继承（<strong>Selector Inheritance</strong>）：继承选择样式</li>\n</ul>\n<p>接下来，我们分别来了解SASS这四个基本特性。这几个基本特性就类似于CSS中的一些基本功能，只有掌握了这几个特性，才能更好的理解和掌握SASS。</p>\n<h3 id=\"变量（Variables）\"><a href=\"#变量（Variables）\" class=\"headerlink\" title=\"变量（Variables）\"></a>变量（<code>Variables</code>）</h3><p>对于变量来说，应该是开发人员最好朋友之一。在SASS中你也可以声明变量，并在整个样式表中使用。SASS支持任何变量（例如：颜色、数值、文本等）。然后你可以在任意地方引用变量。</p>\n<p>在SASS中定义的变量，除了可以在样式中直接引用之外，还可以对变量进行一些基本的数学运算，而且还可以在一些<a href=\"http://sass-lang.com/docs/yardoc/Sass/Script/Functions.html\" target=\"_blank\" rel=\"external\">有用函数</a>中引用。</p>\n<p>SASS声明变量必须用<code>$</code>开头，后面紧变量名和变量值，而且变量名和变量值之间需要使用分号<code>:</code>隔开。就像CSS属性设置一样：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$变量名:变量值;</div></pre></td></tr></table></figure>\n<p>在SASS和SCSS中定义变量方法是一样。我们来举个例子来看：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">|------------SCSS--------------|----------------SASS----------------|</div><div class=\"line\">/*声明变量*/                    |  /*声明变明*/</div><div class=\"line\">$color: #333;                  |  $color: #333</div><div class=\"line\">$bgcolor:#f36;                 |  $bgcolor:#f36</div><div class=\"line\">                               |</div><div class=\"line\">/*引用变量*/                    |  /*引用变量*/</div><div class=\"line\">body &#123;                         |  body</div><div class=\"line\">    color: $color;             |     color:$color</div><div class=\"line\">    background-color: #f36;    |     background-color:$bgcolor</div><div class=\"line\">&#125;                              |</div></pre></td></tr></table></figure>\n<p>编译出来的CSS如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">body &#123;</div><div class=\"line\">    color: #333;</div><div class=\"line\">    background-color:#f36;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>从上面的代码中我们可以看出， SASS中的变量是值级别的重复使用，可以将相同的值定义成变量统一管理起来。</p>\n<p>SASS中变量的特性适用于定义主题（也就是我们常说的换肤），我们可以将背景颜色、字体颜色、边框属性等常规样式统一定义，这样不同的主题只需要定义不同的变量文件就可以。</p>\n<h3 id=\"嵌套-Nesting\"><a href=\"#嵌套-Nesting\" class=\"headerlink\" title=\"嵌套(Nesting)\"></a>嵌套(<code>Nesting</code>)</h3><p>SASS中的嵌套有两种，一种是选择器的嵌套，另外一种是样式的嵌套。然而这两种嵌套的目的都是一样的，减少代码量，增强代码的可读性。</p>\n<h4 id=\"选择器的嵌套\"><a href=\"#选择器的嵌套\" class=\"headerlink\" title=\"选择器的嵌套\"></a>选择器的嵌套</h4><p>SASS中选择器的嵌套指的是在一个选择器中嵌套另一个选择器来实现继承。比如说，我们在CSS中多个元素有一个相同的父元素，那么写样式会变得很乏味，我们需要一遍一遍的在每个元素前写这个父元素，除百给特定的元素添加类名<code>class</code>或者<code>ID</code>。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">section &#123;</div><div class=\"line\">    margin: 10px;</div><div class=\"line\">&#125;</div><div class=\"line\">section nav &#123;</div><div class=\"line\">    height: 25px;</div><div class=\"line\">&#125;</div><div class=\"line\">section nav a &#123;</div><div class=\"line\">    color: #0982c1;</div><div class=\"line\">&#125;</div><div class=\"line\">section nav a:hover &#123;</div><div class=\"line\">    text-decoration: underline;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>如果使用SASS中的选择器嵌套特性，我们可以在父元素的大括号<code>{}</code>里写这些元素。同时可以使用<code>&amp;</code>符号来引用元素的父选择器。我们来看看SASS中如何将上面的CSS代码转换成SASS代码：</p>\n<h5 id=\"SCSS-1\"><a href=\"#SCSS-1\" class=\"headerlink\" title=\"SCSS\"></a>SCSS</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">section &#123;</div><div class=\"line\">    margin: 10px;</div><div class=\"line\">    nav &#123;</div><div class=\"line\">        height: 25px;</div><div class=\"line\">        a &#123;</div><div class=\"line\">            color: #0982c1;</div><div class=\"line\">            &amp;:hover&#123;</div><div class=\"line\">                text-decoration: underline;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"SASS-1\"><a href=\"#SASS-1\" class=\"headerlink\" title=\"SASS\"></a>SASS</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">section</div><div class=\"line\">    margin: 10px</div><div class=\"line\">    nav</div><div class=\"line\">        height: 25px</div><div class=\"line\">        a</div><div class=\"line\">            color: #0982c1</div><div class=\"line\">            &amp;:hover</div><div class=\"line\">                text-decoration: underline</div></pre></td></tr></table></figure>\n<h4 id=\"属性嵌套\"><a href=\"#属性嵌套\" class=\"headerlink\" title=\"属性嵌套\"></a>属性嵌套</h4><p>在很多时候，我们写CSS常会碰到属性的缩写，比如：<code>font</code>、<code>background</code>、<code>border</code>、<code>margin</code>、<code>padding</code>等，在SASS中我们可以使用属性嵌套。让我们的代码变得简单，明了。</p>\n<p>来简单的看一个实例，他会更具有说明力，大家也会更易于明白什么是SASS中的属性嵌套。下面这样的场景，我想大家都常看到：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">li &#123;</div><div class=\"line\">    font-style: italic;</div><div class=\"line\">    font-family: serif;</div><div class=\"line\">    font-weight: bold;</div><div class=\"line\">    font-size:1.2em;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在SASS中，我们可以使用属性嵌套写成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">|------------SCSS--------------|--------------SASS----------------|</div><div class=\"line\">li &#123;                           |  li</div><div class=\"line\">    font: &#123;                    |     font:</div><div class=\"line\">        style:italic;          |        style: italic</div><div class=\"line\">        family:serif;          |        family: serif</div><div class=\"line\">        weight:bold;           |        weight: bold</div><div class=\"line\">        size:1.2em;            |        size:1.2em</div><div class=\"line\">    &#125;                          |</div><div class=\"line\">&#125;                              |</div></pre></td></tr></table></figure>\n<h3 id=\"Mixins\"><a href=\"#Mixins\" class=\"headerlink\" title=\"Mixins\"></a>Mixins</h3><p>Mixins是SASS中最强大的特性之一，简单点来说，Mixins可以将一部分样式抽出，作为单独定义的模块，被很多选择器重复使用。平时在写样式时肯定碰到过，某段CSS样式经常要用到多个元素中，这样就需要重复的写多次。在SASS中，可以为这些公用的CSS样式定义一个Mixin，然后在CSS需要使用这些样式的地方直接调用定义好的Mixin。这是一个非常有用的特性，Mixins被作一个公认的选择器，还可以在Mixins中定义变量或者默认参数。</p>\n<p>SASS中声明Mixins需要使用<code>@mixin</code>，在后面紧跟Mixins的名：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">@mixin Mixins名 &#123;</div><div class=\"line\">    /*样式规则*/</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>同时在Mixins中，还可以定义参数，同时可以给这个参数设置一个默认值，但参数名需要使用<code>$</code>符号开始，而且和参数值之间需要使用<code>:</code>分开：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">@mixin Mixins名（$参数名：参数值）&#123;</div><div class=\"line\">    /*样式规则*/</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>来看一个简单的实例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">@mixin error($borderWidth:2px)&#123;</div><div class=\"line\">    border: $borderWidth solid #f00;</div><div class=\"line\">    color: #f00;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>定义好Mixins之后，在需要的使用的选择器中调用定义好的Mixins。在调用定义好的Mixins时，在SCSS和SASS两种语法中调用方式不一样。</p>\n<p>在SCSS中调用定义好的Mixins，需要使用<code>@include</code>关键词，然后在其后紧跟需要调用的Mixins。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">选择器&#123;</div><div class=\"line\">    @include(Mixins名)；</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在上例的基础上，我们来看如何在需要的地方引用定义好的<code>error</code>Mixins：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">.generic-error &#123;</div><div class=\"line\">    @include error();/*直接调用error Mixins*/</div><div class=\"line\">&#125;</div><div class=\"line\">.login-error &#123;</div><div class=\"line\">    @include error(3px);/*调用error Mixins，并将$borderWidth参数重定义为3px*/</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的代码编译成CSS:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">.generic-error &#123;</div><div class=\"line\">    border:2px solid #f00;</div><div class=\"line\">    color: #f00;</div><div class=\"line\">&#125;</div><div class=\"line\">.login-error &#123;</div><div class=\"line\">    border: 3px solid #f00;</div><div class=\"line\">    color: #f00;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>除了上面一种调用定义好的Mixins之外，在老的语法中还支持另一种调用Mixins的方法。就是使用<code>+</code>，后面紧跟定义好的Mixins名：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">选择器&#123;</div><div class=\"line\">  +Mixins名</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>回到上面的实例中，我们来演示一下如何调用：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">.generic-error</div><div class=\"line\">    +error()</div><div class=\"line\">.login-error</div><div class=\"line\">    +error(3px)</div></pre></td></tr></table></figure>\n<p>此时编译出的CSS如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">.generic-error &#123;</div><div class=\"line\">    border:2px solid #f00;</div><div class=\"line\">    color: #f00;</div><div class=\"line\">&#125;</div><div class=\"line\">.login-error &#123;</div><div class=\"line\">    border: 3px solid #f00;</div><div class=\"line\">    color: #f00;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"选择器继承（Selector-Inheritance）\"><a href=\"#选择器继承（Selector-Inheritance）\" class=\"headerlink\" title=\"选择器继承（Selector Inheritance）\"></a>选择器继承（<code>Selector Inheritance</code>）</h3><p>在CSS中的属性继承应该很熟悉。平时在写CSS样式也常碰到多个元素应用相同的样式，我们在CSS中常把具有相同样式的选择器并列写在一起：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">.error,</div><div class=\"line\">.badError &#123;</div><div class=\"line\">  border: 1px #f00;</div><div class=\"line\">  background: #fdd;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.error.intrusion,</div><div class=\"line\">.badError.intrusion &#123;</div><div class=\"line\">  font-size: 1.3em;</div><div class=\"line\">  font-weight: bold;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.badError &#123;</div><div class=\"line\">  border-width: 3px;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>但往往需给单独的元素添加另外的样式，这个时候我们就需要把其中选择器单独出来写样式，如此一来我们维护样式就相当的麻烦。为了应对这个问题，SASS可以从一个选择器继承另一个选择器下的所有样式。</p>\n<p>在SASS的继承是把一个选择器的所有样式继承到另一个选择器上，在继承另一个选择器的样式时需要使用<code>@extend</code>开始，后面紧跟被继承的选择器：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">选择器 &#123;</div><div class=\"line\">    @extend 定义的类</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*定义一个类*/</div><div class=\"line\">.block &#123;</div><div class=\"line\">    margin: 10px 5px;</div><div class=\"line\">    padding:2px;</div><div class=\"line\">&#125;</div><div class=\"line\">p &#123;</div><div class=\"line\">    @extend .block;/*继承.block选择器下所有样式*/</div><div class=\"line\">    border: 1px solid #eee;</div><div class=\"line\">&#125;</div><div class=\"line\">ul,ol &#123;</div><div class=\"line\">    @extend .block;/*继承.block选择器下所有样式*/</div><div class=\"line\">    color:#333;</div><div class=\"line\">    text-transform: uppercase;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的SCSS代码将编译出CSS：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">.block,</div><div class=\"line\">p,</div><div class=\"line\">ul,</div><div class=\"line\">ol &#123;</div><div class=\"line\">    margin: 10px 5px;</div><div class=\"line\">    padding: 2px;</div><div class=\"line\">&#125;</div><div class=\"line\">p &#123;</div><div class=\"line\">    border: 1px solid #eee;</div><div class=\"line\">&#125;</div><div class=\"line\">ul,</div><div class=\"line\">ol &#123;</div><div class=\"line\">    color: #333;</div><div class=\"line\">    text-transform: uppercase;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>正如上面所看到的，上面的代码<code>.block</code>的样式将会被插入到相应的你要继承的选择器中，但需要注意的是优先级的问题。</p>\n<p>但这种做法有时候会生成一些没必要的代码，比如说，仅有部分样式相同，但并不想独自创建一个类名，以免增生无用之代码，这个时候可以将类<code>.</code>换成<code>%</code>，在上例的基础上做以调整：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">%block &#123;</div><div class=\"line\">    margin: 10px 5px;</div><div class=\"line\">    padding: 2px;</div><div class=\"line\">&#125;</div><div class=\"line\">p &#123;</div><div class=\"line\">    @extend %block;</div><div class=\"line\">    border: 1px solid #eee;</div><div class=\"line\">&#125;</div><div class=\"line\">ul,ol &#123;</div><div class=\"line\">    @extend %block;</div><div class=\"line\">    color: #333;</div><div class=\"line\">    text-transfomr:uppercase;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>此时编译出来的CSS如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">p, ul, ol &#123;</div><div class=\"line\">  margin: 10px 5px;</div><div class=\"line\">  padding: 2px; &#125;</div><div class=\"line\"></div><div class=\"line\">p &#123;</div><div class=\"line\">  border: 1px solid #eee; &#125;</div><div class=\"line\"></div><div class=\"line\">ul, ol &#123;</div><div class=\"line\">  color: #333;</div><div class=\"line\">  text-transfomr: uppercase; &#125;</div></pre></td></tr></table></figure>\n<p>相比这下，使用<code>%</code>代替<code>.</code>定义公用样式，再通过<code>@extend</code>调用，编译出来的CSS要干净很多。</p>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>在此文中，主要介绍了SASS的两种语法的规则以及与CSS语法规则的对比。同时分别介绍了SASS中的四个基本特性：<strong>变量</strong>、<strong>嵌套</strong>、<strong>Mixins</strong>和<strong>继承</strong>的基本使用规则。</p>\n<p>通过了解SASS的一基本语法和其特性，我们就可以继续深入SASS的下一层次学习。最后希望这篇文章能帮助大家更好的了解SASS的一些基础知识，并且在此基础上能进一步的往下深入。</p>\n<p>著作权归作者所有。</p>\n<p>商业转载请联系作者获得授权,非商业转载请注明出处。</p>\n<p>原文:</p>\n<p><a href=\"http://www.w3cplus.com/preprocessor/sass-basic-syntax-and-features.html\" target=\"_blank\" rel=\"external\">http://www.w3cplus.com/preprocessor/sass-basic-syntax-and-features.html</a></p>\n<p> ©</p>\n<p>w3cplus.com</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"SASS基础教程——SASS基本语法与特性\"><a href=\"#SASS基础教程——SASS基本语法与特性\" class=\"headerlink\" title=\"SASS基础教程——SASS基本语法与特性\"></a>SASS基础教程——SASS基本语法与特性</h1><p>前一段时间，一直在聊SASS的环境、安装、调试以及转译等相关问题。但一直未真正的切入SASS是如何使用的。我在想，更多的同学其关注点还是如何使用SASS？如何在项目中运用SASS？那么从这篇文章开始，我们一起来走进SASS。</p>\n<p>当你想真正走入SASS的时候，个人建议您能按照前面几篇文章，在你的电脑中构建好SASS的环境，包括如何安装环境、安装SASS、调试SASS以及编译SASS。或许正因为前期有这么多事情要做，很多同学不敢轻意的踏入，其实没有大家想得那么复杂，不管是在Window下还是在Mac OS X下，这些都是非常简单的。如果你感兴趣，不仿在正式阅读下面的内容之前，先根据下面几篇文章完成一些很有必要的工作：</p>\n<p>做为一名页面仔来说，对于CSS并不会感到陌生。每天的工作都在为他打交道，或者说很多时候都在做一些复制粘贴性的工作。比如说，文字的排版，颜色的设置，边框设置，元素宽度调整，布局与网格制作等等。这些工作也让很多CSSER变得对自己从事的工作变得机械化，变得无趣，也失去了当初的激情。不知道大家是否有想过，通过另外一种方式来能完成我们的工作，让我们不在是一个复制代码的码农，让我们的工作不在机械，让我们的工作不在无趣。</p>\n<p>在这种环境之下，我想使用SASS来改变我的以前的工作方式，让SASS帮我完成以前依靠复制和粘贴的工作，也让SASS来帮我完成一些更具有意义的工作。</p>\n<h2 id=\"SASS优点\"><a href=\"#SASS优点\" class=\"headerlink\" title=\"SASS优点\"></a>SASS优点</h2><p>要了SASS，我们先从他的优点说起。SASS是一种基于CSS的预处理语言，在CSS的基础上将代码抽象各简单化。SASS让你写CSS时提供更多的自由，它像一个篇程语言一样，可以给你的样式定义变量，嵌套等功能。更强大的是可以让你的CSS具有逻辑功能。类似于其他程序语言中的条件判断、循环等。</p>\n<p>举个栗子，或许大家更能理解。SASS可以将<code>Hex</code>,<code>rgb</code>,<code>rgba</code>，<code>hsl</code>和<code>hsla</code>颜色设置为变量，并在整个项目中重复使用他们。复杂一点的，你可以通过SASS的<code>mixins</code>生成一个网格的布局功能，然后在对应的类名通过<code>include</code>来调用，生成所需要的网格布局。另外还可以通过<code>extend</code>来调用你的前面生成的类名。要知道，所有这些都是与函数编程语言很类似。主要目的就是<strong>让你写CSS时不在重复</strong>。</p>\n<p>综合上面所述，SASS优点可以简单的规纳为以下几点：</p>\n<ul>\n<li>增加了一些编程特性</li>\n<li>简少CSS代码的重复性与代码的冗余</li>\n<li>维护方便</li>\n<li>适应性更强，可读性更强</li>\n</ul>\n<h2 id=\"SASS语法\"><a href=\"#SASS语法\" class=\"headerlink\" title=\"SASS语法\"></a>SASS语法</h2><p>SASS到目前为止有两种语法规则。最新的语法称为“SCSS”，增强了对CSS3语法的支持。这意味着每个CSS3的语法也适用于SCSS。SCSS文件有自己的扩展名<code>.scss</code>。</p>\n<p>第二种语为称为SASS的老语法，也称为<a href=\"http://sass-lang.com/docs/yardoc/file.INDENTED_SYNTAX.html\" target=\"_blank\" rel=\"external\">缩进语法</a>。受<a href=\"http://ru.wikipedia.org/wiki/Haml\" target=\"_blank\" rel=\"external\">HAML</a>语法的影响，这个语法主要用来给那些追求CSS简洁的人使用。他不是使用大括号和分号，而是使用缩进来指定块。文件使用扩展名<code>.sass</code>。</p>\n<p>简单的理解，SASS分为两种语法，一种是<strong>SCSS</strong>，另一种就是<strong>SASS</strong>。到目前为止，我们所说的SASS其实就是其新语法，也就是——<strong>SCSS</strong>，只不过大家都还是习惯性的称之为SASS。这一点大家需要注意。</p>\n<p>这个时候，你肯定又会觉得很蛋疼，不就是一门语言吗？还搞出这么多个花样，还分什么<code>.sass</code>(SASS)和<code>.scss</code>(SCSS)。难道就不能只有一种吗？其实是可以的，如果你不想过多的去了解，那么你只需要记住SASS的新语法，也就是——<strong>SCSS</strong>。特别是对于新手，你只要知道SCSS的语法规则就OK了。</p>\n<p>但话说回来，如果你想了解SCSS的来龙去脉，你就一定会知道SASS，也就会碰到上面所说的，两种语法。那么在这些，我们顺便来看看SCSS和SASS语法规则上有何不同。</p>\n<h3 id=\"SCSS语法\"><a href=\"#SCSS语法\" class=\"headerlink\" title=\"SCSS语法\"></a>SCSS语法</h3><p>SCSS语法规则和CSS的语法规则可以说是完全一样，由选择器、属性和属性三部分组成，并且和大括号<code>{}</code>与分号<code>;</code>配合在一起使用。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">选择器&#123;</div><div class=\"line\">    属性：属性值；</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>例如有一段CSS代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">.container &#123;</div><div class=\"line\">    width: 960px;</div><div class=\"line\">    margin: 0 auto;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>那么在SCSS中，我们使用如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">.container &#123;</div><div class=\"line\">    width: 960px;</div><div class=\"line\">    margin: 0 auto;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>可以说SCSS和CSS的语法规则是一样的，这也是众多前端人员习喜欢使用SCSS的原因，因为他太像CSS了。和平时使用CSS的习惯基本上一致，无须为了使用SCSS而改变以前的书写代码习惯。</p>\n<h3 id=\"SASS语法-1\"><a href=\"#SASS语法-1\" class=\"headerlink\" title=\"SASS语法\"></a>SASS语法</h3><p>SASS语法也称之为SASS的缩进语法，其目的是担供一个更简洁的语法。对于一些人来说，更多的是基于于CSS的美学吸引力，用SASS来代替SCSS语法。</p>\n<p>SASS语法和CSS语法不一样，他不是使用大括号<code>{}</code>和分号<code>;</code>来分隔块的样式，它使用的是类似于<a href=\"http://haml.info/\" target=\"_blank\" rel=\"external\">HAML</a>语法，使用缩进和换行来分块，而不是使用分号来分隔语句。这通常会省去大量的篇幅，也缩小了文件大小。</p>\n<p>每个在SASS中语句，属性声明和选择器必须放在自己的线上。换句话说，选择器和样式的声明不用大括号<code>{}</code>区分，但必须分行书写。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">选择器</div><div class=\"line\">    属性：属性值</div></pre></td></tr></table></figure>\n<p>同样的，我们有一段CSS代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">.container &#123;</div><div class=\"line\">    width: 960px;</div><div class=\"line\">    margin: 0 auto;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>其对应的SASS代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">.container</div><div class=\"line\">    width: 960px</div><div class=\"line\">    margin: 0 auto</div></pre></td></tr></table></figure>\n<p>在SASS语法中，有多个选择器时，每个选择器必须在一个行，而且用逗号<code>,</code>分隔。简单点说，一个选择器占一行，而且相邻两个选择器之间使用<code>,</code>分开：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">.user #userTab,</div><div class=\"line\">.posts #postTab</div><div class=\"line\">    width: 100px</div><div class=\"line\">    height:30px</div></pre></td></tr></table></figure>\n<p>我们简单来看一个SCSS、SASS和CSS三者之间语法的对比示例：</p>\n<h5 id=\"SCSS\"><a href=\"#SCSS\" class=\"headerlink\" title=\"SCSS\"></a>SCSS</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">$blue:#3bbfce;</div><div class=\"line\">$margin:16px;</div><div class=\"line\">.container&#123;</div><div class=\"line\">    border-color:$blue;</div><div class=\"line\">    color:darken($blue,9%);</div><div class=\"line\">&#125;</div><div class=\"line\">.border &#123;</div><div class=\"line\">    padding: $margin / 2;</div><div class=\"line\">    margin: $margin / 2;</div><div class=\"line\">    border-color: $blue;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"SASS\"><a href=\"#SASS\" class=\"headerlink\" title=\"SASS\"></a>SASS</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">$blue:#3bbfce</div><div class=\"line\">$margin: 16px</div><div class=\"line\">.container</div><div class=\"line\">    border-color:$blue</div><div class=\"line\">    color:darken($blue,9%)</div><div class=\"line\"></div><div class=\"line\">.border</div><div class=\"line\">    padding: $margin / 2</div><div class=\"line\">    margin: $margin / 2</div><div class=\"line\">    border-color: $blue</div></pre></td></tr></table></figure>\n<p>编译出来的CSS</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">.container &#123;</div><div class=\"line\">    border-color: #3bbfce;</div><div class=\"line\">    color: #2b9eab;</div><div class=\"line\">&#125;</div><div class=\"line\">.border &#123;</div><div class=\"line\">    padding: 8px;</div><div class=\"line\">    margin: 8px;</div><div class=\"line\">    border-color: #3bbfce;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>就我个人而言，我推荐使用SCSS，因为它似乎更具可读性。从外表看，SCSS和CSS几乎是一样的。</p>\n<h2 id=\"SASS特征\"><a href=\"#SASS特征\" class=\"headerlink\" title=\"SASS特征\"></a>SASS特征</h2><p>仅SCSS的语法外表看，和CSS可以说是基本一致。但事实并不如此，SASS有几个基本特征，那是CSS没有的。也就是说SASS有几大特征是与生俱有的，这几大特征就是：</p>\n<ul>\n<li>变量(<strong>Variables</strong>)：用来定义变量</li>\n<li>嵌套(<strong>Nesting</strong>)：样式和属性的嵌套</li>\n<li><strong>Mixins</strong>：抽取样式定义为模块</li>\n<li>选择器继承（<strong>Selector Inheritance</strong>）：继承选择样式</li>\n</ul>\n<p>接下来，我们分别来了解SASS这四个基本特性。这几个基本特性就类似于CSS中的一些基本功能，只有掌握了这几个特性，才能更好的理解和掌握SASS。</p>\n<h3 id=\"变量（Variables）\"><a href=\"#变量（Variables）\" class=\"headerlink\" title=\"变量（Variables）\"></a>变量（<code>Variables</code>）</h3><p>对于变量来说，应该是开发人员最好朋友之一。在SASS中你也可以声明变量，并在整个样式表中使用。SASS支持任何变量（例如：颜色、数值、文本等）。然后你可以在任意地方引用变量。</p>\n<p>在SASS中定义的变量，除了可以在样式中直接引用之外，还可以对变量进行一些基本的数学运算，而且还可以在一些<a href=\"http://sass-lang.com/docs/yardoc/Sass/Script/Functions.html\" target=\"_blank\" rel=\"external\">有用函数</a>中引用。</p>\n<p>SASS声明变量必须用<code>$</code>开头，后面紧变量名和变量值，而且变量名和变量值之间需要使用分号<code>:</code>隔开。就像CSS属性设置一样：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$变量名:变量值;</div></pre></td></tr></table></figure>\n<p>在SASS和SCSS中定义变量方法是一样。我们来举个例子来看：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">|------------SCSS--------------|----------------SASS----------------|</div><div class=\"line\">/*声明变量*/                    |  /*声明变明*/</div><div class=\"line\">$color: #333;                  |  $color: #333</div><div class=\"line\">$bgcolor:#f36;                 |  $bgcolor:#f36</div><div class=\"line\">                               |</div><div class=\"line\">/*引用变量*/                    |  /*引用变量*/</div><div class=\"line\">body &#123;                         |  body</div><div class=\"line\">    color: $color;             |     color:$color</div><div class=\"line\">    background-color: #f36;    |     background-color:$bgcolor</div><div class=\"line\">&#125;                              |</div></pre></td></tr></table></figure>\n<p>编译出来的CSS如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">body &#123;</div><div class=\"line\">    color: #333;</div><div class=\"line\">    background-color:#f36;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>从上面的代码中我们可以看出， SASS中的变量是值级别的重复使用，可以将相同的值定义成变量统一管理起来。</p>\n<p>SASS中变量的特性适用于定义主题（也就是我们常说的换肤），我们可以将背景颜色、字体颜色、边框属性等常规样式统一定义，这样不同的主题只需要定义不同的变量文件就可以。</p>\n<h3 id=\"嵌套-Nesting\"><a href=\"#嵌套-Nesting\" class=\"headerlink\" title=\"嵌套(Nesting)\"></a>嵌套(<code>Nesting</code>)</h3><p>SASS中的嵌套有两种，一种是选择器的嵌套，另外一种是样式的嵌套。然而这两种嵌套的目的都是一样的，减少代码量，增强代码的可读性。</p>\n<h4 id=\"选择器的嵌套\"><a href=\"#选择器的嵌套\" class=\"headerlink\" title=\"选择器的嵌套\"></a>选择器的嵌套</h4><p>SASS中选择器的嵌套指的是在一个选择器中嵌套另一个选择器来实现继承。比如说，我们在CSS中多个元素有一个相同的父元素，那么写样式会变得很乏味，我们需要一遍一遍的在每个元素前写这个父元素，除百给特定的元素添加类名<code>class</code>或者<code>ID</code>。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">section &#123;</div><div class=\"line\">    margin: 10px;</div><div class=\"line\">&#125;</div><div class=\"line\">section nav &#123;</div><div class=\"line\">    height: 25px;</div><div class=\"line\">&#125;</div><div class=\"line\">section nav a &#123;</div><div class=\"line\">    color: #0982c1;</div><div class=\"line\">&#125;</div><div class=\"line\">section nav a:hover &#123;</div><div class=\"line\">    text-decoration: underline;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>如果使用SASS中的选择器嵌套特性，我们可以在父元素的大括号<code>{}</code>里写这些元素。同时可以使用<code>&amp;</code>符号来引用元素的父选择器。我们来看看SASS中如何将上面的CSS代码转换成SASS代码：</p>\n<h5 id=\"SCSS-1\"><a href=\"#SCSS-1\" class=\"headerlink\" title=\"SCSS\"></a>SCSS</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">section &#123;</div><div class=\"line\">    margin: 10px;</div><div class=\"line\">    nav &#123;</div><div class=\"line\">        height: 25px;</div><div class=\"line\">        a &#123;</div><div class=\"line\">            color: #0982c1;</div><div class=\"line\">            &amp;:hover&#123;</div><div class=\"line\">                text-decoration: underline;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"SASS-1\"><a href=\"#SASS-1\" class=\"headerlink\" title=\"SASS\"></a>SASS</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">section</div><div class=\"line\">    margin: 10px</div><div class=\"line\">    nav</div><div class=\"line\">        height: 25px</div><div class=\"line\">        a</div><div class=\"line\">            color: #0982c1</div><div class=\"line\">            &amp;:hover</div><div class=\"line\">                text-decoration: underline</div></pre></td></tr></table></figure>\n<h4 id=\"属性嵌套\"><a href=\"#属性嵌套\" class=\"headerlink\" title=\"属性嵌套\"></a>属性嵌套</h4><p>在很多时候，我们写CSS常会碰到属性的缩写，比如：<code>font</code>、<code>background</code>、<code>border</code>、<code>margin</code>、<code>padding</code>等，在SASS中我们可以使用属性嵌套。让我们的代码变得简单，明了。</p>\n<p>来简单的看一个实例，他会更具有说明力，大家也会更易于明白什么是SASS中的属性嵌套。下面这样的场景，我想大家都常看到：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">li &#123;</div><div class=\"line\">    font-style: italic;</div><div class=\"line\">    font-family: serif;</div><div class=\"line\">    font-weight: bold;</div><div class=\"line\">    font-size:1.2em;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在SASS中，我们可以使用属性嵌套写成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">|------------SCSS--------------|--------------SASS----------------|</div><div class=\"line\">li &#123;                           |  li</div><div class=\"line\">    font: &#123;                    |     font:</div><div class=\"line\">        style:italic;          |        style: italic</div><div class=\"line\">        family:serif;          |        family: serif</div><div class=\"line\">        weight:bold;           |        weight: bold</div><div class=\"line\">        size:1.2em;            |        size:1.2em</div><div class=\"line\">    &#125;                          |</div><div class=\"line\">&#125;                              |</div></pre></td></tr></table></figure>\n<h3 id=\"Mixins\"><a href=\"#Mixins\" class=\"headerlink\" title=\"Mixins\"></a>Mixins</h3><p>Mixins是SASS中最强大的特性之一，简单点来说，Mixins可以将一部分样式抽出，作为单独定义的模块，被很多选择器重复使用。平时在写样式时肯定碰到过，某段CSS样式经常要用到多个元素中，这样就需要重复的写多次。在SASS中，可以为这些公用的CSS样式定义一个Mixin，然后在CSS需要使用这些样式的地方直接调用定义好的Mixin。这是一个非常有用的特性，Mixins被作一个公认的选择器，还可以在Mixins中定义变量或者默认参数。</p>\n<p>SASS中声明Mixins需要使用<code>@mixin</code>，在后面紧跟Mixins的名：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">@mixin Mixins名 &#123;</div><div class=\"line\">    /*样式规则*/</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>同时在Mixins中，还可以定义参数，同时可以给这个参数设置一个默认值，但参数名需要使用<code>$</code>符号开始，而且和参数值之间需要使用<code>:</code>分开：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">@mixin Mixins名（$参数名：参数值）&#123;</div><div class=\"line\">    /*样式规则*/</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>来看一个简单的实例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">@mixin error($borderWidth:2px)&#123;</div><div class=\"line\">    border: $borderWidth solid #f00;</div><div class=\"line\">    color: #f00;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>定义好Mixins之后，在需要的使用的选择器中调用定义好的Mixins。在调用定义好的Mixins时，在SCSS和SASS两种语法中调用方式不一样。</p>\n<p>在SCSS中调用定义好的Mixins，需要使用<code>@include</code>关键词，然后在其后紧跟需要调用的Mixins。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">选择器&#123;</div><div class=\"line\">    @include(Mixins名)；</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在上例的基础上，我们来看如何在需要的地方引用定义好的<code>error</code>Mixins：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">.generic-error &#123;</div><div class=\"line\">    @include error();/*直接调用error Mixins*/</div><div class=\"line\">&#125;</div><div class=\"line\">.login-error &#123;</div><div class=\"line\">    @include error(3px);/*调用error Mixins，并将$borderWidth参数重定义为3px*/</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的代码编译成CSS:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">.generic-error &#123;</div><div class=\"line\">    border:2px solid #f00;</div><div class=\"line\">    color: #f00;</div><div class=\"line\">&#125;</div><div class=\"line\">.login-error &#123;</div><div class=\"line\">    border: 3px solid #f00;</div><div class=\"line\">    color: #f00;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>除了上面一种调用定义好的Mixins之外，在老的语法中还支持另一种调用Mixins的方法。就是使用<code>+</code>，后面紧跟定义好的Mixins名：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">选择器&#123;</div><div class=\"line\">  +Mixins名</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>回到上面的实例中，我们来演示一下如何调用：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">.generic-error</div><div class=\"line\">    +error()</div><div class=\"line\">.login-error</div><div class=\"line\">    +error(3px)</div></pre></td></tr></table></figure>\n<p>此时编译出的CSS如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">.generic-error &#123;</div><div class=\"line\">    border:2px solid #f00;</div><div class=\"line\">    color: #f00;</div><div class=\"line\">&#125;</div><div class=\"line\">.login-error &#123;</div><div class=\"line\">    border: 3px solid #f00;</div><div class=\"line\">    color: #f00;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"选择器继承（Selector-Inheritance）\"><a href=\"#选择器继承（Selector-Inheritance）\" class=\"headerlink\" title=\"选择器继承（Selector Inheritance）\"></a>选择器继承（<code>Selector Inheritance</code>）</h3><p>在CSS中的属性继承应该很熟悉。平时在写CSS样式也常碰到多个元素应用相同的样式，我们在CSS中常把具有相同样式的选择器并列写在一起：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">.error,</div><div class=\"line\">.badError &#123;</div><div class=\"line\">  border: 1px #f00;</div><div class=\"line\">  background: #fdd;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.error.intrusion,</div><div class=\"line\">.badError.intrusion &#123;</div><div class=\"line\">  font-size: 1.3em;</div><div class=\"line\">  font-weight: bold;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.badError &#123;</div><div class=\"line\">  border-width: 3px;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>但往往需给单独的元素添加另外的样式，这个时候我们就需要把其中选择器单独出来写样式，如此一来我们维护样式就相当的麻烦。为了应对这个问题，SASS可以从一个选择器继承另一个选择器下的所有样式。</p>\n<p>在SASS的继承是把一个选择器的所有样式继承到另一个选择器上，在继承另一个选择器的样式时需要使用<code>@extend</code>开始，后面紧跟被继承的选择器：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">选择器 &#123;</div><div class=\"line\">    @extend 定义的类</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">/*定义一个类*/</div><div class=\"line\">.block &#123;</div><div class=\"line\">    margin: 10px 5px;</div><div class=\"line\">    padding:2px;</div><div class=\"line\">&#125;</div><div class=\"line\">p &#123;</div><div class=\"line\">    @extend .block;/*继承.block选择器下所有样式*/</div><div class=\"line\">    border: 1px solid #eee;</div><div class=\"line\">&#125;</div><div class=\"line\">ul,ol &#123;</div><div class=\"line\">    @extend .block;/*继承.block选择器下所有样式*/</div><div class=\"line\">    color:#333;</div><div class=\"line\">    text-transform: uppercase;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>上面的SCSS代码将编译出CSS：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">.block,</div><div class=\"line\">p,</div><div class=\"line\">ul,</div><div class=\"line\">ol &#123;</div><div class=\"line\">    margin: 10px 5px;</div><div class=\"line\">    padding: 2px;</div><div class=\"line\">&#125;</div><div class=\"line\">p &#123;</div><div class=\"line\">    border: 1px solid #eee;</div><div class=\"line\">&#125;</div><div class=\"line\">ul,</div><div class=\"line\">ol &#123;</div><div class=\"line\">    color: #333;</div><div class=\"line\">    text-transform: uppercase;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>正如上面所看到的，上面的代码<code>.block</code>的样式将会被插入到相应的你要继承的选择器中，但需要注意的是优先级的问题。</p>\n<p>但这种做法有时候会生成一些没必要的代码，比如说，仅有部分样式相同，但并不想独自创建一个类名，以免增生无用之代码，这个时候可以将类<code>.</code>换成<code>%</code>，在上例的基础上做以调整：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">%block &#123;</div><div class=\"line\">    margin: 10px 5px;</div><div class=\"line\">    padding: 2px;</div><div class=\"line\">&#125;</div><div class=\"line\">p &#123;</div><div class=\"line\">    @extend %block;</div><div class=\"line\">    border: 1px solid #eee;</div><div class=\"line\">&#125;</div><div class=\"line\">ul,ol &#123;</div><div class=\"line\">    @extend %block;</div><div class=\"line\">    color: #333;</div><div class=\"line\">    text-transfomr:uppercase;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>此时编译出来的CSS如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">p, ul, ol &#123;</div><div class=\"line\">  margin: 10px 5px;</div><div class=\"line\">  padding: 2px; &#125;</div><div class=\"line\"></div><div class=\"line\">p &#123;</div><div class=\"line\">  border: 1px solid #eee; &#125;</div><div class=\"line\"></div><div class=\"line\">ul, ol &#123;</div><div class=\"line\">  color: #333;</div><div class=\"line\">  text-transfomr: uppercase; &#125;</div></pre></td></tr></table></figure>\n<p>相比这下，使用<code>%</code>代替<code>.</code>定义公用样式，再通过<code>@extend</code>调用，编译出来的CSS要干净很多。</p>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>在此文中，主要介绍了SASS的两种语法的规则以及与CSS语法规则的对比。同时分别介绍了SASS中的四个基本特性：<strong>变量</strong>、<strong>嵌套</strong>、<strong>Mixins</strong>和<strong>继承</strong>的基本使用规则。</p>\n<p>通过了解SASS的一基本语法和其特性，我们就可以继续深入SASS的下一层次学习。最后希望这篇文章能帮助大家更好的了解SASS的一些基础知识，并且在此基础上能进一步的往下深入。</p>\n<p>著作权归作者所有。</p>\n<p>商业转载请联系作者获得授权,非商业转载请注明出处。</p>\n<p>原文:</p>\n<p><a href=\"http://www.w3cplus.com/preprocessor/sass-basic-syntax-and-features.html\" target=\"_blank\" rel=\"external\">http://www.w3cplus.com/preprocessor/sass-basic-syntax-and-features.html</a></p>\n<p> ©</p>\n<p>w3cplus.com</p>\n"},{"title":"Tomcat 7","_content":"1、内存优化:\n\n优化内存，主要是在bin/catalina.bat或bin/catalina.sh 配置文件中进行。linux上，在catalina.sh中添加：\n\n```\nJAVA_OPTS=\"-server -Xms1G -Xmx2G -Xss256K -Djava.awt.headless=true -Dfile.encoding=utf-8 -XX:MaxPermSize=256m -XX:PermSize=128M -XX:MaxPermSize=256M\"\n```\n\n其中：\n\n```\n• -server：启用jdk的server版本。\n• -Xms：虚拟机初始化时的最小堆内存。\n• -Xmx：虚拟机可使用的最大堆内存。 #-Xms与-Xmx设成一样的值，避免JVM因为频繁的GC导致性能大起大落\n• -XX:PermSize：设置非堆内存初始值,默认是物理内存的1/64。\n• -XX:MaxNewSize：新生代占整个堆内存的最大值。\n• -XX:MaxPermSize：Perm（俗称方法区）占整个堆内存的最大值，也称内存最大永久保留区域。\n```\n\n1）错误提示：java.lang.OutOfMemoryError:Java heap space\n\nTomcat默认可以使用的内存为128MB，在较大型的应用项目中，这点内存是不够的，有可能导致系统无法运行。常见的问题是报Tomcat内存溢出错误，Outof Memory(系统内存不足)的异常，从而导致客户端显示500错误，一般调整Tomcat的-Xms和-Xmx即可解决问题，通常将-Xms和-Xmx设置成一样，堆的最大值设置为物理可用内存的最大值的80%。\n\n```\nset JAVA_OPTS=-Xms512m-Xmx512m\n```\n\n2）错误提示：java.lang.OutOfMemoryError: PermGenspace\n\nPermGenspace的全称是Permanent Generationspace,是指内存的永久保存区域，这块内存主要是被JVM存放Class和Meta信息的,Class在被Loader时就会被放到PermGenspace中，它和存放类实例(Instance)的Heap区域不同,GC(Garbage Collection)不会在主程序运行期对PermGenspace进行清理，所以如果你的应用中有很CLASS的话,就很可能出现PermGen space错误，这种错误常见在web服务器对JSP进行precompile的时候。如果你的WEB APP下都用了大量的第三方jar, 其大小超过了jvm默认的大小(4M)那么就会产生此错误信息了。解决方法：\n\n```\nsetJAVA_OPTS=-XX:PermSize=128M\n```\n\n3）在使用-Xms和-Xmx调整tomcat的堆大小时，还需要考虑垃圾回收机制。如果系统花费很多的时间收集垃圾，请减小堆大小。一次完全的垃圾收集应该不超过3-5 秒。如果垃圾收集成为瓶颈，那么需要指定代的大小，检查垃圾收集的详细输出，研究垃圾收集参数对性能的影响。一般说来，你应该使用物理内存的 80% 作为堆大小。当增加处理器时，记得增加内存，因为分配可以并行进行，而垃圾收集不是并行的。\n\n2、连接数优化：\n\n\\#优化连接数，主要是在conf/server.xml配置文件中进行修改。\n\n**2.1、优化线程数**\n\n找到Connectorport=\"8080\" protocol=\"HTTP/1.1\"，增加maxThreads和acceptCount属性（使acceptCount大于等于maxThreads），如下：\n\n```\n<Connectorport=\"8080\" protocol=\"HTTP/1.1\"connectionTimeout=\"20000\" redirectPort=\"8443\"acceptCount=\"500\" maxThreads=\"400\" />\n```\n\n其中：\n\n```\n• maxThreads：tomcat可用于请求处理的最大线程数，默认是200\n• minSpareThreads：tomcat初始线程数，即最小空闲线程数\n• maxSpareThreads：tomcat最大空闲线程数，超过的会被关闭\n• acceptCount：当所有可以使用的处理请求的线程数都被使用时，可以放到处理队列中的请求数，超过这个数的请求将不予处理.默认100\n```\n\n**2.2、使用线程池**\n\n在server.xml中增加executor节点，然后配置connector的executor属性，如下：\n\n```\n<Executorname=\"tomcatThreadPool\" namePrefix=\"req-exec-\"maxThreads=\"1000\" minSpareThreads=\"50\"maxIdleTime=\"60000\"/>\n<Connectorport=\"8080\" protocol=\"HTTP/1.1\"executor=\"tomcatThreadPool\"/>\n```\n\n其中：\n\n````\n• namePrefix：线程池中线程的命名前缀\n• maxThreads：线程池的最大线程数\n• minSpareThreads：线程池的最小空闲线程数\n• maxIdleTime：超过最小空闲线程数时，多的线程会等待这个时间长度，然后关闭\n• threadPriority：线程优先级\n````\n\n注：当tomcat并发用户量大的时候，单个jvm进程确实可能打开过多的文件句柄，这时会报java.net.SocketException:Too many open files错误。可使用下面步骤检查：\\\n\n```\n• ps -ef |grep tomcat 查看tomcat的进程ID，记录ID号，假设进程ID为10001\n• lsof -p 10001|wc -l 查看当前进程id为10001的 文件操作数\n• 使用命令：ulimit -a 查看每个用户允许打开的最大文件数\n```\n\n3、Tomcat Connector三种运行模式（BIO, NIO, APR）\n\n1）BIO：一个线程处理一个请求。缺点：并发量高时，线程数较多，浪费资源。Tomcat7或以下在[Linux系统](http://www.linuxprobe.com/)中默认使用这种方式。\n\n2）NIO：利用Java的异步IO处理，可以通过少量的线程处理大量的请求。Tomcat8在[Linux系统](http://www.linuxprobe.com/)中默认使用这种方式。Tomcat7必须修改Connector配置来启动（conf/server.xml配置文件）：\n\n```\n<Connectorport=\"8080\"protocol=\"org.apache.coyote.http11.Http11NioProtocol\" connectionTimeout=\"20000\"redirectPort=\"8443\"/>\n```\n\n3）APR(Apache Portable Runtime)：从操作系统层面解决io阻塞问题。Linux如果安装了apr和native，Tomcat直接启动就支持apr。\n\n**3.2、apr模式**\n\n安装apr以及tomcat-native\n\n```\nyum -y install apr apr-devel\n```\n\n进入tomcat/bin目录，比如：\n\n```\ncd /opt/local/tomcat/bin/\ntar xzfv tomcat-native.tar.gz\ncd tomcat-native-1.1.32-src/jni/native\n./configure --with-apr=/usr/bin/apr-1-config\nmake && make install\n```\n\n\\#注意最新版本的tomcat自带tomcat-native.war.gz，不过其版本相对于yum安装的apr过高，configure的时候会报错。\n\n解决：yum remove apr apr-devel –y,卸载yum安装的apr和apr-devel,下载最新版本的apr源码包，编译安装;或者下载低版本的tomcat-native编译安装\n\n安装成功后还需要对tomcat设置环境变量，方法是在catalina.sh文件中增加1行：\n\n```\nCATALINA_OPTS=\"-Djava.library.path=/usr/local/apr/lib\"\n```\n\n\\#apr下载地址：http://apr.apache.org/download.cgi\n\n\\#tomcat-native下载地址：http://tomcat.apache.org/download-native.cgi\n\n修改8080端对应的conf/server.xml\n\nprotocol=\"org.apache.coyote.http11.Http11AprProtocol\"\n\n```\n<Connector executor=\"tomcatThreadPool\"\nport=\"8080\"\nprotocol=\"org.apache.coyote.http11.Http11AprProtocol\"\nconnectionTimeout=\"20000\"\nenableLookups=\"false\"\nredirectPort=\"8443\"\nURIEncoding=\"UTF-8\" />\n```\n\nPS:启动以后查看日志 显示如下表示开启 apr 模式\n\n```\nSep 19, 2016 3:46:21 PM org.apache.coyote.AbstractProtocol start\nINFO: Starting ProtocolHandler [\"http-apr-8081\"]\n```\n","source":"_posts/Tomcat7优化配置.md","raw":"---\ntitle: Tomcat 7\ntags: [linux,Tomcat,java]\ncategories: Tomcat\n---\n1、内存优化:\n\n优化内存，主要是在bin/catalina.bat或bin/catalina.sh 配置文件中进行。linux上，在catalina.sh中添加：\n\n```\nJAVA_OPTS=\"-server -Xms1G -Xmx2G -Xss256K -Djava.awt.headless=true -Dfile.encoding=utf-8 -XX:MaxPermSize=256m -XX:PermSize=128M -XX:MaxPermSize=256M\"\n```\n\n其中：\n\n```\n• -server：启用jdk的server版本。\n• -Xms：虚拟机初始化时的最小堆内存。\n• -Xmx：虚拟机可使用的最大堆内存。 #-Xms与-Xmx设成一样的值，避免JVM因为频繁的GC导致性能大起大落\n• -XX:PermSize：设置非堆内存初始值,默认是物理内存的1/64。\n• -XX:MaxNewSize：新生代占整个堆内存的最大值。\n• -XX:MaxPermSize：Perm（俗称方法区）占整个堆内存的最大值，也称内存最大永久保留区域。\n```\n\n1）错误提示：java.lang.OutOfMemoryError:Java heap space\n\nTomcat默认可以使用的内存为128MB，在较大型的应用项目中，这点内存是不够的，有可能导致系统无法运行。常见的问题是报Tomcat内存溢出错误，Outof Memory(系统内存不足)的异常，从而导致客户端显示500错误，一般调整Tomcat的-Xms和-Xmx即可解决问题，通常将-Xms和-Xmx设置成一样，堆的最大值设置为物理可用内存的最大值的80%。\n\n```\nset JAVA_OPTS=-Xms512m-Xmx512m\n```\n\n2）错误提示：java.lang.OutOfMemoryError: PermGenspace\n\nPermGenspace的全称是Permanent Generationspace,是指内存的永久保存区域，这块内存主要是被JVM存放Class和Meta信息的,Class在被Loader时就会被放到PermGenspace中，它和存放类实例(Instance)的Heap区域不同,GC(Garbage Collection)不会在主程序运行期对PermGenspace进行清理，所以如果你的应用中有很CLASS的话,就很可能出现PermGen space错误，这种错误常见在web服务器对JSP进行precompile的时候。如果你的WEB APP下都用了大量的第三方jar, 其大小超过了jvm默认的大小(4M)那么就会产生此错误信息了。解决方法：\n\n```\nsetJAVA_OPTS=-XX:PermSize=128M\n```\n\n3）在使用-Xms和-Xmx调整tomcat的堆大小时，还需要考虑垃圾回收机制。如果系统花费很多的时间收集垃圾，请减小堆大小。一次完全的垃圾收集应该不超过3-5 秒。如果垃圾收集成为瓶颈，那么需要指定代的大小，检查垃圾收集的详细输出，研究垃圾收集参数对性能的影响。一般说来，你应该使用物理内存的 80% 作为堆大小。当增加处理器时，记得增加内存，因为分配可以并行进行，而垃圾收集不是并行的。\n\n2、连接数优化：\n\n\\#优化连接数，主要是在conf/server.xml配置文件中进行修改。\n\n**2.1、优化线程数**\n\n找到Connectorport=\"8080\" protocol=\"HTTP/1.1\"，增加maxThreads和acceptCount属性（使acceptCount大于等于maxThreads），如下：\n\n```\n<Connectorport=\"8080\" protocol=\"HTTP/1.1\"connectionTimeout=\"20000\" redirectPort=\"8443\"acceptCount=\"500\" maxThreads=\"400\" />\n```\n\n其中：\n\n```\n• maxThreads：tomcat可用于请求处理的最大线程数，默认是200\n• minSpareThreads：tomcat初始线程数，即最小空闲线程数\n• maxSpareThreads：tomcat最大空闲线程数，超过的会被关闭\n• acceptCount：当所有可以使用的处理请求的线程数都被使用时，可以放到处理队列中的请求数，超过这个数的请求将不予处理.默认100\n```\n\n**2.2、使用线程池**\n\n在server.xml中增加executor节点，然后配置connector的executor属性，如下：\n\n```\n<Executorname=\"tomcatThreadPool\" namePrefix=\"req-exec-\"maxThreads=\"1000\" minSpareThreads=\"50\"maxIdleTime=\"60000\"/>\n<Connectorport=\"8080\" protocol=\"HTTP/1.1\"executor=\"tomcatThreadPool\"/>\n```\n\n其中：\n\n````\n• namePrefix：线程池中线程的命名前缀\n• maxThreads：线程池的最大线程数\n• minSpareThreads：线程池的最小空闲线程数\n• maxIdleTime：超过最小空闲线程数时，多的线程会等待这个时间长度，然后关闭\n• threadPriority：线程优先级\n````\n\n注：当tomcat并发用户量大的时候，单个jvm进程确实可能打开过多的文件句柄，这时会报java.net.SocketException:Too many open files错误。可使用下面步骤检查：\\\n\n```\n• ps -ef |grep tomcat 查看tomcat的进程ID，记录ID号，假设进程ID为10001\n• lsof -p 10001|wc -l 查看当前进程id为10001的 文件操作数\n• 使用命令：ulimit -a 查看每个用户允许打开的最大文件数\n```\n\n3、Tomcat Connector三种运行模式（BIO, NIO, APR）\n\n1）BIO：一个线程处理一个请求。缺点：并发量高时，线程数较多，浪费资源。Tomcat7或以下在[Linux系统](http://www.linuxprobe.com/)中默认使用这种方式。\n\n2）NIO：利用Java的异步IO处理，可以通过少量的线程处理大量的请求。Tomcat8在[Linux系统](http://www.linuxprobe.com/)中默认使用这种方式。Tomcat7必须修改Connector配置来启动（conf/server.xml配置文件）：\n\n```\n<Connectorport=\"8080\"protocol=\"org.apache.coyote.http11.Http11NioProtocol\" connectionTimeout=\"20000\"redirectPort=\"8443\"/>\n```\n\n3）APR(Apache Portable Runtime)：从操作系统层面解决io阻塞问题。Linux如果安装了apr和native，Tomcat直接启动就支持apr。\n\n**3.2、apr模式**\n\n安装apr以及tomcat-native\n\n```\nyum -y install apr apr-devel\n```\n\n进入tomcat/bin目录，比如：\n\n```\ncd /opt/local/tomcat/bin/\ntar xzfv tomcat-native.tar.gz\ncd tomcat-native-1.1.32-src/jni/native\n./configure --with-apr=/usr/bin/apr-1-config\nmake && make install\n```\n\n\\#注意最新版本的tomcat自带tomcat-native.war.gz，不过其版本相对于yum安装的apr过高，configure的时候会报错。\n\n解决：yum remove apr apr-devel –y,卸载yum安装的apr和apr-devel,下载最新版本的apr源码包，编译安装;或者下载低版本的tomcat-native编译安装\n\n安装成功后还需要对tomcat设置环境变量，方法是在catalina.sh文件中增加1行：\n\n```\nCATALINA_OPTS=\"-Djava.library.path=/usr/local/apr/lib\"\n```\n\n\\#apr下载地址：http://apr.apache.org/download.cgi\n\n\\#tomcat-native下载地址：http://tomcat.apache.org/download-native.cgi\n\n修改8080端对应的conf/server.xml\n\nprotocol=\"org.apache.coyote.http11.Http11AprProtocol\"\n\n```\n<Connector executor=\"tomcatThreadPool\"\nport=\"8080\"\nprotocol=\"org.apache.coyote.http11.Http11AprProtocol\"\nconnectionTimeout=\"20000\"\nenableLookups=\"false\"\nredirectPort=\"8443\"\nURIEncoding=\"UTF-8\" />\n```\n\nPS:启动以后查看日志 显示如下表示开启 apr 模式\n\n```\nSep 19, 2016 3:46:21 PM org.apache.coyote.AbstractProtocol start\nINFO: Starting ProtocolHandler [\"http-apr-8081\"]\n```\n","slug":"Tomcat7优化配置","published":1,"date":"2017-05-22T05:03:19.688Z","updated":"2017-05-25T01:04:10.535Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmtrm00064wvsqltbgn6v","content":"<p>1、内存优化:</p>\n<p>优化内存，主要是在bin/catalina.bat或bin/catalina.sh 配置文件中进行。linux上，在catalina.sh中添加：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">JAVA_OPTS=&quot;-server -Xms1G -Xmx2G -Xss256K -Djava.awt.headless=true -Dfile.encoding=utf-8 -XX:MaxPermSize=256m -XX:PermSize=128M -XX:MaxPermSize=256M&quot;</div></pre></td></tr></table></figure>\n<p>其中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">• -server：启用jdk的server版本。</div><div class=\"line\">• -Xms：虚拟机初始化时的最小堆内存。</div><div class=\"line\">• -Xmx：虚拟机可使用的最大堆内存。 #-Xms与-Xmx设成一样的值，避免JVM因为频繁的GC导致性能大起大落</div><div class=\"line\">• -XX:PermSize：设置非堆内存初始值,默认是物理内存的1/64。</div><div class=\"line\">• -XX:MaxNewSize：新生代占整个堆内存的最大值。</div><div class=\"line\">• -XX:MaxPermSize：Perm（俗称方法区）占整个堆内存的最大值，也称内存最大永久保留区域。</div></pre></td></tr></table></figure>\n<p>1）错误提示：java.lang.OutOfMemoryError:Java heap space</p>\n<p>Tomcat默认可以使用的内存为128MB，在较大型的应用项目中，这点内存是不够的，有可能导致系统无法运行。常见的问题是报Tomcat内存溢出错误，Outof Memory(系统内存不足)的异常，从而导致客户端显示500错误，一般调整Tomcat的-Xms和-Xmx即可解决问题，通常将-Xms和-Xmx设置成一样，堆的最大值设置为物理可用内存的最大值的80%。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">set JAVA_OPTS=-Xms512m-Xmx512m</div></pre></td></tr></table></figure>\n<p>2）错误提示：java.lang.OutOfMemoryError: PermGenspace</p>\n<p>PermGenspace的全称是Permanent Generationspace,是指内存的永久保存区域，这块内存主要是被JVM存放Class和Meta信息的,Class在被Loader时就会被放到PermGenspace中，它和存放类实例(Instance)的Heap区域不同,GC(Garbage Collection)不会在主程序运行期对PermGenspace进行清理，所以如果你的应用中有很CLASS的话,就很可能出现PermGen space错误，这种错误常见在web服务器对JSP进行precompile的时候。如果你的WEB APP下都用了大量的第三方jar, 其大小超过了jvm默认的大小(4M)那么就会产生此错误信息了。解决方法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">setJAVA_OPTS=-XX:PermSize=128M</div></pre></td></tr></table></figure>\n<p>3）在使用-Xms和-Xmx调整tomcat的堆大小时，还需要考虑垃圾回收机制。如果系统花费很多的时间收集垃圾，请减小堆大小。一次完全的垃圾收集应该不超过3-5 秒。如果垃圾收集成为瓶颈，那么需要指定代的大小，检查垃圾收集的详细输出，研究垃圾收集参数对性能的影响。一般说来，你应该使用物理内存的 80% 作为堆大小。当增加处理器时，记得增加内存，因为分配可以并行进行，而垃圾收集不是并行的。</p>\n<p>2、连接数优化：</p>\n<p>#优化连接数，主要是在conf/server.xml配置文件中进行修改。</p>\n<p><strong>2.1、优化线程数</strong></p>\n<p>找到Connectorport=”8080” protocol=”HTTP/1.1”，增加maxThreads和acceptCount属性（使acceptCount大于等于maxThreads），如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Connectorport=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;connectionTimeout=&quot;20000&quot; redirectPort=&quot;8443&quot;acceptCount=&quot;500&quot; maxThreads=&quot;400&quot; /&gt;</div></pre></td></tr></table></figure>\n<p>其中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">• maxThreads：tomcat可用于请求处理的最大线程数，默认是200</div><div class=\"line\">• minSpareThreads：tomcat初始线程数，即最小空闲线程数</div><div class=\"line\">• maxSpareThreads：tomcat最大空闲线程数，超过的会被关闭</div><div class=\"line\">• acceptCount：当所有可以使用的处理请求的线程数都被使用时，可以放到处理队列中的请求数，超过这个数的请求将不予处理.默认100</div></pre></td></tr></table></figure>\n<p><strong>2.2、使用线程池</strong></p>\n<p>在server.xml中增加executor节点，然后配置connector的executor属性，如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Executorname=&quot;tomcatThreadPool&quot; namePrefix=&quot;req-exec-&quot;maxThreads=&quot;1000&quot; minSpareThreads=&quot;50&quot;maxIdleTime=&quot;60000&quot;/&gt;</div><div class=\"line\">&lt;Connectorport=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;executor=&quot;tomcatThreadPool&quot;/&gt;</div></pre></td></tr></table></figure>\n<p>其中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">• namePrefix：线程池中线程的命名前缀</div><div class=\"line\">• maxThreads：线程池的最大线程数</div><div class=\"line\">• minSpareThreads：线程池的最小空闲线程数</div><div class=\"line\">• maxIdleTime：超过最小空闲线程数时，多的线程会等待这个时间长度，然后关闭</div><div class=\"line\">• threadPriority：线程优先级</div></pre></td></tr></table></figure>\n<p>注：当tomcat并发用户量大的时候，单个jvm进程确实可能打开过多的文件句柄，这时会报java.net.SocketException:Too many open files错误。可使用下面步骤检查：\\</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">• ps -ef |grep tomcat 查看tomcat的进程ID，记录ID号，假设进程ID为10001</div><div class=\"line\">• lsof -p 10001|wc -l 查看当前进程id为10001的 文件操作数</div><div class=\"line\">• 使用命令：ulimit -a 查看每个用户允许打开的最大文件数</div></pre></td></tr></table></figure>\n<p>3、Tomcat Connector三种运行模式（BIO, NIO, APR）</p>\n<p>1）BIO：一个线程处理一个请求。缺点：并发量高时，线程数较多，浪费资源。Tomcat7或以下在<a href=\"http://www.linuxprobe.com/\" target=\"_blank\" rel=\"external\">Linux系统</a>中默认使用这种方式。</p>\n<p>2）NIO：利用Java的异步IO处理，可以通过少量的线程处理大量的请求。Tomcat8在<a href=\"http://www.linuxprobe.com/\" target=\"_blank\" rel=\"external\">Linux系统</a>中默认使用这种方式。Tomcat7必须修改Connector配置来启动（conf/server.xml配置文件）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Connectorport=&quot;8080&quot;protocol=&quot;org.apache.coyote.http11.Http11NioProtocol&quot; connectionTimeout=&quot;20000&quot;redirectPort=&quot;8443&quot;/&gt;</div></pre></td></tr></table></figure>\n<p>3）APR(Apache Portable Runtime)：从操作系统层面解决io阻塞问题。Linux如果安装了apr和native，Tomcat直接启动就支持apr。</p>\n<p><strong>3.2、apr模式</strong></p>\n<p>安装apr以及tomcat-native</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum -y install apr apr-devel</div></pre></td></tr></table></figure>\n<p>进入tomcat/bin目录，比如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /opt/local/tomcat/bin/</div><div class=\"line\">tar xzfv tomcat-native.tar.gz</div><div class=\"line\">cd tomcat-native-1.1.32-src/jni/native</div><div class=\"line\">./configure --with-apr=/usr/bin/apr-1-config</div><div class=\"line\">make &amp;&amp; make install</div></pre></td></tr></table></figure>\n<p>#注意最新版本的tomcat自带tomcat-native.war.gz，不过其版本相对于yum安装的apr过高，configure的时候会报错。</p>\n<p>解决：yum remove apr apr-devel –y,卸载yum安装的apr和apr-devel,下载最新版本的apr源码包，编译安装;或者下载低版本的tomcat-native编译安装</p>\n<p>安装成功后还需要对tomcat设置环境变量，方法是在catalina.sh文件中增加1行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">CATALINA_OPTS=&quot;-Djava.library.path=/usr/local/apr/lib&quot;</div></pre></td></tr></table></figure>\n<p>#apr下载地址：<a href=\"http://apr.apache.org/download.cgi\" target=\"_blank\" rel=\"external\">http://apr.apache.org/download.cgi</a></p>\n<p>#tomcat-native下载地址：<a href=\"http://tomcat.apache.org/download-native.cgi\" target=\"_blank\" rel=\"external\">http://tomcat.apache.org/download-native.cgi</a></p>\n<p>修改8080端对应的conf/server.xml</p>\n<p>protocol=”org.apache.coyote.http11.Http11AprProtocol”</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Connector executor=&quot;tomcatThreadPool&quot;</div><div class=\"line\">port=&quot;8080&quot;</div><div class=\"line\">protocol=&quot;org.apache.coyote.http11.Http11AprProtocol&quot;</div><div class=\"line\">connectionTimeout=&quot;20000&quot;</div><div class=\"line\">enableLookups=&quot;false&quot;</div><div class=\"line\">redirectPort=&quot;8443&quot;</div><div class=\"line\">URIEncoding=&quot;UTF-8&quot; /&gt;</div></pre></td></tr></table></figure>\n<p>PS:启动以后查看日志 显示如下表示开启 apr 模式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Sep 19, 2016 3:46:21 PM org.apache.coyote.AbstractProtocol start</div><div class=\"line\">INFO: Starting ProtocolHandler [&quot;http-apr-8081&quot;]</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>1、内存优化:</p>\n<p>优化内存，主要是在bin/catalina.bat或bin/catalina.sh 配置文件中进行。linux上，在catalina.sh中添加：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">JAVA_OPTS=&quot;-server -Xms1G -Xmx2G -Xss256K -Djava.awt.headless=true -Dfile.encoding=utf-8 -XX:MaxPermSize=256m -XX:PermSize=128M -XX:MaxPermSize=256M&quot;</div></pre></td></tr></table></figure>\n<p>其中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">• -server：启用jdk的server版本。</div><div class=\"line\">• -Xms：虚拟机初始化时的最小堆内存。</div><div class=\"line\">• -Xmx：虚拟机可使用的最大堆内存。 #-Xms与-Xmx设成一样的值，避免JVM因为频繁的GC导致性能大起大落</div><div class=\"line\">• -XX:PermSize：设置非堆内存初始值,默认是物理内存的1/64。</div><div class=\"line\">• -XX:MaxNewSize：新生代占整个堆内存的最大值。</div><div class=\"line\">• -XX:MaxPermSize：Perm（俗称方法区）占整个堆内存的最大值，也称内存最大永久保留区域。</div></pre></td></tr></table></figure>\n<p>1）错误提示：java.lang.OutOfMemoryError:Java heap space</p>\n<p>Tomcat默认可以使用的内存为128MB，在较大型的应用项目中，这点内存是不够的，有可能导致系统无法运行。常见的问题是报Tomcat内存溢出错误，Outof Memory(系统内存不足)的异常，从而导致客户端显示500错误，一般调整Tomcat的-Xms和-Xmx即可解决问题，通常将-Xms和-Xmx设置成一样，堆的最大值设置为物理可用内存的最大值的80%。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">set JAVA_OPTS=-Xms512m-Xmx512m</div></pre></td></tr></table></figure>\n<p>2）错误提示：java.lang.OutOfMemoryError: PermGenspace</p>\n<p>PermGenspace的全称是Permanent Generationspace,是指内存的永久保存区域，这块内存主要是被JVM存放Class和Meta信息的,Class在被Loader时就会被放到PermGenspace中，它和存放类实例(Instance)的Heap区域不同,GC(Garbage Collection)不会在主程序运行期对PermGenspace进行清理，所以如果你的应用中有很CLASS的话,就很可能出现PermGen space错误，这种错误常见在web服务器对JSP进行precompile的时候。如果你的WEB APP下都用了大量的第三方jar, 其大小超过了jvm默认的大小(4M)那么就会产生此错误信息了。解决方法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">setJAVA_OPTS=-XX:PermSize=128M</div></pre></td></tr></table></figure>\n<p>3）在使用-Xms和-Xmx调整tomcat的堆大小时，还需要考虑垃圾回收机制。如果系统花费很多的时间收集垃圾，请减小堆大小。一次完全的垃圾收集应该不超过3-5 秒。如果垃圾收集成为瓶颈，那么需要指定代的大小，检查垃圾收集的详细输出，研究垃圾收集参数对性能的影响。一般说来，你应该使用物理内存的 80% 作为堆大小。当增加处理器时，记得增加内存，因为分配可以并行进行，而垃圾收集不是并行的。</p>\n<p>2、连接数优化：</p>\n<p>#优化连接数，主要是在conf/server.xml配置文件中进行修改。</p>\n<p><strong>2.1、优化线程数</strong></p>\n<p>找到Connectorport=”8080” protocol=”HTTP/1.1”，增加maxThreads和acceptCount属性（使acceptCount大于等于maxThreads），如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Connectorport=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;connectionTimeout=&quot;20000&quot; redirectPort=&quot;8443&quot;acceptCount=&quot;500&quot; maxThreads=&quot;400&quot; /&gt;</div></pre></td></tr></table></figure>\n<p>其中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">• maxThreads：tomcat可用于请求处理的最大线程数，默认是200</div><div class=\"line\">• minSpareThreads：tomcat初始线程数，即最小空闲线程数</div><div class=\"line\">• maxSpareThreads：tomcat最大空闲线程数，超过的会被关闭</div><div class=\"line\">• acceptCount：当所有可以使用的处理请求的线程数都被使用时，可以放到处理队列中的请求数，超过这个数的请求将不予处理.默认100</div></pre></td></tr></table></figure>\n<p><strong>2.2、使用线程池</strong></p>\n<p>在server.xml中增加executor节点，然后配置connector的executor属性，如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Executorname=&quot;tomcatThreadPool&quot; namePrefix=&quot;req-exec-&quot;maxThreads=&quot;1000&quot; minSpareThreads=&quot;50&quot;maxIdleTime=&quot;60000&quot;/&gt;</div><div class=\"line\">&lt;Connectorport=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;executor=&quot;tomcatThreadPool&quot;/&gt;</div></pre></td></tr></table></figure>\n<p>其中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">• namePrefix：线程池中线程的命名前缀</div><div class=\"line\">• maxThreads：线程池的最大线程数</div><div class=\"line\">• minSpareThreads：线程池的最小空闲线程数</div><div class=\"line\">• maxIdleTime：超过最小空闲线程数时，多的线程会等待这个时间长度，然后关闭</div><div class=\"line\">• threadPriority：线程优先级</div></pre></td></tr></table></figure>\n<p>注：当tomcat并发用户量大的时候，单个jvm进程确实可能打开过多的文件句柄，这时会报java.net.SocketException:Too many open files错误。可使用下面步骤检查：\\</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">• ps -ef |grep tomcat 查看tomcat的进程ID，记录ID号，假设进程ID为10001</div><div class=\"line\">• lsof -p 10001|wc -l 查看当前进程id为10001的 文件操作数</div><div class=\"line\">• 使用命令：ulimit -a 查看每个用户允许打开的最大文件数</div></pre></td></tr></table></figure>\n<p>3、Tomcat Connector三种运行模式（BIO, NIO, APR）</p>\n<p>1）BIO：一个线程处理一个请求。缺点：并发量高时，线程数较多，浪费资源。Tomcat7或以下在<a href=\"http://www.linuxprobe.com/\" target=\"_blank\" rel=\"external\">Linux系统</a>中默认使用这种方式。</p>\n<p>2）NIO：利用Java的异步IO处理，可以通过少量的线程处理大量的请求。Tomcat8在<a href=\"http://www.linuxprobe.com/\" target=\"_blank\" rel=\"external\">Linux系统</a>中默认使用这种方式。Tomcat7必须修改Connector配置来启动（conf/server.xml配置文件）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Connectorport=&quot;8080&quot;protocol=&quot;org.apache.coyote.http11.Http11NioProtocol&quot; connectionTimeout=&quot;20000&quot;redirectPort=&quot;8443&quot;/&gt;</div></pre></td></tr></table></figure>\n<p>3）APR(Apache Portable Runtime)：从操作系统层面解决io阻塞问题。Linux如果安装了apr和native，Tomcat直接启动就支持apr。</p>\n<p><strong>3.2、apr模式</strong></p>\n<p>安装apr以及tomcat-native</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum -y install apr apr-devel</div></pre></td></tr></table></figure>\n<p>进入tomcat/bin目录，比如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /opt/local/tomcat/bin/</div><div class=\"line\">tar xzfv tomcat-native.tar.gz</div><div class=\"line\">cd tomcat-native-1.1.32-src/jni/native</div><div class=\"line\">./configure --with-apr=/usr/bin/apr-1-config</div><div class=\"line\">make &amp;&amp; make install</div></pre></td></tr></table></figure>\n<p>#注意最新版本的tomcat自带tomcat-native.war.gz，不过其版本相对于yum安装的apr过高，configure的时候会报错。</p>\n<p>解决：yum remove apr apr-devel –y,卸载yum安装的apr和apr-devel,下载最新版本的apr源码包，编译安装;或者下载低版本的tomcat-native编译安装</p>\n<p>安装成功后还需要对tomcat设置环境变量，方法是在catalina.sh文件中增加1行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">CATALINA_OPTS=&quot;-Djava.library.path=/usr/local/apr/lib&quot;</div></pre></td></tr></table></figure>\n<p>#apr下载地址：<a href=\"http://apr.apache.org/download.cgi\" target=\"_blank\" rel=\"external\">http://apr.apache.org/download.cgi</a></p>\n<p>#tomcat-native下载地址：<a href=\"http://tomcat.apache.org/download-native.cgi\" target=\"_blank\" rel=\"external\">http://tomcat.apache.org/download-native.cgi</a></p>\n<p>修改8080端对应的conf/server.xml</p>\n<p>protocol=”org.apache.coyote.http11.Http11AprProtocol”</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Connector executor=&quot;tomcatThreadPool&quot;</div><div class=\"line\">port=&quot;8080&quot;</div><div class=\"line\">protocol=&quot;org.apache.coyote.http11.Http11AprProtocol&quot;</div><div class=\"line\">connectionTimeout=&quot;20000&quot;</div><div class=\"line\">enableLookups=&quot;false&quot;</div><div class=\"line\">redirectPort=&quot;8443&quot;</div><div class=\"line\">URIEncoding=&quot;UTF-8&quot; /&gt;</div></pre></td></tr></table></figure>\n<p>PS:启动以后查看日志 显示如下表示开启 apr 模式</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Sep 19, 2016 3:46:21 PM org.apache.coyote.AbstractProtocol start</div><div class=\"line\">INFO: Starting ProtocolHandler [&quot;http-apr-8081&quot;]</div></pre></td></tr></table></figure>\n"},{"title":"css背景","_content":"\n\n\n我们在做网页的时候，当背景是一张完整的图片，不动让其跟随滚动条滚动，怎么办？下面详细讲解一下。\n\nCSS代码示例-背景颜色属性(background-color):\n\n```\n<html>\n<head>\n<title>背景颜色 background-color</title>\n<style type=\"text/css\"> body {background-color:#99FF00;} </style> </head>\n\n<body> \n<p>这个HTML使用了CSS的background-color属性，将HTML的背景颜色变成翠绿色。<p> \n</body> \n</html>\n```\n\n演示结果： 这个HTML使用了CSS的background-color属性，将HTML的背景颜色变成翠绿色。\n\nCSS代码示例-背景图片属性(background-image):\n\n```\n<html><head>\n<title>背景图片background-image</title></head>\n<body style=\"background-image:url(../images/css_tutorials/background.jpg)\"> <p>这个HTML使用了CSS的background-image属性，设置了背景图片。<p>\n</body></html>\n```\n\n演示结果： 这个HTML使用了CSS的background-image属性，设置了背景图片。\n\nCSS代码示例- 背景重复属性(background-repeat)\n\n```\n<html><head>\n<title>背景重复 background-repeat</title> \n<style type=\"text/css\"> body {background-image:url(../images/css_tutorials/background.jpg); background-repeat:repeat-y} </style> </head>\n<body> \n<p>这个HTML使用了CSS的background-repeat属性，使背景图片竖向重复。<p>\n<p>常用的background-repeat的属性值有: repeat-x(横向重复)，repeat-x(横向重复), no-repeat(不重复)。</p>\n<p>background-repeat属性要和background-image一起用。</p> \n</body> </html>\n```\n\n演示结果： 这个HTML使用了CSS的background-repeat属性，使背景图片竖向重复。 常用的background-repeat的属性值有: repeat-x(横向重复)，repeat-x(横向重复), no-repeat(不重复)。 background-repeat属性要和background-image一起用。\n\n \n\nCSS代码示例-背景附着属性(background-attachment)-[**背景图固定不动，不跟随滚动条滚动**]：\n\n```\n<html><head>\n<title>背景附着属性 background-attachment</title>\n<style type=\"text/css\">\nbody {background-image:url(../images/css_tutorials/background.jpg); background-repeat:no-repeat; background-attachment:fixed} </style> \n</head>\n<body> \n<p>这个HTML使用了CSS的background-attachment属性，将背景图片固定，不随内容滚动而滚动。<p>\n<p>背景附着(background-attachment)属性有两个值。一个是scroll，表示随内容滚动而动；一个是fixed，表示固定不动，不受内容滚动影响。缺省值是scroll。</p>\n<p>background-attachment要和background-image一起用。</p>\n</body></html>\n```\n\n\n\n演示结果： 这个HTML使用了CSS的 background-attachment 属性，**将背景图片固定，不随内容滚动而滚动**。\n\n背景附着(background-attachment)属性有两个值。一个是scroll，表示随内容滚动而动；一个是fixed，表示固定不动，不受内容滚动影响。缺省值是scroll。\n\nbackground-attachment要和background-image一起用。\n\n这个HTML使用了CSS的background-attachment属性，将背景图片固定，不随内容滚动而滚动。\n\n背景附着(background-attachment)属性有两个值。一个是scroll，表示随内容滚动而动；一个是fixed，表示固定不动，不受内容滚动影响。缺省值是scroll。\n\n \n\nCSS代码示例-背景位置属性(background-position)：\n\n\n\n```\n<html><head>\n<title>背景位置属性 background-position</title>\n<style type=\"text/css\">\nbody {background-image:url(../images/css_tutorials/background.jpg);background-repeat:no-repeat;background-position:20px 60px}</style>\n</head>\n<body>\n<p>这个HTML使用了CSS的background-position属性。这个属性和background-image属性连在一起使用，决定了背景图片的最初位置。</p>\n<p>上面的代码表示背景图片的初始位置距离网页最左面20px，距离网页最上面60px。</p>\n</body></html>\n```\n\n\n\n演示结果： 这个HTML使用了CSS的background-position属性。这个属性和background-image属性连在一起使用，决定了背景图片的最初位置。\n\n上面的代码表示背景图片的初始位置距离网页最左面20px，距离网页最上面60px。\n\n \n\nCSS代码示例-背景属性(background)：\n\n\n\n```\n<html><head>\n<title>背景属性 background</title>\n<style type=\"text/css\">body{background:#99FF00 url(../images/css_tutorials/background.jpg) no-repeat fixed 40px 100px} </style>\n</head>\n<body><p>这个属性是设置背景相关属性的一种快捷的综合写法，包括background-color, background-image, background-repeat, backgroundattachment, background-position。</p>\n<p>这个HTML所用的背景属性表示，网页的背景颜色是翠绿色，背景是background.jpg图片，图片不重复显示，背景图片不随内容滚动而动，背景图片距离网页最左面40px，距离网页最上面100px。</p>\n</body></html>\n```\n\n\n\n演示结果： 这个属性是设置背景相关属性的一种快捷的综合写法， 包括background-color, background-image, background-repeat, backgroundattachment, background-position。\n\n这个HTML所用的背景属性表示，网页的背景颜色是翠绿色，背景图片是background.jpg图片，背景图片不重复显示，背景图片不随内容滚动而动，背景图片距离网页最左面40px，距离网页最上面100px。\n\n这个属性是设置背景相关属性的一种快捷的综合写法， 包括background-color, background-image, background-repeat, backgroundattachment, background-position。","source":"_posts/css-background.md","raw":"---\ntitle: css背景\ntags: [前端,css]\ncategories: 前端\n---\n\n\n\n我们在做网页的时候，当背景是一张完整的图片，不动让其跟随滚动条滚动，怎么办？下面详细讲解一下。\n\nCSS代码示例-背景颜色属性(background-color):\n\n```\n<html>\n<head>\n<title>背景颜色 background-color</title>\n<style type=\"text/css\"> body {background-color:#99FF00;} </style> </head>\n\n<body> \n<p>这个HTML使用了CSS的background-color属性，将HTML的背景颜色变成翠绿色。<p> \n</body> \n</html>\n```\n\n演示结果： 这个HTML使用了CSS的background-color属性，将HTML的背景颜色变成翠绿色。\n\nCSS代码示例-背景图片属性(background-image):\n\n```\n<html><head>\n<title>背景图片background-image</title></head>\n<body style=\"background-image:url(../images/css_tutorials/background.jpg)\"> <p>这个HTML使用了CSS的background-image属性，设置了背景图片。<p>\n</body></html>\n```\n\n演示结果： 这个HTML使用了CSS的background-image属性，设置了背景图片。\n\nCSS代码示例- 背景重复属性(background-repeat)\n\n```\n<html><head>\n<title>背景重复 background-repeat</title> \n<style type=\"text/css\"> body {background-image:url(../images/css_tutorials/background.jpg); background-repeat:repeat-y} </style> </head>\n<body> \n<p>这个HTML使用了CSS的background-repeat属性，使背景图片竖向重复。<p>\n<p>常用的background-repeat的属性值有: repeat-x(横向重复)，repeat-x(横向重复), no-repeat(不重复)。</p>\n<p>background-repeat属性要和background-image一起用。</p> \n</body> </html>\n```\n\n演示结果： 这个HTML使用了CSS的background-repeat属性，使背景图片竖向重复。 常用的background-repeat的属性值有: repeat-x(横向重复)，repeat-x(横向重复), no-repeat(不重复)。 background-repeat属性要和background-image一起用。\n\n \n\nCSS代码示例-背景附着属性(background-attachment)-[**背景图固定不动，不跟随滚动条滚动**]：\n\n```\n<html><head>\n<title>背景附着属性 background-attachment</title>\n<style type=\"text/css\">\nbody {background-image:url(../images/css_tutorials/background.jpg); background-repeat:no-repeat; background-attachment:fixed} </style> \n</head>\n<body> \n<p>这个HTML使用了CSS的background-attachment属性，将背景图片固定，不随内容滚动而滚动。<p>\n<p>背景附着(background-attachment)属性有两个值。一个是scroll，表示随内容滚动而动；一个是fixed，表示固定不动，不受内容滚动影响。缺省值是scroll。</p>\n<p>background-attachment要和background-image一起用。</p>\n</body></html>\n```\n\n\n\n演示结果： 这个HTML使用了CSS的 background-attachment 属性，**将背景图片固定，不随内容滚动而滚动**。\n\n背景附着(background-attachment)属性有两个值。一个是scroll，表示随内容滚动而动；一个是fixed，表示固定不动，不受内容滚动影响。缺省值是scroll。\n\nbackground-attachment要和background-image一起用。\n\n这个HTML使用了CSS的background-attachment属性，将背景图片固定，不随内容滚动而滚动。\n\n背景附着(background-attachment)属性有两个值。一个是scroll，表示随内容滚动而动；一个是fixed，表示固定不动，不受内容滚动影响。缺省值是scroll。\n\n \n\nCSS代码示例-背景位置属性(background-position)：\n\n\n\n```\n<html><head>\n<title>背景位置属性 background-position</title>\n<style type=\"text/css\">\nbody {background-image:url(../images/css_tutorials/background.jpg);background-repeat:no-repeat;background-position:20px 60px}</style>\n</head>\n<body>\n<p>这个HTML使用了CSS的background-position属性。这个属性和background-image属性连在一起使用，决定了背景图片的最初位置。</p>\n<p>上面的代码表示背景图片的初始位置距离网页最左面20px，距离网页最上面60px。</p>\n</body></html>\n```\n\n\n\n演示结果： 这个HTML使用了CSS的background-position属性。这个属性和background-image属性连在一起使用，决定了背景图片的最初位置。\n\n上面的代码表示背景图片的初始位置距离网页最左面20px，距离网页最上面60px。\n\n \n\nCSS代码示例-背景属性(background)：\n\n\n\n```\n<html><head>\n<title>背景属性 background</title>\n<style type=\"text/css\">body{background:#99FF00 url(../images/css_tutorials/background.jpg) no-repeat fixed 40px 100px} </style>\n</head>\n<body><p>这个属性是设置背景相关属性的一种快捷的综合写法，包括background-color, background-image, background-repeat, backgroundattachment, background-position。</p>\n<p>这个HTML所用的背景属性表示，网页的背景颜色是翠绿色，背景是background.jpg图片，图片不重复显示，背景图片不随内容滚动而动，背景图片距离网页最左面40px，距离网页最上面100px。</p>\n</body></html>\n```\n\n\n\n演示结果： 这个属性是设置背景相关属性的一种快捷的综合写法， 包括background-color, background-image, background-repeat, backgroundattachment, background-position。\n\n这个HTML所用的背景属性表示，网页的背景颜色是翠绿色，背景图片是background.jpg图片，背景图片不重复显示，背景图片不随内容滚动而动，背景图片距离网页最左面40px，距离网页最上面100px。\n\n这个属性是设置背景相关属性的一种快捷的综合写法， 包括background-color, background-image, background-repeat, backgroundattachment, background-position。","slug":"css-background","published":1,"date":"2017-06-02T03:09:38.586Z","updated":"2017-06-02T03:11:33.315Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmtrm00074wvsbbt3yalv","content":"<p>我们在做网页的时候，当背景是一张完整的图片，不动让其跟随滚动条滚动，怎么办？下面详细讲解一下。</p>\n<p>CSS代码示例-背景颜色属性(background-color):</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;title&gt;背景颜色 background-color&lt;/title&gt;</div><div class=\"line\">&lt;style type=&quot;text/css&quot;&gt; body &#123;background-color:#99FF00;&#125; &lt;/style&gt; &lt;/head&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;body&gt; </div><div class=\"line\">&lt;p&gt;这个HTML使用了CSS的background-color属性，将HTML的背景颜色变成翠绿色。&lt;p&gt; </div><div class=\"line\">&lt;/body&gt; </div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n<p>演示结果： 这个HTML使用了CSS的background-color属性，将HTML的背景颜色变成翠绿色。</p>\n<p>CSS代码示例-背景图片属性(background-image):</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html&gt;&lt;head&gt;</div><div class=\"line\">&lt;title&gt;背景图片background-image&lt;/title&gt;&lt;/head&gt;</div><div class=\"line\">&lt;body style=&quot;background-image:url(../images/css_tutorials/background.jpg)&quot;&gt; &lt;p&gt;这个HTML使用了CSS的background-image属性，设置了背景图片。&lt;p&gt;</div><div class=\"line\">&lt;/body&gt;&lt;/html&gt;</div></pre></td></tr></table></figure>\n<p>演示结果： 这个HTML使用了CSS的background-image属性，设置了背景图片。</p>\n<p>CSS代码示例- 背景重复属性(background-repeat)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html&gt;&lt;head&gt;</div><div class=\"line\">&lt;title&gt;背景重复 background-repeat&lt;/title&gt; </div><div class=\"line\">&lt;style type=&quot;text/css&quot;&gt; body &#123;background-image:url(../images/css_tutorials/background.jpg); background-repeat:repeat-y&#125; &lt;/style&gt; &lt;/head&gt;</div><div class=\"line\">&lt;body&gt; </div><div class=\"line\">&lt;p&gt;这个HTML使用了CSS的background-repeat属性，使背景图片竖向重复。&lt;p&gt;</div><div class=\"line\">&lt;p&gt;常用的background-repeat的属性值有: repeat-x(横向重复)，repeat-x(横向重复), no-repeat(不重复)。&lt;/p&gt;</div><div class=\"line\">&lt;p&gt;background-repeat属性要和background-image一起用。&lt;/p&gt; </div><div class=\"line\">&lt;/body&gt; &lt;/html&gt;</div></pre></td></tr></table></figure>\n<p>演示结果： 这个HTML使用了CSS的background-repeat属性，使背景图片竖向重复。 常用的background-repeat的属性值有: repeat-x(横向重复)，repeat-x(横向重复), no-repeat(不重复)。 background-repeat属性要和background-image一起用。</p>\n<p>CSS代码示例-背景附着属性(background-attachment)-[<strong>背景图固定不动，不跟随滚动条滚动</strong>]：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html&gt;&lt;head&gt;</div><div class=\"line\">&lt;title&gt;背景附着属性 background-attachment&lt;/title&gt;</div><div class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</div><div class=\"line\">body &#123;background-image:url(../images/css_tutorials/background.jpg); background-repeat:no-repeat; background-attachment:fixed&#125; &lt;/style&gt; </div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt; </div><div class=\"line\">&lt;p&gt;这个HTML使用了CSS的background-attachment属性，将背景图片固定，不随内容滚动而滚动。&lt;p&gt;</div><div class=\"line\">&lt;p&gt;背景附着(background-attachment)属性有两个值。一个是scroll，表示随内容滚动而动；一个是fixed，表示固定不动，不受内容滚动影响。缺省值是scroll。&lt;/p&gt;</div><div class=\"line\">&lt;p&gt;background-attachment要和background-image一起用。&lt;/p&gt;</div><div class=\"line\">&lt;/body&gt;&lt;/html&gt;</div></pre></td></tr></table></figure>\n<p>演示结果： 这个HTML使用了CSS的 background-attachment 属性，<strong>将背景图片固定，不随内容滚动而滚动</strong>。</p>\n<p>背景附着(background-attachment)属性有两个值。一个是scroll，表示随内容滚动而动；一个是fixed，表示固定不动，不受内容滚动影响。缺省值是scroll。</p>\n<p>background-attachment要和background-image一起用。</p>\n<p>这个HTML使用了CSS的background-attachment属性，将背景图片固定，不随内容滚动而滚动。</p>\n<p>背景附着(background-attachment)属性有两个值。一个是scroll，表示随内容滚动而动；一个是fixed，表示固定不动，不受内容滚动影响。缺省值是scroll。</p>\n<p>CSS代码示例-背景位置属性(background-position)：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html&gt;&lt;head&gt;</div><div class=\"line\">&lt;title&gt;背景位置属性 background-position&lt;/title&gt;</div><div class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</div><div class=\"line\">body &#123;background-image:url(../images/css_tutorials/background.jpg);background-repeat:no-repeat;background-position:20px 60px&#125;&lt;/style&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">&lt;p&gt;这个HTML使用了CSS的background-position属性。这个属性和background-image属性连在一起使用，决定了背景图片的最初位置。&lt;/p&gt;</div><div class=\"line\">&lt;p&gt;上面的代码表示背景图片的初始位置距离网页最左面20px，距离网页最上面60px。&lt;/p&gt;</div><div class=\"line\">&lt;/body&gt;&lt;/html&gt;</div></pre></td></tr></table></figure>\n<p>演示结果： 这个HTML使用了CSS的background-position属性。这个属性和background-image属性连在一起使用，决定了背景图片的最初位置。</p>\n<p>上面的代码表示背景图片的初始位置距离网页最左面20px，距离网页最上面60px。</p>\n<p>CSS代码示例-背景属性(background)：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html&gt;&lt;head&gt;</div><div class=\"line\">&lt;title&gt;背景属性 background&lt;/title&gt;</div><div class=\"line\">&lt;style type=&quot;text/css&quot;&gt;body&#123;background:#99FF00 url(../images/css_tutorials/background.jpg) no-repeat fixed 40px 100px&#125; &lt;/style&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;&lt;p&gt;这个属性是设置背景相关属性的一种快捷的综合写法，包括background-color, background-image, background-repeat, backgroundattachment, background-position。&lt;/p&gt;</div><div class=\"line\">&lt;p&gt;这个HTML所用的背景属性表示，网页的背景颜色是翠绿色，背景是background.jpg图片，图片不重复显示，背景图片不随内容滚动而动，背景图片距离网页最左面40px，距离网页最上面100px。&lt;/p&gt;</div><div class=\"line\">&lt;/body&gt;&lt;/html&gt;</div></pre></td></tr></table></figure>\n<p>演示结果： 这个属性是设置背景相关属性的一种快捷的综合写法， 包括background-color, background-image, background-repeat, backgroundattachment, background-position。</p>\n<p>这个HTML所用的背景属性表示，网页的背景颜色是翠绿色，背景图片是background.jpg图片，背景图片不重复显示，背景图片不随内容滚动而动，背景图片距离网页最左面40px，距离网页最上面100px。</p>\n<p>这个属性是设置背景相关属性的一种快捷的综合写法， 包括background-color, background-image, background-repeat, backgroundattachment, background-position。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>我们在做网页的时候，当背景是一张完整的图片，不动让其跟随滚动条滚动，怎么办？下面详细讲解一下。</p>\n<p>CSS代码示例-背景颜色属性(background-color):</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;title&gt;背景颜色 background-color&lt;/title&gt;</div><div class=\"line\">&lt;style type=&quot;text/css&quot;&gt; body &#123;background-color:#99FF00;&#125; &lt;/style&gt; &lt;/head&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;body&gt; </div><div class=\"line\">&lt;p&gt;这个HTML使用了CSS的background-color属性，将HTML的背景颜色变成翠绿色。&lt;p&gt; </div><div class=\"line\">&lt;/body&gt; </div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n<p>演示结果： 这个HTML使用了CSS的background-color属性，将HTML的背景颜色变成翠绿色。</p>\n<p>CSS代码示例-背景图片属性(background-image):</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html&gt;&lt;head&gt;</div><div class=\"line\">&lt;title&gt;背景图片background-image&lt;/title&gt;&lt;/head&gt;</div><div class=\"line\">&lt;body style=&quot;background-image:url(../images/css_tutorials/background.jpg)&quot;&gt; &lt;p&gt;这个HTML使用了CSS的background-image属性，设置了背景图片。&lt;p&gt;</div><div class=\"line\">&lt;/body&gt;&lt;/html&gt;</div></pre></td></tr></table></figure>\n<p>演示结果： 这个HTML使用了CSS的background-image属性，设置了背景图片。</p>\n<p>CSS代码示例- 背景重复属性(background-repeat)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html&gt;&lt;head&gt;</div><div class=\"line\">&lt;title&gt;背景重复 background-repeat&lt;/title&gt; </div><div class=\"line\">&lt;style type=&quot;text/css&quot;&gt; body &#123;background-image:url(../images/css_tutorials/background.jpg); background-repeat:repeat-y&#125; &lt;/style&gt; &lt;/head&gt;</div><div class=\"line\">&lt;body&gt; </div><div class=\"line\">&lt;p&gt;这个HTML使用了CSS的background-repeat属性，使背景图片竖向重复。&lt;p&gt;</div><div class=\"line\">&lt;p&gt;常用的background-repeat的属性值有: repeat-x(横向重复)，repeat-x(横向重复), no-repeat(不重复)。&lt;/p&gt;</div><div class=\"line\">&lt;p&gt;background-repeat属性要和background-image一起用。&lt;/p&gt; </div><div class=\"line\">&lt;/body&gt; &lt;/html&gt;</div></pre></td></tr></table></figure>\n<p>演示结果： 这个HTML使用了CSS的background-repeat属性，使背景图片竖向重复。 常用的background-repeat的属性值有: repeat-x(横向重复)，repeat-x(横向重复), no-repeat(不重复)。 background-repeat属性要和background-image一起用。</p>\n<p>CSS代码示例-背景附着属性(background-attachment)-[<strong>背景图固定不动，不跟随滚动条滚动</strong>]：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html&gt;&lt;head&gt;</div><div class=\"line\">&lt;title&gt;背景附着属性 background-attachment&lt;/title&gt;</div><div class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</div><div class=\"line\">body &#123;background-image:url(../images/css_tutorials/background.jpg); background-repeat:no-repeat; background-attachment:fixed&#125; &lt;/style&gt; </div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt; </div><div class=\"line\">&lt;p&gt;这个HTML使用了CSS的background-attachment属性，将背景图片固定，不随内容滚动而滚动。&lt;p&gt;</div><div class=\"line\">&lt;p&gt;背景附着(background-attachment)属性有两个值。一个是scroll，表示随内容滚动而动；一个是fixed，表示固定不动，不受内容滚动影响。缺省值是scroll。&lt;/p&gt;</div><div class=\"line\">&lt;p&gt;background-attachment要和background-image一起用。&lt;/p&gt;</div><div class=\"line\">&lt;/body&gt;&lt;/html&gt;</div></pre></td></tr></table></figure>\n<p>演示结果： 这个HTML使用了CSS的 background-attachment 属性，<strong>将背景图片固定，不随内容滚动而滚动</strong>。</p>\n<p>背景附着(background-attachment)属性有两个值。一个是scroll，表示随内容滚动而动；一个是fixed，表示固定不动，不受内容滚动影响。缺省值是scroll。</p>\n<p>background-attachment要和background-image一起用。</p>\n<p>这个HTML使用了CSS的background-attachment属性，将背景图片固定，不随内容滚动而滚动。</p>\n<p>背景附着(background-attachment)属性有两个值。一个是scroll，表示随内容滚动而动；一个是fixed，表示固定不动，不受内容滚动影响。缺省值是scroll。</p>\n<p>CSS代码示例-背景位置属性(background-position)：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html&gt;&lt;head&gt;</div><div class=\"line\">&lt;title&gt;背景位置属性 background-position&lt;/title&gt;</div><div class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</div><div class=\"line\">body &#123;background-image:url(../images/css_tutorials/background.jpg);background-repeat:no-repeat;background-position:20px 60px&#125;&lt;/style&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">&lt;p&gt;这个HTML使用了CSS的background-position属性。这个属性和background-image属性连在一起使用，决定了背景图片的最初位置。&lt;/p&gt;</div><div class=\"line\">&lt;p&gt;上面的代码表示背景图片的初始位置距离网页最左面20px，距离网页最上面60px。&lt;/p&gt;</div><div class=\"line\">&lt;/body&gt;&lt;/html&gt;</div></pre></td></tr></table></figure>\n<p>演示结果： 这个HTML使用了CSS的background-position属性。这个属性和background-image属性连在一起使用，决定了背景图片的最初位置。</p>\n<p>上面的代码表示背景图片的初始位置距离网页最左面20px，距离网页最上面60px。</p>\n<p>CSS代码示例-背景属性(background)：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html&gt;&lt;head&gt;</div><div class=\"line\">&lt;title&gt;背景属性 background&lt;/title&gt;</div><div class=\"line\">&lt;style type=&quot;text/css&quot;&gt;body&#123;background:#99FF00 url(../images/css_tutorials/background.jpg) no-repeat fixed 40px 100px&#125; &lt;/style&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;&lt;p&gt;这个属性是设置背景相关属性的一种快捷的综合写法，包括background-color, background-image, background-repeat, backgroundattachment, background-position。&lt;/p&gt;</div><div class=\"line\">&lt;p&gt;这个HTML所用的背景属性表示，网页的背景颜色是翠绿色，背景是background.jpg图片，图片不重复显示，背景图片不随内容滚动而动，背景图片距离网页最左面40px，距离网页最上面100px。&lt;/p&gt;</div><div class=\"line\">&lt;/body&gt;&lt;/html&gt;</div></pre></td></tr></table></figure>\n<p>演示结果： 这个属性是设置背景相关属性的一种快捷的综合写法， 包括background-color, background-image, background-repeat, backgroundattachment, background-position。</p>\n<p>这个HTML所用的背景属性表示，网页的背景颜色是翠绿色，背景图片是background.jpg图片，背景图片不重复显示，背景图片不随内容滚动而动，背景图片距离网页最左面40px，距离网页最上面100px。</p>\n<p>这个属性是设置背景相关属性的一种快捷的综合写法， 包括background-color, background-image, background-repeat, backgroundattachment, background-position。</p>\n"},{"title":"fedora安装jdk7","_content":"Fedora 20自带OpenJDK，所以如果安装官方的JDK的话要先删除OpenJDK，步骤如下：\n\n1：rpm -qa|grep jdk 查看当前的jdk情况。\n\n2：yum -y remove java java-1.7.0-openjdk* 卸载openjdk，这个过程中因为依赖原因可能会卸载一些额外的软件。\n\n3：去Oracle官网下载官方jdk，我下载的是tar.gz格式的。\n\n4 ：解压jdk安装包tar -zxvf jdk-7u51-linux-x64.tar.gz  复制到自己的软件文件夹，我的软件一般放到opt下，所以 mv jdk1.7.0_51/  /opt/\n\n5：配置环境变量vi /etc/profile 后在倒数第三行处输入下面的内容\n\nexport JAVA_HOME=/opt/jdk1.7.0_51\n\nexport CLASSPATH=$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib\n\nexport PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH:$HOME/bin\n\n6：让环境变量生效 source  /etc/profile\n\n7：输入java或者java -version看一下吧\n","source":"_posts/fedora安装jdk7.md","raw":"---\ntitle: fedora安装jdk7\ntags: [linux,fedora]\ncategories: fedora\n---\nFedora 20自带OpenJDK，所以如果安装官方的JDK的话要先删除OpenJDK，步骤如下：\n\n1：rpm -qa|grep jdk 查看当前的jdk情况。\n\n2：yum -y remove java java-1.7.0-openjdk* 卸载openjdk，这个过程中因为依赖原因可能会卸载一些额外的软件。\n\n3：去Oracle官网下载官方jdk，我下载的是tar.gz格式的。\n\n4 ：解压jdk安装包tar -zxvf jdk-7u51-linux-x64.tar.gz  复制到自己的软件文件夹，我的软件一般放到opt下，所以 mv jdk1.7.0_51/  /opt/\n\n5：配置环境变量vi /etc/profile 后在倒数第三行处输入下面的内容\n\nexport JAVA_HOME=/opt/jdk1.7.0_51\n\nexport CLASSPATH=$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib\n\nexport PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH:$HOME/bin\n\n6：让环境变量生效 source  /etc/profile\n\n7：输入java或者java -version看一下吧\n","slug":"fedora安装jdk7","published":1,"date":"2017-05-22T05:03:19.662Z","updated":"2017-05-25T01:02:07.833Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmtrm000a4wvsv1xk16zc","content":"<p>Fedora 20自带OpenJDK，所以如果安装官方的JDK的话要先删除OpenJDK，步骤如下：</p>\n<p>1：rpm -qa|grep jdk 查看当前的jdk情况。</p>\n<p>2：yum -y remove java java-1.7.0-openjdk* 卸载openjdk，这个过程中因为依赖原因可能会卸载一些额外的软件。</p>\n<p>3：去Oracle官网下载官方jdk，我下载的是tar.gz格式的。</p>\n<p>4 ：解压jdk安装包tar -zxvf jdk-7u51-linux-x64.tar.gz  复制到自己的软件文件夹，我的软件一般放到opt下，所以 mv jdk1.7.0_51/  /opt/</p>\n<p>5：配置环境变量vi /etc/profile 后在倒数第三行处输入下面的内容</p>\n<p>export JAVA_HOME=/opt/jdk1.7.0_51</p>\n<p>export CLASSPATH=$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib</p>\n<p>export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH:$HOME/bin</p>\n<p>6：让环境变量生效 source  /etc/profile</p>\n<p>7：输入java或者java -version看一下吧</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Fedora 20自带OpenJDK，所以如果安装官方的JDK的话要先删除OpenJDK，步骤如下：</p>\n<p>1：rpm -qa|grep jdk 查看当前的jdk情况。</p>\n<p>2：yum -y remove java java-1.7.0-openjdk* 卸载openjdk，这个过程中因为依赖原因可能会卸载一些额外的软件。</p>\n<p>3：去Oracle官网下载官方jdk，我下载的是tar.gz格式的。</p>\n<p>4 ：解压jdk安装包tar -zxvf jdk-7u51-linux-x64.tar.gz  复制到自己的软件文件夹，我的软件一般放到opt下，所以 mv jdk1.7.0_51/  /opt/</p>\n<p>5：配置环境变量vi /etc/profile 后在倒数第三行处输入下面的内容</p>\n<p>export JAVA_HOME=/opt/jdk1.7.0_51</p>\n<p>export CLASSPATH=$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib</p>\n<p>export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH:$HOME/bin</p>\n<p>6：让环境变量生效 source  /etc/profile</p>\n<p>7：输入java或者java -version看一下吧</p>\n"},{"title":"VNC远程登录树莓派","_content":"# VNC远程登录树莓派的图形界面\n\n安装VNC需要使用命令行。如果需要远程操作安装VNC，就必须通过SSH登录到命令行界面。\n\n**安装**\n\n树莓派命令行：\n\n```\nsudo apt-get install tightvncserver\n```\n\n安装好之后请一定先使用此命令设置一个VNC密码：\n\n```\nvncpasswd\n```\n\n（先输入操作密码两次，然后会询问是否设置一个查看(view-only)密码，按自己喜欢，一般没必要。）\n\n\n\n**开机自动启动**\n\n设置开机启动，需要在/etc/init.d/中创建一个文件。例如tightvncserver：\n\n（注：启动脚本的名称，有和程序名一致的习惯）\n\n```\nsudo nano /etc/init.d/tightvncserver\n```\n\n内容如下：（putty窗口中按右键=粘贴）#!/bin/sh\n\n```\n### BEGIN INIT INFO\n# Provides:          tightvncserver\n# Required-Start:    $local_fs\n# Required-Stop:     $local_fs\n# Default-Start:     2 3 4 5\n# Default-Stop:      0 1 6\n# Short-Description: Start/stop tightvncserver\n### END INIT INFO\n\n# More details see:\n# http://www.penguintutor.com/linux/tightvnc\n\n### Customize this entry\n# Set the USER variable to the name of the user to start tightvncserver under\nexport USER='pi'\n### End customization required\n\neval cd ~$USER\n\ncase \"$1\" in\n  start)\n    # 启动命令行。此处自定义分辨率、控制台号码或其它参数。\n    su $USER -c '/usr/bin/tightvncserver -depth 16 -geometry 800x600 :1'\n    echo \"Starting TightVNC server for $USER \"\n    ;;\n  stop)\n    # 终止命令行。此处控制台号码与启动一致。\n    su $USER -c '/usr/bin/tightvncserver -kill :1'\n    echo \"Tightvncserver stopped\"\n    ;;\n  *)\n    echo \"Usage: /etc/init.d/tightvncserver {start|stop}\"\n    exit 1\n    ;;\nesac\nexit 0\n```\n\n注：少数玩家默认用户不是pi的请自行更改USER变量\n\n按Ctrl+X，回答Y（存盘）退出nano编辑器。\n\n然后给tightvncserver文件加执行权限，并更新开机启动列表。\n\n```\nsudo chmod 755 /etc/init.d/tightvncserver\nsudo update-rc.d tightvncserver defaults\n```\n\n**附：手工启动与参数**（以下用处不大，没兴趣请略过）\n\n使用此命令手工启动VNC服务器程序：\n\n```\ntightvncserver -geometry 800x600 :1\n```\n\n如果首次启动，并且未曾使用vncpasswd命令设置密码，程序会要求设置一个。\n开机启动很方便。如果没理由，真的不推荐手工启动。\n\n**命令行参数说明：**\n一、:1，指定控制台的号码。\n启动多个控制台，可以提供互不影响的多个桌面环境。（大多数人不用多用户操作所以没意义）\n可以不加此参数，tightvncserver会自动寻找从1开始的下一个空闲控制台。\n加上此参数，会强制使用指定的控制台，如果此控制台已经启动则报错。加此参数可有效防止无意多次启动程序（会启动多个控制台）白白浪费系统资源。\n\n**特殊的0号控制台**\n0号控制台就是连接真实显示器真正输出图像的那个桌面。\n对于VNC客户端，不输入端口号登录，默认就登录到0号控制台，方便。\n但是因为0号是真正的桌面，所以和开机启动桌面环境，或者自己用startx命令，都存在啰嗦的冲突。\n到头来是个麻烦。因此自动启动的配置教程中，一律使用1号控制台。\n\n二、-geometry 800×600，分辨率。可以不加。\n终止VNC控制台：\ntightvncserver -kill :1\n查看正在运行的控制台列表：\n\n```\nps ax | grep Xtightvnc | grep -v grep\n```\n","source":"_posts/VNC远程登录Raspbian图形界面.md","raw":"---\ntitle: VNC远程登录树莓派\ntags: [树莓派,物联网,linux,远程登录]\ncategories: raspberry pi\n---\n# VNC远程登录树莓派的图形界面\n\n安装VNC需要使用命令行。如果需要远程操作安装VNC，就必须通过SSH登录到命令行界面。\n\n**安装**\n\n树莓派命令行：\n\n```\nsudo apt-get install tightvncserver\n```\n\n安装好之后请一定先使用此命令设置一个VNC密码：\n\n```\nvncpasswd\n```\n\n（先输入操作密码两次，然后会询问是否设置一个查看(view-only)密码，按自己喜欢，一般没必要。）\n\n\n\n**开机自动启动**\n\n设置开机启动，需要在/etc/init.d/中创建一个文件。例如tightvncserver：\n\n（注：启动脚本的名称，有和程序名一致的习惯）\n\n```\nsudo nano /etc/init.d/tightvncserver\n```\n\n内容如下：（putty窗口中按右键=粘贴）#!/bin/sh\n\n```\n### BEGIN INIT INFO\n# Provides:          tightvncserver\n# Required-Start:    $local_fs\n# Required-Stop:     $local_fs\n# Default-Start:     2 3 4 5\n# Default-Stop:      0 1 6\n# Short-Description: Start/stop tightvncserver\n### END INIT INFO\n\n# More details see:\n# http://www.penguintutor.com/linux/tightvnc\n\n### Customize this entry\n# Set the USER variable to the name of the user to start tightvncserver under\nexport USER='pi'\n### End customization required\n\neval cd ~$USER\n\ncase \"$1\" in\n  start)\n    # 启动命令行。此处自定义分辨率、控制台号码或其它参数。\n    su $USER -c '/usr/bin/tightvncserver -depth 16 -geometry 800x600 :1'\n    echo \"Starting TightVNC server for $USER \"\n    ;;\n  stop)\n    # 终止命令行。此处控制台号码与启动一致。\n    su $USER -c '/usr/bin/tightvncserver -kill :1'\n    echo \"Tightvncserver stopped\"\n    ;;\n  *)\n    echo \"Usage: /etc/init.d/tightvncserver {start|stop}\"\n    exit 1\n    ;;\nesac\nexit 0\n```\n\n注：少数玩家默认用户不是pi的请自行更改USER变量\n\n按Ctrl+X，回答Y（存盘）退出nano编辑器。\n\n然后给tightvncserver文件加执行权限，并更新开机启动列表。\n\n```\nsudo chmod 755 /etc/init.d/tightvncserver\nsudo update-rc.d tightvncserver defaults\n```\n\n**附：手工启动与参数**（以下用处不大，没兴趣请略过）\n\n使用此命令手工启动VNC服务器程序：\n\n```\ntightvncserver -geometry 800x600 :1\n```\n\n如果首次启动，并且未曾使用vncpasswd命令设置密码，程序会要求设置一个。\n开机启动很方便。如果没理由，真的不推荐手工启动。\n\n**命令行参数说明：**\n一、:1，指定控制台的号码。\n启动多个控制台，可以提供互不影响的多个桌面环境。（大多数人不用多用户操作所以没意义）\n可以不加此参数，tightvncserver会自动寻找从1开始的下一个空闲控制台。\n加上此参数，会强制使用指定的控制台，如果此控制台已经启动则报错。加此参数可有效防止无意多次启动程序（会启动多个控制台）白白浪费系统资源。\n\n**特殊的0号控制台**\n0号控制台就是连接真实显示器真正输出图像的那个桌面。\n对于VNC客户端，不输入端口号登录，默认就登录到0号控制台，方便。\n但是因为0号是真正的桌面，所以和开机启动桌面环境，或者自己用startx命令，都存在啰嗦的冲突。\n到头来是个麻烦。因此自动启动的配置教程中，一律使用1号控制台。\n\n二、-geometry 800×600，分辨率。可以不加。\n终止VNC控制台：\ntightvncserver -kill :1\n查看正在运行的控制台列表：\n\n```\nps ax | grep Xtightvnc | grep -v grep\n```\n","slug":"VNC远程登录Raspbian图形界面","published":1,"date":"2017-05-22T05:03:19.689Z","updated":"2017-05-25T01:04:19.345Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmtrm000c4wvs5zhzpv9d","content":"<h1 id=\"VNC远程登录树莓派的图形界面\"><a href=\"#VNC远程登录树莓派的图形界面\" class=\"headerlink\" title=\"VNC远程登录树莓派的图形界面\"></a>VNC远程登录树莓派的图形界面</h1><p>安装VNC需要使用命令行。如果需要远程操作安装VNC，就必须通过SSH登录到命令行界面。</p>\n<p><strong>安装</strong></p>\n<p>树莓派命令行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install tightvncserver</div></pre></td></tr></table></figure>\n<p>安装好之后请一定先使用此命令设置一个VNC密码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vncpasswd</div></pre></td></tr></table></figure>\n<p>（先输入操作密码两次，然后会询问是否设置一个查看(view-only)密码，按自己喜欢，一般没必要。）</p>\n<p><strong>开机自动启动</strong></p>\n<p>设置开机启动，需要在/etc/init.d/中创建一个文件。例如tightvncserver：</p>\n<p>（注：启动脚本的名称，有和程序名一致的习惯）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/init.d/tightvncserver</div></pre></td></tr></table></figure>\n<p>内容如下：（putty窗口中按右键=粘贴）#!/bin/sh</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">### BEGIN INIT INFO</div><div class=\"line\"># Provides:          tightvncserver</div><div class=\"line\"># Required-Start:    $local_fs</div><div class=\"line\"># Required-Stop:     $local_fs</div><div class=\"line\"># Default-Start:     2 3 4 5</div><div class=\"line\"># Default-Stop:      0 1 6</div><div class=\"line\"># Short-Description: Start/stop tightvncserver</div><div class=\"line\">### END INIT INFO</div><div class=\"line\"></div><div class=\"line\"># More details see:</div><div class=\"line\"># http://www.penguintutor.com/linux/tightvnc</div><div class=\"line\"></div><div class=\"line\">### Customize this entry</div><div class=\"line\"># Set the USER variable to the name of the user to start tightvncserver under</div><div class=\"line\">export USER=&apos;pi&apos;</div><div class=\"line\">### End customization required</div><div class=\"line\"></div><div class=\"line\">eval cd ~$USER</div><div class=\"line\"></div><div class=\"line\">case &quot;$1&quot; in</div><div class=\"line\">  start)</div><div class=\"line\">    # 启动命令行。此处自定义分辨率、控制台号码或其它参数。</div><div class=\"line\">    su $USER -c &apos;/usr/bin/tightvncserver -depth 16 -geometry 800x600 :1&apos;</div><div class=\"line\">    echo &quot;Starting TightVNC server for $USER &quot;</div><div class=\"line\">    ;;</div><div class=\"line\">  stop)</div><div class=\"line\">    # 终止命令行。此处控制台号码与启动一致。</div><div class=\"line\">    su $USER -c &apos;/usr/bin/tightvncserver -kill :1&apos;</div><div class=\"line\">    echo &quot;Tightvncserver stopped&quot;</div><div class=\"line\">    ;;</div><div class=\"line\">  *)</div><div class=\"line\">    echo &quot;Usage: /etc/init.d/tightvncserver &#123;start|stop&#125;&quot;</div><div class=\"line\">    exit 1</div><div class=\"line\">    ;;</div><div class=\"line\">esac</div><div class=\"line\">exit 0</div></pre></td></tr></table></figure>\n<p>注：少数玩家默认用户不是pi的请自行更改USER变量</p>\n<p>按Ctrl+X，回答Y（存盘）退出nano编辑器。</p>\n<p>然后给tightvncserver文件加执行权限，并更新开机启动列表。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo chmod 755 /etc/init.d/tightvncserver</div><div class=\"line\">sudo update-rc.d tightvncserver defaults</div></pre></td></tr></table></figure>\n<p><strong>附：手工启动与参数</strong>（以下用处不大，没兴趣请略过）</p>\n<p>使用此命令手工启动VNC服务器程序：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">tightvncserver -geometry 800x600 :1</div></pre></td></tr></table></figure>\n<p>如果首次启动，并且未曾使用vncpasswd命令设置密码，程序会要求设置一个。<br>开机启动很方便。如果没理由，真的不推荐手工启动。</p>\n<p><strong>命令行参数说明：</strong><br>一、:1，指定控制台的号码。<br>启动多个控制台，可以提供互不影响的多个桌面环境。（大多数人不用多用户操作所以没意义）<br>可以不加此参数，tightvncserver会自动寻找从1开始的下一个空闲控制台。<br>加上此参数，会强制使用指定的控制台，如果此控制台已经启动则报错。加此参数可有效防止无意多次启动程序（会启动多个控制台）白白浪费系统资源。</p>\n<p><strong>特殊的0号控制台</strong><br>0号控制台就是连接真实显示器真正输出图像的那个桌面。<br>对于VNC客户端，不输入端口号登录，默认就登录到0号控制台，方便。<br>但是因为0号是真正的桌面，所以和开机启动桌面环境，或者自己用startx命令，都存在啰嗦的冲突。<br>到头来是个麻烦。因此自动启动的配置教程中，一律使用1号控制台。</p>\n<p>二、-geometry 800×600，分辨率。可以不加。<br>终止VNC控制台：<br>tightvncserver -kill :1<br>查看正在运行的控制台列表：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ps ax | grep Xtightvnc | grep -v grep</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"VNC远程登录树莓派的图形界面\"><a href=\"#VNC远程登录树莓派的图形界面\" class=\"headerlink\" title=\"VNC远程登录树莓派的图形界面\"></a>VNC远程登录树莓派的图形界面</h1><p>安装VNC需要使用命令行。如果需要远程操作安装VNC，就必须通过SSH登录到命令行界面。</p>\n<p><strong>安装</strong></p>\n<p>树莓派命令行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install tightvncserver</div></pre></td></tr></table></figure>\n<p>安装好之后请一定先使用此命令设置一个VNC密码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vncpasswd</div></pre></td></tr></table></figure>\n<p>（先输入操作密码两次，然后会询问是否设置一个查看(view-only)密码，按自己喜欢，一般没必要。）</p>\n<p><strong>开机自动启动</strong></p>\n<p>设置开机启动，需要在/etc/init.d/中创建一个文件。例如tightvncserver：</p>\n<p>（注：启动脚本的名称，有和程序名一致的习惯）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/init.d/tightvncserver</div></pre></td></tr></table></figure>\n<p>内容如下：（putty窗口中按右键=粘贴）#!/bin/sh</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">### BEGIN INIT INFO</div><div class=\"line\"># Provides:          tightvncserver</div><div class=\"line\"># Required-Start:    $local_fs</div><div class=\"line\"># Required-Stop:     $local_fs</div><div class=\"line\"># Default-Start:     2 3 4 5</div><div class=\"line\"># Default-Stop:      0 1 6</div><div class=\"line\"># Short-Description: Start/stop tightvncserver</div><div class=\"line\">### END INIT INFO</div><div class=\"line\"></div><div class=\"line\"># More details see:</div><div class=\"line\"># http://www.penguintutor.com/linux/tightvnc</div><div class=\"line\"></div><div class=\"line\">### Customize this entry</div><div class=\"line\"># Set the USER variable to the name of the user to start tightvncserver under</div><div class=\"line\">export USER=&apos;pi&apos;</div><div class=\"line\">### End customization required</div><div class=\"line\"></div><div class=\"line\">eval cd ~$USER</div><div class=\"line\"></div><div class=\"line\">case &quot;$1&quot; in</div><div class=\"line\">  start)</div><div class=\"line\">    # 启动命令行。此处自定义分辨率、控制台号码或其它参数。</div><div class=\"line\">    su $USER -c &apos;/usr/bin/tightvncserver -depth 16 -geometry 800x600 :1&apos;</div><div class=\"line\">    echo &quot;Starting TightVNC server for $USER &quot;</div><div class=\"line\">    ;;</div><div class=\"line\">  stop)</div><div class=\"line\">    # 终止命令行。此处控制台号码与启动一致。</div><div class=\"line\">    su $USER -c &apos;/usr/bin/tightvncserver -kill :1&apos;</div><div class=\"line\">    echo &quot;Tightvncserver stopped&quot;</div><div class=\"line\">    ;;</div><div class=\"line\">  *)</div><div class=\"line\">    echo &quot;Usage: /etc/init.d/tightvncserver &#123;start|stop&#125;&quot;</div><div class=\"line\">    exit 1</div><div class=\"line\">    ;;</div><div class=\"line\">esac</div><div class=\"line\">exit 0</div></pre></td></tr></table></figure>\n<p>注：少数玩家默认用户不是pi的请自行更改USER变量</p>\n<p>按Ctrl+X，回答Y（存盘）退出nano编辑器。</p>\n<p>然后给tightvncserver文件加执行权限，并更新开机启动列表。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo chmod 755 /etc/init.d/tightvncserver</div><div class=\"line\">sudo update-rc.d tightvncserver defaults</div></pre></td></tr></table></figure>\n<p><strong>附：手工启动与参数</strong>（以下用处不大，没兴趣请略过）</p>\n<p>使用此命令手工启动VNC服务器程序：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">tightvncserver -geometry 800x600 :1</div></pre></td></tr></table></figure>\n<p>如果首次启动，并且未曾使用vncpasswd命令设置密码，程序会要求设置一个。<br>开机启动很方便。如果没理由，真的不推荐手工启动。</p>\n<p><strong>命令行参数说明：</strong><br>一、:1，指定控制台的号码。<br>启动多个控制台，可以提供互不影响的多个桌面环境。（大多数人不用多用户操作所以没意义）<br>可以不加此参数，tightvncserver会自动寻找从1开始的下一个空闲控制台。<br>加上此参数，会强制使用指定的控制台，如果此控制台已经启动则报错。加此参数可有效防止无意多次启动程序（会启动多个控制台）白白浪费系统资源。</p>\n<p><strong>特殊的0号控制台</strong><br>0号控制台就是连接真实显示器真正输出图像的那个桌面。<br>对于VNC客户端，不输入端口号登录，默认就登录到0号控制台，方便。<br>但是因为0号是真正的桌面，所以和开机启动桌面环境，或者自己用startx命令，都存在啰嗦的冲突。<br>到头来是个麻烦。因此自动启动的配置教程中，一律使用1号控制台。</p>\n<p>二、-geometry 800×600，分辨率。可以不加。<br>终止VNC控制台：<br>tightvncserver -kill :1<br>查看正在运行的控制台列表：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ps ax | grep Xtightvnc | grep -v grep</div></pre></td></tr></table></figure>\n"},{"title":"fedora安装VLC","_content":"```\n $> su -\n #> dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm\n #> dnf install vlc\n```\n","source":"_posts/fedora安装vlc.md","raw":"---\ntitle: fedora安装VLC\ntags: [fedora,vlc,linux]\ncategories: fedora\n---\n```\n $> su -\n #> dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm\n #> dnf install vlc\n```\n","slug":"fedora安装vlc","published":1,"date":"2017-05-22T05:03:19.664Z","updated":"2017-05-25T01:02:14.457Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmtrm000g4wvsk78nesrm","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$&gt; su -</div><div class=\"line\">#&gt; dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm</div><div class=\"line\">#&gt; dnf install vlc</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$&gt; su -</div><div class=\"line\">#&gt; dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm</div><div class=\"line\">#&gt; dnf install vlc</div></pre></td></tr></table></figure>\n"},{"title":"fedora清理垃圾","_content":"清除缓存目录(/var/cache/yum)下的软件包\nyum clean packages\n\n清除缓存目录(/var/cache/yum)下的 headers\nyum clean headers\n\n清除缓存目录(/var/cache/yum)下旧的 headers\nyum clean oldheaders\n\n清除缓存目录(/var/cache/yum)下的软件包及旧的headers\nyum clean, yum clean all (= yum clean packages; yum clean oldheaders)\n\n删除废旧内核（升级完系统后通常会有好几个内核)：\n`rpm\n -qa | grep kernel // 查看并列出所有内核\n   rpm -e kernel的名字 // 删除选定名字的内核`\n","source":"_posts/fedora清理垃圾常用命令.md","raw":"---\ntitle: fedora清理垃圾\ntags: [fedora,清理垃圾,linux]\ncategories: fedora\n---\n清除缓存目录(/var/cache/yum)下的软件包\nyum clean packages\n\n清除缓存目录(/var/cache/yum)下的 headers\nyum clean headers\n\n清除缓存目录(/var/cache/yum)下旧的 headers\nyum clean oldheaders\n\n清除缓存目录(/var/cache/yum)下的软件包及旧的headers\nyum clean, yum clean all (= yum clean packages; yum clean oldheaders)\n\n删除废旧内核（升级完系统后通常会有好几个内核)：\n`rpm\n -qa | grep kernel // 查看并列出所有内核\n   rpm -e kernel的名字 // 删除选定名字的内核`\n","slug":"fedora清理垃圾常用命令","published":1,"date":"2017-05-22T05:03:19.671Z","updated":"2017-05-25T01:02:28.960Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmts1000i4wvsbl0gppqe","content":"<p>清除缓存目录(/var/cache/yum)下的软件包<br>yum clean packages</p>\n<p>清除缓存目录(/var/cache/yum)下的 headers<br>yum clean headers</p>\n<p>清除缓存目录(/var/cache/yum)下旧的 headers<br>yum clean oldheaders</p>\n<p>清除缓存目录(/var/cache/yum)下的软件包及旧的headers<br>yum clean, yum clean all (= yum clean packages; yum clean oldheaders)</p>\n<p>删除废旧内核（升级完系统后通常会有好几个内核)：<br><code>rpm\n -qa | grep kernel // 查看并列出所有内核\n   rpm -e kernel的名字 // 删除选定名字的内核</code></p>\n","site":{"data":{}},"excerpt":"","more":"<p>清除缓存目录(/var/cache/yum)下的软件包<br>yum clean packages</p>\n<p>清除缓存目录(/var/cache/yum)下的 headers<br>yum clean headers</p>\n<p>清除缓存目录(/var/cache/yum)下旧的 headers<br>yum clean oldheaders</p>\n<p>清除缓存目录(/var/cache/yum)下的软件包及旧的headers<br>yum clean, yum clean all (= yum clean packages; yum clean oldheaders)</p>\n<p>删除废旧内核（升级完系统后通常会有好几个内核)：<br><code>rpm\n -qa | grep kernel // 查看并列出所有内核\n   rpm -e kernel的名字 // 删除选定名字的内核</code></p>\n"},{"title":"Fedora转换DEB","_content":"\nLinux系统提供一个软件alien， 使用它能够把deb包转换成各种格式。\n\n\n1. 使用yum install alien\n\n\n2. 安装完成后，执行 alien -r XXXXX.deb, 即可转换成对应的XXXXX.rpm包。\n","source":"_posts/fedora转换deb包.md","raw":"---\ntitle: Fedora转换DEB\ntags: [fedora,转换,linux]\ncategories: fedora\n---\n\nLinux系统提供一个软件alien， 使用它能够把deb包转换成各种格式。\n\n\n1. 使用yum install alien\n\n\n2. 安装完成后，执行 alien -r XXXXX.deb, 即可转换成对应的XXXXX.rpm包。\n","slug":"fedora转换deb包","published":1,"date":"2017-05-22T05:03:19.673Z","updated":"2017-05-25T01:02:34.864Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmts1000m4wvs0ciwu5ye","content":"<p>Linux系统提供一个软件alien， 使用它能够把deb包转换成各种格式。</p>\n<ol>\n<li>使用yum install alien</li>\n</ol>\n<ol>\n<li>安装完成后，执行 alien -r XXXXX.deb, 即可转换成对应的XXXXX.rpm包。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>Linux系统提供一个软件alien， 使用它能够把deb包转换成各种格式。</p>\n<ol>\n<li>使用yum install alien</li>\n</ol>\n<ol>\n<li>安装完成后，执行 alien -r XXXXX.deb, 即可转换成对应的XXXXX.rpm包。</li>\n</ol>\n"},{"title":"GitHub","_content":"在github的help页面有介绍如何绑定域名 - [About custom domains for GitHub Pages sites](https://help.github.com/articles/about-custom-domains-for-github-pages-sites/)\n\n下面简单写一下我将Hexo + Github Pages绑定顶级域名的方法：\n\n1. 在自己网站项目repo的根目录添加CNAME，里面的内容为域名不要http以及www等前缀，只需写入域名本身，例如\n\n   ```\n   xxx.com\n   ```\n\n   ** 如果是直接在GitHub网页上添加文件的话，会遇到一个问题就是在通过`hexo g -d`之后hexo会把根目录下的CNAME文件删除。\n\n   所以要把CNAME文件添加到`/source`目录下，这样`hexo g -d`之后hexo会自动把CNAME复制到`/puclic`目录下然后将`/public`路径下的内容进行复制并push到远程`master`分支的根目录下。\n\n   ​\n\n2. 添加DNS Service记录\n   设置两个A记录，分别是@和www，ip地址填\n\n   ```\n   192.30.252.153\n   ```\n\n   | 主机记录 | 记录类型 |      记录值       |\n   | :--: | :--: | :------------: |\n   |  @   |  A   | 192.30.252.153 |\n\n   | 主机记录 | 记录类型 |      记录值       |\n   | :--: | :--: | :------------: |\n   | www  |  A   | 192.30.252.153 |\n","source":"_posts/github绑定顶级域名的方法.md","raw":"---\ntitle: GitHub\ntags: [github,域名]\ncategories: github\n---\n在github的help页面有介绍如何绑定域名 - [About custom domains for GitHub Pages sites](https://help.github.com/articles/about-custom-domains-for-github-pages-sites/)\n\n下面简单写一下我将Hexo + Github Pages绑定顶级域名的方法：\n\n1. 在自己网站项目repo的根目录添加CNAME，里面的内容为域名不要http以及www等前缀，只需写入域名本身，例如\n\n   ```\n   xxx.com\n   ```\n\n   ** 如果是直接在GitHub网页上添加文件的话，会遇到一个问题就是在通过`hexo g -d`之后hexo会把根目录下的CNAME文件删除。\n\n   所以要把CNAME文件添加到`/source`目录下，这样`hexo g -d`之后hexo会自动把CNAME复制到`/puclic`目录下然后将`/public`路径下的内容进行复制并push到远程`master`分支的根目录下。\n\n   ​\n\n2. 添加DNS Service记录\n   设置两个A记录，分别是@和www，ip地址填\n\n   ```\n   192.30.252.153\n   ```\n\n   | 主机记录 | 记录类型 |      记录值       |\n   | :--: | :--: | :------------: |\n   |  @   |  A   | 192.30.252.153 |\n\n   | 主机记录 | 记录类型 |      记录值       |\n   | :--: | :--: | :------------: |\n   | www  |  A   | 192.30.252.153 |\n","slug":"github绑定顶级域名的方法","published":1,"date":"2017-05-22T05:03:19.674Z","updated":"2017-05-25T01:02:46.727Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmts1000p4wvse8pb8vxr","content":"<p>在github的help页面有介绍如何绑定域名 - <a href=\"https://help.github.com/articles/about-custom-domains-for-github-pages-sites/\" target=\"_blank\" rel=\"external\">About custom domains for GitHub Pages sites</a></p>\n<p>下面简单写一下我将Hexo + Github Pages绑定顶级域名的方法：</p>\n<ol>\n<li><p>在自己网站项目repo的根目录添加CNAME，里面的内容为域名不要http以及www等前缀，只需写入域名本身，例如</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">xxx.com</div></pre></td></tr></table></figure>\n<p>** 如果是直接在GitHub网页上添加文件的话，会遇到一个问题就是在通过<code>hexo g -d</code>之后hexo会把根目录下的CNAME文件删除。</p>\n<p>所以要把CNAME文件添加到<code>/source</code>目录下，这样<code>hexo g -d</code>之后hexo会自动把CNAME复制到<code>/puclic</code>目录下然后将<code>/public</code>路径下的内容进行复制并push到远程<code>master</code>分支的根目录下。</p>\n<p>​</p>\n</li>\n<li><p>添加DNS Service记录<br>设置两个A记录，分别是@和www，ip地址填</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">192.30.252.153</div></pre></td></tr></table></figure>\n<p>| 主机记录 | 记录类型 |      记录值       |<br>| :–: | :–: | :————: |<br>|  @   |  A   | 192.30.252.153 |</p>\n<p>| 主机记录 | 记录类型 |      记录值       |<br>| :–: | :–: | :————: |<br>| www  |  A   | 192.30.252.153 |</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>在github的help页面有介绍如何绑定域名 - <a href=\"https://help.github.com/articles/about-custom-domains-for-github-pages-sites/\" target=\"_blank\" rel=\"external\">About custom domains for GitHub Pages sites</a></p>\n<p>下面简单写一下我将Hexo + Github Pages绑定顶级域名的方法：</p>\n<ol>\n<li><p>在自己网站项目repo的根目录添加CNAME，里面的内容为域名不要http以及www等前缀，只需写入域名本身，例如</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">xxx.com</div></pre></td></tr></table></figure>\n<p>** 如果是直接在GitHub网页上添加文件的话，会遇到一个问题就是在通过<code>hexo g -d</code>之后hexo会把根目录下的CNAME文件删除。</p>\n<p>所以要把CNAME文件添加到<code>/source</code>目录下，这样<code>hexo g -d</code>之后hexo会自动把CNAME复制到<code>/puclic</code>目录下然后将<code>/public</code>路径下的内容进行复制并push到远程<code>master</code>分支的根目录下。</p>\n<p>​</p>\n</li>\n<li><p>添加DNS Service记录<br>设置两个A记录，分别是@和www，ip地址填</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">192.30.252.153</div></pre></td></tr></table></figure>\n<p>| 主机记录 | 记录类型 |      记录值       |<br>| :–: | :–: | :————: |<br>|  @   |  A   | 192.30.252.153 |</p>\n<p>| 主机记录 | 记录类型 |      记录值       |<br>| :–: | :–: | :————: |<br>| www  |  A   | 192.30.252.153 |</p>\n</li>\n</ol>\n"},{"title":"hexo-Maupassant主题","_content":"Maupassant最初是由Cho大神为Typecho平台设计开发的一套响应式模板，体积只有20KB，在各种尺寸的设备上表现出色。由于其简洁大气的风格受到许多用户喜爱，目前也已经被移植到了多个平台上，例如：\n\n    Typecho：https://github.com/pagecho/maupassant/\n    Octopress：https://github.com/pagecho/mewpassant/\n    Farbox：https://github.com/pagecho/Maupassant-farbox/\n    Wordpress：https://github.com/iMuFeng/maupassant/\n    Ghost: https://github.com/LjxPrime/maupassant/\n\n我在一年多以前使用Typecho博客程序的时候就用过这套主题（历史文章），后来更换至Hexo后不得不暂时放弃它，直到几个月前发现了由icylogic移植到Hexo的版本，喜出望外，立刻回归到Maupassant。\n\n不过由icylogic最初移植的版本只保留了主题最基本的模块，跟Cho自己发布的Farbox版类似，无法满足大部分爱折腾的Hexoer的需要。因此，在这半年的使用过程中，我将icylogic的源码fork过来，陆陆续续添加了一些想要的功能，目前能够实现的功能已经跟当初Typecho平台上的版本差不多了。\n\n我已经将修改后的代码发布在Github上，有兴趣的朋友可以下载试用，并欢迎反馈问题：\ntufu9441\nmaupassant-hexo\n####安装主题和渲染器：\n```\n$ git clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant\n$ npm install hexo-renderer-jade@0.3.0 --save\n$ npm install hexo-renderer-sass --save\n```\n编辑Hexo目录下的 _config.yml，将theme的值改为maupassant。\n\n注：若npm install hexo-renderer-sass安装时报错，可能是国内网络问题，请尝试使用代理或者切换至淘宝NPM镜像安装，感谢光头强提供的方法。\n功能配置\n\n默认配置:\n_config.yml\n```\nfancybox: true ## If you want to use fancybox please set the value to true.\nduoshuo: ## Your duoshuo_shortname, e.g. username\ndisqus: ## Your disqus_shortname, e.g. username\nuyan: ## Your uyan_id, e.g. 1234567\ngentie: ## Your gentie_productKey, e.g. fc799538c7ad4cf5a5a0c2877a90cbd7\ngoogle_search: true ## Use Google search, true/false.\nbaidu_search: ## Use Baidu search, true/false.\nswiftype: ## Your swiftype_key, e.g. m7b11ZrsT8Me7gzApciT\ntinysou: ## Your tinysou_key, e.g. 4ac092ad8d749fdc6293\nself_search: ## Use a jQuery-based local search engine, true/false.\ngoogle_analytics: ## Your Google Analytics tracking id, e.g. UA-42425684-2\nbaidu_analytics: ## Your Baidu Analytics tracking id, e.g. 8006843039519956000\nshow_category_count: false ## If you want to show the count of categories in the sidebar widget please set the value to true.\ntoc_number: true ## If you want to add list number to toc please set the value to true.\nshareto: true ## If you want to use the share button please set the value to true.\nbusuanzi: true ## If you want to use Busuanzi page views please set the value to true.\nwidgets_on_small_screens: false ## Set to true to enable widgets on small screens.\nmenu:\n  - page: home\n    directory: .\n    icon: fa-home\n  - page: archive\n    directory: archives/\n    icon: fa-archive\n  - page: about\n    directory: about/\n    icon: fa-user\n  - page: rss\n    directory: atom.xml\n    icon: fa-rss\nwidgets: ## Six widgets in sidebar provided: search, category, tag, recent_posts, rencent_comments and links.\n  - search\n  - category\n  - tag\n  - recent_posts\n  - recent_comments\n  - links\nlinks:\n  - title: site-name1\n    url: http://www.example1.com/\n  - title: site-name2\n    url: http://www.example2.com/\n  - title: site-name3\n    url: http://www.example3.com/\n\ntimeline:\n  - num: 1\n    word: 2014/06/12-Start\n  - num: 2\n    word: 2014/11/29-XXX\n  - num: 3\n    word: 2015/02/18-DDD\n  - num: 4\n    word: More\n\n# Static files\njs: js\ncss: css\n# Theme version\nversion: 0.0.0\n```\n\n    fancybox - 是否启用Fancybox图片灯箱效果\n    duoshuo - 多说评论 shortname\n    disqus - Disqus评论 shortname\n    uyan - 友言评论 id\n    gentie - 网易云跟帖 productKey\n    google_search - 默认使用Google搜索引擎\n    baidu_search - 若想使用百度搜索，将其设定为true。\n    swiftype - Swiftype 站内搜索key\n    tinysou - 微搜索 key\n    self_search - 基于jQuery的本地搜索引擎，需要安装hexo-generator-search插件使用。\n    google_analytics - Google Analytics 跟踪ID\n    baidu_analytics - 百度统计 跟踪ID\n    show_category_count - 是否显示侧边栏分类数目\n    toc_number - 是否显示文章中目录列表自动编号\n    shareto - 是否使用分享按鈕\n    busuanzi - 是否使用不蒜子页面访问计数\n    widgets_on_small_screens - 是否在移动设备屏幕底部显示侧边栏\n    menu - 自定义页面及菜单，依照已有格式填写。填写后请在source目录下建立相应名称的文件夹，并包含index.md文件，以正确显示页面。导航菜单中集成了FontAwesome图标字体，可以在这里选择新的图标，并按照相关说明使用。\n    widgets - 选择和排列希望使用的侧边栏小工具。\n    links - 友情链接，请依照格式填写。\n    timeline - 网站历史时间线，在页面front-matter中设置layout: timeline可显示。\n    Static files - 静态文件存储路径，方便设置CDN缓存。\n    Theme version - 主题版本，便于静态文件更新后刷新CDN缓存。\n#### 主题特性\n\n##### 网站图标\n\n若要设置网站Favicon，可以将favicon.ico放在Hexo根目录的source文件夹下，建议的大小：32px*32px。\n\n若要为网站添加苹果设备图标，请将命名为apple-touch-icon.png的图片放在同样的位置，建议的大小：114px*114px。\n\n##### 文章摘要\n\n首页默认显示文章摘要而非全文，可以在文章的front-matter中填写一项description:来设置你想显示的摘要，或者直接在文章内容中插入<!--more-->以隐藏后面的内容。\n若两者都未设置，则自动截取文章第一段作为摘要。\n\n##### 添加页面\n\n在source目录下建立相应名称的文件夹，然后在文件夹中建立index.md文件，并在index.md的front-matter中设置layout为layout: page。若需要单栏页面，就将layout设置为 layout: single-column。\n\n##### 文章目录\n\n在文章的front-matter中添加toc: true即可让该篇文章显示目录。\n\n##### 文章评论\n\n文章和页面的评论功能可以通过在front-matter中设置comments: true或comments: false来进行开启或关闭（默认开启）。\n\n##### 语法高亮\n\n要启用代码高亮，请在Hexo目录的_config.yml中将highlight选项按照如下设置：\n```\nhighlight:\n  enable: true\n  auto_detect: true\n  line_number: true\n  tab_replace:\n```\n##### 数学公式\n\n要启用数学公式支持，请在Hexo目录的_config.yml中添加：\n```\nmathjax: true\n```\n并在相应文章的front-matter中添加mathjax: true，例如：\n```\ntitle: Test Math\ndate: 2016-04-05 14:16:00\ncategories: math\nmathjax: true\n---\n```\n数学公式的默认定界符是$$...$$和\\\\[...\\\\]（对于块级公式），以及$...$和\\\\(...\\\\)（对于行内公式）。\n\n但是，如果你的文章内容中经常出现美元符号“$”, 或者说你想将“$”用作美元符号而非行内公式的定界符，请在Hexo目录的_config.yml中添加：\n```\nmathjax2: true\n```\n而不是mathjax: true。 相应地，在需要使用数学公式的文章的front-matter中也添加mathjax2: true。\n\n示例。\n\n##### 支持语言\n\n目前支持简体中文（zh-CN），繁体中文（zh-TW），英语（en），法语（fr-FR），德语（de-DE），韩语（ko）和西班牙语（es-ES），欢迎翻译至其它语言。\n问题解决\n\n    检查一下终端当前的目录是否为Hexo的根目录，并包含source/和themes/。\n\n    使用过程中遇到问题欢迎提交issue。\n","source":"_posts/hexo-Maupassant主题.md","raw":"---\ntitle: hexo-Maupassant主题\ntags: [hexo,主题,前端]\ncategories: hexo\n---\nMaupassant最初是由Cho大神为Typecho平台设计开发的一套响应式模板，体积只有20KB，在各种尺寸的设备上表现出色。由于其简洁大气的风格受到许多用户喜爱，目前也已经被移植到了多个平台上，例如：\n\n    Typecho：https://github.com/pagecho/maupassant/\n    Octopress：https://github.com/pagecho/mewpassant/\n    Farbox：https://github.com/pagecho/Maupassant-farbox/\n    Wordpress：https://github.com/iMuFeng/maupassant/\n    Ghost: https://github.com/LjxPrime/maupassant/\n\n我在一年多以前使用Typecho博客程序的时候就用过这套主题（历史文章），后来更换至Hexo后不得不暂时放弃它，直到几个月前发现了由icylogic移植到Hexo的版本，喜出望外，立刻回归到Maupassant。\n\n不过由icylogic最初移植的版本只保留了主题最基本的模块，跟Cho自己发布的Farbox版类似，无法满足大部分爱折腾的Hexoer的需要。因此，在这半年的使用过程中，我将icylogic的源码fork过来，陆陆续续添加了一些想要的功能，目前能够实现的功能已经跟当初Typecho平台上的版本差不多了。\n\n我已经将修改后的代码发布在Github上，有兴趣的朋友可以下载试用，并欢迎反馈问题：\ntufu9441\nmaupassant-hexo\n####安装主题和渲染器：\n```\n$ git clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant\n$ npm install hexo-renderer-jade@0.3.0 --save\n$ npm install hexo-renderer-sass --save\n```\n编辑Hexo目录下的 _config.yml，将theme的值改为maupassant。\n\n注：若npm install hexo-renderer-sass安装时报错，可能是国内网络问题，请尝试使用代理或者切换至淘宝NPM镜像安装，感谢光头强提供的方法。\n功能配置\n\n默认配置:\n_config.yml\n```\nfancybox: true ## If you want to use fancybox please set the value to true.\nduoshuo: ## Your duoshuo_shortname, e.g. username\ndisqus: ## Your disqus_shortname, e.g. username\nuyan: ## Your uyan_id, e.g. 1234567\ngentie: ## Your gentie_productKey, e.g. fc799538c7ad4cf5a5a0c2877a90cbd7\ngoogle_search: true ## Use Google search, true/false.\nbaidu_search: ## Use Baidu search, true/false.\nswiftype: ## Your swiftype_key, e.g. m7b11ZrsT8Me7gzApciT\ntinysou: ## Your tinysou_key, e.g. 4ac092ad8d749fdc6293\nself_search: ## Use a jQuery-based local search engine, true/false.\ngoogle_analytics: ## Your Google Analytics tracking id, e.g. UA-42425684-2\nbaidu_analytics: ## Your Baidu Analytics tracking id, e.g. 8006843039519956000\nshow_category_count: false ## If you want to show the count of categories in the sidebar widget please set the value to true.\ntoc_number: true ## If you want to add list number to toc please set the value to true.\nshareto: true ## If you want to use the share button please set the value to true.\nbusuanzi: true ## If you want to use Busuanzi page views please set the value to true.\nwidgets_on_small_screens: false ## Set to true to enable widgets on small screens.\nmenu:\n  - page: home\n    directory: .\n    icon: fa-home\n  - page: archive\n    directory: archives/\n    icon: fa-archive\n  - page: about\n    directory: about/\n    icon: fa-user\n  - page: rss\n    directory: atom.xml\n    icon: fa-rss\nwidgets: ## Six widgets in sidebar provided: search, category, tag, recent_posts, rencent_comments and links.\n  - search\n  - category\n  - tag\n  - recent_posts\n  - recent_comments\n  - links\nlinks:\n  - title: site-name1\n    url: http://www.example1.com/\n  - title: site-name2\n    url: http://www.example2.com/\n  - title: site-name3\n    url: http://www.example3.com/\n\ntimeline:\n  - num: 1\n    word: 2014/06/12-Start\n  - num: 2\n    word: 2014/11/29-XXX\n  - num: 3\n    word: 2015/02/18-DDD\n  - num: 4\n    word: More\n\n# Static files\njs: js\ncss: css\n# Theme version\nversion: 0.0.0\n```\n\n    fancybox - 是否启用Fancybox图片灯箱效果\n    duoshuo - 多说评论 shortname\n    disqus - Disqus评论 shortname\n    uyan - 友言评论 id\n    gentie - 网易云跟帖 productKey\n    google_search - 默认使用Google搜索引擎\n    baidu_search - 若想使用百度搜索，将其设定为true。\n    swiftype - Swiftype 站内搜索key\n    tinysou - 微搜索 key\n    self_search - 基于jQuery的本地搜索引擎，需要安装hexo-generator-search插件使用。\n    google_analytics - Google Analytics 跟踪ID\n    baidu_analytics - 百度统计 跟踪ID\n    show_category_count - 是否显示侧边栏分类数目\n    toc_number - 是否显示文章中目录列表自动编号\n    shareto - 是否使用分享按鈕\n    busuanzi - 是否使用不蒜子页面访问计数\n    widgets_on_small_screens - 是否在移动设备屏幕底部显示侧边栏\n    menu - 自定义页面及菜单，依照已有格式填写。填写后请在source目录下建立相应名称的文件夹，并包含index.md文件，以正确显示页面。导航菜单中集成了FontAwesome图标字体，可以在这里选择新的图标，并按照相关说明使用。\n    widgets - 选择和排列希望使用的侧边栏小工具。\n    links - 友情链接，请依照格式填写。\n    timeline - 网站历史时间线，在页面front-matter中设置layout: timeline可显示。\n    Static files - 静态文件存储路径，方便设置CDN缓存。\n    Theme version - 主题版本，便于静态文件更新后刷新CDN缓存。\n#### 主题特性\n\n##### 网站图标\n\n若要设置网站Favicon，可以将favicon.ico放在Hexo根目录的source文件夹下，建议的大小：32px*32px。\n\n若要为网站添加苹果设备图标，请将命名为apple-touch-icon.png的图片放在同样的位置，建议的大小：114px*114px。\n\n##### 文章摘要\n\n首页默认显示文章摘要而非全文，可以在文章的front-matter中填写一项description:来设置你想显示的摘要，或者直接在文章内容中插入<!--more-->以隐藏后面的内容。\n若两者都未设置，则自动截取文章第一段作为摘要。\n\n##### 添加页面\n\n在source目录下建立相应名称的文件夹，然后在文件夹中建立index.md文件，并在index.md的front-matter中设置layout为layout: page。若需要单栏页面，就将layout设置为 layout: single-column。\n\n##### 文章目录\n\n在文章的front-matter中添加toc: true即可让该篇文章显示目录。\n\n##### 文章评论\n\n文章和页面的评论功能可以通过在front-matter中设置comments: true或comments: false来进行开启或关闭（默认开启）。\n\n##### 语法高亮\n\n要启用代码高亮，请在Hexo目录的_config.yml中将highlight选项按照如下设置：\n```\nhighlight:\n  enable: true\n  auto_detect: true\n  line_number: true\n  tab_replace:\n```\n##### 数学公式\n\n要启用数学公式支持，请在Hexo目录的_config.yml中添加：\n```\nmathjax: true\n```\n并在相应文章的front-matter中添加mathjax: true，例如：\n```\ntitle: Test Math\ndate: 2016-04-05 14:16:00\ncategories: math\nmathjax: true\n---\n```\n数学公式的默认定界符是$$...$$和\\\\[...\\\\]（对于块级公式），以及$...$和\\\\(...\\\\)（对于行内公式）。\n\n但是，如果你的文章内容中经常出现美元符号“$”, 或者说你想将“$”用作美元符号而非行内公式的定界符，请在Hexo目录的_config.yml中添加：\n```\nmathjax2: true\n```\n而不是mathjax: true。 相应地，在需要使用数学公式的文章的front-matter中也添加mathjax2: true。\n\n示例。\n\n##### 支持语言\n\n目前支持简体中文（zh-CN），繁体中文（zh-TW），英语（en），法语（fr-FR），德语（de-DE），韩语（ko）和西班牙语（es-ES），欢迎翻译至其它语言。\n问题解决\n\n    检查一下终端当前的目录是否为Hexo的根目录，并包含source/和themes/。\n\n    使用过程中遇到问题欢迎提交issue。\n","slug":"hexo-Maupassant主题","published":1,"date":"2017-05-25T00:42:17.166Z","updated":"2017-05-31T08:00:41.032Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmts1000u4wvsitimdl9q","content":"<p>Maupassant最初是由Cho大神为Typecho平台设计开发的一套响应式模板，体积只有20KB，在各种尺寸的设备上表现出色。由于其简洁大气的风格受到许多用户喜爱，目前也已经被移植到了多个平台上，例如：</p>\n<pre><code>Typecho：https://github.com/pagecho/maupassant/\nOctopress：https://github.com/pagecho/mewpassant/\nFarbox：https://github.com/pagecho/Maupassant-farbox/\nWordpress：https://github.com/iMuFeng/maupassant/\nGhost: https://github.com/LjxPrime/maupassant/\n</code></pre><p>我在一年多以前使用Typecho博客程序的时候就用过这套主题（历史文章），后来更换至Hexo后不得不暂时放弃它，直到几个月前发现了由icylogic移植到Hexo的版本，喜出望外，立刻回归到Maupassant。</p>\n<p>不过由icylogic最初移植的版本只保留了主题最基本的模块，跟Cho自己发布的Farbox版类似，无法满足大部分爱折腾的Hexoer的需要。因此，在这半年的使用过程中，我将icylogic的源码fork过来，陆陆续续添加了一些想要的功能，目前能够实现的功能已经跟当初Typecho平台上的版本差不多了。</p>\n<p>我已经将修改后的代码发布在Github上，有兴趣的朋友可以下载试用，并欢迎反馈问题：<br>tufu9441<br>maupassant-hexo</p>\n<p>####安装主题和渲染器：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant</div><div class=\"line\">$ npm install hexo-renderer-jade@0.3.0 --save</div><div class=\"line\">$ npm install hexo-renderer-sass --save</div></pre></td></tr></table></figure></p>\n<p>编辑Hexo目录下的 _config.yml，将theme的值改为maupassant。</p>\n<p>注：若npm install hexo-renderer-sass安装时报错，可能是国内网络问题，请尝试使用代理或者切换至淘宝NPM镜像安装，感谢光头强提供的方法。<br>功能配置</p>\n<p>默认配置:<br>_config.yml<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div></pre></td><td class=\"code\"><pre><div class=\"line\">fancybox: true ## If you want to use fancybox please set the value to true.</div><div class=\"line\">duoshuo: ## Your duoshuo_shortname, e.g. username</div><div class=\"line\">disqus: ## Your disqus_shortname, e.g. username</div><div class=\"line\">uyan: ## Your uyan_id, e.g. 1234567</div><div class=\"line\">gentie: ## Your gentie_productKey, e.g. fc799538c7ad4cf5a5a0c2877a90cbd7</div><div class=\"line\">google_search: true ## Use Google search, true/false.</div><div class=\"line\">baidu_search: ## Use Baidu search, true/false.</div><div class=\"line\">swiftype: ## Your swiftype_key, e.g. m7b11ZrsT8Me7gzApciT</div><div class=\"line\">tinysou: ## Your tinysou_key, e.g. 4ac092ad8d749fdc6293</div><div class=\"line\">self_search: ## Use a jQuery-based local search engine, true/false.</div><div class=\"line\">google_analytics: ## Your Google Analytics tracking id, e.g. UA-42425684-2</div><div class=\"line\">baidu_analytics: ## Your Baidu Analytics tracking id, e.g. 8006843039519956000</div><div class=\"line\">show_category_count: false ## If you want to show the count of categories in the sidebar widget please set the value to true.</div><div class=\"line\">toc_number: true ## If you want to add list number to toc please set the value to true.</div><div class=\"line\">shareto: true ## If you want to use the share button please set the value to true.</div><div class=\"line\">busuanzi: true ## If you want to use Busuanzi page views please set the value to true.</div><div class=\"line\">widgets_on_small_screens: false ## Set to true to enable widgets on small screens.</div><div class=\"line\">menu:</div><div class=\"line\">  - page: home</div><div class=\"line\">    directory: .</div><div class=\"line\">    icon: fa-home</div><div class=\"line\">  - page: archive</div><div class=\"line\">    directory: archives/</div><div class=\"line\">    icon: fa-archive</div><div class=\"line\">  - page: about</div><div class=\"line\">    directory: about/</div><div class=\"line\">    icon: fa-user</div><div class=\"line\">  - page: rss</div><div class=\"line\">    directory: atom.xml</div><div class=\"line\">    icon: fa-rss</div><div class=\"line\">widgets: ## Six widgets in sidebar provided: search, category, tag, recent_posts, rencent_comments and links.</div><div class=\"line\">  - search</div><div class=\"line\">  - category</div><div class=\"line\">  - tag</div><div class=\"line\">  - recent_posts</div><div class=\"line\">  - recent_comments</div><div class=\"line\">  - links</div><div class=\"line\">links:</div><div class=\"line\">  - title: site-name1</div><div class=\"line\">    url: http://www.example1.com/</div><div class=\"line\">  - title: site-name2</div><div class=\"line\">    url: http://www.example2.com/</div><div class=\"line\">  - title: site-name3</div><div class=\"line\">    url: http://www.example3.com/</div><div class=\"line\"></div><div class=\"line\">timeline:</div><div class=\"line\">  - num: 1</div><div class=\"line\">    word: 2014/06/12-Start</div><div class=\"line\">  - num: 2</div><div class=\"line\">    word: 2014/11/29-XXX</div><div class=\"line\">  - num: 3</div><div class=\"line\">    word: 2015/02/18-DDD</div><div class=\"line\">  - num: 4</div><div class=\"line\">    word: More</div><div class=\"line\"></div><div class=\"line\"># Static files</div><div class=\"line\">js: js</div><div class=\"line\">css: css</div><div class=\"line\"># Theme version</div><div class=\"line\">version: 0.0.0</div></pre></td></tr></table></figure></p>\n<pre><code>fancybox - 是否启用Fancybox图片灯箱效果\nduoshuo - 多说评论 shortname\ndisqus - Disqus评论 shortname\nuyan - 友言评论 id\ngentie - 网易云跟帖 productKey\ngoogle_search - 默认使用Google搜索引擎\nbaidu_search - 若想使用百度搜索，将其设定为true。\nswiftype - Swiftype 站内搜索key\ntinysou - 微搜索 key\nself_search - 基于jQuery的本地搜索引擎，需要安装hexo-generator-search插件使用。\ngoogle_analytics - Google Analytics 跟踪ID\nbaidu_analytics - 百度统计 跟踪ID\nshow_category_count - 是否显示侧边栏分类数目\ntoc_number - 是否显示文章中目录列表自动编号\nshareto - 是否使用分享按鈕\nbusuanzi - 是否使用不蒜子页面访问计数\nwidgets_on_small_screens - 是否在移动设备屏幕底部显示侧边栏\nmenu - 自定义页面及菜单，依照已有格式填写。填写后请在source目录下建立相应名称的文件夹，并包含index.md文件，以正确显示页面。导航菜单中集成了FontAwesome图标字体，可以在这里选择新的图标，并按照相关说明使用。\nwidgets - 选择和排列希望使用的侧边栏小工具。\nlinks - 友情链接，请依照格式填写。\ntimeline - 网站历史时间线，在页面front-matter中设置layout: timeline可显示。\nStatic files - 静态文件存储路径，方便设置CDN缓存。\nTheme version - 主题版本，便于静态文件更新后刷新CDN缓存。\n</code></pre><h4 id=\"主题特性\"><a href=\"#主题特性\" class=\"headerlink\" title=\"主题特性\"></a>主题特性</h4><h5 id=\"网站图标\"><a href=\"#网站图标\" class=\"headerlink\" title=\"网站图标\"></a>网站图标</h5><p>若要设置网站Favicon，可以将favicon.ico放在Hexo根目录的source文件夹下，建议的大小：32px*32px。</p>\n<p>若要为网站添加苹果设备图标，请将命名为apple-touch-icon.png的图片放在同样的位置，建议的大小：114px*114px。</p>\n<h5 id=\"文章摘要\"><a href=\"#文章摘要\" class=\"headerlink\" title=\"文章摘要\"></a>文章摘要</h5><p>首页默认显示文章摘要而非全文，可以在文章的front-matter中填写一项description:来设置你想显示的摘要，或者直接在文章内容中插入<a id=\"more\"></a>以隐藏后面的内容。<br>若两者都未设置，则自动截取文章第一段作为摘要。</p>\n<h5 id=\"添加页面\"><a href=\"#添加页面\" class=\"headerlink\" title=\"添加页面\"></a>添加页面</h5><p>在source目录下建立相应名称的文件夹，然后在文件夹中建立index.md文件，并在index.md的front-matter中设置layout为layout: page。若需要单栏页面，就将layout设置为 layout: single-column。</p>\n<h5 id=\"文章目录\"><a href=\"#文章目录\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h5><p>在文章的front-matter中添加toc: true即可让该篇文章显示目录。</p>\n<h5 id=\"文章评论\"><a href=\"#文章评论\" class=\"headerlink\" title=\"文章评论\"></a>文章评论</h5><p>文章和页面的评论功能可以通过在front-matter中设置comments: true或comments: false来进行开启或关闭（默认开启）。</p>\n<h5 id=\"语法高亮\"><a href=\"#语法高亮\" class=\"headerlink\" title=\"语法高亮\"></a>语法高亮</h5><p>要启用代码高亮，请在Hexo目录的_config.yml中将highlight选项按照如下设置：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">highlight:</div><div class=\"line\">  enable: true</div><div class=\"line\">  auto_detect: true</div><div class=\"line\">  line_number: true</div><div class=\"line\">  tab_replace:</div></pre></td></tr></table></figure></p>\n<h5 id=\"数学公式\"><a href=\"#数学公式\" class=\"headerlink\" title=\"数学公式\"></a>数学公式</h5><p>要启用数学公式支持，请在Hexo目录的_config.yml中添加：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mathjax: true</div></pre></td></tr></table></figure></p>\n<p>并在相应文章的front-matter中添加mathjax: true，例如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">title: Test Math</div><div class=\"line\">date: 2016-04-05 14:16:00</div><div class=\"line\">categories: math</div><div class=\"line\">mathjax: true</div><div class=\"line\">---</div></pre></td></tr></table></figure></p>\n<p>数学公式的默认定界符是$$…$$和\\[…\\]（对于块级公式），以及$…$和\\(…\\)（对于行内公式）。</p>\n<p>但是，如果你的文章内容中经常出现美元符号“$”, 或者说你想将“$”用作美元符号而非行内公式的定界符，请在Hexo目录的_config.yml中添加：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mathjax2: true</div></pre></td></tr></table></figure></p>\n<p>而不是mathjax: true。 相应地，在需要使用数学公式的文章的front-matter中也添加mathjax2: true。</p>\n<p>示例。</p>\n<h5 id=\"支持语言\"><a href=\"#支持语言\" class=\"headerlink\" title=\"支持语言\"></a>支持语言</h5><p>目前支持简体中文（zh-CN），繁体中文（zh-TW），英语（en），法语（fr-FR），德语（de-DE），韩语（ko）和西班牙语（es-ES），欢迎翻译至其它语言。<br>问题解决</p>\n<pre><code>检查一下终端当前的目录是否为Hexo的根目录，并包含source/和themes/。\n\n使用过程中遇到问题欢迎提交issue。\n</code></pre>","site":{"data":{}},"excerpt":"<p>Maupassant最初是由Cho大神为Typecho平台设计开发的一套响应式模板，体积只有20KB，在各种尺寸的设备上表现出色。由于其简洁大气的风格受到许多用户喜爱，目前也已经被移植到了多个平台上，例如：</p>\n<pre><code>Typecho：https://github.com/pagecho/maupassant/\nOctopress：https://github.com/pagecho/mewpassant/\nFarbox：https://github.com/pagecho/Maupassant-farbox/\nWordpress：https://github.com/iMuFeng/maupassant/\nGhost: https://github.com/LjxPrime/maupassant/\n</code></pre><p>我在一年多以前使用Typecho博客程序的时候就用过这套主题（历史文章），后来更换至Hexo后不得不暂时放弃它，直到几个月前发现了由icylogic移植到Hexo的版本，喜出望外，立刻回归到Maupassant。</p>\n<p>不过由icylogic最初移植的版本只保留了主题最基本的模块，跟Cho自己发布的Farbox版类似，无法满足大部分爱折腾的Hexoer的需要。因此，在这半年的使用过程中，我将icylogic的源码fork过来，陆陆续续添加了一些想要的功能，目前能够实现的功能已经跟当初Typecho平台上的版本差不多了。</p>\n<p>我已经将修改后的代码发布在Github上，有兴趣的朋友可以下载试用，并欢迎反馈问题：<br>tufu9441<br>maupassant-hexo</p>\n<p>####安装主题和渲染器：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant</div><div class=\"line\">$ npm install hexo-renderer-jade@0.3.0 --save</div><div class=\"line\">$ npm install hexo-renderer-sass --save</div></pre></td></tr></table></figure></p>\n<p>编辑Hexo目录下的 _config.yml，将theme的值改为maupassant。</p>\n<p>注：若npm install hexo-renderer-sass安装时报错，可能是国内网络问题，请尝试使用代理或者切换至淘宝NPM镜像安装，感谢光头强提供的方法。<br>功能配置</p>\n<p>默认配置:<br>_config.yml<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div></pre></td><td class=\"code\"><pre><div class=\"line\">fancybox: true ## If you want to use fancybox please set the value to true.</div><div class=\"line\">duoshuo: ## Your duoshuo_shortname, e.g. username</div><div class=\"line\">disqus: ## Your disqus_shortname, e.g. username</div><div class=\"line\">uyan: ## Your uyan_id, e.g. 1234567</div><div class=\"line\">gentie: ## Your gentie_productKey, e.g. fc799538c7ad4cf5a5a0c2877a90cbd7</div><div class=\"line\">google_search: true ## Use Google search, true/false.</div><div class=\"line\">baidu_search: ## Use Baidu search, true/false.</div><div class=\"line\">swiftype: ## Your swiftype_key, e.g. m7b11ZrsT8Me7gzApciT</div><div class=\"line\">tinysou: ## Your tinysou_key, e.g. 4ac092ad8d749fdc6293</div><div class=\"line\">self_search: ## Use a jQuery-based local search engine, true/false.</div><div class=\"line\">google_analytics: ## Your Google Analytics tracking id, e.g. UA-42425684-2</div><div class=\"line\">baidu_analytics: ## Your Baidu Analytics tracking id, e.g. 8006843039519956000</div><div class=\"line\">show_category_count: false ## If you want to show the count of categories in the sidebar widget please set the value to true.</div><div class=\"line\">toc_number: true ## If you want to add list number to toc please set the value to true.</div><div class=\"line\">shareto: true ## If you want to use the share button please set the value to true.</div><div class=\"line\">busuanzi: true ## If you want to use Busuanzi page views please set the value to true.</div><div class=\"line\">widgets_on_small_screens: false ## Set to true to enable widgets on small screens.</div><div class=\"line\">menu:</div><div class=\"line\">  - page: home</div><div class=\"line\">    directory: .</div><div class=\"line\">    icon: fa-home</div><div class=\"line\">  - page: archive</div><div class=\"line\">    directory: archives/</div><div class=\"line\">    icon: fa-archive</div><div class=\"line\">  - page: about</div><div class=\"line\">    directory: about/</div><div class=\"line\">    icon: fa-user</div><div class=\"line\">  - page: rss</div><div class=\"line\">    directory: atom.xml</div><div class=\"line\">    icon: fa-rss</div><div class=\"line\">widgets: ## Six widgets in sidebar provided: search, category, tag, recent_posts, rencent_comments and links.</div><div class=\"line\">  - search</div><div class=\"line\">  - category</div><div class=\"line\">  - tag</div><div class=\"line\">  - recent_posts</div><div class=\"line\">  - recent_comments</div><div class=\"line\">  - links</div><div class=\"line\">links:</div><div class=\"line\">  - title: site-name1</div><div class=\"line\">    url: http://www.example1.com/</div><div class=\"line\">  - title: site-name2</div><div class=\"line\">    url: http://www.example2.com/</div><div class=\"line\">  - title: site-name3</div><div class=\"line\">    url: http://www.example3.com/</div><div class=\"line\"></div><div class=\"line\">timeline:</div><div class=\"line\">  - num: 1</div><div class=\"line\">    word: 2014/06/12-Start</div><div class=\"line\">  - num: 2</div><div class=\"line\">    word: 2014/11/29-XXX</div><div class=\"line\">  - num: 3</div><div class=\"line\">    word: 2015/02/18-DDD</div><div class=\"line\">  - num: 4</div><div class=\"line\">    word: More</div><div class=\"line\"></div><div class=\"line\"># Static files</div><div class=\"line\">js: js</div><div class=\"line\">css: css</div><div class=\"line\"># Theme version</div><div class=\"line\">version: 0.0.0</div></pre></td></tr></table></figure></p>\n<pre><code>fancybox - 是否启用Fancybox图片灯箱效果\nduoshuo - 多说评论 shortname\ndisqus - Disqus评论 shortname\nuyan - 友言评论 id\ngentie - 网易云跟帖 productKey\ngoogle_search - 默认使用Google搜索引擎\nbaidu_search - 若想使用百度搜索，将其设定为true。\nswiftype - Swiftype 站内搜索key\ntinysou - 微搜索 key\nself_search - 基于jQuery的本地搜索引擎，需要安装hexo-generator-search插件使用。\ngoogle_analytics - Google Analytics 跟踪ID\nbaidu_analytics - 百度统计 跟踪ID\nshow_category_count - 是否显示侧边栏分类数目\ntoc_number - 是否显示文章中目录列表自动编号\nshareto - 是否使用分享按鈕\nbusuanzi - 是否使用不蒜子页面访问计数\nwidgets_on_small_screens - 是否在移动设备屏幕底部显示侧边栏\nmenu - 自定义页面及菜单，依照已有格式填写。填写后请在source目录下建立相应名称的文件夹，并包含index.md文件，以正确显示页面。导航菜单中集成了FontAwesome图标字体，可以在这里选择新的图标，并按照相关说明使用。\nwidgets - 选择和排列希望使用的侧边栏小工具。\nlinks - 友情链接，请依照格式填写。\ntimeline - 网站历史时间线，在页面front-matter中设置layout: timeline可显示。\nStatic files - 静态文件存储路径，方便设置CDN缓存。\nTheme version - 主题版本，便于静态文件更新后刷新CDN缓存。\n</code></pre><h4 id=\"主题特性\"><a href=\"#主题特性\" class=\"headerlink\" title=\"主题特性\"></a>主题特性</h4><h5 id=\"网站图标\"><a href=\"#网站图标\" class=\"headerlink\" title=\"网站图标\"></a>网站图标</h5><p>若要设置网站Favicon，可以将favicon.ico放在Hexo根目录的source文件夹下，建议的大小：32px*32px。</p>\n<p>若要为网站添加苹果设备图标，请将命名为apple-touch-icon.png的图片放在同样的位置，建议的大小：114px*114px。</p>\n<h5 id=\"文章摘要\"><a href=\"#文章摘要\" class=\"headerlink\" title=\"文章摘要\"></a>文章摘要</h5><p>首页默认显示文章摘要而非全文，可以在文章的front-matter中填写一项description:来设置你想显示的摘要，或者直接在文章内容中插入","more":"以隐藏后面的内容。<br>若两者都未设置，则自动截取文章第一段作为摘要。</p>\n<h5 id=\"添加页面\"><a href=\"#添加页面\" class=\"headerlink\" title=\"添加页面\"></a>添加页面</h5><p>在source目录下建立相应名称的文件夹，然后在文件夹中建立index.md文件，并在index.md的front-matter中设置layout为layout: page。若需要单栏页面，就将layout设置为 layout: single-column。</p>\n<h5 id=\"文章目录\"><a href=\"#文章目录\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h5><p>在文章的front-matter中添加toc: true即可让该篇文章显示目录。</p>\n<h5 id=\"文章评论\"><a href=\"#文章评论\" class=\"headerlink\" title=\"文章评论\"></a>文章评论</h5><p>文章和页面的评论功能可以通过在front-matter中设置comments: true或comments: false来进行开启或关闭（默认开启）。</p>\n<h5 id=\"语法高亮\"><a href=\"#语法高亮\" class=\"headerlink\" title=\"语法高亮\"></a>语法高亮</h5><p>要启用代码高亮，请在Hexo目录的_config.yml中将highlight选项按照如下设置：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">highlight:</div><div class=\"line\">  enable: true</div><div class=\"line\">  auto_detect: true</div><div class=\"line\">  line_number: true</div><div class=\"line\">  tab_replace:</div></pre></td></tr></table></figure></p>\n<h5 id=\"数学公式\"><a href=\"#数学公式\" class=\"headerlink\" title=\"数学公式\"></a>数学公式</h5><p>要启用数学公式支持，请在Hexo目录的_config.yml中添加：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mathjax: true</div></pre></td></tr></table></figure></p>\n<p>并在相应文章的front-matter中添加mathjax: true，例如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">title: Test Math</div><div class=\"line\">date: 2016-04-05 14:16:00</div><div class=\"line\">categories: math</div><div class=\"line\">mathjax: true</div><div class=\"line\">---</div></pre></td></tr></table></figure></p>\n<p>数学公式的默认定界符是$$…$$和\\[…\\]（对于块级公式），以及$…$和\\(…\\)（对于行内公式）。</p>\n<p>但是，如果你的文章内容中经常出现美元符号“$”, 或者说你想将“$”用作美元符号而非行内公式的定界符，请在Hexo目录的_config.yml中添加：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">mathjax2: true</div></pre></td></tr></table></figure></p>\n<p>而不是mathjax: true。 相应地，在需要使用数学公式的文章的front-matter中也添加mathjax2: true。</p>\n<p>示例。</p>\n<h5 id=\"支持语言\"><a href=\"#支持语言\" class=\"headerlink\" title=\"支持语言\"></a>支持语言</h5><p>目前支持简体中文（zh-CN），繁体中文（zh-TW），英语（en），法语（fr-FR），德语（de-DE），韩语（ko）和西班牙语（es-ES），欢迎翻译至其它语言。<br>问题解决</p>\n<pre><code>检查一下终端当前的目录是否为Hexo的根目录，并包含source/和themes/。\n\n使用过程中遇到问题欢迎提交issue。\n</code></pre>"},{"title":"hexo常用命令","toc":true,"comments":1,"_content":"\n## hexo\n\n```\nnpm install hexo -g #安装\nnpm update hexo -g #升级\nhexo init #初始化\n\n```\n\n## 简写\n\n`hexo n \"我的博客\"` == `hexo new \"我的博客\"` #新建文章\n`hexo p` == `hexo publish`\n`hexo g` == `hexo generate`#生成\n`hexo s` == `hexo server` #启动服务预览\n`hexo d` == `hexo deploy`#部署\n\n## 服务器\n\n`hexo server` #Hexo 会监视文件变动并自动更新，您无须重启服务器。\n`hexo server -s` #静态模式\n`hexo server -p 5000` #更改端口\n`hexo server -i 192.168.1.1` #自定义 IP\n\n`hexo clean` #清除缓存 网页正常情况下可以忽略此条命令\n`hexo g` #生成静态网页\n`hexo d` #开始部署\n\n### 监视文件变动\n\n`hexo generate` #使用 Hexo 生成静态文件快速而且简单\n`hexo generate --watch` #监视文件变动\n\n### 完成后部署\n\n> 两个命令的作用是相同的\n> `hexo generate --deploy`\n> `hexo deploy --generate`\n\n`hexo deploy -g`\n`hexo server -g`\n\n## 草稿\n\n`hexo publish [layout] <title>`\n\n## 模版\n\n`hexo new \"postName\"` #新建文章\n`hexo new page \"pageName\"` #新建页面\n`hexo generate` #生成静态页面至public目录\n`hexo server` #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\n`hexo deploy` #将.deploy目录部署到GitHub\n\n`hexo new [layout] <title>`\n`hexo new photo \"My Gallery\"`\n`hexo new \"Hello World\" --lang tw`\n\n| 变量     | 描述     |\n| ------ | ------ |\n| layout | 布局     |\n| title  | 标题     |\n| date   | 文件建立日期 |\n\n```\ntitle: 使用Hexo搭建个人博客\nlayout: post\ndate: 2014-03-03 19:07:43\ncomments: true\ncategories: Blog\ntags: [Hexo]\nkeywords: Hexo, Blog\ndescription: 生命在于折腾，又把博客折腾到Hexo了。给Hexo点赞。\n\n```\n\n## 模版（Scaffold）\n\n`hexo new photo \"My Gallery\"`\n\n| 变量     | 描述     |\n| ------ | ------ |\n| layout | 布局     |\n| title  | 标题     |\n| date   | 文件建立日期 |\n\n## 设置文章摘要\n\n```\n以上是文章摘要 <!--more--> 以下是余下全文\n\n```\n\n## 写作\n\n`hexo new page <title>`\n`hexo new post <title>`\n\n| 变量       | 描述            |\n| -------- | ------------- |\n| :title   | 标题            |\n| :year    | 建立的年份（4 位数）   |\n| :month   | 建立的月份（2 位数）   |\n| :i_month | 建立的月份（去掉开头的零） |\n| :day     | 建立的日期（2 位数）   |\n| :i_day   | 建立的日期（去掉开头的零） |\n\n### 推送到服务器上\n\n`hexo n` #写文章\n`hexo g` #生成\n`hexo d` #部署 #可与`hexo g`合并为 `hexo d -g`\n\n## 报错\n\n### 1.找不到git部署\n\n```\nERROR Deployer not found: git\n\n```\n\n**解决方法**\n\n`npm install hexo-deployer-git --save`\n\n### 3.部署类型设置git\n\nhexo 3.0 部署类型不再是`github`，`_config.yml` 中修改\n\n```\n# Deployment\n## Docs: http://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repository: git@***.github.com:***/***.github.io.git\n  branch: master\n\n```\n\n### 4. xcodebuild\n\nxcode-select: error: tool 'xcodebuild' requires Xcode, but active developer directory '/Library/Developer/CommandLineTools' is a command line tools instance\n\n`npm install bcrypt`\n\n### 5. RSS不显示\n\n#### 安装RSS插件\n\n`npm install hexo-generator-feed --save`\n\n#### 开启RSS功能\n\n编辑hexo/_config.yml，添加如下代码：\n\n```\nrss: /atom.xml #rss地址  默认即可\n\n```\n\n#### 开启评论\n\n1.我使用多说代替自带的评论，在[多说](http://duoshuo.com) 网站注册 > 后台管理 > 添加新站点 > 工具 === 复制通用代码  里面有 short_name\n\n1. 在根目录 `_config.yml` 添加一行  `disqus_shortname: jslite` 是在多说注册时产生的\n2. 复制到 `themes\\landscape\\layout\\_partial\\article.ejs`\n   把\n\n```\n<% if (!index && post.comments && config.disqus_shortname){ %>\n<section id=\"comments\">\n<div id=\"disqus_thread\">\n  <noscript>Please enable JavaScript to view the <a href=\"//disqus.com/?ref_noscript\">comments powered by Disqus.</a></noscript>\n</div>\n</section>\n<% } %>\n\n```\n\n改为\n\n​\n\n```\n<% if (!index && post.comments && config.disqus_shortname){ %>\n  <section id=\"comments\">\n    <!-- 多说评论框 start -->\n    <div class=\"ds-thread\" data-thread-key=\"<%= post.layout %>-<%= post.slug %>\" data-title=\"<%= post.title %>\" data-url=\"<%= page.permalink %>\"></div>\n    <!-- 多说评论框 end -->\n    <!-- 多说公共JS代码 start (一个网页只需插入一次) -->\n    <script type=\"text/javascript\">\n    var duoshuoQuery = {short_name:'<%= config.disqus_shortname %>'};\n      (function() {\n        var ds = document.createElement('script');\n        ds.type = 'text/javascript';ds.async = true;\n        ds.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//static.duoshuo.com/embed.js';\n        ds.charset = 'UTF-8';\n        (document.getElementsByTagName('head')[0]\n         || document.getElementsByTagName('body')[0]).appendChild(ds);\n      })();\n      </script>\n    <!-- 多说公共JS代码 end -->\n  </section>\n<% } %>\n```\n","source":"_posts/hexo常用命令.md","raw":"---\ntitle: hexo常用命令\ntags: [hexo,前端,命令]\ncategories: hexo\ntoc: true\ncomments: true\n---\n\n## hexo\n\n```\nnpm install hexo -g #安装\nnpm update hexo -g #升级\nhexo init #初始化\n\n```\n\n## 简写\n\n`hexo n \"我的博客\"` == `hexo new \"我的博客\"` #新建文章\n`hexo p` == `hexo publish`\n`hexo g` == `hexo generate`#生成\n`hexo s` == `hexo server` #启动服务预览\n`hexo d` == `hexo deploy`#部署\n\n## 服务器\n\n`hexo server` #Hexo 会监视文件变动并自动更新，您无须重启服务器。\n`hexo server -s` #静态模式\n`hexo server -p 5000` #更改端口\n`hexo server -i 192.168.1.1` #自定义 IP\n\n`hexo clean` #清除缓存 网页正常情况下可以忽略此条命令\n`hexo g` #生成静态网页\n`hexo d` #开始部署\n\n### 监视文件变动\n\n`hexo generate` #使用 Hexo 生成静态文件快速而且简单\n`hexo generate --watch` #监视文件变动\n\n### 完成后部署\n\n> 两个命令的作用是相同的\n> `hexo generate --deploy`\n> `hexo deploy --generate`\n\n`hexo deploy -g`\n`hexo server -g`\n\n## 草稿\n\n`hexo publish [layout] <title>`\n\n## 模版\n\n`hexo new \"postName\"` #新建文章\n`hexo new page \"pageName\"` #新建页面\n`hexo generate` #生成静态页面至public目录\n`hexo server` #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\n`hexo deploy` #将.deploy目录部署到GitHub\n\n`hexo new [layout] <title>`\n`hexo new photo \"My Gallery\"`\n`hexo new \"Hello World\" --lang tw`\n\n| 变量     | 描述     |\n| ------ | ------ |\n| layout | 布局     |\n| title  | 标题     |\n| date   | 文件建立日期 |\n\n```\ntitle: 使用Hexo搭建个人博客\nlayout: post\ndate: 2014-03-03 19:07:43\ncomments: true\ncategories: Blog\ntags: [Hexo]\nkeywords: Hexo, Blog\ndescription: 生命在于折腾，又把博客折腾到Hexo了。给Hexo点赞。\n\n```\n\n## 模版（Scaffold）\n\n`hexo new photo \"My Gallery\"`\n\n| 变量     | 描述     |\n| ------ | ------ |\n| layout | 布局     |\n| title  | 标题     |\n| date   | 文件建立日期 |\n\n## 设置文章摘要\n\n```\n以上是文章摘要 <!--more--> 以下是余下全文\n\n```\n\n## 写作\n\n`hexo new page <title>`\n`hexo new post <title>`\n\n| 变量       | 描述            |\n| -------- | ------------- |\n| :title   | 标题            |\n| :year    | 建立的年份（4 位数）   |\n| :month   | 建立的月份（2 位数）   |\n| :i_month | 建立的月份（去掉开头的零） |\n| :day     | 建立的日期（2 位数）   |\n| :i_day   | 建立的日期（去掉开头的零） |\n\n### 推送到服务器上\n\n`hexo n` #写文章\n`hexo g` #生成\n`hexo d` #部署 #可与`hexo g`合并为 `hexo d -g`\n\n## 报错\n\n### 1.找不到git部署\n\n```\nERROR Deployer not found: git\n\n```\n\n**解决方法**\n\n`npm install hexo-deployer-git --save`\n\n### 3.部署类型设置git\n\nhexo 3.0 部署类型不再是`github`，`_config.yml` 中修改\n\n```\n# Deployment\n## Docs: http://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repository: git@***.github.com:***/***.github.io.git\n  branch: master\n\n```\n\n### 4. xcodebuild\n\nxcode-select: error: tool 'xcodebuild' requires Xcode, but active developer directory '/Library/Developer/CommandLineTools' is a command line tools instance\n\n`npm install bcrypt`\n\n### 5. RSS不显示\n\n#### 安装RSS插件\n\n`npm install hexo-generator-feed --save`\n\n#### 开启RSS功能\n\n编辑hexo/_config.yml，添加如下代码：\n\n```\nrss: /atom.xml #rss地址  默认即可\n\n```\n\n#### 开启评论\n\n1.我使用多说代替自带的评论，在[多说](http://duoshuo.com) 网站注册 > 后台管理 > 添加新站点 > 工具 === 复制通用代码  里面有 short_name\n\n1. 在根目录 `_config.yml` 添加一行  `disqus_shortname: jslite` 是在多说注册时产生的\n2. 复制到 `themes\\landscape\\layout\\_partial\\article.ejs`\n   把\n\n```\n<% if (!index && post.comments && config.disqus_shortname){ %>\n<section id=\"comments\">\n<div id=\"disqus_thread\">\n  <noscript>Please enable JavaScript to view the <a href=\"//disqus.com/?ref_noscript\">comments powered by Disqus.</a></noscript>\n</div>\n</section>\n<% } %>\n\n```\n\n改为\n\n​\n\n```\n<% if (!index && post.comments && config.disqus_shortname){ %>\n  <section id=\"comments\">\n    <!-- 多说评论框 start -->\n    <div class=\"ds-thread\" data-thread-key=\"<%= post.layout %>-<%= post.slug %>\" data-title=\"<%= post.title %>\" data-url=\"<%= page.permalink %>\"></div>\n    <!-- 多说评论框 end -->\n    <!-- 多说公共JS代码 start (一个网页只需插入一次) -->\n    <script type=\"text/javascript\">\n    var duoshuoQuery = {short_name:'<%= config.disqus_shortname %>'};\n      (function() {\n        var ds = document.createElement('script');\n        ds.type = 'text/javascript';ds.async = true;\n        ds.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//static.duoshuo.com/embed.js';\n        ds.charset = 'UTF-8';\n        (document.getElementsByTagName('head')[0]\n         || document.getElementsByTagName('body')[0]).appendChild(ds);\n      })();\n      </script>\n    <!-- 多说公共JS代码 end -->\n  </section>\n<% } %>\n```\n","slug":"hexo常用命令","published":1,"date":"2017-05-22T05:03:19.679Z","updated":"2017-05-31T07:54:26.037Z","layout":"post","photos":[],"link":"","_id":"cj3fbmts1000x4wvshwkxu0s2","content":"<h2 id=\"hexo\"><a href=\"#hexo\" class=\"headerlink\" title=\"hexo\"></a>hexo</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo -g #安装</div><div class=\"line\">npm update hexo -g #升级</div><div class=\"line\">hexo init #初始化</div></pre></td></tr></table></figure>\n<h2 id=\"简写\"><a href=\"#简写\" class=\"headerlink\" title=\"简写\"></a>简写</h2><p><code>hexo n &quot;我的博客&quot;</code> == <code>hexo new &quot;我的博客&quot;</code> #新建文章<br><code>hexo p</code> == <code>hexo publish</code><br><code>hexo g</code> == <code>hexo generate</code>#生成<br><code>hexo s</code> == <code>hexo server</code> #启动服务预览<br><code>hexo d</code> == <code>hexo deploy</code>#部署</p>\n<h2 id=\"服务器\"><a href=\"#服务器\" class=\"headerlink\" title=\"服务器\"></a>服务器</h2><p><code>hexo server</code> #Hexo 会监视文件变动并自动更新，您无须重启服务器。<br><code>hexo server -s</code> #静态模式<br><code>hexo server -p 5000</code> #更改端口<br><code>hexo server -i 192.168.1.1</code> #自定义 IP</p>\n<p><code>hexo clean</code> #清除缓存 网页正常情况下可以忽略此条命令<br><code>hexo g</code> #生成静态网页<br><code>hexo d</code> #开始部署</p>\n<h3 id=\"监视文件变动\"><a href=\"#监视文件变动\" class=\"headerlink\" title=\"监视文件变动\"></a>监视文件变动</h3><p><code>hexo generate</code> #使用 Hexo 生成静态文件快速而且简单<br><code>hexo generate --watch</code> #监视文件变动</p>\n<h3 id=\"完成后部署\"><a href=\"#完成后部署\" class=\"headerlink\" title=\"完成后部署\"></a>完成后部署</h3><blockquote>\n<p>两个命令的作用是相同的<br><code>hexo generate --deploy</code><br><code>hexo deploy --generate</code></p>\n</blockquote>\n<p><code>hexo deploy -g</code><br><code>hexo server -g</code></p>\n<h2 id=\"草稿\"><a href=\"#草稿\" class=\"headerlink\" title=\"草稿\"></a>草稿</h2><p><code>hexo publish [layout] &lt;title&gt;</code></p>\n<h2 id=\"模版\"><a href=\"#模版\" class=\"headerlink\" title=\"模版\"></a>模版</h2><p><code>hexo new &quot;postName&quot;</code> #新建文章<br><code>hexo new page &quot;pageName&quot;</code> #新建页面<br><code>hexo generate</code> #生成静态页面至public目录<br><code>hexo server</code> #开启预览访问端口（默认端口4000，’ctrl + c’关闭server）<br><code>hexo deploy</code> #将.deploy目录部署到GitHub</p>\n<p><code>hexo new [layout] &lt;title&gt;</code><br><code>hexo new photo &quot;My Gallery&quot;</code><br><code>hexo new &quot;Hello World&quot; --lang tw</code></p>\n<table>\n<thead>\n<tr>\n<th>变量</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>layout</td>\n<td>布局</td>\n</tr>\n<tr>\n<td>title</td>\n<td>标题</td>\n</tr>\n<tr>\n<td>date</td>\n<td>文件建立日期</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">title: 使用Hexo搭建个人博客</div><div class=\"line\">layout: post</div><div class=\"line\">date: 2014-03-03 19:07:43</div><div class=\"line\">comments: true</div><div class=\"line\">categories: Blog</div><div class=\"line\">tags: [Hexo]</div><div class=\"line\">keywords: Hexo, Blog</div><div class=\"line\">description: 生命在于折腾，又把博客折腾到Hexo了。给Hexo点赞。</div></pre></td></tr></table></figure>\n<h2 id=\"模版（Scaffold）\"><a href=\"#模版（Scaffold）\" class=\"headerlink\" title=\"模版（Scaffold）\"></a>模版（Scaffold）</h2><p><code>hexo new photo &quot;My Gallery&quot;</code></p>\n<table>\n<thead>\n<tr>\n<th>变量</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>layout</td>\n<td>布局</td>\n</tr>\n<tr>\n<td>title</td>\n<td>标题</td>\n</tr>\n<tr>\n<td>date</td>\n<td>文件建立日期</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"设置文章摘要\"><a href=\"#设置文章摘要\" class=\"headerlink\" title=\"设置文章摘要\"></a>设置文章摘要</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">以上是文章摘要 &lt;!--more--&gt; 以下是余下全文</div></pre></td></tr></table></figure>\n<h2 id=\"写作\"><a href=\"#写作\" class=\"headerlink\" title=\"写作\"></a>写作</h2><p><code>hexo new page &lt;title&gt;</code><br><code>hexo new post &lt;title&gt;</code></p>\n<table>\n<thead>\n<tr>\n<th>变量</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>:title</td>\n<td>标题</td>\n</tr>\n<tr>\n<td>:year</td>\n<td>建立的年份（4 位数）</td>\n</tr>\n<tr>\n<td>:month</td>\n<td>建立的月份（2 位数）</td>\n</tr>\n<tr>\n<td>:i_month</td>\n<td>建立的月份（去掉开头的零）</td>\n</tr>\n<tr>\n<td>:day</td>\n<td>建立的日期（2 位数）</td>\n</tr>\n<tr>\n<td>:i_day</td>\n<td>建立的日期（去掉开头的零）</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"推送到服务器上\"><a href=\"#推送到服务器上\" class=\"headerlink\" title=\"推送到服务器上\"></a>推送到服务器上</h3><p><code>hexo n</code> #写文章<br><code>hexo g</code> #生成<br><code>hexo d</code> #部署 #可与<code>hexo g</code>合并为 <code>hexo d -g</code></p>\n<h2 id=\"报错\"><a href=\"#报错\" class=\"headerlink\" title=\"报错\"></a>报错</h2><h3 id=\"1-找不到git部署\"><a href=\"#1-找不到git部署\" class=\"headerlink\" title=\"1.找不到git部署\"></a>1.找不到git部署</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ERROR Deployer not found: git</div></pre></td></tr></table></figure>\n<p><strong>解决方法</strong></p>\n<p><code>npm install hexo-deployer-git --save</code></p>\n<h3 id=\"3-部署类型设置git\"><a href=\"#3-部署类型设置git\" class=\"headerlink\" title=\"3.部署类型设置git\"></a>3.部署类型设置git</h3><p>hexo 3.0 部署类型不再是<code>github</code>，<code>_config.yml</code> 中修改</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Deployment</div><div class=\"line\">## Docs: http://hexo.io/docs/deployment.html</div><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repository: git@***.github.com:***/***.github.io.git</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure>\n<h3 id=\"4-xcodebuild\"><a href=\"#4-xcodebuild\" class=\"headerlink\" title=\"4. xcodebuild\"></a>4. xcodebuild</h3><p>xcode-select: error: tool ‘xcodebuild’ requires Xcode, but active developer directory ‘/Library/Developer/CommandLineTools’ is a command line tools instance</p>\n<p><code>npm install bcrypt</code></p>\n<h3 id=\"5-RSS不显示\"><a href=\"#5-RSS不显示\" class=\"headerlink\" title=\"5. RSS不显示\"></a>5. RSS不显示</h3><h4 id=\"安装RSS插件\"><a href=\"#安装RSS插件\" class=\"headerlink\" title=\"安装RSS插件\"></a>安装RSS插件</h4><p><code>npm install hexo-generator-feed --save</code></p>\n<h4 id=\"开启RSS功能\"><a href=\"#开启RSS功能\" class=\"headerlink\" title=\"开启RSS功能\"></a>开启RSS功能</h4><p>编辑hexo/_config.yml，添加如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rss: /atom.xml #rss地址  默认即可</div></pre></td></tr></table></figure>\n<h4 id=\"开启评论\"><a href=\"#开启评论\" class=\"headerlink\" title=\"开启评论\"></a>开启评论</h4><p>1.我使用多说代替自带的评论，在<a href=\"http://duoshuo.com\" target=\"_blank\" rel=\"external\">多说</a> 网站注册 &gt; 后台管理 &gt; 添加新站点 &gt; 工具 === 复制通用代码  里面有 short_name</p>\n<ol>\n<li>在根目录 <code>_config.yml</code> 添加一行  <code>disqus_shortname: jslite</code> 是在多说注册时产生的</li>\n<li>复制到 <code>themes\\landscape\\layout\\_partial\\article.ejs</code><br>把</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;% if (!index &amp;&amp; post.comments &amp;&amp; config.disqus_shortname)&#123; %&gt;</div><div class=\"line\">&lt;section id=&quot;comments&quot;&gt;</div><div class=\"line\">&lt;div id=&quot;disqus_thread&quot;&gt;</div><div class=\"line\">  &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;//disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\">&lt;/section&gt;</div><div class=\"line\">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure>\n<p>改为</p>\n<p>​</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;% if (!index &amp;&amp; post.comments &amp;&amp; config.disqus_shortname)&#123; %&gt;</div><div class=\"line\">  &lt;section id=&quot;comments&quot;&gt;</div><div class=\"line\">    &lt;!-- 多说评论框 start --&gt;</div><div class=\"line\">    &lt;div class=&quot;ds-thread&quot; data-thread-key=&quot;&lt;%= post.layout %&gt;-&lt;%= post.slug %&gt;&quot; data-title=&quot;&lt;%= post.title %&gt;&quot; data-url=&quot;&lt;%= page.permalink %&gt;&quot;&gt;&lt;/div&gt;</div><div class=\"line\">    &lt;!-- 多说评论框 end --&gt;</div><div class=\"line\">    &lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&gt;</div><div class=\"line\">    &lt;script type=&quot;text/javascript&quot;&gt;</div><div class=\"line\">    var duoshuoQuery = &#123;short_name:&apos;&lt;%= config.disqus_shortname %&gt;&apos;&#125;;</div><div class=\"line\">      (function() &#123;</div><div class=\"line\">        var ds = document.createElement(&apos;script&apos;);</div><div class=\"line\">        ds.type = &apos;text/javascript&apos;;ds.async = true;</div><div class=\"line\">        ds.src = (document.location.protocol == &apos;https:&apos; ? &apos;https:&apos; : &apos;http:&apos;) + &apos;//static.duoshuo.com/embed.js&apos;;</div><div class=\"line\">        ds.charset = &apos;UTF-8&apos;;</div><div class=\"line\">        (document.getElementsByTagName(&apos;head&apos;)[0]</div><div class=\"line\">         || document.getElementsByTagName(&apos;body&apos;)[0]).appendChild(ds);</div><div class=\"line\">      &#125;)();</div><div class=\"line\">      &lt;/script&gt;</div><div class=\"line\">    &lt;!-- 多说公共JS代码 end --&gt;</div><div class=\"line\">  &lt;/section&gt;</div><div class=\"line\">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"hexo\"><a href=\"#hexo\" class=\"headerlink\" title=\"hexo\"></a>hexo</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo -g #安装</div><div class=\"line\">npm update hexo -g #升级</div><div class=\"line\">hexo init #初始化</div></pre></td></tr></table></figure>\n<h2 id=\"简写\"><a href=\"#简写\" class=\"headerlink\" title=\"简写\"></a>简写</h2><p><code>hexo n &quot;我的博客&quot;</code> == <code>hexo new &quot;我的博客&quot;</code> #新建文章<br><code>hexo p</code> == <code>hexo publish</code><br><code>hexo g</code> == <code>hexo generate</code>#生成<br><code>hexo s</code> == <code>hexo server</code> #启动服务预览<br><code>hexo d</code> == <code>hexo deploy</code>#部署</p>\n<h2 id=\"服务器\"><a href=\"#服务器\" class=\"headerlink\" title=\"服务器\"></a>服务器</h2><p><code>hexo server</code> #Hexo 会监视文件变动并自动更新，您无须重启服务器。<br><code>hexo server -s</code> #静态模式<br><code>hexo server -p 5000</code> #更改端口<br><code>hexo server -i 192.168.1.1</code> #自定义 IP</p>\n<p><code>hexo clean</code> #清除缓存 网页正常情况下可以忽略此条命令<br><code>hexo g</code> #生成静态网页<br><code>hexo d</code> #开始部署</p>\n<h3 id=\"监视文件变动\"><a href=\"#监视文件变动\" class=\"headerlink\" title=\"监视文件变动\"></a>监视文件变动</h3><p><code>hexo generate</code> #使用 Hexo 生成静态文件快速而且简单<br><code>hexo generate --watch</code> #监视文件变动</p>\n<h3 id=\"完成后部署\"><a href=\"#完成后部署\" class=\"headerlink\" title=\"完成后部署\"></a>完成后部署</h3><blockquote>\n<p>两个命令的作用是相同的<br><code>hexo generate --deploy</code><br><code>hexo deploy --generate</code></p>\n</blockquote>\n<p><code>hexo deploy -g</code><br><code>hexo server -g</code></p>\n<h2 id=\"草稿\"><a href=\"#草稿\" class=\"headerlink\" title=\"草稿\"></a>草稿</h2><p><code>hexo publish [layout] &lt;title&gt;</code></p>\n<h2 id=\"模版\"><a href=\"#模版\" class=\"headerlink\" title=\"模版\"></a>模版</h2><p><code>hexo new &quot;postName&quot;</code> #新建文章<br><code>hexo new page &quot;pageName&quot;</code> #新建页面<br><code>hexo generate</code> #生成静态页面至public目录<br><code>hexo server</code> #开启预览访问端口（默认端口4000，’ctrl + c’关闭server）<br><code>hexo deploy</code> #将.deploy目录部署到GitHub</p>\n<p><code>hexo new [layout] &lt;title&gt;</code><br><code>hexo new photo &quot;My Gallery&quot;</code><br><code>hexo new &quot;Hello World&quot; --lang tw</code></p>\n<table>\n<thead>\n<tr>\n<th>变量</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>layout</td>\n<td>布局</td>\n</tr>\n<tr>\n<td>title</td>\n<td>标题</td>\n</tr>\n<tr>\n<td>date</td>\n<td>文件建立日期</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">title: 使用Hexo搭建个人博客</div><div class=\"line\">layout: post</div><div class=\"line\">date: 2014-03-03 19:07:43</div><div class=\"line\">comments: true</div><div class=\"line\">categories: Blog</div><div class=\"line\">tags: [Hexo]</div><div class=\"line\">keywords: Hexo, Blog</div><div class=\"line\">description: 生命在于折腾，又把博客折腾到Hexo了。给Hexo点赞。</div></pre></td></tr></table></figure>\n<h2 id=\"模版（Scaffold）\"><a href=\"#模版（Scaffold）\" class=\"headerlink\" title=\"模版（Scaffold）\"></a>模版（Scaffold）</h2><p><code>hexo new photo &quot;My Gallery&quot;</code></p>\n<table>\n<thead>\n<tr>\n<th>变量</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>layout</td>\n<td>布局</td>\n</tr>\n<tr>\n<td>title</td>\n<td>标题</td>\n</tr>\n<tr>\n<td>date</td>\n<td>文件建立日期</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"设置文章摘要\"><a href=\"#设置文章摘要\" class=\"headerlink\" title=\"设置文章摘要\"></a>设置文章摘要</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">以上是文章摘要 &lt;!--more--&gt; 以下是余下全文</div></pre></td></tr></table></figure>\n<h2 id=\"写作\"><a href=\"#写作\" class=\"headerlink\" title=\"写作\"></a>写作</h2><p><code>hexo new page &lt;title&gt;</code><br><code>hexo new post &lt;title&gt;</code></p>\n<table>\n<thead>\n<tr>\n<th>变量</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>:title</td>\n<td>标题</td>\n</tr>\n<tr>\n<td>:year</td>\n<td>建立的年份（4 位数）</td>\n</tr>\n<tr>\n<td>:month</td>\n<td>建立的月份（2 位数）</td>\n</tr>\n<tr>\n<td>:i_month</td>\n<td>建立的月份（去掉开头的零）</td>\n</tr>\n<tr>\n<td>:day</td>\n<td>建立的日期（2 位数）</td>\n</tr>\n<tr>\n<td>:i_day</td>\n<td>建立的日期（去掉开头的零）</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"推送到服务器上\"><a href=\"#推送到服务器上\" class=\"headerlink\" title=\"推送到服务器上\"></a>推送到服务器上</h3><p><code>hexo n</code> #写文章<br><code>hexo g</code> #生成<br><code>hexo d</code> #部署 #可与<code>hexo g</code>合并为 <code>hexo d -g</code></p>\n<h2 id=\"报错\"><a href=\"#报错\" class=\"headerlink\" title=\"报错\"></a>报错</h2><h3 id=\"1-找不到git部署\"><a href=\"#1-找不到git部署\" class=\"headerlink\" title=\"1.找不到git部署\"></a>1.找不到git部署</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ERROR Deployer not found: git</div></pre></td></tr></table></figure>\n<p><strong>解决方法</strong></p>\n<p><code>npm install hexo-deployer-git --save</code></p>\n<h3 id=\"3-部署类型设置git\"><a href=\"#3-部署类型设置git\" class=\"headerlink\" title=\"3.部署类型设置git\"></a>3.部署类型设置git</h3><p>hexo 3.0 部署类型不再是<code>github</code>，<code>_config.yml</code> 中修改</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Deployment</div><div class=\"line\">## Docs: http://hexo.io/docs/deployment.html</div><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repository: git@***.github.com:***/***.github.io.git</div><div class=\"line\">  branch: master</div></pre></td></tr></table></figure>\n<h3 id=\"4-xcodebuild\"><a href=\"#4-xcodebuild\" class=\"headerlink\" title=\"4. xcodebuild\"></a>4. xcodebuild</h3><p>xcode-select: error: tool ‘xcodebuild’ requires Xcode, but active developer directory ‘/Library/Developer/CommandLineTools’ is a command line tools instance</p>\n<p><code>npm install bcrypt</code></p>\n<h3 id=\"5-RSS不显示\"><a href=\"#5-RSS不显示\" class=\"headerlink\" title=\"5. RSS不显示\"></a>5. RSS不显示</h3><h4 id=\"安装RSS插件\"><a href=\"#安装RSS插件\" class=\"headerlink\" title=\"安装RSS插件\"></a>安装RSS插件</h4><p><code>npm install hexo-generator-feed --save</code></p>\n<h4 id=\"开启RSS功能\"><a href=\"#开启RSS功能\" class=\"headerlink\" title=\"开启RSS功能\"></a>开启RSS功能</h4><p>编辑hexo/_config.yml，添加如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rss: /atom.xml #rss地址  默认即可</div></pre></td></tr></table></figure>\n<h4 id=\"开启评论\"><a href=\"#开启评论\" class=\"headerlink\" title=\"开启评论\"></a>开启评论</h4><p>1.我使用多说代替自带的评论，在<a href=\"http://duoshuo.com\" target=\"_blank\" rel=\"external\">多说</a> 网站注册 &gt; 后台管理 &gt; 添加新站点 &gt; 工具 === 复制通用代码  里面有 short_name</p>\n<ol>\n<li>在根目录 <code>_config.yml</code> 添加一行  <code>disqus_shortname: jslite</code> 是在多说注册时产生的</li>\n<li>复制到 <code>themes\\landscape\\layout\\_partial\\article.ejs</code><br>把</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;% if (!index &amp;&amp; post.comments &amp;&amp; config.disqus_shortname)&#123; %&gt;</div><div class=\"line\">&lt;section id=&quot;comments&quot;&gt;</div><div class=\"line\">&lt;div id=&quot;disqus_thread&quot;&gt;</div><div class=\"line\">  &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;//disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\">&lt;/section&gt;</div><div class=\"line\">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure>\n<p>改为</p>\n<p>​</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;% if (!index &amp;&amp; post.comments &amp;&amp; config.disqus_shortname)&#123; %&gt;</div><div class=\"line\">  &lt;section id=&quot;comments&quot;&gt;</div><div class=\"line\">    &lt;!-- 多说评论框 start --&gt;</div><div class=\"line\">    &lt;div class=&quot;ds-thread&quot; data-thread-key=&quot;&lt;%= post.layout %&gt;-&lt;%= post.slug %&gt;&quot; data-title=&quot;&lt;%= post.title %&gt;&quot; data-url=&quot;&lt;%= page.permalink %&gt;&quot;&gt;&lt;/div&gt;</div><div class=\"line\">    &lt;!-- 多说评论框 end --&gt;</div><div class=\"line\">    &lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&gt;</div><div class=\"line\">    &lt;script type=&quot;text/javascript&quot;&gt;</div><div class=\"line\">    var duoshuoQuery = &#123;short_name:&apos;&lt;%= config.disqus_shortname %&gt;&apos;&#125;;</div><div class=\"line\">      (function() &#123;</div><div class=\"line\">        var ds = document.createElement(&apos;script&apos;);</div><div class=\"line\">        ds.type = &apos;text/javascript&apos;;ds.async = true;</div><div class=\"line\">        ds.src = (document.location.protocol == &apos;https:&apos; ? &apos;https:&apos; : &apos;http:&apos;) + &apos;//static.duoshuo.com/embed.js&apos;;</div><div class=\"line\">        ds.charset = &apos;UTF-8&apos;;</div><div class=\"line\">        (document.getElementsByTagName(&apos;head&apos;)[0]</div><div class=\"line\">         || document.getElementsByTagName(&apos;body&apos;)[0]).appendChild(ds);</div><div class=\"line\">      &#125;)();</div><div class=\"line\">      &lt;/script&gt;</div><div class=\"line\">    &lt;!-- 多说公共JS代码 end --&gt;</div><div class=\"line\">  &lt;/section&gt;</div><div class=\"line\">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure>\n"},{"title":"js代码片段","_content":"\n```\nvar html = [\n\t'<div id=\"' + id + '\" class=\"article-share-box\">',\n\t\t'<input class=\"article-share-input\" value=\"' + url + '\">',\n\t'</div>'\t\n\t].join('');\nvar box = $(html);\n$('body').append(box);\n```\n\n```\n$.getJSON(\"../db/content.json\",function(data){  \n\t            var content = $(\"#content\");  \n\t            var strHtml = \"\";\n\t            content.empty();\n\t            $.each(data,function(infoIndex,info){  \n            \t\tstrHtml += \"<div class='work'><a href=\"+info[\"href\"]+\"><img src=\"+info[\"img\"]+\" class='media' alt=''/><div class='caption'><div class='work_title'><h1>\"+info[\"name\"]+\"</h1></div></div></a></div>\"; \n\t                })  \n\t            content.html(strHtml);\n\t            })\n```\n\n```\nvar node=$('#id');\n\n第一种写法\n\nif(node.is(':hidden')){　　//如果node是隐藏的则显示node元素，否则隐藏\n\n　　node.show();　\n\n}else{\n\n　　node.hide();\n\n}\n\n第二种写法\n\nif(!node.is(':visible')){　　//如果node是隐藏的则显示node元素，否则隐藏\n\n　　node.show();　\n\n}else{\n\n　　node.hide();\n\n}\n\nif(node.is(':visible')){　　//如果node是显示的则隐藏node元素，否则显示\n\n　　node.hide();\n\n}else{\n\n　　node.show();\n\n}\n```\n\n```\njquery 获取a标签有几个\n$('a').length，获取页面全部a的数量\n$('#id a').length，获取指定元素下a的数量\n```\n\n```\njQuery remove() 方法\n\njQuery remove() 方法删除被选元素及其子元素。\n实例\n\n$(\"#div1\").remove();\njQuery empty() 方法\n\njQuery empty() 方法删除被选元素的子元素。\n实例\n\n$(\"#div1\").empty();\n过滤被删除的元素\n\njQuery remove() 方法也可接受一个参数，允许您对被删元素进行过滤。\n\n该参数可以是任何 jQuery 选择器的语法。\n\n下面的例子删除 class=\"italic\" 的所有 <p> 元素：\n实例\n\n$(\"p\").remove(\".italic\");\n```\n\n```\nnpm install hexo-deployer-git --save\n\n 按照如下内容修改blog-dev/_config.yml：\n\ntitle: Palance's Blog   # 标题\nsubtitle:\ndescription:\nauthor: Palance Li\nlanguage: zh-CN         # 语言设置\nurl: http://palanceli.github.io/blog\nroot: /blog/\n\ndeploy:\n  type: git\n  repository: https://github.com/<自己的github账号>/blog.git\n  branch: gh-pages\n```\n\n","source":"_posts/js代码片段.md","raw":"---\ntitle: js代码片段\ntags: [前端,js,代码块]\ncategories: 前端 \n---\n\n```\nvar html = [\n\t'<div id=\"' + id + '\" class=\"article-share-box\">',\n\t\t'<input class=\"article-share-input\" value=\"' + url + '\">',\n\t'</div>'\t\n\t].join('');\nvar box = $(html);\n$('body').append(box);\n```\n\n```\n$.getJSON(\"../db/content.json\",function(data){  \n\t            var content = $(\"#content\");  \n\t            var strHtml = \"\";\n\t            content.empty();\n\t            $.each(data,function(infoIndex,info){  \n            \t\tstrHtml += \"<div class='work'><a href=\"+info[\"href\"]+\"><img src=\"+info[\"img\"]+\" class='media' alt=''/><div class='caption'><div class='work_title'><h1>\"+info[\"name\"]+\"</h1></div></div></a></div>\"; \n\t                })  \n\t            content.html(strHtml);\n\t            })\n```\n\n```\nvar node=$('#id');\n\n第一种写法\n\nif(node.is(':hidden')){　　//如果node是隐藏的则显示node元素，否则隐藏\n\n　　node.show();　\n\n}else{\n\n　　node.hide();\n\n}\n\n第二种写法\n\nif(!node.is(':visible')){　　//如果node是隐藏的则显示node元素，否则隐藏\n\n　　node.show();　\n\n}else{\n\n　　node.hide();\n\n}\n\nif(node.is(':visible')){　　//如果node是显示的则隐藏node元素，否则显示\n\n　　node.hide();\n\n}else{\n\n　　node.show();\n\n}\n```\n\n```\njquery 获取a标签有几个\n$('a').length，获取页面全部a的数量\n$('#id a').length，获取指定元素下a的数量\n```\n\n```\njQuery remove() 方法\n\njQuery remove() 方法删除被选元素及其子元素。\n实例\n\n$(\"#div1\").remove();\njQuery empty() 方法\n\njQuery empty() 方法删除被选元素的子元素。\n实例\n\n$(\"#div1\").empty();\n过滤被删除的元素\n\njQuery remove() 方法也可接受一个参数，允许您对被删元素进行过滤。\n\n该参数可以是任何 jQuery 选择器的语法。\n\n下面的例子删除 class=\"italic\" 的所有 <p> 元素：\n实例\n\n$(\"p\").remove(\".italic\");\n```\n\n```\nnpm install hexo-deployer-git --save\n\n 按照如下内容修改blog-dev/_config.yml：\n\ntitle: Palance's Blog   # 标题\nsubtitle:\ndescription:\nauthor: Palance Li\nlanguage: zh-CN         # 语言设置\nurl: http://palanceli.github.io/blog\nroot: /blog/\n\ndeploy:\n  type: git\n  repository: https://github.com/<自己的github账号>/blog.git\n  branch: gh-pages\n```\n\n","slug":"js代码片段","published":1,"date":"2017-05-31T01:12:35.724Z","updated":"2017-05-31T07:47:00.087Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmts100104wvs46v7u1ry","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">var html = [</div><div class=\"line\">\t&apos;&lt;div id=&quot;&apos; + id + &apos;&quot; class=&quot;article-share-box&quot;&gt;&apos;,</div><div class=\"line\">\t\t&apos;&lt;input class=&quot;article-share-input&quot; value=&quot;&apos; + url + &apos;&quot;&gt;&apos;,</div><div class=\"line\">\t&apos;&lt;/div&gt;&apos;\t</div><div class=\"line\">\t].join(&apos;&apos;);</div><div class=\"line\">var box = $(html);</div><div class=\"line\">$(&apos;body&apos;).append(box);</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">$.getJSON(&quot;../db/content.json&quot;,function(data)&#123;  </div><div class=\"line\">\t            var content = $(&quot;#content&quot;);  </div><div class=\"line\">\t            var strHtml = &quot;&quot;;</div><div class=\"line\">\t            content.empty();</div><div class=\"line\">\t            $.each(data,function(infoIndex,info)&#123;  </div><div class=\"line\">            \t\tstrHtml += &quot;&lt;div class=&apos;work&apos;&gt;&lt;a href=&quot;+info[&quot;href&quot;]+&quot;&gt;&lt;img src=&quot;+info[&quot;img&quot;]+&quot; class=&apos;media&apos; alt=&apos;&apos;/&gt;&lt;div class=&apos;caption&apos;&gt;&lt;div class=&apos;work_title&apos;&gt;&lt;h1&gt;&quot;+info[&quot;name&quot;]+&quot;&lt;/h1&gt;&lt;/div&gt;&lt;/div&gt;&lt;/a&gt;&lt;/div&gt;&quot;; </div><div class=\"line\">\t                &#125;)  </div><div class=\"line\">\t            content.html(strHtml);</div><div class=\"line\">\t            &#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">var node=$(&apos;#id&apos;);</div><div class=\"line\"></div><div class=\"line\">第一种写法</div><div class=\"line\"></div><div class=\"line\">if(node.is(&apos;:hidden&apos;))&#123;　　//如果node是隐藏的则显示node元素，否则隐藏</div><div class=\"line\"></div><div class=\"line\">　　node.show();　</div><div class=\"line\"></div><div class=\"line\">&#125;else&#123;</div><div class=\"line\"></div><div class=\"line\">　　node.hide();</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">第二种写法</div><div class=\"line\"></div><div class=\"line\">if(!node.is(&apos;:visible&apos;))&#123;　　//如果node是隐藏的则显示node元素，否则隐藏</div><div class=\"line\"></div><div class=\"line\">　　node.show();　</div><div class=\"line\"></div><div class=\"line\">&#125;else&#123;</div><div class=\"line\"></div><div class=\"line\">　　node.hide();</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">if(node.is(&apos;:visible&apos;))&#123;　　//如果node是显示的则隐藏node元素，否则显示</div><div class=\"line\"></div><div class=\"line\">　　node.hide();</div><div class=\"line\"></div><div class=\"line\">&#125;else&#123;</div><div class=\"line\"></div><div class=\"line\">　　node.show();</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">jquery 获取a标签有几个</div><div class=\"line\">$(&apos;a&apos;).length，获取页面全部a的数量</div><div class=\"line\">$(&apos;#id a&apos;).length，获取指定元素下a的数量</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">jQuery remove() 方法</div><div class=\"line\"></div><div class=\"line\">jQuery remove() 方法删除被选元素及其子元素。</div><div class=\"line\">实例</div><div class=\"line\"></div><div class=\"line\">$(&quot;#div1&quot;).remove();</div><div class=\"line\">jQuery empty() 方法</div><div class=\"line\"></div><div class=\"line\">jQuery empty() 方法删除被选元素的子元素。</div><div class=\"line\">实例</div><div class=\"line\"></div><div class=\"line\">$(&quot;#div1&quot;).empty();</div><div class=\"line\">过滤被删除的元素</div><div class=\"line\"></div><div class=\"line\">jQuery remove() 方法也可接受一个参数，允许您对被删元素进行过滤。</div><div class=\"line\"></div><div class=\"line\">该参数可以是任何 jQuery 选择器的语法。</div><div class=\"line\"></div><div class=\"line\">下面的例子删除 class=&quot;italic&quot; 的所有 &lt;p&gt; 元素：</div><div class=\"line\">实例</div><div class=\"line\"></div><div class=\"line\">$(&quot;p&quot;).remove(&quot;.italic&quot;);</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-deployer-git --save</div><div class=\"line\"></div><div class=\"line\"> 按照如下内容修改blog-dev/_config.yml：</div><div class=\"line\"></div><div class=\"line\">title: Palance&apos;s Blog   # 标题</div><div class=\"line\">subtitle:</div><div class=\"line\">description:</div><div class=\"line\">author: Palance Li</div><div class=\"line\">language: zh-CN         # 语言设置</div><div class=\"line\">url: http://palanceli.github.io/blog</div><div class=\"line\">root: /blog/</div><div class=\"line\"></div><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repository: https://github.com/&lt;自己的github账号&gt;/blog.git</div><div class=\"line\">  branch: gh-pages</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">var html = [</div><div class=\"line\">\t&apos;&lt;div id=&quot;&apos; + id + &apos;&quot; class=&quot;article-share-box&quot;&gt;&apos;,</div><div class=\"line\">\t\t&apos;&lt;input class=&quot;article-share-input&quot; value=&quot;&apos; + url + &apos;&quot;&gt;&apos;,</div><div class=\"line\">\t&apos;&lt;/div&gt;&apos;\t</div><div class=\"line\">\t].join(&apos;&apos;);</div><div class=\"line\">var box = $(html);</div><div class=\"line\">$(&apos;body&apos;).append(box);</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">$.getJSON(&quot;../db/content.json&quot;,function(data)&#123;  </div><div class=\"line\">\t            var content = $(&quot;#content&quot;);  </div><div class=\"line\">\t            var strHtml = &quot;&quot;;</div><div class=\"line\">\t            content.empty();</div><div class=\"line\">\t            $.each(data,function(infoIndex,info)&#123;  </div><div class=\"line\">            \t\tstrHtml += &quot;&lt;div class=&apos;work&apos;&gt;&lt;a href=&quot;+info[&quot;href&quot;]+&quot;&gt;&lt;img src=&quot;+info[&quot;img&quot;]+&quot; class=&apos;media&apos; alt=&apos;&apos;/&gt;&lt;div class=&apos;caption&apos;&gt;&lt;div class=&apos;work_title&apos;&gt;&lt;h1&gt;&quot;+info[&quot;name&quot;]+&quot;&lt;/h1&gt;&lt;/div&gt;&lt;/div&gt;&lt;/a&gt;&lt;/div&gt;&quot;; </div><div class=\"line\">\t                &#125;)  </div><div class=\"line\">\t            content.html(strHtml);</div><div class=\"line\">\t            &#125;)</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">var node=$(&apos;#id&apos;);</div><div class=\"line\"></div><div class=\"line\">第一种写法</div><div class=\"line\"></div><div class=\"line\">if(node.is(&apos;:hidden&apos;))&#123;　　//如果node是隐藏的则显示node元素，否则隐藏</div><div class=\"line\"></div><div class=\"line\">　　node.show();　</div><div class=\"line\"></div><div class=\"line\">&#125;else&#123;</div><div class=\"line\"></div><div class=\"line\">　　node.hide();</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">第二种写法</div><div class=\"line\"></div><div class=\"line\">if(!node.is(&apos;:visible&apos;))&#123;　　//如果node是隐藏的则显示node元素，否则隐藏</div><div class=\"line\"></div><div class=\"line\">　　node.show();　</div><div class=\"line\"></div><div class=\"line\">&#125;else&#123;</div><div class=\"line\"></div><div class=\"line\">　　node.hide();</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">if(node.is(&apos;:visible&apos;))&#123;　　//如果node是显示的则隐藏node元素，否则显示</div><div class=\"line\"></div><div class=\"line\">　　node.hide();</div><div class=\"line\"></div><div class=\"line\">&#125;else&#123;</div><div class=\"line\"></div><div class=\"line\">　　node.show();</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">jquery 获取a标签有几个</div><div class=\"line\">$(&apos;a&apos;).length，获取页面全部a的数量</div><div class=\"line\">$(&apos;#id a&apos;).length，获取指定元素下a的数量</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">jQuery remove() 方法</div><div class=\"line\"></div><div class=\"line\">jQuery remove() 方法删除被选元素及其子元素。</div><div class=\"line\">实例</div><div class=\"line\"></div><div class=\"line\">$(&quot;#div1&quot;).remove();</div><div class=\"line\">jQuery empty() 方法</div><div class=\"line\"></div><div class=\"line\">jQuery empty() 方法删除被选元素的子元素。</div><div class=\"line\">实例</div><div class=\"line\"></div><div class=\"line\">$(&quot;#div1&quot;).empty();</div><div class=\"line\">过滤被删除的元素</div><div class=\"line\"></div><div class=\"line\">jQuery remove() 方法也可接受一个参数，允许您对被删元素进行过滤。</div><div class=\"line\"></div><div class=\"line\">该参数可以是任何 jQuery 选择器的语法。</div><div class=\"line\"></div><div class=\"line\">下面的例子删除 class=&quot;italic&quot; 的所有 &lt;p&gt; 元素：</div><div class=\"line\">实例</div><div class=\"line\"></div><div class=\"line\">$(&quot;p&quot;).remove(&quot;.italic&quot;);</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-deployer-git --save</div><div class=\"line\"></div><div class=\"line\"> 按照如下内容修改blog-dev/_config.yml：</div><div class=\"line\"></div><div class=\"line\">title: Palance&apos;s Blog   # 标题</div><div class=\"line\">subtitle:</div><div class=\"line\">description:</div><div class=\"line\">author: Palance Li</div><div class=\"line\">language: zh-CN         # 语言设置</div><div class=\"line\">url: http://palanceli.github.io/blog</div><div class=\"line\">root: /blog/</div><div class=\"line\"></div><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repository: https://github.com/&lt;自己的github账号&gt;/blog.git</div><div class=\"line\">  branch: gh-pages</div></pre></td></tr></table></figure>\n"},{"title":"LESS","_content":"### less\n\n一种 动态 样式 语言.LESS 将 CSS 赋予了动态语言的特性，如 变量， 继承，        运算， 函数. LESS 既可以在 客户端 上运行 (支持IE 6+, Webkit, Firefox)，也可以借助Node.js或者Rhino在服务端运行。\n\nLESS可以这样来写CSS:\n\n~~~\n\n@base: #f938ab;\n\n.box-shadow(@style, @c) when (iscolor(@c)) {\n  box-shadow:         @style @c;\n  -webkit-box-shadow: @style @c;\n  -moz-box-shadow:    @style @c;\n}\n.box-shadow(@style, @alpha: 50%) when (isnumber(@alpha)) {\n  .box-shadow(@style, rgba(0, 0, 0, @alpha));\n}\n.box {\n  color: saturate(@base, 5%);\n  border-color: lighten(@base, 30%);\n  div { .box-shadow(0 0 5px, 30%) }\n}\n~~~\n\n在引入`less.js`前先要把你的样式文件引入 :\n\n~~~\n<link rel=\"stylesheet/less\" type=\"text/css\" href=\"styles.less\">\n<script src=\"less.js\" type=\"text/javascript\"></script>\n~~~\n\n## 变量\n\n变量允许我们单独定义一系列通用的样式，然后在需要的时候去调用。所以在做全局样式调整的时候我们可能只需要修改几行代码就可以了。\n\n~~~\n  // LESS\n\n@color: #4D926F;\n\n#header {\n  color: @color;\n}\nh2 {\n  color: @color;\n}\n\n\n\n/* 生成的 CSS */\n\n#header {\n  color: #4D926F;\n}\nh2 {\n  color: #4D926F;\n}\n~~~\n\n## 混合\n\n混合可以将一个定义好的class A轻松的引入到另一个class B中，从而简单实现class B继承class A中的所有属性。我们还可以带参数地调用，就像使用函数一样。\n\n~~~\n// LESS\n\n.rounded-corners (@radius: 5px) {\n  border-radius: @radius;\n  -webkit-border-radius: @radius;\n  -moz-border-radius: @radius;\n}\n\n#header {\n  .rounded-corners;\n}\n#footer {\n  .rounded-corners(10px);\n}\n\n\n\n/* 生成的 CSS */\n\n#header {\n  border-radius: 5px;\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n}\n#footer {\n  border-radius: 10px;\n  -webkit-border-radius: 10px;\n  -moz-border-radius: 10px;\n}\n~~~\n\n## 嵌套规则\n\n我们可以在一个选择器中嵌套另一个选择器来实现继承，这样很大程度减少了代码量，并且代码看起来更加的清晰。\n\n~~~\n// LESS\n\n#header {\n  h1 {\n    font-size: 26px;\n    font-weight: bold;\n  }\n  p { font-size: 12px;\n    a { text-decoration: none;\n      &:hover { border-width: 1px }\n    }\n  }\n}\n\n\n\n/* 生成的 CSS */\n\n#header h1 {\n  font-size: 26px;\n  font-weight: bold;\n}\n#header p {\n  font-size: 12px;\n}\n#header p a {\n  text-decoration: none;\n}\n#header p a:hover {\n  border-width: 1px;\n}\n\n\n~~~\n\n## 函数 & 运算\n\n运算提供了加，减，乘，除操作；我们可以做属性值和颜色的运算，这样就可以实现属性值之间的复杂关系。LESS中的函数一一映射了JavaScript代码，如果你愿意的话可以操作属性值。\n\n~~~\n// LESS\n\n@the-border: 1px;\n@base-color: #111;\n@red:        #842210;\n\n#header {\n  color: @base-color * 3;\n  border-left: @the-border;\n  border-right: @the-border * 2;\n}\n#footer {\n  color: @base-color + #003300;\n  border-color: desaturate(@red, 10%);\n}\n\n\n\n/* 生成的 CSS */\n\n#header {\n  color: #333;\n  border-left: 1px;\n  border-right: 2px;\n}\n#footer {\n  color: #114411;\n  border-color: #7d2717;\n}\n\n\n~~~\n\n# 在客户端使用\n\n引入你的 `.less` 样式文件的时候要设置 `rel` 属性值为 “`stylesheet/less`”:\n\n~~~\n<link rel=\"stylesheet/less\" type=\"text/css\" href=\"styles.less\">\n~~~\n\n然后点击页面顶部download按钮下载 `less.js`, 在`<head>` 中引入:\n\n~~~\n<script src=\"less.js\" type=\"text/javascript\"></script>\n~~~\n\n注意你的less样式文件一定要在引入less.js前先引入。\n\n备注：请在服务器环境下使用！本地直接打开可能会报错！\n\n## 监视模式\n\n监视模式是客户端的一个功能，这个功能允许你当你改变样式的时候，客户端将自动刷新。\n\n要使用它，只要在URL后面加上'`#!watch`'，然后刷新页面就可以了。另外，你也可以通过在终端运行`less.watch()`来启动监视模式。\n\n# 在服务器端使用\n\n## 安装\n\n在服务器端安装 LESS 的最简单方式就是通过 [npm](http://github.com/isaacs/npm)(node 的包管理器), 像这样:\n\n~~~\n$ npm install less\n~~~\n\n如果你想下载最新稳定版本的 LESS，可以尝试像下面这样操作:\n\n~~~\n$ npm install less@latest\n~~~\n\n## 使用\n\n只要安装了 LESS，就可以在Node中像这样调用编译器:\n\n~~~\nvar less = require('less');\n\nless.render('.class { width: 1 + 1 }', function (e, css) {\n    console.log(css);\n});\n~~~\n\n上面会输出\n\n~~~\n.class {\n  width: 2;\n}\n~~~\n\n你也可以手动调用解析器和编译器:\n\n```\nvar parser = new(less.Parser);\n\nparser.parse('.class { width: 1 + 1 }', function (err, tree) {\n    if (err) { return console.error(err) }\n    console.log(tree.toCSS());\n});\n```\n\n## 配置\n\n你可以向解析器传递参数:\n\n```\nvar parser = new(less.Parser)({\n    paths: ['.', './lib'], // Specify search paths for @import directives\n    filename: 'style.less' // Specify a filename, for better error messages\n});\n\nparser.parse('.class { width: 1 + 1 }', function (e, tree) {\n    tree.toCSS({ compress: true }); // Minify CSS output\n});\n\n```\n\n## 在命令行下使用\n\n你可以在终端调用 LESS 解析器:\n\n```\n$ lessc styles.less\n\n```\n\n上面的命令会将编译后的 CSS 传递给 `stdout`, 你可以将它保存到一个文件中:\n\n```\n$ lessc styles.less > styles.css\n\n```\n\n如何你想将编译后的 CSS 压缩掉，那么加一个 `-x` 参数就可以了.\n\n# LESS 语法\n\nLESS 做为 CSS 的一种形式的扩展，它并没有阉割 CSS 的功能，而是在现有的 CSS 语法上，添加了很多额外的功能，所以学习 LESS 是一件轻而易举的事情，果断学习之！\n\n## 变量\n\n很容易理解:\n\n```\n@nice-blue: #5B83AD;\n@light-blue: @nice-blue + #111;\n\n#header { color: @light-blue; }\n\n```\n\n输出:\n\n```\n#header { color: #6c94be; }\n\n```\n\n甚至可以用变量名定义为变量:\n\n```\n@fnord: \"I am fnord.\";\n@var: 'fnord';\ncontent: @@var;\n\n```\n\n解析后:\n\n```\ncontent: \"I am fnord.\";\n\n```\n\n请注意 LESS 中的变量为完全的 ‘常量’ ，所以只能定义一次.\n\n## 混合\n\n在 LESS 中我们可以定义一些通用的属性集为一个class，然后在另一个class中去调用这些属性. 下面有这样一个class:\n\n```\n.bordered {\n  border-top: dotted 1px black;\n  border-bottom: solid 2px black;\n}\n\n```\n\n那如果我们现在需要在其他class中引入那些通用的属性集，那么我们只需要在任何class中像下面这样调用就可以了:\n\n```\n#menu a {\n  color: #111;\n  .bordered;\n}\n.post a {\n  color: red;\n  .bordered;\n}\n\n```\n\n`.bordered` class里面的属性样式都会在 `#menu a` 和 `.post a`中体现出来:\n\n```\n#menu a {\n  color: #111;\n  border-top: dotted 1px black;\n  border-bottom: solid 2px black;\n}\n.post a {\n  color: red;\n  border-top: dotted 1px black;\n  border-bottom: solid 2px black;\n}\n\n```\n\n任何 CSS *class*, *id* 或者 *元素* 属性集都可以以同样的方式引入.\n\n## 带参数混合\n\n在 LESS 中，你还可以像函数一样定义一个带参数的属性集合:\n\n```\n.border-radius (@radius) {\n  border-radius: @radius;\n  -moz-border-radius: @radius;\n  -webkit-border-radius: @radius;\n}\n\n```\n\n然后在其他class中像这样调用它:\n\n```\n#header {\n  .border-radius(4px);\n}\n.button {\n  .border-radius(6px);\n}\n\n```\n\n我们还可以像这样给参数设置默认值:\n\n```\n.border-radius (@radius: 5px) {\n  border-radius: @radius;\n  -moz-border-radius: @radius;\n  -webkit-border-radius: @radius;\n}\n\n```\n\n所以现在如果我们像这样调用它的话:\n\n```\n#header {\n  .border-radius;\n}\n\n```\n\nradius的值就会是5px.\n\n你也可以定义不带参数属性集合,如果你想隐藏这个属性集合，不让它暴露到CSS中去，但是你还想在其他的属性集合中引用，你会发现这个方法非常的好用:\n\n```\n.wrap () {\n  text-wrap: wrap;\n  white-space: pre-wrap;\n  white-space: -moz-pre-wrap;\n  word-wrap: break-word;\n}\n\npre { .wrap }\n\n```\n\n输出:\n\n```\npre {\n  text-wrap: wrap;\n  white-space: pre-wrap;\n  white-space: -moz-pre-wrap;\n  word-wrap: break-word;\n}\n\n```\n\n### `@arguments` 变量\n\n`@arguments`包含了所有传递进来的参数. 如果你不想单独处理每一个参数的话就可以像这样写:\n\n```\n.box-shadow (@x: 0, @y: 0, @blur: 1px, @color: #000) {\n  box-shadow: @arguments;\n  -moz-box-shadow: @arguments;\n  -webkit-box-shadow: @arguments;\n}\n.box-shadow(2px, 5px);\n\n```\n\n将会输出:\n\n```\n  box-shadow: 2px 5px 1px #000;\n  -moz-box-shadow: 2px 5px 1px #000;\n  -webkit-box-shadow: 2px 5px 1px #000;\n\n```\n\n## 模式匹配和导引表达式\n\n有些情况下，我们想根据传入的参数来改变混合的默认呈现，比如下面这个例子：\n\n```\n.mixin (@s, @color) { ... }\n\n.class {\n  .mixin(@switch, #888);\n}\n\n```\n\n如果想让`.mixin`根据不同的`@switch`值而表现各异，如下这般设置：\n\n```\n.mixin (dark, @color) {\n  color: darken(@color, 10%);\n}\n.mixin (light, @color) {\n  color: lighten(@color, 10%);\n}\n.mixin (@_, @color) {\n  display: block;\n}\n\n```\n\n现在，如果运行:\n\n```\n@switch: light;\n\n.class {\n  .mixin(@switch, #888);\n}\n\n```\n\n就会得到下列CSS:\n\n```\n.class {\n  color: #a2a2a2;\n  display: block;\n}\n\n```\n\n如上，`.mixin`就会得到传入颜色的浅色。如果`@switch`设为dark，就会得到深色。\n\n具体实现如下：\n\n- 第一个混合定义并未被匹配，因为它只接受`dark`做为首参\n- 第二个混合定义被成功匹配，因为它只接受`light`\n- 第三个混合定义被成功匹配，因为它接受任意值\n\n只有被匹配的混合才会被使用。变量可以匹配任意的传入值，而变量以外的固定值就仅仅匹配与其相等的传入值。\n\n我们也可以匹配多个参数：\n\n```\n.mixin (@a) {\n  color: @a;\n}\n.mixin (@a, @b) {\n  color: fade(@a, @b);\n}\n\n```\n\nNow if we call `.mixin` with a single argument, we will get the output of the first definition,but if we call it with *two* arguments, we will get the second definition, namely `@a` faded to `@b`.\n\n### 引导\n\n当我们想根据表达式进行匹配，而非根据值和参数匹配时，导引就显得非常有用。如果你对函数式编程非常熟悉，那么你很可能已经使用过导引。\n\n为了尽可能地保留CSS的可声明性，LESS通过导引混合而非if/else语句来实现条件判断，因为前者已在@media query特性中被定义。\n\n以此例做为开始：\n\n```\n.mixin (@a) when (lightness(@a) >= 50%) {\n  background-color: black;\n}\n.mixin (@a) when (lightness(@a) < 50%) {\n  background-color: white;\n}\n.mixin (@a) {\n  color: @a;\n}\n\n```\n\nwhen关键字用以定义一个导引序列(此例只有一个导引)。接下来我们运行下列代码：\n\n```\n.class1 { .mixin(#ddd) }\n.class2 { .mixin(#555) }\n\n```\n\n就会得到：\n\n```\n.class1 {\n  background-color: black;\n  color: #ddd;\n}\n.class2 {\n  background-color: white;\n  color: #555;\n}\n\n```\n\n导引中可用的全部比较运算有： **> >= = =< <**。此外，关键字`true`只表示布尔真值，下面两个混合是相同的：\n\n```\n.truth (@a) when (@a) { ... }\n.truth (@a) when (@a = true) { ... }\n\n```\n\n除去关键字true以外的值都被视示布尔假：\n\n```\n.class {\n  .truth(40); // Will not match any of the above definitions.\n}\n\n```\n\n导引序列使用逗号‘`,`’—分割，当且仅当所有条件都符合时，才会被视为匹配成功。\n\n```\n.mixin (@a) when (@a > 10), (@a < -10) { ... }\n\n```\n\n导引可以无参数，也可以对参数进行比较运算：\n\n```\n@media: mobile;\n\n.mixin (@a) when (@media = mobile) { ... }\n.mixin (@a) when (@media = desktop) { ... }\n\n.max (@a, @b) when (@a > @b) { width: @a }\n.max (@a, @b) when (@a < @b) { width: @b }\n\n```\n\n最后，如果想基于值的类型进行匹配，我们就可以使用is*函式：\n\n```\n.mixin (@a, @b: 0) when (isnumber(@b)) { ... }\n.mixin (@a, @b: black) when (iscolor(@b)) { ... }\n\n```\n\n下面就是常见的检测函式：\n\n- `iscolor`\n- `isnumber`\n- `isstring`\n- `iskeyword`\n- `isurl`\n\n如果你想判断一个值是纯数字，还是某个单位量，可以使用下列函式：\n\n- `ispixel`\n- `ispercentage`\n- `isem`\n\n最后再补充一点，在导引序列中可以使用**and**关键字实现与条件：\n\n```\n.mixin (@a) when (isnumber(@a)) and (@a > 0) { ... }\n\n```\n\n使用**not**关键字实现或条件\n\n```\n.mixin (@b) when not (@b > 0) { ... }\n\n```\n\n## 嵌套规则\n\nLESS 可以让我们以*嵌套*的方式编写层叠样式.让我们先看下下面这段 CSS:\n\n```\n#header { color: black; }\n#header .navigation {\n  font-size: 12px;\n}\n#header .logo {\n  width: 300px;\n}\n#header .logo:hover {\n  text-decoration: none;\n}\n\n```\n\n在 LESS 中, 我们就可以这样写:\n\n```\n#header {\n  color: black;\n\n  .navigation {\n    font-size: 12px;\n  }\n  .logo {\n    width: 300px;\n    &:hover { text-decoration: none }\n  }\n}\n\n```\n\n或者这样写:\n\n```\n#header        { color: black;\n  .navigation  { font-size: 12px }\n  .logo        { width: 300px;\n    &:hover    { text-decoration: none }\n  }\n}\n\n```\n\n代码更简洁了，而且感觉跟`DOM`结构格式有点像.\n\n注意 `&` 符号的使用—如果你想写串联选择器，而不是写后代选择器，就可以用到`&`了. 这点对伪类尤其有用如 `:hover` 和 `:focus`.\n\n例如:\n\n```\n.bordered {\n  &.float {\n    float: left;\n  }\n  .top {\n    margin: 5px;\n  }\n}\n\n```\n\n会输出\n\n```\n.bordered.float {\n  float: left;\n}\n.bordered .top {\n  margin: 5px;\n}\n\n```\n\n## 运算\n\n任何数字、颜色或者变量都可以参与运算. 来看一组例子:\n\n```\n@base: 5%;\n@filler: @base * 2;\n@other: @base + @filler;\n\ncolor: #888 / 4;\nbackground-color: @base-color + #111;\nheight: 100% / 2 + @filler;\n\n```\n\nLESS 的运算已经超出了我们的期望，它能够分辨出颜色和单位。如果像下面这样单位运算的话:\n\n```\n@var: 1px + 5;\n\n```\n\nLESS 会输出 `6px`.\n\n括号也同样允许使用:\n\n```\nwidth: (@var + 5) * 2;\n\n```\n\n并且可以在复合属性中进行运算:\n\n```\nborder: (@width * 2) solid black;\n\n```\n\n## Color 函数\n\nLESS 提供了一系列的颜色运算函数. 颜色会先被转化成 *HSL* 色彩空间, 然后在通道级别操作:\n\n```\nlighten(@color, 10%);     // return a color which is 10% *lighter* than @color\ndarken(@color, 10%);      // return a color which is 10% *darker* than @color\n\nsaturate(@color, 10%);    // return a color 10% *more* saturated than @color\ndesaturate(@color, 10%);  // return a color 10% *less* saturated than @color\n\nfadein(@color, 10%);      // return a color 10% *less* transparent than @color\nfadeout(@color, 10%);     // return a color 10% *more* transparent than @color\nfade(@color, 50%);        // return @color with 50% transparency\n\nspin(@color, 10);         // return a color with a 10 degree larger in hue than @color\nspin(@color, -10);        // return a color with a 10 degree smaller hue than @color\n\nmix(@color1, @color2);    // return a mix of @color1 and @color2\n\n```\n\n使用起来相当简单:\n\n```\n@base: #f04615;\n\n.class {\n  color: saturate(@base, 5%);\n  background-color: lighten(spin(@base, 8), 25%);\n}\n\n```\n\n你还可以提取颜色信息:\n\n```\nhue(@color);        // returns the `hue` channel of @color\nsaturation(@color); // returns the `saturation` channel of @color\nlightness(@color);  // returns the 'lightness' channel of @color\n\n```\n\n如果你想在一种颜色的通道上创建另一种颜色，这些函数就显得那么的好用，例如:\n\n```\n@new: hsl(hue(@old), 45%, 90%);\n\n```\n\n`@new` 将会保持 `@old`的 *色调*, 但是具有不同的饱和度和亮度.\n\n## Math 函数\n\nLESS提供了一组方便的数学函数，你可以使用它们处理一些数字类型的值:\n\n```\nround(1.67); // returns `2`\nceil(2.4);   // returns `3`\nfloor(2.6);  // returns `2`\n\n```\n\n如果你想将一个值转化为百分比，你可以使用`percentage` 函数:\n\n```\npercentage(0.5); // returns `50%`\n\n```\n\n## 命名空间\n\n有时候，你可能为了更好组织CSS或者单纯是为了更好的封装，将一些变量或者混合模块打包起来, 你可以像下面这样在`#bundle`中定义一些属性集之后可以重复使用:\n\n```\n#bundle {\n  .button () {\n    display: block;\n    border: 1px solid black;\n    background-color: grey;\n    &:hover { background-color: white }\n  }\n  .tab { ... }\n  .citation { ... }\n}\n\n```\n\n你只需要在 `#header a`中像这样引入 `.button`:\n\n```\n#header a {\n  color: orange;\n  #bundle > .button;\n}\n\n```\n\n## 作用域\n\nLESS 中的作用域跟其他编程语言非常类似，首先会从本地查找变量或者混合模块，如果没找到的话会去父级作用域中查找，直到找到为止.\n\n```\n@var: red;\n\n#page {\n  @var: white;\n  #header {\n    color: @var; // white\n  }\n}\n\n#footer {\n  color: @var; // red\n}\n\n```\n\n## 注释\n\nCSS 形式的注释在 LESS 中是依然保留的:\n\n```\n/* Hello, I'm a CSS-style comment */\n.class { color: black }\n```\n\nLESS 同样也支持双斜线的注释, 但是编译成 CSS 的时候自动过滤掉:\n\n```\n// Hi, I'm a silent comment, I won't show up in your CSS\n.class { color: white }\n\n```\n\n## Importing\n\n你可以在main文件中通过下面的形势引入 `.less` 文件, `.less` 后缀可带可不带:\n\n```\n@import \"lib.less\";\n@import \"lib\";\n\n```\n\n如果你想导入一个CSS文件而且不想LESS对它进行处理，只需要使用`.css`后缀就可以:\n\n```\n@import \"lib.css\";\n\n```\n\n这样LESS就会跳过它不去处理它.\n\n## 字符串插值\n\n变量可以用类似ruby和php的方式嵌入到字符串中，像`@{name}`这样的结构:\n\n```\n@base-url: \"http://assets.fnord.com\";\nbackground-image: url(\"@{base-url}/images/bg.png\");\n\n```\n\n## 避免编译\n\n有时候我们需要输出一些不正确的CSS语法或者使用一些 LESS不认识的专有语法.\n\n要输出这样的值我们可以在字符串前加上一个 `~`, 例如:\n\n```\n.class {\n  filter: ~\"ms:alwaysHasItsOwnSyntax.For.Stuff()\";\n}\n\n```\n\n我们可以将要避免编译的值用 “”包含起来，输出结果为:\n\n```\n.class {\n  filter: ms:alwaysHasItsOwnSyntax.For.Stuff();\n}\n\n```\n\n## JavaScript 表达式\n\nJavaScript 表达式也可以在.less 文件中使用. 可以通过反引号的方式使用:\n\n```\n@var: `\"hello\".toUpperCase() + '!'`;\n\n```\n\n输出:\n\n```\n@var: \"HELLO!\";\n\n```\n\n注意你也可以同时使用字符串插值和避免编译:\n\n```\n@str: \"hello\";\n@var: ~`\"@{str}\".toUpperCase() + '!'`;\n```\n\n输出:\n\n```\n@var: HELLO!;\n\n```\n\n它也可以访问JavaScript环境:\n\n```\n@height: `document.body.clientHeight`;\n\n```\n\n如果你想将一个JavaScript字符串解析成16进制的颜色值, 你可以使用 `color` 函数:\n\n```\n@color: color(`window.colors.baseColor`);\n@darkcolor: darken(@color, 10%);\n```\n\n### GitHub地址\n\n~~~\nhttps://github.com/less/less.js\n~~~\n","source":"_posts/less.md","raw":"---\ntitle: LESS\ntags: [less,前端,css,格式化]\ncategories: 前端\n---\n### less\n\n一种 动态 样式 语言.LESS 将 CSS 赋予了动态语言的特性，如 变量， 继承，        运算， 函数. LESS 既可以在 客户端 上运行 (支持IE 6+, Webkit, Firefox)，也可以借助Node.js或者Rhino在服务端运行。\n\nLESS可以这样来写CSS:\n\n~~~\n\n@base: #f938ab;\n\n.box-shadow(@style, @c) when (iscolor(@c)) {\n  box-shadow:         @style @c;\n  -webkit-box-shadow: @style @c;\n  -moz-box-shadow:    @style @c;\n}\n.box-shadow(@style, @alpha: 50%) when (isnumber(@alpha)) {\n  .box-shadow(@style, rgba(0, 0, 0, @alpha));\n}\n.box {\n  color: saturate(@base, 5%);\n  border-color: lighten(@base, 30%);\n  div { .box-shadow(0 0 5px, 30%) }\n}\n~~~\n\n在引入`less.js`前先要把你的样式文件引入 :\n\n~~~\n<link rel=\"stylesheet/less\" type=\"text/css\" href=\"styles.less\">\n<script src=\"less.js\" type=\"text/javascript\"></script>\n~~~\n\n## 变量\n\n变量允许我们单独定义一系列通用的样式，然后在需要的时候去调用。所以在做全局样式调整的时候我们可能只需要修改几行代码就可以了。\n\n~~~\n  // LESS\n\n@color: #4D926F;\n\n#header {\n  color: @color;\n}\nh2 {\n  color: @color;\n}\n\n\n\n/* 生成的 CSS */\n\n#header {\n  color: #4D926F;\n}\nh2 {\n  color: #4D926F;\n}\n~~~\n\n## 混合\n\n混合可以将一个定义好的class A轻松的引入到另一个class B中，从而简单实现class B继承class A中的所有属性。我们还可以带参数地调用，就像使用函数一样。\n\n~~~\n// LESS\n\n.rounded-corners (@radius: 5px) {\n  border-radius: @radius;\n  -webkit-border-radius: @radius;\n  -moz-border-radius: @radius;\n}\n\n#header {\n  .rounded-corners;\n}\n#footer {\n  .rounded-corners(10px);\n}\n\n\n\n/* 生成的 CSS */\n\n#header {\n  border-radius: 5px;\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n}\n#footer {\n  border-radius: 10px;\n  -webkit-border-radius: 10px;\n  -moz-border-radius: 10px;\n}\n~~~\n\n## 嵌套规则\n\n我们可以在一个选择器中嵌套另一个选择器来实现继承，这样很大程度减少了代码量，并且代码看起来更加的清晰。\n\n~~~\n// LESS\n\n#header {\n  h1 {\n    font-size: 26px;\n    font-weight: bold;\n  }\n  p { font-size: 12px;\n    a { text-decoration: none;\n      &:hover { border-width: 1px }\n    }\n  }\n}\n\n\n\n/* 生成的 CSS */\n\n#header h1 {\n  font-size: 26px;\n  font-weight: bold;\n}\n#header p {\n  font-size: 12px;\n}\n#header p a {\n  text-decoration: none;\n}\n#header p a:hover {\n  border-width: 1px;\n}\n\n\n~~~\n\n## 函数 & 运算\n\n运算提供了加，减，乘，除操作；我们可以做属性值和颜色的运算，这样就可以实现属性值之间的复杂关系。LESS中的函数一一映射了JavaScript代码，如果你愿意的话可以操作属性值。\n\n~~~\n// LESS\n\n@the-border: 1px;\n@base-color: #111;\n@red:        #842210;\n\n#header {\n  color: @base-color * 3;\n  border-left: @the-border;\n  border-right: @the-border * 2;\n}\n#footer {\n  color: @base-color + #003300;\n  border-color: desaturate(@red, 10%);\n}\n\n\n\n/* 生成的 CSS */\n\n#header {\n  color: #333;\n  border-left: 1px;\n  border-right: 2px;\n}\n#footer {\n  color: #114411;\n  border-color: #7d2717;\n}\n\n\n~~~\n\n# 在客户端使用\n\n引入你的 `.less` 样式文件的时候要设置 `rel` 属性值为 “`stylesheet/less`”:\n\n~~~\n<link rel=\"stylesheet/less\" type=\"text/css\" href=\"styles.less\">\n~~~\n\n然后点击页面顶部download按钮下载 `less.js`, 在`<head>` 中引入:\n\n~~~\n<script src=\"less.js\" type=\"text/javascript\"></script>\n~~~\n\n注意你的less样式文件一定要在引入less.js前先引入。\n\n备注：请在服务器环境下使用！本地直接打开可能会报错！\n\n## 监视模式\n\n监视模式是客户端的一个功能，这个功能允许你当你改变样式的时候，客户端将自动刷新。\n\n要使用它，只要在URL后面加上'`#!watch`'，然后刷新页面就可以了。另外，你也可以通过在终端运行`less.watch()`来启动监视模式。\n\n# 在服务器端使用\n\n## 安装\n\n在服务器端安装 LESS 的最简单方式就是通过 [npm](http://github.com/isaacs/npm)(node 的包管理器), 像这样:\n\n~~~\n$ npm install less\n~~~\n\n如果你想下载最新稳定版本的 LESS，可以尝试像下面这样操作:\n\n~~~\n$ npm install less@latest\n~~~\n\n## 使用\n\n只要安装了 LESS，就可以在Node中像这样调用编译器:\n\n~~~\nvar less = require('less');\n\nless.render('.class { width: 1 + 1 }', function (e, css) {\n    console.log(css);\n});\n~~~\n\n上面会输出\n\n~~~\n.class {\n  width: 2;\n}\n~~~\n\n你也可以手动调用解析器和编译器:\n\n```\nvar parser = new(less.Parser);\n\nparser.parse('.class { width: 1 + 1 }', function (err, tree) {\n    if (err) { return console.error(err) }\n    console.log(tree.toCSS());\n});\n```\n\n## 配置\n\n你可以向解析器传递参数:\n\n```\nvar parser = new(less.Parser)({\n    paths: ['.', './lib'], // Specify search paths for @import directives\n    filename: 'style.less' // Specify a filename, for better error messages\n});\n\nparser.parse('.class { width: 1 + 1 }', function (e, tree) {\n    tree.toCSS({ compress: true }); // Minify CSS output\n});\n\n```\n\n## 在命令行下使用\n\n你可以在终端调用 LESS 解析器:\n\n```\n$ lessc styles.less\n\n```\n\n上面的命令会将编译后的 CSS 传递给 `stdout`, 你可以将它保存到一个文件中:\n\n```\n$ lessc styles.less > styles.css\n\n```\n\n如何你想将编译后的 CSS 压缩掉，那么加一个 `-x` 参数就可以了.\n\n# LESS 语法\n\nLESS 做为 CSS 的一种形式的扩展，它并没有阉割 CSS 的功能，而是在现有的 CSS 语法上，添加了很多额外的功能，所以学习 LESS 是一件轻而易举的事情，果断学习之！\n\n## 变量\n\n很容易理解:\n\n```\n@nice-blue: #5B83AD;\n@light-blue: @nice-blue + #111;\n\n#header { color: @light-blue; }\n\n```\n\n输出:\n\n```\n#header { color: #6c94be; }\n\n```\n\n甚至可以用变量名定义为变量:\n\n```\n@fnord: \"I am fnord.\";\n@var: 'fnord';\ncontent: @@var;\n\n```\n\n解析后:\n\n```\ncontent: \"I am fnord.\";\n\n```\n\n请注意 LESS 中的变量为完全的 ‘常量’ ，所以只能定义一次.\n\n## 混合\n\n在 LESS 中我们可以定义一些通用的属性集为一个class，然后在另一个class中去调用这些属性. 下面有这样一个class:\n\n```\n.bordered {\n  border-top: dotted 1px black;\n  border-bottom: solid 2px black;\n}\n\n```\n\n那如果我们现在需要在其他class中引入那些通用的属性集，那么我们只需要在任何class中像下面这样调用就可以了:\n\n```\n#menu a {\n  color: #111;\n  .bordered;\n}\n.post a {\n  color: red;\n  .bordered;\n}\n\n```\n\n`.bordered` class里面的属性样式都会在 `#menu a` 和 `.post a`中体现出来:\n\n```\n#menu a {\n  color: #111;\n  border-top: dotted 1px black;\n  border-bottom: solid 2px black;\n}\n.post a {\n  color: red;\n  border-top: dotted 1px black;\n  border-bottom: solid 2px black;\n}\n\n```\n\n任何 CSS *class*, *id* 或者 *元素* 属性集都可以以同样的方式引入.\n\n## 带参数混合\n\n在 LESS 中，你还可以像函数一样定义一个带参数的属性集合:\n\n```\n.border-radius (@radius) {\n  border-radius: @radius;\n  -moz-border-radius: @radius;\n  -webkit-border-radius: @radius;\n}\n\n```\n\n然后在其他class中像这样调用它:\n\n```\n#header {\n  .border-radius(4px);\n}\n.button {\n  .border-radius(6px);\n}\n\n```\n\n我们还可以像这样给参数设置默认值:\n\n```\n.border-radius (@radius: 5px) {\n  border-radius: @radius;\n  -moz-border-radius: @radius;\n  -webkit-border-radius: @radius;\n}\n\n```\n\n所以现在如果我们像这样调用它的话:\n\n```\n#header {\n  .border-radius;\n}\n\n```\n\nradius的值就会是5px.\n\n你也可以定义不带参数属性集合,如果你想隐藏这个属性集合，不让它暴露到CSS中去，但是你还想在其他的属性集合中引用，你会发现这个方法非常的好用:\n\n```\n.wrap () {\n  text-wrap: wrap;\n  white-space: pre-wrap;\n  white-space: -moz-pre-wrap;\n  word-wrap: break-word;\n}\n\npre { .wrap }\n\n```\n\n输出:\n\n```\npre {\n  text-wrap: wrap;\n  white-space: pre-wrap;\n  white-space: -moz-pre-wrap;\n  word-wrap: break-word;\n}\n\n```\n\n### `@arguments` 变量\n\n`@arguments`包含了所有传递进来的参数. 如果你不想单独处理每一个参数的话就可以像这样写:\n\n```\n.box-shadow (@x: 0, @y: 0, @blur: 1px, @color: #000) {\n  box-shadow: @arguments;\n  -moz-box-shadow: @arguments;\n  -webkit-box-shadow: @arguments;\n}\n.box-shadow(2px, 5px);\n\n```\n\n将会输出:\n\n```\n  box-shadow: 2px 5px 1px #000;\n  -moz-box-shadow: 2px 5px 1px #000;\n  -webkit-box-shadow: 2px 5px 1px #000;\n\n```\n\n## 模式匹配和导引表达式\n\n有些情况下，我们想根据传入的参数来改变混合的默认呈现，比如下面这个例子：\n\n```\n.mixin (@s, @color) { ... }\n\n.class {\n  .mixin(@switch, #888);\n}\n\n```\n\n如果想让`.mixin`根据不同的`@switch`值而表现各异，如下这般设置：\n\n```\n.mixin (dark, @color) {\n  color: darken(@color, 10%);\n}\n.mixin (light, @color) {\n  color: lighten(@color, 10%);\n}\n.mixin (@_, @color) {\n  display: block;\n}\n\n```\n\n现在，如果运行:\n\n```\n@switch: light;\n\n.class {\n  .mixin(@switch, #888);\n}\n\n```\n\n就会得到下列CSS:\n\n```\n.class {\n  color: #a2a2a2;\n  display: block;\n}\n\n```\n\n如上，`.mixin`就会得到传入颜色的浅色。如果`@switch`设为dark，就会得到深色。\n\n具体实现如下：\n\n- 第一个混合定义并未被匹配，因为它只接受`dark`做为首参\n- 第二个混合定义被成功匹配，因为它只接受`light`\n- 第三个混合定义被成功匹配，因为它接受任意值\n\n只有被匹配的混合才会被使用。变量可以匹配任意的传入值，而变量以外的固定值就仅仅匹配与其相等的传入值。\n\n我们也可以匹配多个参数：\n\n```\n.mixin (@a) {\n  color: @a;\n}\n.mixin (@a, @b) {\n  color: fade(@a, @b);\n}\n\n```\n\nNow if we call `.mixin` with a single argument, we will get the output of the first definition,but if we call it with *two* arguments, we will get the second definition, namely `@a` faded to `@b`.\n\n### 引导\n\n当我们想根据表达式进行匹配，而非根据值和参数匹配时，导引就显得非常有用。如果你对函数式编程非常熟悉，那么你很可能已经使用过导引。\n\n为了尽可能地保留CSS的可声明性，LESS通过导引混合而非if/else语句来实现条件判断，因为前者已在@media query特性中被定义。\n\n以此例做为开始：\n\n```\n.mixin (@a) when (lightness(@a) >= 50%) {\n  background-color: black;\n}\n.mixin (@a) when (lightness(@a) < 50%) {\n  background-color: white;\n}\n.mixin (@a) {\n  color: @a;\n}\n\n```\n\nwhen关键字用以定义一个导引序列(此例只有一个导引)。接下来我们运行下列代码：\n\n```\n.class1 { .mixin(#ddd) }\n.class2 { .mixin(#555) }\n\n```\n\n就会得到：\n\n```\n.class1 {\n  background-color: black;\n  color: #ddd;\n}\n.class2 {\n  background-color: white;\n  color: #555;\n}\n\n```\n\n导引中可用的全部比较运算有： **> >= = =< <**。此外，关键字`true`只表示布尔真值，下面两个混合是相同的：\n\n```\n.truth (@a) when (@a) { ... }\n.truth (@a) when (@a = true) { ... }\n\n```\n\n除去关键字true以外的值都被视示布尔假：\n\n```\n.class {\n  .truth(40); // Will not match any of the above definitions.\n}\n\n```\n\n导引序列使用逗号‘`,`’—分割，当且仅当所有条件都符合时，才会被视为匹配成功。\n\n```\n.mixin (@a) when (@a > 10), (@a < -10) { ... }\n\n```\n\n导引可以无参数，也可以对参数进行比较运算：\n\n```\n@media: mobile;\n\n.mixin (@a) when (@media = mobile) { ... }\n.mixin (@a) when (@media = desktop) { ... }\n\n.max (@a, @b) when (@a > @b) { width: @a }\n.max (@a, @b) when (@a < @b) { width: @b }\n\n```\n\n最后，如果想基于值的类型进行匹配，我们就可以使用is*函式：\n\n```\n.mixin (@a, @b: 0) when (isnumber(@b)) { ... }\n.mixin (@a, @b: black) when (iscolor(@b)) { ... }\n\n```\n\n下面就是常见的检测函式：\n\n- `iscolor`\n- `isnumber`\n- `isstring`\n- `iskeyword`\n- `isurl`\n\n如果你想判断一个值是纯数字，还是某个单位量，可以使用下列函式：\n\n- `ispixel`\n- `ispercentage`\n- `isem`\n\n最后再补充一点，在导引序列中可以使用**and**关键字实现与条件：\n\n```\n.mixin (@a) when (isnumber(@a)) and (@a > 0) { ... }\n\n```\n\n使用**not**关键字实现或条件\n\n```\n.mixin (@b) when not (@b > 0) { ... }\n\n```\n\n## 嵌套规则\n\nLESS 可以让我们以*嵌套*的方式编写层叠样式.让我们先看下下面这段 CSS:\n\n```\n#header { color: black; }\n#header .navigation {\n  font-size: 12px;\n}\n#header .logo {\n  width: 300px;\n}\n#header .logo:hover {\n  text-decoration: none;\n}\n\n```\n\n在 LESS 中, 我们就可以这样写:\n\n```\n#header {\n  color: black;\n\n  .navigation {\n    font-size: 12px;\n  }\n  .logo {\n    width: 300px;\n    &:hover { text-decoration: none }\n  }\n}\n\n```\n\n或者这样写:\n\n```\n#header        { color: black;\n  .navigation  { font-size: 12px }\n  .logo        { width: 300px;\n    &:hover    { text-decoration: none }\n  }\n}\n\n```\n\n代码更简洁了，而且感觉跟`DOM`结构格式有点像.\n\n注意 `&` 符号的使用—如果你想写串联选择器，而不是写后代选择器，就可以用到`&`了. 这点对伪类尤其有用如 `:hover` 和 `:focus`.\n\n例如:\n\n```\n.bordered {\n  &.float {\n    float: left;\n  }\n  .top {\n    margin: 5px;\n  }\n}\n\n```\n\n会输出\n\n```\n.bordered.float {\n  float: left;\n}\n.bordered .top {\n  margin: 5px;\n}\n\n```\n\n## 运算\n\n任何数字、颜色或者变量都可以参与运算. 来看一组例子:\n\n```\n@base: 5%;\n@filler: @base * 2;\n@other: @base + @filler;\n\ncolor: #888 / 4;\nbackground-color: @base-color + #111;\nheight: 100% / 2 + @filler;\n\n```\n\nLESS 的运算已经超出了我们的期望，它能够分辨出颜色和单位。如果像下面这样单位运算的话:\n\n```\n@var: 1px + 5;\n\n```\n\nLESS 会输出 `6px`.\n\n括号也同样允许使用:\n\n```\nwidth: (@var + 5) * 2;\n\n```\n\n并且可以在复合属性中进行运算:\n\n```\nborder: (@width * 2) solid black;\n\n```\n\n## Color 函数\n\nLESS 提供了一系列的颜色运算函数. 颜色会先被转化成 *HSL* 色彩空间, 然后在通道级别操作:\n\n```\nlighten(@color, 10%);     // return a color which is 10% *lighter* than @color\ndarken(@color, 10%);      // return a color which is 10% *darker* than @color\n\nsaturate(@color, 10%);    // return a color 10% *more* saturated than @color\ndesaturate(@color, 10%);  // return a color 10% *less* saturated than @color\n\nfadein(@color, 10%);      // return a color 10% *less* transparent than @color\nfadeout(@color, 10%);     // return a color 10% *more* transparent than @color\nfade(@color, 50%);        // return @color with 50% transparency\n\nspin(@color, 10);         // return a color with a 10 degree larger in hue than @color\nspin(@color, -10);        // return a color with a 10 degree smaller hue than @color\n\nmix(@color1, @color2);    // return a mix of @color1 and @color2\n\n```\n\n使用起来相当简单:\n\n```\n@base: #f04615;\n\n.class {\n  color: saturate(@base, 5%);\n  background-color: lighten(spin(@base, 8), 25%);\n}\n\n```\n\n你还可以提取颜色信息:\n\n```\nhue(@color);        // returns the `hue` channel of @color\nsaturation(@color); // returns the `saturation` channel of @color\nlightness(@color);  // returns the 'lightness' channel of @color\n\n```\n\n如果你想在一种颜色的通道上创建另一种颜色，这些函数就显得那么的好用，例如:\n\n```\n@new: hsl(hue(@old), 45%, 90%);\n\n```\n\n`@new` 将会保持 `@old`的 *色调*, 但是具有不同的饱和度和亮度.\n\n## Math 函数\n\nLESS提供了一组方便的数学函数，你可以使用它们处理一些数字类型的值:\n\n```\nround(1.67); // returns `2`\nceil(2.4);   // returns `3`\nfloor(2.6);  // returns `2`\n\n```\n\n如果你想将一个值转化为百分比，你可以使用`percentage` 函数:\n\n```\npercentage(0.5); // returns `50%`\n\n```\n\n## 命名空间\n\n有时候，你可能为了更好组织CSS或者单纯是为了更好的封装，将一些变量或者混合模块打包起来, 你可以像下面这样在`#bundle`中定义一些属性集之后可以重复使用:\n\n```\n#bundle {\n  .button () {\n    display: block;\n    border: 1px solid black;\n    background-color: grey;\n    &:hover { background-color: white }\n  }\n  .tab { ... }\n  .citation { ... }\n}\n\n```\n\n你只需要在 `#header a`中像这样引入 `.button`:\n\n```\n#header a {\n  color: orange;\n  #bundle > .button;\n}\n\n```\n\n## 作用域\n\nLESS 中的作用域跟其他编程语言非常类似，首先会从本地查找变量或者混合模块，如果没找到的话会去父级作用域中查找，直到找到为止.\n\n```\n@var: red;\n\n#page {\n  @var: white;\n  #header {\n    color: @var; // white\n  }\n}\n\n#footer {\n  color: @var; // red\n}\n\n```\n\n## 注释\n\nCSS 形式的注释在 LESS 中是依然保留的:\n\n```\n/* Hello, I'm a CSS-style comment */\n.class { color: black }\n```\n\nLESS 同样也支持双斜线的注释, 但是编译成 CSS 的时候自动过滤掉:\n\n```\n// Hi, I'm a silent comment, I won't show up in your CSS\n.class { color: white }\n\n```\n\n## Importing\n\n你可以在main文件中通过下面的形势引入 `.less` 文件, `.less` 后缀可带可不带:\n\n```\n@import \"lib.less\";\n@import \"lib\";\n\n```\n\n如果你想导入一个CSS文件而且不想LESS对它进行处理，只需要使用`.css`后缀就可以:\n\n```\n@import \"lib.css\";\n\n```\n\n这样LESS就会跳过它不去处理它.\n\n## 字符串插值\n\n变量可以用类似ruby和php的方式嵌入到字符串中，像`@{name}`这样的结构:\n\n```\n@base-url: \"http://assets.fnord.com\";\nbackground-image: url(\"@{base-url}/images/bg.png\");\n\n```\n\n## 避免编译\n\n有时候我们需要输出一些不正确的CSS语法或者使用一些 LESS不认识的专有语法.\n\n要输出这样的值我们可以在字符串前加上一个 `~`, 例如:\n\n```\n.class {\n  filter: ~\"ms:alwaysHasItsOwnSyntax.For.Stuff()\";\n}\n\n```\n\n我们可以将要避免编译的值用 “”包含起来，输出结果为:\n\n```\n.class {\n  filter: ms:alwaysHasItsOwnSyntax.For.Stuff();\n}\n\n```\n\n## JavaScript 表达式\n\nJavaScript 表达式也可以在.less 文件中使用. 可以通过反引号的方式使用:\n\n```\n@var: `\"hello\".toUpperCase() + '!'`;\n\n```\n\n输出:\n\n```\n@var: \"HELLO!\";\n\n```\n\n注意你也可以同时使用字符串插值和避免编译:\n\n```\n@str: \"hello\";\n@var: ~`\"@{str}\".toUpperCase() + '!'`;\n```\n\n输出:\n\n```\n@var: HELLO!;\n\n```\n\n它也可以访问JavaScript环境:\n\n```\n@height: `document.body.clientHeight`;\n\n```\n\n如果你想将一个JavaScript字符串解析成16进制的颜色值, 你可以使用 `color` 函数:\n\n```\n@color: color(`window.colors.baseColor`);\n@darkcolor: darken(@color, 10%);\n```\n\n### GitHub地址\n\n~~~\nhttps://github.com/less/less.js\n~~~\n","slug":"less","published":1,"date":"2017-05-22T05:03:19.681Z","updated":"2017-05-25T01:04:26.628Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmts100134wvsrk995ndn","content":"<h3 id=\"less\"><a href=\"#less\" class=\"headerlink\" title=\"less\"></a>less</h3><p>一种 动态 样式 语言.LESS 将 CSS 赋予了动态语言的特性，如 变量， 继承，        运算， 函数. LESS 既可以在 客户端 上运行 (支持IE 6+, Webkit, Firefox)，也可以借助Node.js或者Rhino在服务端运行。</p>\n<p>LESS可以这样来写CSS:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">@base: #f938ab;</div><div class=\"line\"></div><div class=\"line\">.box-shadow(@style, @c) when (iscolor(@c)) &#123;</div><div class=\"line\">  box-shadow:         @style @c;</div><div class=\"line\">  -webkit-box-shadow: @style @c;</div><div class=\"line\">  -moz-box-shadow:    @style @c;</div><div class=\"line\">&#125;</div><div class=\"line\">.box-shadow(@style, @alpha: 50%) when (isnumber(@alpha)) &#123;</div><div class=\"line\">  .box-shadow(@style, rgba(0, 0, 0, @alpha));</div><div class=\"line\">&#125;</div><div class=\"line\">.box &#123;</div><div class=\"line\">  color: saturate(@base, 5%);</div><div class=\"line\">  border-color: lighten(@base, 30%);</div><div class=\"line\">  div &#123; .box-shadow(0 0 5px, 30%) &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在引入<code>less.js</code>前先要把你的样式文件引入 :</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;link rel=&quot;stylesheet/less&quot; type=&quot;text/css&quot; href=&quot;styles.less&quot;&gt;</div><div class=\"line\">&lt;script src=&quot;less.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h2><p>变量允许我们单独定义一系列通用的样式，然后在需要的时候去调用。所以在做全局样式调整的时候我们可能只需要修改几行代码就可以了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">  // LESS</div><div class=\"line\"></div><div class=\"line\">@color: #4D926F;</div><div class=\"line\"></div><div class=\"line\">#header &#123;</div><div class=\"line\">  color: @color;</div><div class=\"line\">&#125;</div><div class=\"line\">h2 &#123;</div><div class=\"line\">  color: @color;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">/* 生成的 CSS */</div><div class=\"line\"></div><div class=\"line\">#header &#123;</div><div class=\"line\">  color: #4D926F;</div><div class=\"line\">&#125;</div><div class=\"line\">h2 &#123;</div><div class=\"line\">  color: #4D926F;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"混合\"><a href=\"#混合\" class=\"headerlink\" title=\"混合\"></a>混合</h2><p>混合可以将一个定义好的class A轻松的引入到另一个class B中，从而简单实现class B继承class A中的所有属性。我们还可以带参数地调用，就像使用函数一样。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\">// LESS</div><div class=\"line\"></div><div class=\"line\">.rounded-corners (@radius: 5px) &#123;</div><div class=\"line\">  border-radius: @radius;</div><div class=\"line\">  -webkit-border-radius: @radius;</div><div class=\"line\">  -moz-border-radius: @radius;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">#header &#123;</div><div class=\"line\">  .rounded-corners;</div><div class=\"line\">&#125;</div><div class=\"line\">#footer &#123;</div><div class=\"line\">  .rounded-corners(10px);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">/* 生成的 CSS */</div><div class=\"line\"></div><div class=\"line\">#header &#123;</div><div class=\"line\">  border-radius: 5px;</div><div class=\"line\">  -webkit-border-radius: 5px;</div><div class=\"line\">  -moz-border-radius: 5px;</div><div class=\"line\">&#125;</div><div class=\"line\">#footer &#123;</div><div class=\"line\">  border-radius: 10px;</div><div class=\"line\">  -webkit-border-radius: 10px;</div><div class=\"line\">  -moz-border-radius: 10px;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"嵌套规则\"><a href=\"#嵌套规则\" class=\"headerlink\" title=\"嵌套规则\"></a>嵌套规则</h2><p>我们可以在一个选择器中嵌套另一个选择器来实现继承，这样很大程度减少了代码量，并且代码看起来更加的清晰。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">// LESS</div><div class=\"line\"></div><div class=\"line\">#header &#123;</div><div class=\"line\">  h1 &#123;</div><div class=\"line\">    font-size: 26px;</div><div class=\"line\">    font-weight: bold;</div><div class=\"line\">  &#125;</div><div class=\"line\">  p &#123; font-size: 12px;</div><div class=\"line\">    a &#123; text-decoration: none;</div><div class=\"line\">      &amp;:hover &#123; border-width: 1px &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">/* 生成的 CSS */</div><div class=\"line\"></div><div class=\"line\">#header h1 &#123;</div><div class=\"line\">  font-size: 26px;</div><div class=\"line\">  font-weight: bold;</div><div class=\"line\">&#125;</div><div class=\"line\">#header p &#123;</div><div class=\"line\">  font-size: 12px;</div><div class=\"line\">&#125;</div><div class=\"line\">#header p a &#123;</div><div class=\"line\">  text-decoration: none;</div><div class=\"line\">&#125;</div><div class=\"line\">#header p a:hover &#123;</div><div class=\"line\">  border-width: 1px;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"函数-amp-运算\"><a href=\"#函数-amp-运算\" class=\"headerlink\" title=\"函数 &amp; 运算\"></a>函数 &amp; 运算</h2><p>运算提供了加，减，乘，除操作；我们可以做属性值和颜色的运算，这样就可以实现属性值之间的复杂关系。LESS中的函数一一映射了JavaScript代码，如果你愿意的话可以操作属性值。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\">// LESS</div><div class=\"line\"></div><div class=\"line\">@the-border: 1px;</div><div class=\"line\">@base-color: #111;</div><div class=\"line\">@red:        #842210;</div><div class=\"line\"></div><div class=\"line\">#header &#123;</div><div class=\"line\">  color: @base-color * 3;</div><div class=\"line\">  border-left: @the-border;</div><div class=\"line\">  border-right: @the-border * 2;</div><div class=\"line\">&#125;</div><div class=\"line\">#footer &#123;</div><div class=\"line\">  color: @base-color + #003300;</div><div class=\"line\">  border-color: desaturate(@red, 10%);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">/* 生成的 CSS */</div><div class=\"line\"></div><div class=\"line\">#header &#123;</div><div class=\"line\">  color: #333;</div><div class=\"line\">  border-left: 1px;</div><div class=\"line\">  border-right: 2px;</div><div class=\"line\">&#125;</div><div class=\"line\">#footer &#123;</div><div class=\"line\">  color: #114411;</div><div class=\"line\">  border-color: #7d2717;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"在客户端使用\"><a href=\"#在客户端使用\" class=\"headerlink\" title=\"在客户端使用\"></a>在客户端使用</h1><p>引入你的 <code>.less</code> 样式文件的时候要设置 <code>rel</code> 属性值为 “<code>stylesheet/less</code>”:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;link rel=&quot;stylesheet/less&quot; type=&quot;text/css&quot; href=&quot;styles.less&quot;&gt;</div></pre></td></tr></table></figure>\n<p>然后点击页面顶部download按钮下载 <code>less.js</code>, 在<code>&lt;head&gt;</code> 中引入:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script src=&quot;less.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>\n<p>注意你的less样式文件一定要在引入less.js前先引入。</p>\n<p>备注：请在服务器环境下使用！本地直接打开可能会报错！</p>\n<h2 id=\"监视模式\"><a href=\"#监视模式\" class=\"headerlink\" title=\"监视模式\"></a>监视模式</h2><p>监视模式是客户端的一个功能，这个功能允许你当你改变样式的时候，客户端将自动刷新。</p>\n<p>要使用它，只要在URL后面加上’<code>#!watch</code>‘，然后刷新页面就可以了。另外，你也可以通过在终端运行<code>less.watch()</code>来启动监视模式。</p>\n<h1 id=\"在服务器端使用\"><a href=\"#在服务器端使用\" class=\"headerlink\" title=\"在服务器端使用\"></a>在服务器端使用</h1><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>在服务器端安装 LESS 的最简单方式就是通过 <a href=\"http://github.com/isaacs/npm\" target=\"_blank\" rel=\"external\">npm</a>(node 的包管理器), 像这样:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install less</div></pre></td></tr></table></figure>\n<p>如果你想下载最新稳定版本的 LESS，可以尝试像下面这样操作:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install less@latest</div></pre></td></tr></table></figure>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>只要安装了 LESS，就可以在Node中像这样调用编译器:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">var less = require(&apos;less&apos;);</div><div class=\"line\"></div><div class=\"line\">less.render(&apos;.class &#123; width: 1 + 1 &#125;&apos;, function (e, css) &#123;</div><div class=\"line\">    console.log(css);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>上面会输出</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">.class &#123;</div><div class=\"line\">  width: 2;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>你也可以手动调用解析器和编译器:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">var parser = new(less.Parser);</div><div class=\"line\"></div><div class=\"line\">parser.parse(&apos;.class &#123; width: 1 + 1 &#125;&apos;, function (err, tree) &#123;</div><div class=\"line\">    if (err) &#123; return console.error(err) &#125;</div><div class=\"line\">    console.log(tree.toCSS());</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>你可以向解析器传递参数:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">var parser = new(less.Parser)(&#123;</div><div class=\"line\">    paths: [&apos;.&apos;, &apos;./lib&apos;], // Specify search paths for @import directives</div><div class=\"line\">    filename: &apos;style.less&apos; // Specify a filename, for better error messages</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">parser.parse(&apos;.class &#123; width: 1 + 1 &#125;&apos;, function (e, tree) &#123;</div><div class=\"line\">    tree.toCSS(&#123; compress: true &#125;); // Minify CSS output</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"在命令行下使用\"><a href=\"#在命令行下使用\" class=\"headerlink\" title=\"在命令行下使用\"></a>在命令行下使用</h2><p>你可以在终端调用 LESS 解析器:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ lessc styles.less</div></pre></td></tr></table></figure>\n<p>上面的命令会将编译后的 CSS 传递给 <code>stdout</code>, 你可以将它保存到一个文件中:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ lessc styles.less &gt; styles.css</div></pre></td></tr></table></figure>\n<p>如何你想将编译后的 CSS 压缩掉，那么加一个 <code>-x</code> 参数就可以了.</p>\n<h1 id=\"LESS-语法\"><a href=\"#LESS-语法\" class=\"headerlink\" title=\"LESS 语法\"></a>LESS 语法</h1><p>LESS 做为 CSS 的一种形式的扩展，它并没有阉割 CSS 的功能，而是在现有的 CSS 语法上，添加了很多额外的功能，所以学习 LESS 是一件轻而易举的事情，果断学习之！</p>\n<h2 id=\"变量-1\"><a href=\"#变量-1\" class=\"headerlink\" title=\"变量\"></a>变量</h2><p>很容易理解:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">@nice-blue: #5B83AD;</div><div class=\"line\">@light-blue: @nice-blue + #111;</div><div class=\"line\"></div><div class=\"line\">#header &#123; color: @light-blue; &#125;</div></pre></td></tr></table></figure>\n<p>输出:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">#header &#123; color: #6c94be; &#125;</div></pre></td></tr></table></figure>\n<p>甚至可以用变量名定义为变量:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">@fnord: &quot;I am fnord.&quot;;</div><div class=\"line\">@var: &apos;fnord&apos;;</div><div class=\"line\">content: @@var;</div></pre></td></tr></table></figure>\n<p>解析后:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">content: &quot;I am fnord.&quot;;</div></pre></td></tr></table></figure>\n<p>请注意 LESS 中的变量为完全的 ‘常量’ ，所以只能定义一次.</p>\n<h2 id=\"混合-1\"><a href=\"#混合-1\" class=\"headerlink\" title=\"混合\"></a>混合</h2><p>在 LESS 中我们可以定义一些通用的属性集为一个class，然后在另一个class中去调用这些属性. 下面有这样一个class:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">.bordered &#123;</div><div class=\"line\">  border-top: dotted 1px black;</div><div class=\"line\">  border-bottom: solid 2px black;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>那如果我们现在需要在其他class中引入那些通用的属性集，那么我们只需要在任何class中像下面这样调用就可以了:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">#menu a &#123;</div><div class=\"line\">  color: #111;</div><div class=\"line\">  .bordered;</div><div class=\"line\">&#125;</div><div class=\"line\">.post a &#123;</div><div class=\"line\">  color: red;</div><div class=\"line\">  .bordered;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><code>.bordered</code> class里面的属性样式都会在 <code>#menu a</code> 和 <code>.post a</code>中体现出来:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">#menu a &#123;</div><div class=\"line\">  color: #111;</div><div class=\"line\">  border-top: dotted 1px black;</div><div class=\"line\">  border-bottom: solid 2px black;</div><div class=\"line\">&#125;</div><div class=\"line\">.post a &#123;</div><div class=\"line\">  color: red;</div><div class=\"line\">  border-top: dotted 1px black;</div><div class=\"line\">  border-bottom: solid 2px black;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>任何 CSS <em>class</em>, <em>id</em> 或者 <em>元素</em> 属性集都可以以同样的方式引入.</p>\n<h2 id=\"带参数混合\"><a href=\"#带参数混合\" class=\"headerlink\" title=\"带参数混合\"></a>带参数混合</h2><p>在 LESS 中，你还可以像函数一样定义一个带参数的属性集合:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">.border-radius (@radius) &#123;</div><div class=\"line\">  border-radius: @radius;</div><div class=\"line\">  -moz-border-radius: @radius;</div><div class=\"line\">  -webkit-border-radius: @radius;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>然后在其他class中像这样调用它:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">#header &#123;</div><div class=\"line\">  .border-radius(4px);</div><div class=\"line\">&#125;</div><div class=\"line\">.button &#123;</div><div class=\"line\">  .border-radius(6px);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>我们还可以像这样给参数设置默认值:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">.border-radius (@radius: 5px) &#123;</div><div class=\"line\">  border-radius: @radius;</div><div class=\"line\">  -moz-border-radius: @radius;</div><div class=\"line\">  -webkit-border-radius: @radius;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>所以现在如果我们像这样调用它的话:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#header &#123;</div><div class=\"line\">  .border-radius;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>radius的值就会是5px.</p>\n<p>你也可以定义不带参数属性集合,如果你想隐藏这个属性集合，不让它暴露到CSS中去，但是你还想在其他的属性集合中引用，你会发现这个方法非常的好用:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">.wrap () &#123;</div><div class=\"line\">  text-wrap: wrap;</div><div class=\"line\">  white-space: pre-wrap;</div><div class=\"line\">  white-space: -moz-pre-wrap;</div><div class=\"line\">  word-wrap: break-word;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">pre &#123; .wrap &#125;</div></pre></td></tr></table></figure>\n<p>输出:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">pre &#123;</div><div class=\"line\">  text-wrap: wrap;</div><div class=\"line\">  white-space: pre-wrap;</div><div class=\"line\">  white-space: -moz-pre-wrap;</div><div class=\"line\">  word-wrap: break-word;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"arguments-变量\"><a href=\"#arguments-变量\" class=\"headerlink\" title=\"@arguments 变量\"></a><code>@arguments</code> 变量</h3><p><code>@arguments</code>包含了所有传递进来的参数. 如果你不想单独处理每一个参数的话就可以像这样写:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">.box-shadow (@x: 0, @y: 0, @blur: 1px, @color: #000) &#123;</div><div class=\"line\">  box-shadow: @arguments;</div><div class=\"line\">  -moz-box-shadow: @arguments;</div><div class=\"line\">  -webkit-box-shadow: @arguments;</div><div class=\"line\">&#125;</div><div class=\"line\">.box-shadow(2px, 5px);</div></pre></td></tr></table></figure>\n<p>将会输出:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">box-shadow: 2px 5px 1px #000;</div><div class=\"line\">-moz-box-shadow: 2px 5px 1px #000;</div><div class=\"line\">-webkit-box-shadow: 2px 5px 1px #000;</div></pre></td></tr></table></figure>\n<h2 id=\"模式匹配和导引表达式\"><a href=\"#模式匹配和导引表达式\" class=\"headerlink\" title=\"模式匹配和导引表达式\"></a>模式匹配和导引表达式</h2><p>有些情况下，我们想根据传入的参数来改变混合的默认呈现，比如下面这个例子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">.mixin (@s, @color) &#123; ... &#125;</div><div class=\"line\"></div><div class=\"line\">.class &#123;</div><div class=\"line\">  .mixin(@switch, #888);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>如果想让<code>.mixin</code>根据不同的<code>@switch</code>值而表现各异，如下这般设置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">.mixin (dark, @color) &#123;</div><div class=\"line\">  color: darken(@color, 10%);</div><div class=\"line\">&#125;</div><div class=\"line\">.mixin (light, @color) &#123;</div><div class=\"line\">  color: lighten(@color, 10%);</div><div class=\"line\">&#125;</div><div class=\"line\">.mixin (@_, @color) &#123;</div><div class=\"line\">  display: block;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>现在，如果运行:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">@switch: light;</div><div class=\"line\"></div><div class=\"line\">.class &#123;</div><div class=\"line\">  .mixin(@switch, #888);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>就会得到下列CSS:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">.class &#123;</div><div class=\"line\">  color: #a2a2a2;</div><div class=\"line\">  display: block;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>如上，<code>.mixin</code>就会得到传入颜色的浅色。如果<code>@switch</code>设为dark，就会得到深色。</p>\n<p>具体实现如下：</p>\n<ul>\n<li>第一个混合定义并未被匹配，因为它只接受<code>dark</code>做为首参</li>\n<li>第二个混合定义被成功匹配，因为它只接受<code>light</code></li>\n<li>第三个混合定义被成功匹配，因为它接受任意值</li>\n</ul>\n<p>只有被匹配的混合才会被使用。变量可以匹配任意的传入值，而变量以外的固定值就仅仅匹配与其相等的传入值。</p>\n<p>我们也可以匹配多个参数：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">.mixin (@a) &#123;</div><div class=\"line\">  color: @a;</div><div class=\"line\">&#125;</div><div class=\"line\">.mixin (@a, @b) &#123;</div><div class=\"line\">  color: fade(@a, @b);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Now if we call <code>.mixin</code> with a single argument, we will get the output of the first definition,but if we call it with <em>two</em> arguments, we will get the second definition, namely <code>@a</code> faded to <code>@b</code>.</p>\n<h3 id=\"引导\"><a href=\"#引导\" class=\"headerlink\" title=\"引导\"></a>引导</h3><p>当我们想根据表达式进行匹配，而非根据值和参数匹配时，导引就显得非常有用。如果你对函数式编程非常熟悉，那么你很可能已经使用过导引。</p>\n<p>为了尽可能地保留CSS的可声明性，LESS通过导引混合而非if/else语句来实现条件判断，因为前者已在@media query特性中被定义。</p>\n<p>以此例做为开始：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">.mixin (@a) when (lightness(@a) &gt;= 50%) &#123;</div><div class=\"line\">  background-color: black;</div><div class=\"line\">&#125;</div><div class=\"line\">.mixin (@a) when (lightness(@a) &lt; 50%) &#123;</div><div class=\"line\">  background-color: white;</div><div class=\"line\">&#125;</div><div class=\"line\">.mixin (@a) &#123;</div><div class=\"line\">  color: @a;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>when关键字用以定义一个导引序列(此例只有一个导引)。接下来我们运行下列代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">.class1 &#123; .mixin(#ddd) &#125;</div><div class=\"line\">.class2 &#123; .mixin(#555) &#125;</div></pre></td></tr></table></figure>\n<p>就会得到：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">.class1 &#123;</div><div class=\"line\">  background-color: black;</div><div class=\"line\">  color: #ddd;</div><div class=\"line\">&#125;</div><div class=\"line\">.class2 &#123;</div><div class=\"line\">  background-color: white;</div><div class=\"line\">  color: #555;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>导引中可用的全部比较运算有： <strong>&gt; &gt;= = =&lt; &lt;</strong>。此外，关键字<code>true</code>只表示布尔真值，下面两个混合是相同的：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">.truth (@a) when (@a) &#123; ... &#125;</div><div class=\"line\">.truth (@a) when (@a = true) &#123; ... &#125;</div></pre></td></tr></table></figure>\n<p>除去关键字true以外的值都被视示布尔假：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">.class &#123;</div><div class=\"line\">  .truth(40); // Will not match any of the above definitions.</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>导引序列使用逗号‘<code>,</code>’—分割，当且仅当所有条件都符合时，才会被视为匹配成功。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">.mixin (@a) when (@a &gt; 10), (@a &lt; -10) &#123; ... &#125;</div></pre></td></tr></table></figure>\n<p>导引可以无参数，也可以对参数进行比较运算：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">@media: mobile;</div><div class=\"line\"></div><div class=\"line\">.mixin (@a) when (@media = mobile) &#123; ... &#125;</div><div class=\"line\">.mixin (@a) when (@media = desktop) &#123; ... &#125;</div><div class=\"line\"></div><div class=\"line\">.max (@a, @b) when (@a &gt; @b) &#123; width: @a &#125;</div><div class=\"line\">.max (@a, @b) when (@a &lt; @b) &#123; width: @b &#125;</div></pre></td></tr></table></figure>\n<p>最后，如果想基于值的类型进行匹配，我们就可以使用is*函式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">.mixin (@a, @b: 0) when (isnumber(@b)) &#123; ... &#125;</div><div class=\"line\">.mixin (@a, @b: black) when (iscolor(@b)) &#123; ... &#125;</div></pre></td></tr></table></figure>\n<p>下面就是常见的检测函式：</p>\n<ul>\n<li><code>iscolor</code></li>\n<li><code>isnumber</code></li>\n<li><code>isstring</code></li>\n<li><code>iskeyword</code></li>\n<li><code>isurl</code></li>\n</ul>\n<p>如果你想判断一个值是纯数字，还是某个单位量，可以使用下列函式：</p>\n<ul>\n<li><code>ispixel</code></li>\n<li><code>ispercentage</code></li>\n<li><code>isem</code></li>\n</ul>\n<p>最后再补充一点，在导引序列中可以使用<strong>and</strong>关键字实现与条件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">.mixin (@a) when (isnumber(@a)) and (@a &gt; 0) &#123; ... &#125;</div></pre></td></tr></table></figure>\n<p>使用<strong>not</strong>关键字实现或条件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">.mixin (@b) when not (@b &gt; 0) &#123; ... &#125;</div></pre></td></tr></table></figure>\n<h2 id=\"嵌套规则-1\"><a href=\"#嵌套规则-1\" class=\"headerlink\" title=\"嵌套规则\"></a>嵌套规则</h2><p>LESS 可以让我们以<em>嵌套</em>的方式编写层叠样式.让我们先看下下面这段 CSS:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">#header &#123; color: black; &#125;</div><div class=\"line\">#header .navigation &#123;</div><div class=\"line\">  font-size: 12px;</div><div class=\"line\">&#125;</div><div class=\"line\">#header .logo &#123;</div><div class=\"line\">  width: 300px;</div><div class=\"line\">&#125;</div><div class=\"line\">#header .logo:hover &#123;</div><div class=\"line\">  text-decoration: none;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在 LESS 中, 我们就可以这样写:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">#header &#123;</div><div class=\"line\">  color: black;</div><div class=\"line\"></div><div class=\"line\">  .navigation &#123;</div><div class=\"line\">    font-size: 12px;</div><div class=\"line\">  &#125;</div><div class=\"line\">  .logo &#123;</div><div class=\"line\">    width: 300px;</div><div class=\"line\">    &amp;:hover &#123; text-decoration: none &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>或者这样写:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">#header        &#123; color: black;</div><div class=\"line\">  .navigation  &#123; font-size: 12px &#125;</div><div class=\"line\">  .logo        &#123; width: 300px;</div><div class=\"line\">    &amp;:hover    &#123; text-decoration: none &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>代码更简洁了，而且感觉跟<code>DOM</code>结构格式有点像.</p>\n<p>注意 <code>&amp;</code> 符号的使用—如果你想写串联选择器，而不是写后代选择器，就可以用到<code>&amp;</code>了. 这点对伪类尤其有用如 <code>:hover</code> 和 <code>:focus</code>.</p>\n<p>例如:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">.bordered &#123;</div><div class=\"line\">  &amp;.float &#123;</div><div class=\"line\">    float: left;</div><div class=\"line\">  &#125;</div><div class=\"line\">  .top &#123;</div><div class=\"line\">    margin: 5px;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>会输出</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">.bordered.float &#123;</div><div class=\"line\">  float: left;</div><div class=\"line\">&#125;</div><div class=\"line\">.bordered .top &#123;</div><div class=\"line\">  margin: 5px;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"运算\"><a href=\"#运算\" class=\"headerlink\" title=\"运算\"></a>运算</h2><p>任何数字、颜色或者变量都可以参与运算. 来看一组例子:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">@base: 5%;</div><div class=\"line\">@filler: @base * 2;</div><div class=\"line\">@other: @base + @filler;</div><div class=\"line\"></div><div class=\"line\">color: #888 / 4;</div><div class=\"line\">background-color: @base-color + #111;</div><div class=\"line\">height: 100% / 2 + @filler;</div></pre></td></tr></table></figure>\n<p>LESS 的运算已经超出了我们的期望，它能够分辨出颜色和单位。如果像下面这样单位运算的话:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">@var: 1px + 5;</div></pre></td></tr></table></figure>\n<p>LESS 会输出 <code>6px</code>.</p>\n<p>括号也同样允许使用:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">width: (@var + 5) * 2;</div></pre></td></tr></table></figure>\n<p>并且可以在复合属性中进行运算:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">border: (@width * 2) solid black;</div></pre></td></tr></table></figure>\n<h2 id=\"Color-函数\"><a href=\"#Color-函数\" class=\"headerlink\" title=\"Color 函数\"></a>Color 函数</h2><p>LESS 提供了一系列的颜色运算函数. 颜色会先被转化成 <em>HSL</em> 色彩空间, 然后在通道级别操作:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">lighten(@color, 10%);     // return a color which is 10% *lighter* than @color</div><div class=\"line\">darken(@color, 10%);      // return a color which is 10% *darker* than @color</div><div class=\"line\"></div><div class=\"line\">saturate(@color, 10%);    // return a color 10% *more* saturated than @color</div><div class=\"line\">desaturate(@color, 10%);  // return a color 10% *less* saturated than @color</div><div class=\"line\"></div><div class=\"line\">fadein(@color, 10%);      // return a color 10% *less* transparent than @color</div><div class=\"line\">fadeout(@color, 10%);     // return a color 10% *more* transparent than @color</div><div class=\"line\">fade(@color, 50%);        // return @color with 50% transparency</div><div class=\"line\"></div><div class=\"line\">spin(@color, 10);         // return a color with a 10 degree larger in hue than @color</div><div class=\"line\">spin(@color, -10);        // return a color with a 10 degree smaller hue than @color</div><div class=\"line\"></div><div class=\"line\">mix(@color1, @color2);    // return a mix of @color1 and @color2</div></pre></td></tr></table></figure>\n<p>使用起来相当简单:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">@base: #f04615;</div><div class=\"line\"></div><div class=\"line\">.class &#123;</div><div class=\"line\">  color: saturate(@base, 5%);</div><div class=\"line\">  background-color: lighten(spin(@base, 8), 25%);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>你还可以提取颜色信息:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">hue(@color);        // returns the `hue` channel of @color</div><div class=\"line\">saturation(@color); // returns the `saturation` channel of @color</div><div class=\"line\">lightness(@color);  // returns the &apos;lightness&apos; channel of @color</div></pre></td></tr></table></figure>\n<p>如果你想在一种颜色的通道上创建另一种颜色，这些函数就显得那么的好用，例如:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">@new: hsl(hue(@old), 45%, 90%);</div></pre></td></tr></table></figure>\n<p><code>@new</code> 将会保持 <code>@old</code>的 <em>色调</em>, 但是具有不同的饱和度和亮度.</p>\n<h2 id=\"Math-函数\"><a href=\"#Math-函数\" class=\"headerlink\" title=\"Math 函数\"></a>Math 函数</h2><p>LESS提供了一组方便的数学函数，你可以使用它们处理一些数字类型的值:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">round(1.67); // returns `2`</div><div class=\"line\">ceil(2.4);   // returns `3`</div><div class=\"line\">floor(2.6);  // returns `2`</div></pre></td></tr></table></figure>\n<p>如果你想将一个值转化为百分比，你可以使用<code>percentage</code> 函数:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">percentage(0.5); // returns `50%`</div></pre></td></tr></table></figure>\n<h2 id=\"命名空间\"><a href=\"#命名空间\" class=\"headerlink\" title=\"命名空间\"></a>命名空间</h2><p>有时候，你可能为了更好组织CSS或者单纯是为了更好的封装，将一些变量或者混合模块打包起来, 你可以像下面这样在<code>#bundle</code>中定义一些属性集之后可以重复使用:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">#bundle &#123;</div><div class=\"line\">  .button () &#123;</div><div class=\"line\">    display: block;</div><div class=\"line\">    border: 1px solid black;</div><div class=\"line\">    background-color: grey;</div><div class=\"line\">    &amp;:hover &#123; background-color: white &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">  .tab &#123; ... &#125;</div><div class=\"line\">  .citation &#123; ... &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>你只需要在 <code>#header a</code>中像这样引入 <code>.button</code>:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">#header a &#123;</div><div class=\"line\">  color: orange;</div><div class=\"line\">  #bundle &gt; .button;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h2><p>LESS 中的作用域跟其他编程语言非常类似，首先会从本地查找变量或者混合模块，如果没找到的话会去父级作用域中查找，直到找到为止.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">@var: red;</div><div class=\"line\"></div><div class=\"line\">#page &#123;</div><div class=\"line\">  @var: white;</div><div class=\"line\">  #header &#123;</div><div class=\"line\">    color: @var; // white</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">#footer &#123;</div><div class=\"line\">  color: @var; // red</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h2><p>CSS 形式的注释在 LESS 中是依然保留的:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">/* Hello, I&apos;m a CSS-style comment */</div><div class=\"line\">.class &#123; color: black &#125;</div></pre></td></tr></table></figure>\n<p>LESS 同样也支持双斜线的注释, 但是编译成 CSS 的时候自动过滤掉:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">// Hi, I&apos;m a silent comment, I won&apos;t show up in your CSS</div><div class=\"line\">.class &#123; color: white &#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Importing\"><a href=\"#Importing\" class=\"headerlink\" title=\"Importing\"></a>Importing</h2><p>你可以在main文件中通过下面的形势引入 <code>.less</code> 文件, <code>.less</code> 后缀可带可不带:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">@import &quot;lib.less&quot;;</div><div class=\"line\">@import &quot;lib&quot;;</div></pre></td></tr></table></figure>\n<p>如果你想导入一个CSS文件而且不想LESS对它进行处理，只需要使用<code>.css</code>后缀就可以:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">@import &quot;lib.css&quot;;</div></pre></td></tr></table></figure>\n<p>这样LESS就会跳过它不去处理它.</p>\n<h2 id=\"字符串插值\"><a href=\"#字符串插值\" class=\"headerlink\" title=\"字符串插值\"></a>字符串插值</h2><p>变量可以用类似ruby和php的方式嵌入到字符串中，像<code>@{name}</code>这样的结构:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">@base-url: &quot;http://assets.fnord.com&quot;;</div><div class=\"line\">background-image: url(&quot;@&#123;base-url&#125;/images/bg.png&quot;);</div></pre></td></tr></table></figure>\n<h2 id=\"避免编译\"><a href=\"#避免编译\" class=\"headerlink\" title=\"避免编译\"></a>避免编译</h2><p>有时候我们需要输出一些不正确的CSS语法或者使用一些 LESS不认识的专有语法.</p>\n<p>要输出这样的值我们可以在字符串前加上一个 <code>~</code>, 例如:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">.class &#123;</div><div class=\"line\">  filter: ~&quot;ms:alwaysHasItsOwnSyntax.For.Stuff()&quot;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>我们可以将要避免编译的值用 “”包含起来，输出结果为:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">.class &#123;</div><div class=\"line\">  filter: ms:alwaysHasItsOwnSyntax.For.Stuff();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"JavaScript-表达式\"><a href=\"#JavaScript-表达式\" class=\"headerlink\" title=\"JavaScript 表达式\"></a>JavaScript 表达式</h2><p>JavaScript 表达式也可以在.less 文件中使用. 可以通过反引号的方式使用:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">@var: `&quot;hello&quot;.toUpperCase() + &apos;!&apos;`;</div></pre></td></tr></table></figure>\n<p>输出:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">@var: &quot;HELLO!&quot;;</div></pre></td></tr></table></figure>\n<p>注意你也可以同时使用字符串插值和避免编译:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">@str: &quot;hello&quot;;</div><div class=\"line\">@var: ~`&quot;@&#123;str&#125;&quot;.toUpperCase() + &apos;!&apos;`;</div></pre></td></tr></table></figure>\n<p>输出:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">@var: HELLO!;</div></pre></td></tr></table></figure>\n<p>它也可以访问JavaScript环境:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">@height: `document.body.clientHeight`;</div></pre></td></tr></table></figure>\n<p>如果你想将一个JavaScript字符串解析成16进制的颜色值, 你可以使用 <code>color</code> 函数:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">@color: color(`window.colors.baseColor`);</div><div class=\"line\">@darkcolor: darken(@color, 10%);</div></pre></td></tr></table></figure>\n<h3 id=\"GitHub地址\"><a href=\"#GitHub地址\" class=\"headerlink\" title=\"GitHub地址\"></a>GitHub地址</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">https://github.com/less/less.js</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"less\"><a href=\"#less\" class=\"headerlink\" title=\"less\"></a>less</h3><p>一种 动态 样式 语言.LESS 将 CSS 赋予了动态语言的特性，如 变量， 继承，        运算， 函数. LESS 既可以在 客户端 上运行 (支持IE 6+, Webkit, Firefox)，也可以借助Node.js或者Rhino在服务端运行。</p>\n<p>LESS可以这样来写CSS:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">@base: #f938ab;</div><div class=\"line\"></div><div class=\"line\">.box-shadow(@style, @c) when (iscolor(@c)) &#123;</div><div class=\"line\">  box-shadow:         @style @c;</div><div class=\"line\">  -webkit-box-shadow: @style @c;</div><div class=\"line\">  -moz-box-shadow:    @style @c;</div><div class=\"line\">&#125;</div><div class=\"line\">.box-shadow(@style, @alpha: 50%) when (isnumber(@alpha)) &#123;</div><div class=\"line\">  .box-shadow(@style, rgba(0, 0, 0, @alpha));</div><div class=\"line\">&#125;</div><div class=\"line\">.box &#123;</div><div class=\"line\">  color: saturate(@base, 5%);</div><div class=\"line\">  border-color: lighten(@base, 30%);</div><div class=\"line\">  div &#123; .box-shadow(0 0 5px, 30%) &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在引入<code>less.js</code>前先要把你的样式文件引入 :</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;link rel=&quot;stylesheet/less&quot; type=&quot;text/css&quot; href=&quot;styles.less&quot;&gt;</div><div class=\"line\">&lt;script src=&quot;less.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h2><p>变量允许我们单独定义一系列通用的样式，然后在需要的时候去调用。所以在做全局样式调整的时候我们可能只需要修改几行代码就可以了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">  // LESS</div><div class=\"line\"></div><div class=\"line\">@color: #4D926F;</div><div class=\"line\"></div><div class=\"line\">#header &#123;</div><div class=\"line\">  color: @color;</div><div class=\"line\">&#125;</div><div class=\"line\">h2 &#123;</div><div class=\"line\">  color: @color;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">/* 生成的 CSS */</div><div class=\"line\"></div><div class=\"line\">#header &#123;</div><div class=\"line\">  color: #4D926F;</div><div class=\"line\">&#125;</div><div class=\"line\">h2 &#123;</div><div class=\"line\">  color: #4D926F;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"混合\"><a href=\"#混合\" class=\"headerlink\" title=\"混合\"></a>混合</h2><p>混合可以将一个定义好的class A轻松的引入到另一个class B中，从而简单实现class B继承class A中的所有属性。我们还可以带参数地调用，就像使用函数一样。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\">// LESS</div><div class=\"line\"></div><div class=\"line\">.rounded-corners (@radius: 5px) &#123;</div><div class=\"line\">  border-radius: @radius;</div><div class=\"line\">  -webkit-border-radius: @radius;</div><div class=\"line\">  -moz-border-radius: @radius;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">#header &#123;</div><div class=\"line\">  .rounded-corners;</div><div class=\"line\">&#125;</div><div class=\"line\">#footer &#123;</div><div class=\"line\">  .rounded-corners(10px);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">/* 生成的 CSS */</div><div class=\"line\"></div><div class=\"line\">#header &#123;</div><div class=\"line\">  border-radius: 5px;</div><div class=\"line\">  -webkit-border-radius: 5px;</div><div class=\"line\">  -moz-border-radius: 5px;</div><div class=\"line\">&#125;</div><div class=\"line\">#footer &#123;</div><div class=\"line\">  border-radius: 10px;</div><div class=\"line\">  -webkit-border-radius: 10px;</div><div class=\"line\">  -moz-border-radius: 10px;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"嵌套规则\"><a href=\"#嵌套规则\" class=\"headerlink\" title=\"嵌套规则\"></a>嵌套规则</h2><p>我们可以在一个选择器中嵌套另一个选择器来实现继承，这样很大程度减少了代码量，并且代码看起来更加的清晰。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">// LESS</div><div class=\"line\"></div><div class=\"line\">#header &#123;</div><div class=\"line\">  h1 &#123;</div><div class=\"line\">    font-size: 26px;</div><div class=\"line\">    font-weight: bold;</div><div class=\"line\">  &#125;</div><div class=\"line\">  p &#123; font-size: 12px;</div><div class=\"line\">    a &#123; text-decoration: none;</div><div class=\"line\">      &amp;:hover &#123; border-width: 1px &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">/* 生成的 CSS */</div><div class=\"line\"></div><div class=\"line\">#header h1 &#123;</div><div class=\"line\">  font-size: 26px;</div><div class=\"line\">  font-weight: bold;</div><div class=\"line\">&#125;</div><div class=\"line\">#header p &#123;</div><div class=\"line\">  font-size: 12px;</div><div class=\"line\">&#125;</div><div class=\"line\">#header p a &#123;</div><div class=\"line\">  text-decoration: none;</div><div class=\"line\">&#125;</div><div class=\"line\">#header p a:hover &#123;</div><div class=\"line\">  border-width: 1px;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"函数-amp-运算\"><a href=\"#函数-amp-运算\" class=\"headerlink\" title=\"函数 &amp; 运算\"></a>函数 &amp; 运算</h2><p>运算提供了加，减，乘，除操作；我们可以做属性值和颜色的运算，这样就可以实现属性值之间的复杂关系。LESS中的函数一一映射了JavaScript代码，如果你愿意的话可以操作属性值。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\">// LESS</div><div class=\"line\"></div><div class=\"line\">@the-border: 1px;</div><div class=\"line\">@base-color: #111;</div><div class=\"line\">@red:        #842210;</div><div class=\"line\"></div><div class=\"line\">#header &#123;</div><div class=\"line\">  color: @base-color * 3;</div><div class=\"line\">  border-left: @the-border;</div><div class=\"line\">  border-right: @the-border * 2;</div><div class=\"line\">&#125;</div><div class=\"line\">#footer &#123;</div><div class=\"line\">  color: @base-color + #003300;</div><div class=\"line\">  border-color: desaturate(@red, 10%);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">/* 生成的 CSS */</div><div class=\"line\"></div><div class=\"line\">#header &#123;</div><div class=\"line\">  color: #333;</div><div class=\"line\">  border-left: 1px;</div><div class=\"line\">  border-right: 2px;</div><div class=\"line\">&#125;</div><div class=\"line\">#footer &#123;</div><div class=\"line\">  color: #114411;</div><div class=\"line\">  border-color: #7d2717;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"在客户端使用\"><a href=\"#在客户端使用\" class=\"headerlink\" title=\"在客户端使用\"></a>在客户端使用</h1><p>引入你的 <code>.less</code> 样式文件的时候要设置 <code>rel</code> 属性值为 “<code>stylesheet/less</code>”:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;link rel=&quot;stylesheet/less&quot; type=&quot;text/css&quot; href=&quot;styles.less&quot;&gt;</div></pre></td></tr></table></figure>\n<p>然后点击页面顶部download按钮下载 <code>less.js</code>, 在<code>&lt;head&gt;</code> 中引入:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script src=&quot;less.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>\n<p>注意你的less样式文件一定要在引入less.js前先引入。</p>\n<p>备注：请在服务器环境下使用！本地直接打开可能会报错！</p>\n<h2 id=\"监视模式\"><a href=\"#监视模式\" class=\"headerlink\" title=\"监视模式\"></a>监视模式</h2><p>监视模式是客户端的一个功能，这个功能允许你当你改变样式的时候，客户端将自动刷新。</p>\n<p>要使用它，只要在URL后面加上’<code>#!watch</code>‘，然后刷新页面就可以了。另外，你也可以通过在终端运行<code>less.watch()</code>来启动监视模式。</p>\n<h1 id=\"在服务器端使用\"><a href=\"#在服务器端使用\" class=\"headerlink\" title=\"在服务器端使用\"></a>在服务器端使用</h1><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>在服务器端安装 LESS 的最简单方式就是通过 <a href=\"http://github.com/isaacs/npm\" target=\"_blank\" rel=\"external\">npm</a>(node 的包管理器), 像这样:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install less</div></pre></td></tr></table></figure>\n<p>如果你想下载最新稳定版本的 LESS，可以尝试像下面这样操作:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install less@latest</div></pre></td></tr></table></figure>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>只要安装了 LESS，就可以在Node中像这样调用编译器:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">var less = require(&apos;less&apos;);</div><div class=\"line\"></div><div class=\"line\">less.render(&apos;.class &#123; width: 1 + 1 &#125;&apos;, function (e, css) &#123;</div><div class=\"line\">    console.log(css);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>上面会输出</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">.class &#123;</div><div class=\"line\">  width: 2;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>你也可以手动调用解析器和编译器:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">var parser = new(less.Parser);</div><div class=\"line\"></div><div class=\"line\">parser.parse(&apos;.class &#123; width: 1 + 1 &#125;&apos;, function (err, tree) &#123;</div><div class=\"line\">    if (err) &#123; return console.error(err) &#125;</div><div class=\"line\">    console.log(tree.toCSS());</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>你可以向解析器传递参数:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">var parser = new(less.Parser)(&#123;</div><div class=\"line\">    paths: [&apos;.&apos;, &apos;./lib&apos;], // Specify search paths for @import directives</div><div class=\"line\">    filename: &apos;style.less&apos; // Specify a filename, for better error messages</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">parser.parse(&apos;.class &#123; width: 1 + 1 &#125;&apos;, function (e, tree) &#123;</div><div class=\"line\">    tree.toCSS(&#123; compress: true &#125;); // Minify CSS output</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"在命令行下使用\"><a href=\"#在命令行下使用\" class=\"headerlink\" title=\"在命令行下使用\"></a>在命令行下使用</h2><p>你可以在终端调用 LESS 解析器:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ lessc styles.less</div></pre></td></tr></table></figure>\n<p>上面的命令会将编译后的 CSS 传递给 <code>stdout</code>, 你可以将它保存到一个文件中:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ lessc styles.less &gt; styles.css</div></pre></td></tr></table></figure>\n<p>如何你想将编译后的 CSS 压缩掉，那么加一个 <code>-x</code> 参数就可以了.</p>\n<h1 id=\"LESS-语法\"><a href=\"#LESS-语法\" class=\"headerlink\" title=\"LESS 语法\"></a>LESS 语法</h1><p>LESS 做为 CSS 的一种形式的扩展，它并没有阉割 CSS 的功能，而是在现有的 CSS 语法上，添加了很多额外的功能，所以学习 LESS 是一件轻而易举的事情，果断学习之！</p>\n<h2 id=\"变量-1\"><a href=\"#变量-1\" class=\"headerlink\" title=\"变量\"></a>变量</h2><p>很容易理解:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">@nice-blue: #5B83AD;</div><div class=\"line\">@light-blue: @nice-blue + #111;</div><div class=\"line\"></div><div class=\"line\">#header &#123; color: @light-blue; &#125;</div></pre></td></tr></table></figure>\n<p>输出:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">#header &#123; color: #6c94be; &#125;</div></pre></td></tr></table></figure>\n<p>甚至可以用变量名定义为变量:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">@fnord: &quot;I am fnord.&quot;;</div><div class=\"line\">@var: &apos;fnord&apos;;</div><div class=\"line\">content: @@var;</div></pre></td></tr></table></figure>\n<p>解析后:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">content: &quot;I am fnord.&quot;;</div></pre></td></tr></table></figure>\n<p>请注意 LESS 中的变量为完全的 ‘常量’ ，所以只能定义一次.</p>\n<h2 id=\"混合-1\"><a href=\"#混合-1\" class=\"headerlink\" title=\"混合\"></a>混合</h2><p>在 LESS 中我们可以定义一些通用的属性集为一个class，然后在另一个class中去调用这些属性. 下面有这样一个class:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">.bordered &#123;</div><div class=\"line\">  border-top: dotted 1px black;</div><div class=\"line\">  border-bottom: solid 2px black;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>那如果我们现在需要在其他class中引入那些通用的属性集，那么我们只需要在任何class中像下面这样调用就可以了:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">#menu a &#123;</div><div class=\"line\">  color: #111;</div><div class=\"line\">  .bordered;</div><div class=\"line\">&#125;</div><div class=\"line\">.post a &#123;</div><div class=\"line\">  color: red;</div><div class=\"line\">  .bordered;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><code>.bordered</code> class里面的属性样式都会在 <code>#menu a</code> 和 <code>.post a</code>中体现出来:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">#menu a &#123;</div><div class=\"line\">  color: #111;</div><div class=\"line\">  border-top: dotted 1px black;</div><div class=\"line\">  border-bottom: solid 2px black;</div><div class=\"line\">&#125;</div><div class=\"line\">.post a &#123;</div><div class=\"line\">  color: red;</div><div class=\"line\">  border-top: dotted 1px black;</div><div class=\"line\">  border-bottom: solid 2px black;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>任何 CSS <em>class</em>, <em>id</em> 或者 <em>元素</em> 属性集都可以以同样的方式引入.</p>\n<h2 id=\"带参数混合\"><a href=\"#带参数混合\" class=\"headerlink\" title=\"带参数混合\"></a>带参数混合</h2><p>在 LESS 中，你还可以像函数一样定义一个带参数的属性集合:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">.border-radius (@radius) &#123;</div><div class=\"line\">  border-radius: @radius;</div><div class=\"line\">  -moz-border-radius: @radius;</div><div class=\"line\">  -webkit-border-radius: @radius;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>然后在其他class中像这样调用它:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">#header &#123;</div><div class=\"line\">  .border-radius(4px);</div><div class=\"line\">&#125;</div><div class=\"line\">.button &#123;</div><div class=\"line\">  .border-radius(6px);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>我们还可以像这样给参数设置默认值:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">.border-radius (@radius: 5px) &#123;</div><div class=\"line\">  border-radius: @radius;</div><div class=\"line\">  -moz-border-radius: @radius;</div><div class=\"line\">  -webkit-border-radius: @radius;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>所以现在如果我们像这样调用它的话:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#header &#123;</div><div class=\"line\">  .border-radius;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>radius的值就会是5px.</p>\n<p>你也可以定义不带参数属性集合,如果你想隐藏这个属性集合，不让它暴露到CSS中去，但是你还想在其他的属性集合中引用，你会发现这个方法非常的好用:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">.wrap () &#123;</div><div class=\"line\">  text-wrap: wrap;</div><div class=\"line\">  white-space: pre-wrap;</div><div class=\"line\">  white-space: -moz-pre-wrap;</div><div class=\"line\">  word-wrap: break-word;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">pre &#123; .wrap &#125;</div></pre></td></tr></table></figure>\n<p>输出:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">pre &#123;</div><div class=\"line\">  text-wrap: wrap;</div><div class=\"line\">  white-space: pre-wrap;</div><div class=\"line\">  white-space: -moz-pre-wrap;</div><div class=\"line\">  word-wrap: break-word;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"arguments-变量\"><a href=\"#arguments-变量\" class=\"headerlink\" title=\"@arguments 变量\"></a><code>@arguments</code> 变量</h3><p><code>@arguments</code>包含了所有传递进来的参数. 如果你不想单独处理每一个参数的话就可以像这样写:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">.box-shadow (@x: 0, @y: 0, @blur: 1px, @color: #000) &#123;</div><div class=\"line\">  box-shadow: @arguments;</div><div class=\"line\">  -moz-box-shadow: @arguments;</div><div class=\"line\">  -webkit-box-shadow: @arguments;</div><div class=\"line\">&#125;</div><div class=\"line\">.box-shadow(2px, 5px);</div></pre></td></tr></table></figure>\n<p>将会输出:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">box-shadow: 2px 5px 1px #000;</div><div class=\"line\">-moz-box-shadow: 2px 5px 1px #000;</div><div class=\"line\">-webkit-box-shadow: 2px 5px 1px #000;</div></pre></td></tr></table></figure>\n<h2 id=\"模式匹配和导引表达式\"><a href=\"#模式匹配和导引表达式\" class=\"headerlink\" title=\"模式匹配和导引表达式\"></a>模式匹配和导引表达式</h2><p>有些情况下，我们想根据传入的参数来改变混合的默认呈现，比如下面这个例子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">.mixin (@s, @color) &#123; ... &#125;</div><div class=\"line\"></div><div class=\"line\">.class &#123;</div><div class=\"line\">  .mixin(@switch, #888);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>如果想让<code>.mixin</code>根据不同的<code>@switch</code>值而表现各异，如下这般设置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">.mixin (dark, @color) &#123;</div><div class=\"line\">  color: darken(@color, 10%);</div><div class=\"line\">&#125;</div><div class=\"line\">.mixin (light, @color) &#123;</div><div class=\"line\">  color: lighten(@color, 10%);</div><div class=\"line\">&#125;</div><div class=\"line\">.mixin (@_, @color) &#123;</div><div class=\"line\">  display: block;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>现在，如果运行:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">@switch: light;</div><div class=\"line\"></div><div class=\"line\">.class &#123;</div><div class=\"line\">  .mixin(@switch, #888);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>就会得到下列CSS:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">.class &#123;</div><div class=\"line\">  color: #a2a2a2;</div><div class=\"line\">  display: block;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>如上，<code>.mixin</code>就会得到传入颜色的浅色。如果<code>@switch</code>设为dark，就会得到深色。</p>\n<p>具体实现如下：</p>\n<ul>\n<li>第一个混合定义并未被匹配，因为它只接受<code>dark</code>做为首参</li>\n<li>第二个混合定义被成功匹配，因为它只接受<code>light</code></li>\n<li>第三个混合定义被成功匹配，因为它接受任意值</li>\n</ul>\n<p>只有被匹配的混合才会被使用。变量可以匹配任意的传入值，而变量以外的固定值就仅仅匹配与其相等的传入值。</p>\n<p>我们也可以匹配多个参数：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">.mixin (@a) &#123;</div><div class=\"line\">  color: @a;</div><div class=\"line\">&#125;</div><div class=\"line\">.mixin (@a, @b) &#123;</div><div class=\"line\">  color: fade(@a, @b);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Now if we call <code>.mixin</code> with a single argument, we will get the output of the first definition,but if we call it with <em>two</em> arguments, we will get the second definition, namely <code>@a</code> faded to <code>@b</code>.</p>\n<h3 id=\"引导\"><a href=\"#引导\" class=\"headerlink\" title=\"引导\"></a>引导</h3><p>当我们想根据表达式进行匹配，而非根据值和参数匹配时，导引就显得非常有用。如果你对函数式编程非常熟悉，那么你很可能已经使用过导引。</p>\n<p>为了尽可能地保留CSS的可声明性，LESS通过导引混合而非if/else语句来实现条件判断，因为前者已在@media query特性中被定义。</p>\n<p>以此例做为开始：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">.mixin (@a) when (lightness(@a) &gt;= 50%) &#123;</div><div class=\"line\">  background-color: black;</div><div class=\"line\">&#125;</div><div class=\"line\">.mixin (@a) when (lightness(@a) &lt; 50%) &#123;</div><div class=\"line\">  background-color: white;</div><div class=\"line\">&#125;</div><div class=\"line\">.mixin (@a) &#123;</div><div class=\"line\">  color: @a;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>when关键字用以定义一个导引序列(此例只有一个导引)。接下来我们运行下列代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">.class1 &#123; .mixin(#ddd) &#125;</div><div class=\"line\">.class2 &#123; .mixin(#555) &#125;</div></pre></td></tr></table></figure>\n<p>就会得到：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">.class1 &#123;</div><div class=\"line\">  background-color: black;</div><div class=\"line\">  color: #ddd;</div><div class=\"line\">&#125;</div><div class=\"line\">.class2 &#123;</div><div class=\"line\">  background-color: white;</div><div class=\"line\">  color: #555;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>导引中可用的全部比较运算有： <strong>&gt; &gt;= = =&lt; &lt;</strong>。此外，关键字<code>true</code>只表示布尔真值，下面两个混合是相同的：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">.truth (@a) when (@a) &#123; ... &#125;</div><div class=\"line\">.truth (@a) when (@a = true) &#123; ... &#125;</div></pre></td></tr></table></figure>\n<p>除去关键字true以外的值都被视示布尔假：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">.class &#123;</div><div class=\"line\">  .truth(40); // Will not match any of the above definitions.</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>导引序列使用逗号‘<code>,</code>’—分割，当且仅当所有条件都符合时，才会被视为匹配成功。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">.mixin (@a) when (@a &gt; 10), (@a &lt; -10) &#123; ... &#125;</div></pre></td></tr></table></figure>\n<p>导引可以无参数，也可以对参数进行比较运算：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">@media: mobile;</div><div class=\"line\"></div><div class=\"line\">.mixin (@a) when (@media = mobile) &#123; ... &#125;</div><div class=\"line\">.mixin (@a) when (@media = desktop) &#123; ... &#125;</div><div class=\"line\"></div><div class=\"line\">.max (@a, @b) when (@a &gt; @b) &#123; width: @a &#125;</div><div class=\"line\">.max (@a, @b) when (@a &lt; @b) &#123; width: @b &#125;</div></pre></td></tr></table></figure>\n<p>最后，如果想基于值的类型进行匹配，我们就可以使用is*函式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">.mixin (@a, @b: 0) when (isnumber(@b)) &#123; ... &#125;</div><div class=\"line\">.mixin (@a, @b: black) when (iscolor(@b)) &#123; ... &#125;</div></pre></td></tr></table></figure>\n<p>下面就是常见的检测函式：</p>\n<ul>\n<li><code>iscolor</code></li>\n<li><code>isnumber</code></li>\n<li><code>isstring</code></li>\n<li><code>iskeyword</code></li>\n<li><code>isurl</code></li>\n</ul>\n<p>如果你想判断一个值是纯数字，还是某个单位量，可以使用下列函式：</p>\n<ul>\n<li><code>ispixel</code></li>\n<li><code>ispercentage</code></li>\n<li><code>isem</code></li>\n</ul>\n<p>最后再补充一点，在导引序列中可以使用<strong>and</strong>关键字实现与条件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">.mixin (@a) when (isnumber(@a)) and (@a &gt; 0) &#123; ... &#125;</div></pre></td></tr></table></figure>\n<p>使用<strong>not</strong>关键字实现或条件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">.mixin (@b) when not (@b &gt; 0) &#123; ... &#125;</div></pre></td></tr></table></figure>\n<h2 id=\"嵌套规则-1\"><a href=\"#嵌套规则-1\" class=\"headerlink\" title=\"嵌套规则\"></a>嵌套规则</h2><p>LESS 可以让我们以<em>嵌套</em>的方式编写层叠样式.让我们先看下下面这段 CSS:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">#header &#123; color: black; &#125;</div><div class=\"line\">#header .navigation &#123;</div><div class=\"line\">  font-size: 12px;</div><div class=\"line\">&#125;</div><div class=\"line\">#header .logo &#123;</div><div class=\"line\">  width: 300px;</div><div class=\"line\">&#125;</div><div class=\"line\">#header .logo:hover &#123;</div><div class=\"line\">  text-decoration: none;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>在 LESS 中, 我们就可以这样写:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">#header &#123;</div><div class=\"line\">  color: black;</div><div class=\"line\"></div><div class=\"line\">  .navigation &#123;</div><div class=\"line\">    font-size: 12px;</div><div class=\"line\">  &#125;</div><div class=\"line\">  .logo &#123;</div><div class=\"line\">    width: 300px;</div><div class=\"line\">    &amp;:hover &#123; text-decoration: none &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>或者这样写:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">#header        &#123; color: black;</div><div class=\"line\">  .navigation  &#123; font-size: 12px &#125;</div><div class=\"line\">  .logo        &#123; width: 300px;</div><div class=\"line\">    &amp;:hover    &#123; text-decoration: none &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>代码更简洁了，而且感觉跟<code>DOM</code>结构格式有点像.</p>\n<p>注意 <code>&amp;</code> 符号的使用—如果你想写串联选择器，而不是写后代选择器，就可以用到<code>&amp;</code>了. 这点对伪类尤其有用如 <code>:hover</code> 和 <code>:focus</code>.</p>\n<p>例如:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">.bordered &#123;</div><div class=\"line\">  &amp;.float &#123;</div><div class=\"line\">    float: left;</div><div class=\"line\">  &#125;</div><div class=\"line\">  .top &#123;</div><div class=\"line\">    margin: 5px;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>会输出</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">.bordered.float &#123;</div><div class=\"line\">  float: left;</div><div class=\"line\">&#125;</div><div class=\"line\">.bordered .top &#123;</div><div class=\"line\">  margin: 5px;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"运算\"><a href=\"#运算\" class=\"headerlink\" title=\"运算\"></a>运算</h2><p>任何数字、颜色或者变量都可以参与运算. 来看一组例子:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">@base: 5%;</div><div class=\"line\">@filler: @base * 2;</div><div class=\"line\">@other: @base + @filler;</div><div class=\"line\"></div><div class=\"line\">color: #888 / 4;</div><div class=\"line\">background-color: @base-color + #111;</div><div class=\"line\">height: 100% / 2 + @filler;</div></pre></td></tr></table></figure>\n<p>LESS 的运算已经超出了我们的期望，它能够分辨出颜色和单位。如果像下面这样单位运算的话:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">@var: 1px + 5;</div></pre></td></tr></table></figure>\n<p>LESS 会输出 <code>6px</code>.</p>\n<p>括号也同样允许使用:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">width: (@var + 5) * 2;</div></pre></td></tr></table></figure>\n<p>并且可以在复合属性中进行运算:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">border: (@width * 2) solid black;</div></pre></td></tr></table></figure>\n<h2 id=\"Color-函数\"><a href=\"#Color-函数\" class=\"headerlink\" title=\"Color 函数\"></a>Color 函数</h2><p>LESS 提供了一系列的颜色运算函数. 颜色会先被转化成 <em>HSL</em> 色彩空间, 然后在通道级别操作:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">lighten(@color, 10%);     // return a color which is 10% *lighter* than @color</div><div class=\"line\">darken(@color, 10%);      // return a color which is 10% *darker* than @color</div><div class=\"line\"></div><div class=\"line\">saturate(@color, 10%);    // return a color 10% *more* saturated than @color</div><div class=\"line\">desaturate(@color, 10%);  // return a color 10% *less* saturated than @color</div><div class=\"line\"></div><div class=\"line\">fadein(@color, 10%);      // return a color 10% *less* transparent than @color</div><div class=\"line\">fadeout(@color, 10%);     // return a color 10% *more* transparent than @color</div><div class=\"line\">fade(@color, 50%);        // return @color with 50% transparency</div><div class=\"line\"></div><div class=\"line\">spin(@color, 10);         // return a color with a 10 degree larger in hue than @color</div><div class=\"line\">spin(@color, -10);        // return a color with a 10 degree smaller hue than @color</div><div class=\"line\"></div><div class=\"line\">mix(@color1, @color2);    // return a mix of @color1 and @color2</div></pre></td></tr></table></figure>\n<p>使用起来相当简单:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">@base: #f04615;</div><div class=\"line\"></div><div class=\"line\">.class &#123;</div><div class=\"line\">  color: saturate(@base, 5%);</div><div class=\"line\">  background-color: lighten(spin(@base, 8), 25%);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>你还可以提取颜色信息:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">hue(@color);        // returns the `hue` channel of @color</div><div class=\"line\">saturation(@color); // returns the `saturation` channel of @color</div><div class=\"line\">lightness(@color);  // returns the &apos;lightness&apos; channel of @color</div></pre></td></tr></table></figure>\n<p>如果你想在一种颜色的通道上创建另一种颜色，这些函数就显得那么的好用，例如:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">@new: hsl(hue(@old), 45%, 90%);</div></pre></td></tr></table></figure>\n<p><code>@new</code> 将会保持 <code>@old</code>的 <em>色调</em>, 但是具有不同的饱和度和亮度.</p>\n<h2 id=\"Math-函数\"><a href=\"#Math-函数\" class=\"headerlink\" title=\"Math 函数\"></a>Math 函数</h2><p>LESS提供了一组方便的数学函数，你可以使用它们处理一些数字类型的值:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">round(1.67); // returns `2`</div><div class=\"line\">ceil(2.4);   // returns `3`</div><div class=\"line\">floor(2.6);  // returns `2`</div></pre></td></tr></table></figure>\n<p>如果你想将一个值转化为百分比，你可以使用<code>percentage</code> 函数:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">percentage(0.5); // returns `50%`</div></pre></td></tr></table></figure>\n<h2 id=\"命名空间\"><a href=\"#命名空间\" class=\"headerlink\" title=\"命名空间\"></a>命名空间</h2><p>有时候，你可能为了更好组织CSS或者单纯是为了更好的封装，将一些变量或者混合模块打包起来, 你可以像下面这样在<code>#bundle</code>中定义一些属性集之后可以重复使用:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">#bundle &#123;</div><div class=\"line\">  .button () &#123;</div><div class=\"line\">    display: block;</div><div class=\"line\">    border: 1px solid black;</div><div class=\"line\">    background-color: grey;</div><div class=\"line\">    &amp;:hover &#123; background-color: white &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">  .tab &#123; ... &#125;</div><div class=\"line\">  .citation &#123; ... &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>你只需要在 <code>#header a</code>中像这样引入 <code>.button</code>:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">#header a &#123;</div><div class=\"line\">  color: orange;</div><div class=\"line\">  #bundle &gt; .button;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h2><p>LESS 中的作用域跟其他编程语言非常类似，首先会从本地查找变量或者混合模块，如果没找到的话会去父级作用域中查找，直到找到为止.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">@var: red;</div><div class=\"line\"></div><div class=\"line\">#page &#123;</div><div class=\"line\">  @var: white;</div><div class=\"line\">  #header &#123;</div><div class=\"line\">    color: @var; // white</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">#footer &#123;</div><div class=\"line\">  color: @var; // red</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h2><p>CSS 形式的注释在 LESS 中是依然保留的:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">/* Hello, I&apos;m a CSS-style comment */</div><div class=\"line\">.class &#123; color: black &#125;</div></pre></td></tr></table></figure>\n<p>LESS 同样也支持双斜线的注释, 但是编译成 CSS 的时候自动过滤掉:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">// Hi, I&apos;m a silent comment, I won&apos;t show up in your CSS</div><div class=\"line\">.class &#123; color: white &#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Importing\"><a href=\"#Importing\" class=\"headerlink\" title=\"Importing\"></a>Importing</h2><p>你可以在main文件中通过下面的形势引入 <code>.less</code> 文件, <code>.less</code> 后缀可带可不带:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">@import &quot;lib.less&quot;;</div><div class=\"line\">@import &quot;lib&quot;;</div></pre></td></tr></table></figure>\n<p>如果你想导入一个CSS文件而且不想LESS对它进行处理，只需要使用<code>.css</code>后缀就可以:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">@import &quot;lib.css&quot;;</div></pre></td></tr></table></figure>\n<p>这样LESS就会跳过它不去处理它.</p>\n<h2 id=\"字符串插值\"><a href=\"#字符串插值\" class=\"headerlink\" title=\"字符串插值\"></a>字符串插值</h2><p>变量可以用类似ruby和php的方式嵌入到字符串中，像<code>@{name}</code>这样的结构:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">@base-url: &quot;http://assets.fnord.com&quot;;</div><div class=\"line\">background-image: url(&quot;@&#123;base-url&#125;/images/bg.png&quot;);</div></pre></td></tr></table></figure>\n<h2 id=\"避免编译\"><a href=\"#避免编译\" class=\"headerlink\" title=\"避免编译\"></a>避免编译</h2><p>有时候我们需要输出一些不正确的CSS语法或者使用一些 LESS不认识的专有语法.</p>\n<p>要输出这样的值我们可以在字符串前加上一个 <code>~</code>, 例如:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">.class &#123;</div><div class=\"line\">  filter: ~&quot;ms:alwaysHasItsOwnSyntax.For.Stuff()&quot;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>我们可以将要避免编译的值用 “”包含起来，输出结果为:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">.class &#123;</div><div class=\"line\">  filter: ms:alwaysHasItsOwnSyntax.For.Stuff();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"JavaScript-表达式\"><a href=\"#JavaScript-表达式\" class=\"headerlink\" title=\"JavaScript 表达式\"></a>JavaScript 表达式</h2><p>JavaScript 表达式也可以在.less 文件中使用. 可以通过反引号的方式使用:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">@var: `&quot;hello&quot;.toUpperCase() + &apos;!&apos;`;</div></pre></td></tr></table></figure>\n<p>输出:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">@var: &quot;HELLO!&quot;;</div></pre></td></tr></table></figure>\n<p>注意你也可以同时使用字符串插值和避免编译:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">@str: &quot;hello&quot;;</div><div class=\"line\">@var: ~`&quot;@&#123;str&#125;&quot;.toUpperCase() + &apos;!&apos;`;</div></pre></td></tr></table></figure>\n<p>输出:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">@var: HELLO!;</div></pre></td></tr></table></figure>\n<p>它也可以访问JavaScript环境:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">@height: `document.body.clientHeight`;</div></pre></td></tr></table></figure>\n<p>如果你想将一个JavaScript字符串解析成16进制的颜色值, 你可以使用 <code>color</code> 函数:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">@color: color(`window.colors.baseColor`);</div><div class=\"line\">@darkcolor: darken(@color, 10%);</div></pre></td></tr></table></figure>\n<h3 id=\"GitHub地址\"><a href=\"#GitHub地址\" class=\"headerlink\" title=\"GitHub地址\"></a>GitHub地址</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">https://github.com/less/less.js</div></pre></td></tr></table></figure>\n"},{"title":"npm","_content":"#### npm是什么\n\nNPM的全称是Node Package Manager，是随同NodeJS一起安装的包管理和分发工具，它很方便让JavaScript开发者下载、安装、上传以及管理已经安装的包。\n##### npm install 安装模块\n基础语法\n```\nnpm install (with no args, in package dir)\nnpm install [<@scope>/]<name>\nnpm install [<@scope>/]<name>@<tag>\nnpm install [<@scope>/]<name>@<version>\nnpm install [<@scope>/]<name>@<version range>\nnpm install <tarball file>\nnpm install <tarball url>\nnpm install <folder>\n\nalias: npm i\ncommon options: [-S|--save|-D|--save-dev|-O|--save-optional] [-E|--save-exact] [--dry-run]\n```\n安装包，默认会安装最新的版本\n```\nnpm install gulp\n```\n安装指定版本\n```\nnpm install gulp@3.9.1\n```\n安装包并将信息保持到项目的package.json文件中\n项目对模块的依赖可以使用下面的 3 种方法来表示（假设当前版本号是 1.1.0 ）：\n\n    兼容模块新发布的补丁版本：~1.1.0、1.1.x、1.1\n    兼容模块新发布的小版本、补丁版本：^1.1.0、1.x、1\n    兼容模块新发布的大版本、小版本、补丁版本：*、x\n\n-S, --save 安装包信息将加入到dependencies（生产阶段的依赖）\n\n```\nnpm install gulp --save 或 npm install gulp -S\n```\npackage.json 文件的 dependencies 字段：\n```\n\"dependencies\": {\n    \"gulp\": \"^3.9.1\"\n}\n```\n-O, --save-optional 安装包信息将加入到optionalDependencies（可选阶段的依赖）\n```\nnpm install gulp --save-optional 或 npm install gulp -O\n```\npackage.json 文件的optionalDependencies字段：\n```\n\"optionalDependencies\": {\n    \"gulp\": \"^3.9.1\"\n}\n```\n-E, --save-exact 精确安装指定模块版本\n```\nnpm install gulp --save-exact 或 npm install gulp -E\n```\n输入命令npm install gulp -ES，留意package.json 文件的 dependencies 字段，以看出版本号中的^消失了\n```\n\"dependencies\": {\n    \"gulp\": \"3.9.1\"\n}\n```\n模块的依赖都被写入了package.json文件后，他人打开项目的根目录（项目开源、内部团队合作），使用npm install命令可以根据dependencies配置安装所有的依赖包\n```\nnpm install\n```\n本地安装（local）\n```\nnpm install gulp\n```\n全局安装（global）,使用 -g 或 --global\n```\nnpm install gulp -g\n```\n##### npm uninstall 卸载模块\n\n基础语法\n\n```\nnpm uninstall [<@scope>/]<pkg>[@<version>]... [-S|--save|-D|--save-dev|-O|--save-optional]\n\naliases: remove, rm, r, un, unlink\n```\n如卸载开发版本的模块\n```\nnpm uninstall gulp --save-dev\n```\n##### npm update 更新模块\n\n基础语法\n```\nnpm update [-g] [<pkg>...]\n```\n##### npm outdated 检查模块是否已经过时\n\n基础语法\n```\nnpm outdated [[<@scope>/]<pkg> ...]\n```\n此命令会列出所有已经过时的包，可以及时进行包的更新\n##### npm ls 查看安装的模块\n\n基础语法\n```\nnpm ls [[<@scope>/]<pkg> ...]\n\naliases: list, la, ll\n```\n查看全局安装的模块及依赖\n```\nnpm ls -g\n```\n##### npm init 在项目中引导创建一个package.json文件\n\n安装包的信息可保持到项目的package.json文件中，以便后续的其它的项目开发或者他人合作使用，也说package.json在项目中是必不可少的。\n```\nnpm init [-f|--force|-y|--yes]\n```\n##### npm help 查看某条命令的详细帮助\n\n基础语法\n```\nnpm help <term> [<terms..>]\n```\n例如输入npm help install，系统在默认的浏览器或者默认的编辑器中打开本地nodejs安装包的文件/nodejs/node_modules/npm/html/doc/cli/npm-install.html\n```\nnpm help install\n```\n##### npm root 查看包的安装路径\n\n输出 node_modules的路径\n```\nnpm root [-g]\n```\n##### npm config 管理npm的配置路径\n\n基础语法\n```\nnpm config set <key> <value> [-g|--global]\nnpm config get <key>\nnpm config delete <key>\nnpm config list\nnpm config edit\nnpm get <key>\nnpm set <key> <value> [-g|--global]\n```\n\n对于config这块用得最多应该是设置代理，解决npm安装一些模块失败的问题\n\n例如我在公司内网，因为公司的防火墙原因，无法完成任何模块的安装，这个时候设置代理可以解决\n```\nnpm config set proxy=http://dev-proxy.oa.com:8080\n```\n又如国内的网络环境问题，某官方的IP可能被和谐了，幸好国内有好心人，搭建了镜像，此时我们简单设置镜像\n```\nnpm config set registry=\"http://r.cnpmjs.org\"\n```\n也可以临时配置，如安装淘宝镜像\n```\nnpm install -g cnpm --registry=https://registry.npm.taobao.org\n```\n##### npm cache 管理模块的缓存\n\n基础语法\n```\nnpm cache add <tarball file>\nnpm cache add <folder>\nnpm cache add <tarball url>\nnpm cache add <name>@<version>\n\nnpm cache ls [<path>]\n\nnpm cache clean [<path>]\n```\n最常用命令无非清除npm本地缓存\n```\nnpm cache clean\n```\n##### npm start 启动模块\n\n基础语法\n```\nnpm start [-- <args>]\n```\n该命令写在package.json文件scripts的start字段中，可以自定义命令来配置一个服务器环境和安装一系列的必要程序，如\n```\n\"scripts\": {\n    \"start\": \"gulp -ws\"\n}\n```\n此时在cmd中输入npm start命令相当于执行gulpfile.js文件自定义的watch和server命令。\n\n如果package.json文件没有设置start，则将直接启动node server.js\nnpm stop 停止模块\n\n基础语法\n```\nnpm stop [-- <args>]\n```\nnpm restart 重新启动模块\n\n基础语法\n```\nnpm restart [-- <args>]\n```\nnpm test 测试模块\n\n基础语法\n```\nnpm test [-- <args>]\nnpm tst [-- <args>]\n```\n该命令写在package.json文件scripts的test字段中，可以自定义该命令来执行一些操作，如\n```\n\"scripts\": {\n    \"test\": \"gulp release\"\n},\n```\n此时在cmd中输入npm test命令相当于执行gulpfile.js文件自定义的release命令。\nnpm version 查看模块版本\n\n基础语法\n```\nnpm version [<newversion> | major | minor | patch | premajor | preminor | prepatch | prerelease | from-git]\n\n'npm [-v | --version]' to print npm version\n'npm view <pkg> version' to view a package's published version\n'npm ls' to inspect current package/dependency versions\n```\n查看模块的版本\n```\nnpm version\n```\nnpm view 查看模块的注册信息\n\n基础语法\n```\nnpm view [<@scope>/]<name>[@<version>] [<field>[.<subfield>]...]\n\naliases: info, show, v\n```\n查看模块的依赖关系\n```\nnpm view gulp dependencies\n```\n查看模块的源文件地址\n```\nnpm view gulp repository.url\n```\n查看模块的贡献者，包含邮箱地址\n```\nnpm view npm contributors\n```\nnpm adduser 用户登录\n\n基础语法\n```\nnpm adduser [--registry=url] [--scope=@orgname] [--always-auth]\n```\n发布模板到npm社区前需要先登录，然后再进入发布的操作\nnpm publish 发布模块\n\n基础语法\n```\nnpm publish [<tarball>|<folder>] [--tag <tag>] [--access <public|restricted>]\n\nPublishes '.' if no argument supplied\nSets tag 'latest' if no --tag specified\n```\nnpm access 在发布的包上设置访问级别\n\n基础语法\n```\nnpm access public [<package>]\nnpm access restricted [<package>]\n\nnpm access grant <read-only|read-write> <scope:team> [<package>]\nnpm access revoke <scope:team> [<package>]\n\nnpm access ls-packages [<user>|<scope>|<scope:team>]\nnpm access ls-collaborators [<package> [<user>]]\nnpm access edit [<package>]\n```\n\nnpm package.json的语法\n\n英文原版：https://docs.npmjs.com/files/package.json\n\n这块内容好多，国内有好心人整理：《npm的package.json中文文档》，从这份文档拷贝出一些比较常见的，如下：\n\n默认值\n\nnpm会根据包内容设置一些默认值。\n\n    \"scripts\": {\"start\": \"node server.js\"}\n\n    如果包的根目录有server.js文件，npm会默认将start命令设置为node server.js。\n\n    \"scripts\":{\"preinstall\": \"node-waf clean || true; node-waf configure build\"}\n\n    如果包的根目录有wscript文件，npm会默认将preinstall命令用node-waf进行编译。\n\n    \"scripts\":{\"preinstall\": \"node-gyp rebuild\"}\n\n    如果包的根目录有binding.gyp文件，npm会默认将preinstall命令用node-gyp进行编译。\n\n    \"contributors\": [...]\n\n    如果包的根目录有AUTHORS文件，npm会默认逐行按Name <email> (url)格式处理，邮箱和url是可选的。#号和空格开头的行会被忽略。\n\nname\n\n在package.json中最重要的就是name和version字段。他们都是必须的，如果没有就无法install。name和version一起组成的标识在假设中是唯一的。改变包应该同时改变version。\n\nname是这个东西的名字。注意：\n\n    不要把node或者js放在名字中。因为你写了package.json它就被假定成为了js，不过你可以用\"engine\"字段指定一个引擎（见后文）。\n    这个名字会作为在URL的一部分、命令行的参数或者文件夹的名字。任何non-url-safe的字符都是不能用的。\n    这个名字可能会作为参数被传入require()，所以它应该比较短，但也要意义清晰。\n    在你爱上你的名字之前，你可能要去npm registry查看一下这个名字是否已经被使用了。http://registry.npmjs.org/\n\nversion\n\nversion必须能被node-semver解析，它被包在npm的依赖中。（要自己用可以执行npm install semver）\n\n可用的“数字”或者“范围”见semver(7).\n\ndescription\n\n放简介，字符串，方便在npm search中搜索\n\nkeywords\n\n关键字，数组、字符串，方便在npm search中搜索\n\nbugs\n\n你项目的提交问题的url和（或）邮件地址\n```\n\n\n{\n \"url\" : \"http://github.com/owner/project/issues\",\n\"email\" : \"project@hostname.com\"\n}\n\n```\nlicense\n\n你应该要指定一个许可证，让人知道使用的权利和限制的。\n\n最简单的方法是，假如你用一个像BSD或者MIT这样通用的许可证，就只需要指定一个许可证的名字，像这样：\n```\n{ \"license\" : \"BSD\" }\n```\n如果你又更复杂的许可条件，或者想要提供给更多地细节，可以这样:\n```\n\"licenses\" : [\n  { \"type\" : \"MyLicense\"\n  , \"url\" : \"http://github.com/owner/project/path/to/license\"\n  }\n]\n```\nrepository\n\n指定你的代码存放的地方。这个对希望贡献的人有帮助。如果git仓库在github上，那么npm docs命令能找到你。\n\n这样做：\n```\n\"repository\" :\n  { \"type\" : \"git\"\n  , \"url\" : \"http://github.com/isaacs/npm.git\"\n  }\n\n\"repository\" :\n  { \"type\" : \"svn\"\n  , \"url\" : \"http://v8.googlecode.com/svn/trunk/\"\n  }\n```\nURL应该是公开的（即便是只读的）能直接被未经过修改的版本控制程序处理的url。不应该是一个html的项目页面。因为它是给计算机看的。\n\nscripts\n\n“scripts”是一个由脚本命令组成的hash对象，他们在包不同的生命周期中被执行。key是生命周期事件，value是要运行的命令。\n\n参考上面的npm start、npm test命令\n\n更多详细请看 npm-scripts(7)\n\nconfig\n\n\"config\" hash可以用来配置用于包脚本中的跨版本参数。在实例中，如果一个包有下面的配置：\n```\n{\n \"name\" : \"foo\",\n \"config\" : { \"port\" : \"8080\" }\n}\n```\n然后有一个“start”命令引用了npm_package_config_port环境变量，用户可以通过npm config set foo:port 8001来重写他。\n\n参见 npm-config(7) 和 npm-scripts(7)。\n\ndependencies\n\n依赖是给一组包名指定版本范围的一个hash。这个版本范围是一个由一个或多个空格分隔的字符串。依赖还可以用tarball或者git URL。\n\n请不要将测试或过渡性的依赖放在dependencieshash中。见下文的devDependencies\n\n详见semver(7).\n\n    version 必须完全和version一致\n    >version 必须比version大\n    >=version 同上\n    <version 同上\n    <=version 同上\n    ~version 大约一样，见semver(7)\n    1.2.x 1.2.0, 1.2.1, 等，但不包括1.3.0\n    http://... 见下文'依赖URL'\n    * 所有\n    \"\" 空，同*\n    version1 - version2 同 >=version1 <=version2.\n    range1 || range2 二选一。\n    git... 见下文'依赖Git URL'\n    user/repo 见下文'GitHub URLs'\n\n比如下面都是合法的：\n```\n{ \"dependencies\" :\n  { \"foo\" : \"1.0.0 - 2.9999.9999\"\n  , \"bar\" : \">=1.0.2 <2.1.2\"\n  , \"baz\" : \">1.0.2 <=2.3.4\"\n  , \"boo\" : \"2.0.1\"\n  , \"qux\" : \"<1.0.0 || >=2.3.1 <2.4.5 || >=2.5.2 <3.0.0\"\n  , \"asd\" : \"http://asdf.com/asdf.tar.gz\"\n  , \"til\" : \"~1.2\"\n  , \"elf\" : \"~1.2.3\"\n  , \"two\" : \"2.x\"\n  , \"thr\" : \"3.3.x\"\n  }\n}\n```\ndevDependencies\n\n如果有人要使用你的模块，那么他们可能不需要你开发使用的外部测试或者文档框架。\n\n在这种情况下，最好将这些附属的项目列在devDependencies中。\n\n这些东西会在执行npm link或者npm install的时候初始化，并可以像其他npm配置参数一样管理。详见npm-config(7)。\n\n对于非特定平台的构建步骤，比如需要编译CoffeeScript，可以用prepublish脚本去实现，并把它依赖的包放在devDependency中。（译者注：prepublish定义了在执行npm publish的时候先行执行的脚本）\n\n比如：\n```\n{ \"name\": \"ethopia-waza\",\n  \"description\": \"a delightfully fruity coffee varietal\",\n  \"version\": \"1.2.3\",\n  \"devDependencies\": {\n    \"coffee-script\": \"~1.6.3\"\n  },\n  \"scripts\": {\n    \"prepublish\": \"coffee -o lib/ -c src/waza.coffee\"\n  },\n  \"main\": \"lib/waza.js\"\n}\n```\nprepublish脚本会在publishing前运行，这样用户就不用自己去require来编译就能使用。并且在开发模式中（比如本地运行npm install）会运行这个脚本以便更好地测试。\n","source":"_posts/npm.md","raw":"---\ntitle: npm\ntags: [npm,node,前端,卸载]\ncategories: nodejs\n---\n#### npm是什么\n\nNPM的全称是Node Package Manager，是随同NodeJS一起安装的包管理和分发工具，它很方便让JavaScript开发者下载、安装、上传以及管理已经安装的包。\n##### npm install 安装模块\n基础语法\n```\nnpm install (with no args, in package dir)\nnpm install [<@scope>/]<name>\nnpm install [<@scope>/]<name>@<tag>\nnpm install [<@scope>/]<name>@<version>\nnpm install [<@scope>/]<name>@<version range>\nnpm install <tarball file>\nnpm install <tarball url>\nnpm install <folder>\n\nalias: npm i\ncommon options: [-S|--save|-D|--save-dev|-O|--save-optional] [-E|--save-exact] [--dry-run]\n```\n安装包，默认会安装最新的版本\n```\nnpm install gulp\n```\n安装指定版本\n```\nnpm install gulp@3.9.1\n```\n安装包并将信息保持到项目的package.json文件中\n项目对模块的依赖可以使用下面的 3 种方法来表示（假设当前版本号是 1.1.0 ）：\n\n    兼容模块新发布的补丁版本：~1.1.0、1.1.x、1.1\n    兼容模块新发布的小版本、补丁版本：^1.1.0、1.x、1\n    兼容模块新发布的大版本、小版本、补丁版本：*、x\n\n-S, --save 安装包信息将加入到dependencies（生产阶段的依赖）\n\n```\nnpm install gulp --save 或 npm install gulp -S\n```\npackage.json 文件的 dependencies 字段：\n```\n\"dependencies\": {\n    \"gulp\": \"^3.9.1\"\n}\n```\n-O, --save-optional 安装包信息将加入到optionalDependencies（可选阶段的依赖）\n```\nnpm install gulp --save-optional 或 npm install gulp -O\n```\npackage.json 文件的optionalDependencies字段：\n```\n\"optionalDependencies\": {\n    \"gulp\": \"^3.9.1\"\n}\n```\n-E, --save-exact 精确安装指定模块版本\n```\nnpm install gulp --save-exact 或 npm install gulp -E\n```\n输入命令npm install gulp -ES，留意package.json 文件的 dependencies 字段，以看出版本号中的^消失了\n```\n\"dependencies\": {\n    \"gulp\": \"3.9.1\"\n}\n```\n模块的依赖都被写入了package.json文件后，他人打开项目的根目录（项目开源、内部团队合作），使用npm install命令可以根据dependencies配置安装所有的依赖包\n```\nnpm install\n```\n本地安装（local）\n```\nnpm install gulp\n```\n全局安装（global）,使用 -g 或 --global\n```\nnpm install gulp -g\n```\n##### npm uninstall 卸载模块\n\n基础语法\n\n```\nnpm uninstall [<@scope>/]<pkg>[@<version>]... [-S|--save|-D|--save-dev|-O|--save-optional]\n\naliases: remove, rm, r, un, unlink\n```\n如卸载开发版本的模块\n```\nnpm uninstall gulp --save-dev\n```\n##### npm update 更新模块\n\n基础语法\n```\nnpm update [-g] [<pkg>...]\n```\n##### npm outdated 检查模块是否已经过时\n\n基础语法\n```\nnpm outdated [[<@scope>/]<pkg> ...]\n```\n此命令会列出所有已经过时的包，可以及时进行包的更新\n##### npm ls 查看安装的模块\n\n基础语法\n```\nnpm ls [[<@scope>/]<pkg> ...]\n\naliases: list, la, ll\n```\n查看全局安装的模块及依赖\n```\nnpm ls -g\n```\n##### npm init 在项目中引导创建一个package.json文件\n\n安装包的信息可保持到项目的package.json文件中，以便后续的其它的项目开发或者他人合作使用，也说package.json在项目中是必不可少的。\n```\nnpm init [-f|--force|-y|--yes]\n```\n##### npm help 查看某条命令的详细帮助\n\n基础语法\n```\nnpm help <term> [<terms..>]\n```\n例如输入npm help install，系统在默认的浏览器或者默认的编辑器中打开本地nodejs安装包的文件/nodejs/node_modules/npm/html/doc/cli/npm-install.html\n```\nnpm help install\n```\n##### npm root 查看包的安装路径\n\n输出 node_modules的路径\n```\nnpm root [-g]\n```\n##### npm config 管理npm的配置路径\n\n基础语法\n```\nnpm config set <key> <value> [-g|--global]\nnpm config get <key>\nnpm config delete <key>\nnpm config list\nnpm config edit\nnpm get <key>\nnpm set <key> <value> [-g|--global]\n```\n\n对于config这块用得最多应该是设置代理，解决npm安装一些模块失败的问题\n\n例如我在公司内网，因为公司的防火墙原因，无法完成任何模块的安装，这个时候设置代理可以解决\n```\nnpm config set proxy=http://dev-proxy.oa.com:8080\n```\n又如国内的网络环境问题，某官方的IP可能被和谐了，幸好国内有好心人，搭建了镜像，此时我们简单设置镜像\n```\nnpm config set registry=\"http://r.cnpmjs.org\"\n```\n也可以临时配置，如安装淘宝镜像\n```\nnpm install -g cnpm --registry=https://registry.npm.taobao.org\n```\n##### npm cache 管理模块的缓存\n\n基础语法\n```\nnpm cache add <tarball file>\nnpm cache add <folder>\nnpm cache add <tarball url>\nnpm cache add <name>@<version>\n\nnpm cache ls [<path>]\n\nnpm cache clean [<path>]\n```\n最常用命令无非清除npm本地缓存\n```\nnpm cache clean\n```\n##### npm start 启动模块\n\n基础语法\n```\nnpm start [-- <args>]\n```\n该命令写在package.json文件scripts的start字段中，可以自定义命令来配置一个服务器环境和安装一系列的必要程序，如\n```\n\"scripts\": {\n    \"start\": \"gulp -ws\"\n}\n```\n此时在cmd中输入npm start命令相当于执行gulpfile.js文件自定义的watch和server命令。\n\n如果package.json文件没有设置start，则将直接启动node server.js\nnpm stop 停止模块\n\n基础语法\n```\nnpm stop [-- <args>]\n```\nnpm restart 重新启动模块\n\n基础语法\n```\nnpm restart [-- <args>]\n```\nnpm test 测试模块\n\n基础语法\n```\nnpm test [-- <args>]\nnpm tst [-- <args>]\n```\n该命令写在package.json文件scripts的test字段中，可以自定义该命令来执行一些操作，如\n```\n\"scripts\": {\n    \"test\": \"gulp release\"\n},\n```\n此时在cmd中输入npm test命令相当于执行gulpfile.js文件自定义的release命令。\nnpm version 查看模块版本\n\n基础语法\n```\nnpm version [<newversion> | major | minor | patch | premajor | preminor | prepatch | prerelease | from-git]\n\n'npm [-v | --version]' to print npm version\n'npm view <pkg> version' to view a package's published version\n'npm ls' to inspect current package/dependency versions\n```\n查看模块的版本\n```\nnpm version\n```\nnpm view 查看模块的注册信息\n\n基础语法\n```\nnpm view [<@scope>/]<name>[@<version>] [<field>[.<subfield>]...]\n\naliases: info, show, v\n```\n查看模块的依赖关系\n```\nnpm view gulp dependencies\n```\n查看模块的源文件地址\n```\nnpm view gulp repository.url\n```\n查看模块的贡献者，包含邮箱地址\n```\nnpm view npm contributors\n```\nnpm adduser 用户登录\n\n基础语法\n```\nnpm adduser [--registry=url] [--scope=@orgname] [--always-auth]\n```\n发布模板到npm社区前需要先登录，然后再进入发布的操作\nnpm publish 发布模块\n\n基础语法\n```\nnpm publish [<tarball>|<folder>] [--tag <tag>] [--access <public|restricted>]\n\nPublishes '.' if no argument supplied\nSets tag 'latest' if no --tag specified\n```\nnpm access 在发布的包上设置访问级别\n\n基础语法\n```\nnpm access public [<package>]\nnpm access restricted [<package>]\n\nnpm access grant <read-only|read-write> <scope:team> [<package>]\nnpm access revoke <scope:team> [<package>]\n\nnpm access ls-packages [<user>|<scope>|<scope:team>]\nnpm access ls-collaborators [<package> [<user>]]\nnpm access edit [<package>]\n```\n\nnpm package.json的语法\n\n英文原版：https://docs.npmjs.com/files/package.json\n\n这块内容好多，国内有好心人整理：《npm的package.json中文文档》，从这份文档拷贝出一些比较常见的，如下：\n\n默认值\n\nnpm会根据包内容设置一些默认值。\n\n    \"scripts\": {\"start\": \"node server.js\"}\n\n    如果包的根目录有server.js文件，npm会默认将start命令设置为node server.js。\n\n    \"scripts\":{\"preinstall\": \"node-waf clean || true; node-waf configure build\"}\n\n    如果包的根目录有wscript文件，npm会默认将preinstall命令用node-waf进行编译。\n\n    \"scripts\":{\"preinstall\": \"node-gyp rebuild\"}\n\n    如果包的根目录有binding.gyp文件，npm会默认将preinstall命令用node-gyp进行编译。\n\n    \"contributors\": [...]\n\n    如果包的根目录有AUTHORS文件，npm会默认逐行按Name <email> (url)格式处理，邮箱和url是可选的。#号和空格开头的行会被忽略。\n\nname\n\n在package.json中最重要的就是name和version字段。他们都是必须的，如果没有就无法install。name和version一起组成的标识在假设中是唯一的。改变包应该同时改变version。\n\nname是这个东西的名字。注意：\n\n    不要把node或者js放在名字中。因为你写了package.json它就被假定成为了js，不过你可以用\"engine\"字段指定一个引擎（见后文）。\n    这个名字会作为在URL的一部分、命令行的参数或者文件夹的名字。任何non-url-safe的字符都是不能用的。\n    这个名字可能会作为参数被传入require()，所以它应该比较短，但也要意义清晰。\n    在你爱上你的名字之前，你可能要去npm registry查看一下这个名字是否已经被使用了。http://registry.npmjs.org/\n\nversion\n\nversion必须能被node-semver解析，它被包在npm的依赖中。（要自己用可以执行npm install semver）\n\n可用的“数字”或者“范围”见semver(7).\n\ndescription\n\n放简介，字符串，方便在npm search中搜索\n\nkeywords\n\n关键字，数组、字符串，方便在npm search中搜索\n\nbugs\n\n你项目的提交问题的url和（或）邮件地址\n```\n\n\n{\n \"url\" : \"http://github.com/owner/project/issues\",\n\"email\" : \"project@hostname.com\"\n}\n\n```\nlicense\n\n你应该要指定一个许可证，让人知道使用的权利和限制的。\n\n最简单的方法是，假如你用一个像BSD或者MIT这样通用的许可证，就只需要指定一个许可证的名字，像这样：\n```\n{ \"license\" : \"BSD\" }\n```\n如果你又更复杂的许可条件，或者想要提供给更多地细节，可以这样:\n```\n\"licenses\" : [\n  { \"type\" : \"MyLicense\"\n  , \"url\" : \"http://github.com/owner/project/path/to/license\"\n  }\n]\n```\nrepository\n\n指定你的代码存放的地方。这个对希望贡献的人有帮助。如果git仓库在github上，那么npm docs命令能找到你。\n\n这样做：\n```\n\"repository\" :\n  { \"type\" : \"git\"\n  , \"url\" : \"http://github.com/isaacs/npm.git\"\n  }\n\n\"repository\" :\n  { \"type\" : \"svn\"\n  , \"url\" : \"http://v8.googlecode.com/svn/trunk/\"\n  }\n```\nURL应该是公开的（即便是只读的）能直接被未经过修改的版本控制程序处理的url。不应该是一个html的项目页面。因为它是给计算机看的。\n\nscripts\n\n“scripts”是一个由脚本命令组成的hash对象，他们在包不同的生命周期中被执行。key是生命周期事件，value是要运行的命令。\n\n参考上面的npm start、npm test命令\n\n更多详细请看 npm-scripts(7)\n\nconfig\n\n\"config\" hash可以用来配置用于包脚本中的跨版本参数。在实例中，如果一个包有下面的配置：\n```\n{\n \"name\" : \"foo\",\n \"config\" : { \"port\" : \"8080\" }\n}\n```\n然后有一个“start”命令引用了npm_package_config_port环境变量，用户可以通过npm config set foo:port 8001来重写他。\n\n参见 npm-config(7) 和 npm-scripts(7)。\n\ndependencies\n\n依赖是给一组包名指定版本范围的一个hash。这个版本范围是一个由一个或多个空格分隔的字符串。依赖还可以用tarball或者git URL。\n\n请不要将测试或过渡性的依赖放在dependencieshash中。见下文的devDependencies\n\n详见semver(7).\n\n    version 必须完全和version一致\n    >version 必须比version大\n    >=version 同上\n    <version 同上\n    <=version 同上\n    ~version 大约一样，见semver(7)\n    1.2.x 1.2.0, 1.2.1, 等，但不包括1.3.0\n    http://... 见下文'依赖URL'\n    * 所有\n    \"\" 空，同*\n    version1 - version2 同 >=version1 <=version2.\n    range1 || range2 二选一。\n    git... 见下文'依赖Git URL'\n    user/repo 见下文'GitHub URLs'\n\n比如下面都是合法的：\n```\n{ \"dependencies\" :\n  { \"foo\" : \"1.0.0 - 2.9999.9999\"\n  , \"bar\" : \">=1.0.2 <2.1.2\"\n  , \"baz\" : \">1.0.2 <=2.3.4\"\n  , \"boo\" : \"2.0.1\"\n  , \"qux\" : \"<1.0.0 || >=2.3.1 <2.4.5 || >=2.5.2 <3.0.0\"\n  , \"asd\" : \"http://asdf.com/asdf.tar.gz\"\n  , \"til\" : \"~1.2\"\n  , \"elf\" : \"~1.2.3\"\n  , \"two\" : \"2.x\"\n  , \"thr\" : \"3.3.x\"\n  }\n}\n```\ndevDependencies\n\n如果有人要使用你的模块，那么他们可能不需要你开发使用的外部测试或者文档框架。\n\n在这种情况下，最好将这些附属的项目列在devDependencies中。\n\n这些东西会在执行npm link或者npm install的时候初始化，并可以像其他npm配置参数一样管理。详见npm-config(7)。\n\n对于非特定平台的构建步骤，比如需要编译CoffeeScript，可以用prepublish脚本去实现，并把它依赖的包放在devDependency中。（译者注：prepublish定义了在执行npm publish的时候先行执行的脚本）\n\n比如：\n```\n{ \"name\": \"ethopia-waza\",\n  \"description\": \"a delightfully fruity coffee varietal\",\n  \"version\": \"1.2.3\",\n  \"devDependencies\": {\n    \"coffee-script\": \"~1.6.3\"\n  },\n  \"scripts\": {\n    \"prepublish\": \"coffee -o lib/ -c src/waza.coffee\"\n  },\n  \"main\": \"lib/waza.js\"\n}\n```\nprepublish脚本会在publishing前运行，这样用户就不用自己去require来编译就能使用。并且在开发模式中（比如本地运行npm install）会运行这个脚本以便更好地测试。\n","slug":"npm","published":1,"date":"2017-05-22T05:03:19.683Z","updated":"2017-05-31T00:56:52.388Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmtsh00154wvsytqojs9g","content":"<h4 id=\"npm是什么\"><a href=\"#npm是什么\" class=\"headerlink\" title=\"npm是什么\"></a>npm是什么</h4><p>NPM的全称是Node Package Manager，是随同NodeJS一起安装的包管理和分发工具，它很方便让JavaScript开发者下载、安装、上传以及管理已经安装的包。</p>\n<h5 id=\"npm-install-安装模块\"><a href=\"#npm-install-安装模块\" class=\"headerlink\" title=\"npm install 安装模块\"></a>npm install 安装模块</h5><p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install (with no args, in package dir)</div><div class=\"line\">npm install [&lt;@scope&gt;/]&lt;name&gt;</div><div class=\"line\">npm install [&lt;@scope&gt;/]&lt;name&gt;@&lt;tag&gt;</div><div class=\"line\">npm install [&lt;@scope&gt;/]&lt;name&gt;@&lt;version&gt;</div><div class=\"line\">npm install [&lt;@scope&gt;/]&lt;name&gt;@&lt;version range&gt;</div><div class=\"line\">npm install &lt;tarball file&gt;</div><div class=\"line\">npm install &lt;tarball url&gt;</div><div class=\"line\">npm install &lt;folder&gt;</div><div class=\"line\"></div><div class=\"line\">alias: npm i</div><div class=\"line\">common options: [-S|--save|-D|--save-dev|-O|--save-optional] [-E|--save-exact] [--dry-run]</div></pre></td></tr></table></figure></p>\n<p>安装包，默认会安装最新的版本<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp</div></pre></td></tr></table></figure></p>\n<p>安装指定版本<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp@3.9.1</div></pre></td></tr></table></figure></p>\n<p>安装包并将信息保持到项目的package.json文件中<br>项目对模块的依赖可以使用下面的 3 种方法来表示（假设当前版本号是 1.1.0 ）：</p>\n<pre><code>兼容模块新发布的补丁版本：~1.1.0、1.1.x、1.1\n兼容模块新发布的小版本、补丁版本：^1.1.0、1.x、1\n兼容模块新发布的大版本、小版本、补丁版本：*、x\n</code></pre><p>-S, –save 安装包信息将加入到dependencies（生产阶段的依赖）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp --save 或 npm install gulp -S</div></pre></td></tr></table></figure>\n<p>package.json 文件的 dependencies 字段：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;dependencies&quot;: &#123;</div><div class=\"line\">    &quot;gulp&quot;: &quot;^3.9.1&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>-O, –save-optional 安装包信息将加入到optionalDependencies（可选阶段的依赖）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp --save-optional 或 npm install gulp -O</div></pre></td></tr></table></figure></p>\n<p>package.json 文件的optionalDependencies字段：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;optionalDependencies&quot;: &#123;</div><div class=\"line\">    &quot;gulp&quot;: &quot;^3.9.1&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>-E, –save-exact 精确安装指定模块版本<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp --save-exact 或 npm install gulp -E</div></pre></td></tr></table></figure></p>\n<p>输入命令npm install gulp -ES，留意package.json 文件的 dependencies 字段，以看出版本号中的^消失了<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;dependencies&quot;: &#123;</div><div class=\"line\">    &quot;gulp&quot;: &quot;3.9.1&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>模块的依赖都被写入了package.json文件后，他人打开项目的根目录（项目开源、内部团队合作），使用npm install命令可以根据dependencies配置安装所有的依赖包<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install</div></pre></td></tr></table></figure></p>\n<p>本地安装（local）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp</div></pre></td></tr></table></figure></p>\n<p>全局安装（global）,使用 -g 或 –global<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp -g</div></pre></td></tr></table></figure></p>\n<h5 id=\"npm-uninstall-卸载模块\"><a href=\"#npm-uninstall-卸载模块\" class=\"headerlink\" title=\"npm uninstall 卸载模块\"></a>npm uninstall 卸载模块</h5><p>基础语法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm uninstall [&lt;@scope&gt;/]&lt;pkg&gt;[@&lt;version&gt;]... [-S|--save|-D|--save-dev|-O|--save-optional]</div><div class=\"line\"></div><div class=\"line\">aliases: remove, rm, r, un, unlink</div></pre></td></tr></table></figure>\n<p>如卸载开发版本的模块<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm uninstall gulp --save-dev</div></pre></td></tr></table></figure></p>\n<h5 id=\"npm-update-更新模块\"><a href=\"#npm-update-更新模块\" class=\"headerlink\" title=\"npm update 更新模块\"></a>npm update 更新模块</h5><p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm update [-g] [&lt;pkg&gt;...]</div></pre></td></tr></table></figure></p>\n<h5 id=\"npm-outdated-检查模块是否已经过时\"><a href=\"#npm-outdated-检查模块是否已经过时\" class=\"headerlink\" title=\"npm outdated 检查模块是否已经过时\"></a>npm outdated 检查模块是否已经过时</h5><p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm outdated [[&lt;@scope&gt;/]&lt;pkg&gt; ...]</div></pre></td></tr></table></figure></p>\n<p>此命令会列出所有已经过时的包，可以及时进行包的更新</p>\n<h5 id=\"npm-ls-查看安装的模块\"><a href=\"#npm-ls-查看安装的模块\" class=\"headerlink\" title=\"npm ls 查看安装的模块\"></a>npm ls 查看安装的模块</h5><p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm ls [[&lt;@scope&gt;/]&lt;pkg&gt; ...]</div><div class=\"line\"></div><div class=\"line\">aliases: list, la, ll</div></pre></td></tr></table></figure></p>\n<p>查看全局安装的模块及依赖<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm ls -g</div></pre></td></tr></table></figure></p>\n<h5 id=\"npm-init-在项目中引导创建一个package-json文件\"><a href=\"#npm-init-在项目中引导创建一个package-json文件\" class=\"headerlink\" title=\"npm init 在项目中引导创建一个package.json文件\"></a>npm init 在项目中引导创建一个package.json文件</h5><p>安装包的信息可保持到项目的package.json文件中，以便后续的其它的项目开发或者他人合作使用，也说package.json在项目中是必不可少的。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm init [-f|--force|-y|--yes]</div></pre></td></tr></table></figure></p>\n<h5 id=\"npm-help-查看某条命令的详细帮助\"><a href=\"#npm-help-查看某条命令的详细帮助\" class=\"headerlink\" title=\"npm help 查看某条命令的详细帮助\"></a>npm help 查看某条命令的详细帮助</h5><p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm help &lt;term&gt; [&lt;terms..&gt;]</div></pre></td></tr></table></figure></p>\n<p>例如输入npm help install，系统在默认的浏览器或者默认的编辑器中打开本地nodejs安装包的文件/nodejs/node_modules/npm/html/doc/cli/npm-install.html<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm help install</div></pre></td></tr></table></figure></p>\n<h5 id=\"npm-root-查看包的安装路径\"><a href=\"#npm-root-查看包的安装路径\" class=\"headerlink\" title=\"npm root 查看包的安装路径\"></a>npm root 查看包的安装路径</h5><p>输出 node_modules的路径<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm root [-g]</div></pre></td></tr></table></figure></p>\n<h5 id=\"npm-config-管理npm的配置路径\"><a href=\"#npm-config-管理npm的配置路径\" class=\"headerlink\" title=\"npm config 管理npm的配置路径\"></a>npm config 管理npm的配置路径</h5><p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config set &lt;key&gt; &lt;value&gt; [-g|--global]</div><div class=\"line\">npm config get &lt;key&gt;</div><div class=\"line\">npm config delete &lt;key&gt;</div><div class=\"line\">npm config list</div><div class=\"line\">npm config edit</div><div class=\"line\">npm get &lt;key&gt;</div><div class=\"line\">npm set &lt;key&gt; &lt;value&gt; [-g|--global]</div></pre></td></tr></table></figure></p>\n<p>对于config这块用得最多应该是设置代理，解决npm安装一些模块失败的问题</p>\n<p>例如我在公司内网，因为公司的防火墙原因，无法完成任何模块的安装，这个时候设置代理可以解决<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config set proxy=http://dev-proxy.oa.com:8080</div></pre></td></tr></table></figure></p>\n<p>又如国内的网络环境问题，某官方的IP可能被和谐了，幸好国内有好心人，搭建了镜像，此时我们简单设置镜像<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config set registry=&quot;http://r.cnpmjs.org&quot;</div></pre></td></tr></table></figure></p>\n<p>也可以临时配置，如安装淘宝镜像<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g cnpm --registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure></p>\n<h5 id=\"npm-cache-管理模块的缓存\"><a href=\"#npm-cache-管理模块的缓存\" class=\"headerlink\" title=\"npm cache 管理模块的缓存\"></a>npm cache 管理模块的缓存</h5><p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm cache add &lt;tarball file&gt;</div><div class=\"line\">npm cache add &lt;folder&gt;</div><div class=\"line\">npm cache add &lt;tarball url&gt;</div><div class=\"line\">npm cache add &lt;name&gt;@&lt;version&gt;</div><div class=\"line\"></div><div class=\"line\">npm cache ls [&lt;path&gt;]</div><div class=\"line\"></div><div class=\"line\">npm cache clean [&lt;path&gt;]</div></pre></td></tr></table></figure></p>\n<p>最常用命令无非清除npm本地缓存<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm cache clean</div></pre></td></tr></table></figure></p>\n<h5 id=\"npm-start-启动模块\"><a href=\"#npm-start-启动模块\" class=\"headerlink\" title=\"npm start 启动模块\"></a>npm start 启动模块</h5><p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm start [-- &lt;args&gt;]</div></pre></td></tr></table></figure></p>\n<p>该命令写在package.json文件scripts的start字段中，可以自定义命令来配置一个服务器环境和安装一系列的必要程序，如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;scripts&quot;: &#123;</div><div class=\"line\">    &quot;start&quot;: &quot;gulp -ws&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>此时在cmd中输入npm start命令相当于执行gulpfile.js文件自定义的watch和server命令。</p>\n<p>如果package.json文件没有设置start，则将直接启动node server.js<br>npm stop 停止模块</p>\n<p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm stop [-- &lt;args&gt;]</div></pre></td></tr></table></figure></p>\n<p>npm restart 重新启动模块</p>\n<p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm restart [-- &lt;args&gt;]</div></pre></td></tr></table></figure></p>\n<p>npm test 测试模块</p>\n<p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm test [-- &lt;args&gt;]</div><div class=\"line\">npm tst [-- &lt;args&gt;]</div></pre></td></tr></table></figure></p>\n<p>该命令写在package.json文件scripts的test字段中，可以自定义该命令来执行一些操作，如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;scripts&quot;: &#123;</div><div class=\"line\">    &quot;test&quot;: &quot;gulp release&quot;</div><div class=\"line\">&#125;,</div></pre></td></tr></table></figure></p>\n<p>此时在cmd中输入npm test命令相当于执行gulpfile.js文件自定义的release命令。<br>npm version 查看模块版本</p>\n<p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm version [&lt;newversion&gt; | major | minor | patch | premajor | preminor | prepatch | prerelease | from-git]</div><div class=\"line\"></div><div class=\"line\">&apos;npm [-v | --version]&apos; to print npm version</div><div class=\"line\">&apos;npm view &lt;pkg&gt; version&apos; to view a package&apos;s published version</div><div class=\"line\">&apos;npm ls&apos; to inspect current package/dependency versions</div></pre></td></tr></table></figure></p>\n<p>查看模块的版本<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm version</div></pre></td></tr></table></figure></p>\n<p>npm view 查看模块的注册信息</p>\n<p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm view [&lt;@scope&gt;/]&lt;name&gt;[@&lt;version&gt;] [&lt;field&gt;[.&lt;subfield&gt;]...]</div><div class=\"line\"></div><div class=\"line\">aliases: info, show, v</div></pre></td></tr></table></figure></p>\n<p>查看模块的依赖关系<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm view gulp dependencies</div></pre></td></tr></table></figure></p>\n<p>查看模块的源文件地址<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm view gulp repository.url</div></pre></td></tr></table></figure></p>\n<p>查看模块的贡献者，包含邮箱地址<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm view npm contributors</div></pre></td></tr></table></figure></p>\n<p>npm adduser 用户登录</p>\n<p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm adduser [--registry=url] [--scope=@orgname] [--always-auth]</div></pre></td></tr></table></figure></p>\n<p>发布模板到npm社区前需要先登录，然后再进入发布的操作<br>npm publish 发布模块</p>\n<p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm publish [&lt;tarball&gt;|&lt;folder&gt;] [--tag &lt;tag&gt;] [--access &lt;public|restricted&gt;]</div><div class=\"line\"></div><div class=\"line\">Publishes &apos;.&apos; if no argument supplied</div><div class=\"line\">Sets tag &apos;latest&apos; if no --tag specified</div></pre></td></tr></table></figure></p>\n<p>npm access 在发布的包上设置访问级别</p>\n<p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm access public [&lt;package&gt;]</div><div class=\"line\">npm access restricted [&lt;package&gt;]</div><div class=\"line\"></div><div class=\"line\">npm access grant &lt;read-only|read-write&gt; &lt;scope:team&gt; [&lt;package&gt;]</div><div class=\"line\">npm access revoke &lt;scope:team&gt; [&lt;package&gt;]</div><div class=\"line\"></div><div class=\"line\">npm access ls-packages [&lt;user&gt;|&lt;scope&gt;|&lt;scope:team&gt;]</div><div class=\"line\">npm access ls-collaborators [&lt;package&gt; [&lt;user&gt;]]</div><div class=\"line\">npm access edit [&lt;package&gt;]</div></pre></td></tr></table></figure></p>\n<p>npm package.json的语法</p>\n<p>英文原版：<a href=\"https://docs.npmjs.com/files/package.json\" target=\"_blank\" rel=\"external\">https://docs.npmjs.com/files/package.json</a></p>\n<p>这块内容好多，国内有好心人整理：《npm的package.json中文文档》，从这份文档拷贝出一些比较常见的，如下：</p>\n<p>默认值</p>\n<p>npm会根据包内容设置一些默认值。</p>\n<pre><code>&quot;scripts&quot;: {&quot;start&quot;: &quot;node server.js&quot;}\n\n如果包的根目录有server.js文件，npm会默认将start命令设置为node server.js。\n\n&quot;scripts&quot;:{&quot;preinstall&quot;: &quot;node-waf clean || true; node-waf configure build&quot;}\n\n如果包的根目录有wscript文件，npm会默认将preinstall命令用node-waf进行编译。\n\n&quot;scripts&quot;:{&quot;preinstall&quot;: &quot;node-gyp rebuild&quot;}\n\n如果包的根目录有binding.gyp文件，npm会默认将preinstall命令用node-gyp进行编译。\n\n&quot;contributors&quot;: [...]\n\n如果包的根目录有AUTHORS文件，npm会默认逐行按Name &lt;email&gt; (url)格式处理，邮箱和url是可选的。#号和空格开头的行会被忽略。\n</code></pre><p>name</p>\n<p>在package.json中最重要的就是name和version字段。他们都是必须的，如果没有就无法install。name和version一起组成的标识在假设中是唯一的。改变包应该同时改变version。</p>\n<p>name是这个东西的名字。注意：</p>\n<pre><code>不要把node或者js放在名字中。因为你写了package.json它就被假定成为了js，不过你可以用&quot;engine&quot;字段指定一个引擎（见后文）。\n这个名字会作为在URL的一部分、命令行的参数或者文件夹的名字。任何non-url-safe的字符都是不能用的。\n这个名字可能会作为参数被传入require()，所以它应该比较短，但也要意义清晰。\n在你爱上你的名字之前，你可能要去npm registry查看一下这个名字是否已经被使用了。http://registry.npmjs.org/\n</code></pre><p>version</p>\n<p>version必须能被node-semver解析，它被包在npm的依赖中。（要自己用可以执行npm install semver）</p>\n<p>可用的“数字”或者“范围”见semver(7).</p>\n<p>description</p>\n<p>放简介，字符串，方便在npm search中搜索</p>\n<p>keywords</p>\n<p>关键字，数组、字符串，方便在npm search中搜索</p>\n<p>bugs</p>\n<p>你项目的提交问题的url和（或）邮件地址<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\"> &quot;url&quot; : &quot;http://github.com/owner/project/issues&quot;,</div><div class=\"line\">&quot;email&quot; : &quot;project@hostname.com&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>license</p>\n<p>你应该要指定一个许可证，让人知道使用的权利和限制的。</p>\n<p>最简单的方法是，假如你用一个像BSD或者MIT这样通用的许可证，就只需要指定一个许可证的名字，像这样：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123; &quot;license&quot; : &quot;BSD&quot; &#125;</div></pre></td></tr></table></figure></p>\n<p>如果你又更复杂的许可条件，或者想要提供给更多地细节，可以这样:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;licenses&quot; : [</div><div class=\"line\">  &#123; &quot;type&quot; : &quot;MyLicense&quot;</div><div class=\"line\">  , &quot;url&quot; : &quot;http://github.com/owner/project/path/to/license&quot;</div><div class=\"line\">  &#125;</div><div class=\"line\">]</div></pre></td></tr></table></figure></p>\n<p>repository</p>\n<p>指定你的代码存放的地方。这个对希望贡献的人有帮助。如果git仓库在github上，那么npm docs命令能找到你。</p>\n<p>这样做：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;repository&quot; :</div><div class=\"line\">  &#123; &quot;type&quot; : &quot;git&quot;</div><div class=\"line\">  , &quot;url&quot; : &quot;http://github.com/isaacs/npm.git&quot;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&quot;repository&quot; :</div><div class=\"line\">  &#123; &quot;type&quot; : &quot;svn&quot;</div><div class=\"line\">  , &quot;url&quot; : &quot;http://v8.googlecode.com/svn/trunk/&quot;</div><div class=\"line\">  &#125;</div></pre></td></tr></table></figure></p>\n<p>URL应该是公开的（即便是只读的）能直接被未经过修改的版本控制程序处理的url。不应该是一个html的项目页面。因为它是给计算机看的。</p>\n<p>scripts</p>\n<p>“scripts”是一个由脚本命令组成的hash对象，他们在包不同的生命周期中被执行。key是生命周期事件，value是要运行的命令。</p>\n<p>参考上面的npm start、npm test命令</p>\n<p>更多详细请看 npm-scripts(7)</p>\n<p>config</p>\n<p>“config” hash可以用来配置用于包脚本中的跨版本参数。在实例中，如果一个包有下面的配置：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\"> &quot;name&quot; : &quot;foo&quot;,</div><div class=\"line\"> &quot;config&quot; : &#123; &quot;port&quot; : &quot;8080&quot; &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>然后有一个“start”命令引用了npm_package_config_port环境变量，用户可以通过npm config set foo:port 8001来重写他。</p>\n<p>参见 npm-config(7) 和 npm-scripts(7)。</p>\n<p>dependencies</p>\n<p>依赖是给一组包名指定版本范围的一个hash。这个版本范围是一个由一个或多个空格分隔的字符串。依赖还可以用tarball或者git URL。</p>\n<p>请不要将测试或过渡性的依赖放在dependencieshash中。见下文的devDependencies</p>\n<p>详见semver(7).</p>\n<pre><code>version 必须完全和version一致\n&gt;version 必须比version大\n&gt;=version 同上\n&lt;version 同上\n&lt;=version 同上\n~version 大约一样，见semver(7)\n1.2.x 1.2.0, 1.2.1, 等，但不包括1.3.0\nhttp://... 见下文&apos;依赖URL&apos;\n* 所有\n&quot;&quot; 空，同*\nversion1 - version2 同 &gt;=version1 &lt;=version2.\nrange1 || range2 二选一。\ngit... 见下文&apos;依赖Git URL&apos;\nuser/repo 见下文&apos;GitHub URLs&apos;\n</code></pre><p>比如下面都是合法的：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123; &quot;dependencies&quot; :</div><div class=\"line\">  &#123; &quot;foo&quot; : &quot;1.0.0 - 2.9999.9999&quot;</div><div class=\"line\">  , &quot;bar&quot; : &quot;&gt;=1.0.2 &lt;2.1.2&quot;</div><div class=\"line\">  , &quot;baz&quot; : &quot;&gt;1.0.2 &lt;=2.3.4&quot;</div><div class=\"line\">  , &quot;boo&quot; : &quot;2.0.1&quot;</div><div class=\"line\">  , &quot;qux&quot; : &quot;&lt;1.0.0 || &gt;=2.3.1 &lt;2.4.5 || &gt;=2.5.2 &lt;3.0.0&quot;</div><div class=\"line\">  , &quot;asd&quot; : &quot;http://asdf.com/asdf.tar.gz&quot;</div><div class=\"line\">  , &quot;til&quot; : &quot;~1.2&quot;</div><div class=\"line\">  , &quot;elf&quot; : &quot;~1.2.3&quot;</div><div class=\"line\">  , &quot;two&quot; : &quot;2.x&quot;</div><div class=\"line\">  , &quot;thr&quot; : &quot;3.3.x&quot;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>devDependencies</p>\n<p>如果有人要使用你的模块，那么他们可能不需要你开发使用的外部测试或者文档框架。</p>\n<p>在这种情况下，最好将这些附属的项目列在devDependencies中。</p>\n<p>这些东西会在执行npm link或者npm install的时候初始化，并可以像其他npm配置参数一样管理。详见npm-config(7)。</p>\n<p>对于非特定平台的构建步骤，比如需要编译CoffeeScript，可以用prepublish脚本去实现，并把它依赖的包放在devDependency中。（译者注：prepublish定义了在执行npm publish的时候先行执行的脚本）</p>\n<p>比如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123; &quot;name&quot;: &quot;ethopia-waza&quot;,</div><div class=\"line\">  &quot;description&quot;: &quot;a delightfully fruity coffee varietal&quot;,</div><div class=\"line\">  &quot;version&quot;: &quot;1.2.3&quot;,</div><div class=\"line\">  &quot;devDependencies&quot;: &#123;</div><div class=\"line\">    &quot;coffee-script&quot;: &quot;~1.6.3&quot;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  &quot;scripts&quot;: &#123;</div><div class=\"line\">    &quot;prepublish&quot;: &quot;coffee -o lib/ -c src/waza.coffee&quot;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  &quot;main&quot;: &quot;lib/waza.js&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>prepublish脚本会在publishing前运行，这样用户就不用自己去require来编译就能使用。并且在开发模式中（比如本地运行npm install）会运行这个脚本以便更好地测试。</p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"npm是什么\"><a href=\"#npm是什么\" class=\"headerlink\" title=\"npm是什么\"></a>npm是什么</h4><p>NPM的全称是Node Package Manager，是随同NodeJS一起安装的包管理和分发工具，它很方便让JavaScript开发者下载、安装、上传以及管理已经安装的包。</p>\n<h5 id=\"npm-install-安装模块\"><a href=\"#npm-install-安装模块\" class=\"headerlink\" title=\"npm install 安装模块\"></a>npm install 安装模块</h5><p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install (with no args, in package dir)</div><div class=\"line\">npm install [&lt;@scope&gt;/]&lt;name&gt;</div><div class=\"line\">npm install [&lt;@scope&gt;/]&lt;name&gt;@&lt;tag&gt;</div><div class=\"line\">npm install [&lt;@scope&gt;/]&lt;name&gt;@&lt;version&gt;</div><div class=\"line\">npm install [&lt;@scope&gt;/]&lt;name&gt;@&lt;version range&gt;</div><div class=\"line\">npm install &lt;tarball file&gt;</div><div class=\"line\">npm install &lt;tarball url&gt;</div><div class=\"line\">npm install &lt;folder&gt;</div><div class=\"line\"></div><div class=\"line\">alias: npm i</div><div class=\"line\">common options: [-S|--save|-D|--save-dev|-O|--save-optional] [-E|--save-exact] [--dry-run]</div></pre></td></tr></table></figure></p>\n<p>安装包，默认会安装最新的版本<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp</div></pre></td></tr></table></figure></p>\n<p>安装指定版本<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp@3.9.1</div></pre></td></tr></table></figure></p>\n<p>安装包并将信息保持到项目的package.json文件中<br>项目对模块的依赖可以使用下面的 3 种方法来表示（假设当前版本号是 1.1.0 ）：</p>\n<pre><code>兼容模块新发布的补丁版本：~1.1.0、1.1.x、1.1\n兼容模块新发布的小版本、补丁版本：^1.1.0、1.x、1\n兼容模块新发布的大版本、小版本、补丁版本：*、x\n</code></pre><p>-S, –save 安装包信息将加入到dependencies（生产阶段的依赖）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp --save 或 npm install gulp -S</div></pre></td></tr></table></figure>\n<p>package.json 文件的 dependencies 字段：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;dependencies&quot;: &#123;</div><div class=\"line\">    &quot;gulp&quot;: &quot;^3.9.1&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>-O, –save-optional 安装包信息将加入到optionalDependencies（可选阶段的依赖）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp --save-optional 或 npm install gulp -O</div></pre></td></tr></table></figure></p>\n<p>package.json 文件的optionalDependencies字段：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;optionalDependencies&quot;: &#123;</div><div class=\"line\">    &quot;gulp&quot;: &quot;^3.9.1&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>-E, –save-exact 精确安装指定模块版本<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp --save-exact 或 npm install gulp -E</div></pre></td></tr></table></figure></p>\n<p>输入命令npm install gulp -ES，留意package.json 文件的 dependencies 字段，以看出版本号中的^消失了<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;dependencies&quot;: &#123;</div><div class=\"line\">    &quot;gulp&quot;: &quot;3.9.1&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>模块的依赖都被写入了package.json文件后，他人打开项目的根目录（项目开源、内部团队合作），使用npm install命令可以根据dependencies配置安装所有的依赖包<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install</div></pre></td></tr></table></figure></p>\n<p>本地安装（local）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp</div></pre></td></tr></table></figure></p>\n<p>全局安装（global）,使用 -g 或 –global<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install gulp -g</div></pre></td></tr></table></figure></p>\n<h5 id=\"npm-uninstall-卸载模块\"><a href=\"#npm-uninstall-卸载模块\" class=\"headerlink\" title=\"npm uninstall 卸载模块\"></a>npm uninstall 卸载模块</h5><p>基础语法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm uninstall [&lt;@scope&gt;/]&lt;pkg&gt;[@&lt;version&gt;]... [-S|--save|-D|--save-dev|-O|--save-optional]</div><div class=\"line\"></div><div class=\"line\">aliases: remove, rm, r, un, unlink</div></pre></td></tr></table></figure>\n<p>如卸载开发版本的模块<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm uninstall gulp --save-dev</div></pre></td></tr></table></figure></p>\n<h5 id=\"npm-update-更新模块\"><a href=\"#npm-update-更新模块\" class=\"headerlink\" title=\"npm update 更新模块\"></a>npm update 更新模块</h5><p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm update [-g] [&lt;pkg&gt;...]</div></pre></td></tr></table></figure></p>\n<h5 id=\"npm-outdated-检查模块是否已经过时\"><a href=\"#npm-outdated-检查模块是否已经过时\" class=\"headerlink\" title=\"npm outdated 检查模块是否已经过时\"></a>npm outdated 检查模块是否已经过时</h5><p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm outdated [[&lt;@scope&gt;/]&lt;pkg&gt; ...]</div></pre></td></tr></table></figure></p>\n<p>此命令会列出所有已经过时的包，可以及时进行包的更新</p>\n<h5 id=\"npm-ls-查看安装的模块\"><a href=\"#npm-ls-查看安装的模块\" class=\"headerlink\" title=\"npm ls 查看安装的模块\"></a>npm ls 查看安装的模块</h5><p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm ls [[&lt;@scope&gt;/]&lt;pkg&gt; ...]</div><div class=\"line\"></div><div class=\"line\">aliases: list, la, ll</div></pre></td></tr></table></figure></p>\n<p>查看全局安装的模块及依赖<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm ls -g</div></pre></td></tr></table></figure></p>\n<h5 id=\"npm-init-在项目中引导创建一个package-json文件\"><a href=\"#npm-init-在项目中引导创建一个package-json文件\" class=\"headerlink\" title=\"npm init 在项目中引导创建一个package.json文件\"></a>npm init 在项目中引导创建一个package.json文件</h5><p>安装包的信息可保持到项目的package.json文件中，以便后续的其它的项目开发或者他人合作使用，也说package.json在项目中是必不可少的。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm init [-f|--force|-y|--yes]</div></pre></td></tr></table></figure></p>\n<h5 id=\"npm-help-查看某条命令的详细帮助\"><a href=\"#npm-help-查看某条命令的详细帮助\" class=\"headerlink\" title=\"npm help 查看某条命令的详细帮助\"></a>npm help 查看某条命令的详细帮助</h5><p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm help &lt;term&gt; [&lt;terms..&gt;]</div></pre></td></tr></table></figure></p>\n<p>例如输入npm help install，系统在默认的浏览器或者默认的编辑器中打开本地nodejs安装包的文件/nodejs/node_modules/npm/html/doc/cli/npm-install.html<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm help install</div></pre></td></tr></table></figure></p>\n<h5 id=\"npm-root-查看包的安装路径\"><a href=\"#npm-root-查看包的安装路径\" class=\"headerlink\" title=\"npm root 查看包的安装路径\"></a>npm root 查看包的安装路径</h5><p>输出 node_modules的路径<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm root [-g]</div></pre></td></tr></table></figure></p>\n<h5 id=\"npm-config-管理npm的配置路径\"><a href=\"#npm-config-管理npm的配置路径\" class=\"headerlink\" title=\"npm config 管理npm的配置路径\"></a>npm config 管理npm的配置路径</h5><p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config set &lt;key&gt; &lt;value&gt; [-g|--global]</div><div class=\"line\">npm config get &lt;key&gt;</div><div class=\"line\">npm config delete &lt;key&gt;</div><div class=\"line\">npm config list</div><div class=\"line\">npm config edit</div><div class=\"line\">npm get &lt;key&gt;</div><div class=\"line\">npm set &lt;key&gt; &lt;value&gt; [-g|--global]</div></pre></td></tr></table></figure></p>\n<p>对于config这块用得最多应该是设置代理，解决npm安装一些模块失败的问题</p>\n<p>例如我在公司内网，因为公司的防火墙原因，无法完成任何模块的安装，这个时候设置代理可以解决<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config set proxy=http://dev-proxy.oa.com:8080</div></pre></td></tr></table></figure></p>\n<p>又如国内的网络环境问题，某官方的IP可能被和谐了，幸好国内有好心人，搭建了镜像，此时我们简单设置镜像<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm config set registry=&quot;http://r.cnpmjs.org&quot;</div></pre></td></tr></table></figure></p>\n<p>也可以临时配置，如安装淘宝镜像<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g cnpm --registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure></p>\n<h5 id=\"npm-cache-管理模块的缓存\"><a href=\"#npm-cache-管理模块的缓存\" class=\"headerlink\" title=\"npm cache 管理模块的缓存\"></a>npm cache 管理模块的缓存</h5><p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm cache add &lt;tarball file&gt;</div><div class=\"line\">npm cache add &lt;folder&gt;</div><div class=\"line\">npm cache add &lt;tarball url&gt;</div><div class=\"line\">npm cache add &lt;name&gt;@&lt;version&gt;</div><div class=\"line\"></div><div class=\"line\">npm cache ls [&lt;path&gt;]</div><div class=\"line\"></div><div class=\"line\">npm cache clean [&lt;path&gt;]</div></pre></td></tr></table></figure></p>\n<p>最常用命令无非清除npm本地缓存<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm cache clean</div></pre></td></tr></table></figure></p>\n<h5 id=\"npm-start-启动模块\"><a href=\"#npm-start-启动模块\" class=\"headerlink\" title=\"npm start 启动模块\"></a>npm start 启动模块</h5><p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm start [-- &lt;args&gt;]</div></pre></td></tr></table></figure></p>\n<p>该命令写在package.json文件scripts的start字段中，可以自定义命令来配置一个服务器环境和安装一系列的必要程序，如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;scripts&quot;: &#123;</div><div class=\"line\">    &quot;start&quot;: &quot;gulp -ws&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>此时在cmd中输入npm start命令相当于执行gulpfile.js文件自定义的watch和server命令。</p>\n<p>如果package.json文件没有设置start，则将直接启动node server.js<br>npm stop 停止模块</p>\n<p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm stop [-- &lt;args&gt;]</div></pre></td></tr></table></figure></p>\n<p>npm restart 重新启动模块</p>\n<p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm restart [-- &lt;args&gt;]</div></pre></td></tr></table></figure></p>\n<p>npm test 测试模块</p>\n<p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm test [-- &lt;args&gt;]</div><div class=\"line\">npm tst [-- &lt;args&gt;]</div></pre></td></tr></table></figure></p>\n<p>该命令写在package.json文件scripts的test字段中，可以自定义该命令来执行一些操作，如<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;scripts&quot;: &#123;</div><div class=\"line\">    &quot;test&quot;: &quot;gulp release&quot;</div><div class=\"line\">&#125;,</div></pre></td></tr></table></figure></p>\n<p>此时在cmd中输入npm test命令相当于执行gulpfile.js文件自定义的release命令。<br>npm version 查看模块版本</p>\n<p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm version [&lt;newversion&gt; | major | minor | patch | premajor | preminor | prepatch | prerelease | from-git]</div><div class=\"line\"></div><div class=\"line\">&apos;npm [-v | --version]&apos; to print npm version</div><div class=\"line\">&apos;npm view &lt;pkg&gt; version&apos; to view a package&apos;s published version</div><div class=\"line\">&apos;npm ls&apos; to inspect current package/dependency versions</div></pre></td></tr></table></figure></p>\n<p>查看模块的版本<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm version</div></pre></td></tr></table></figure></p>\n<p>npm view 查看模块的注册信息</p>\n<p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm view [&lt;@scope&gt;/]&lt;name&gt;[@&lt;version&gt;] [&lt;field&gt;[.&lt;subfield&gt;]...]</div><div class=\"line\"></div><div class=\"line\">aliases: info, show, v</div></pre></td></tr></table></figure></p>\n<p>查看模块的依赖关系<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm view gulp dependencies</div></pre></td></tr></table></figure></p>\n<p>查看模块的源文件地址<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm view gulp repository.url</div></pre></td></tr></table></figure></p>\n<p>查看模块的贡献者，包含邮箱地址<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm view npm contributors</div></pre></td></tr></table></figure></p>\n<p>npm adduser 用户登录</p>\n<p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm adduser [--registry=url] [--scope=@orgname] [--always-auth]</div></pre></td></tr></table></figure></p>\n<p>发布模板到npm社区前需要先登录，然后再进入发布的操作<br>npm publish 发布模块</p>\n<p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm publish [&lt;tarball&gt;|&lt;folder&gt;] [--tag &lt;tag&gt;] [--access &lt;public|restricted&gt;]</div><div class=\"line\"></div><div class=\"line\">Publishes &apos;.&apos; if no argument supplied</div><div class=\"line\">Sets tag &apos;latest&apos; if no --tag specified</div></pre></td></tr></table></figure></p>\n<p>npm access 在发布的包上设置访问级别</p>\n<p>基础语法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm access public [&lt;package&gt;]</div><div class=\"line\">npm access restricted [&lt;package&gt;]</div><div class=\"line\"></div><div class=\"line\">npm access grant &lt;read-only|read-write&gt; &lt;scope:team&gt; [&lt;package&gt;]</div><div class=\"line\">npm access revoke &lt;scope:team&gt; [&lt;package&gt;]</div><div class=\"line\"></div><div class=\"line\">npm access ls-packages [&lt;user&gt;|&lt;scope&gt;|&lt;scope:team&gt;]</div><div class=\"line\">npm access ls-collaborators [&lt;package&gt; [&lt;user&gt;]]</div><div class=\"line\">npm access edit [&lt;package&gt;]</div></pre></td></tr></table></figure></p>\n<p>npm package.json的语法</p>\n<p>英文原版：<a href=\"https://docs.npmjs.com/files/package.json\" target=\"_blank\" rel=\"external\">https://docs.npmjs.com/files/package.json</a></p>\n<p>这块内容好多，国内有好心人整理：《npm的package.json中文文档》，从这份文档拷贝出一些比较常见的，如下：</p>\n<p>默认值</p>\n<p>npm会根据包内容设置一些默认值。</p>\n<pre><code>&quot;scripts&quot;: {&quot;start&quot;: &quot;node server.js&quot;}\n\n如果包的根目录有server.js文件，npm会默认将start命令设置为node server.js。\n\n&quot;scripts&quot;:{&quot;preinstall&quot;: &quot;node-waf clean || true; node-waf configure build&quot;}\n\n如果包的根目录有wscript文件，npm会默认将preinstall命令用node-waf进行编译。\n\n&quot;scripts&quot;:{&quot;preinstall&quot;: &quot;node-gyp rebuild&quot;}\n\n如果包的根目录有binding.gyp文件，npm会默认将preinstall命令用node-gyp进行编译。\n\n&quot;contributors&quot;: [...]\n\n如果包的根目录有AUTHORS文件，npm会默认逐行按Name &lt;email&gt; (url)格式处理，邮箱和url是可选的。#号和空格开头的行会被忽略。\n</code></pre><p>name</p>\n<p>在package.json中最重要的就是name和version字段。他们都是必须的，如果没有就无法install。name和version一起组成的标识在假设中是唯一的。改变包应该同时改变version。</p>\n<p>name是这个东西的名字。注意：</p>\n<pre><code>不要把node或者js放在名字中。因为你写了package.json它就被假定成为了js，不过你可以用&quot;engine&quot;字段指定一个引擎（见后文）。\n这个名字会作为在URL的一部分、命令行的参数或者文件夹的名字。任何non-url-safe的字符都是不能用的。\n这个名字可能会作为参数被传入require()，所以它应该比较短，但也要意义清晰。\n在你爱上你的名字之前，你可能要去npm registry查看一下这个名字是否已经被使用了。http://registry.npmjs.org/\n</code></pre><p>version</p>\n<p>version必须能被node-semver解析，它被包在npm的依赖中。（要自己用可以执行npm install semver）</p>\n<p>可用的“数字”或者“范围”见semver(7).</p>\n<p>description</p>\n<p>放简介，字符串，方便在npm search中搜索</p>\n<p>keywords</p>\n<p>关键字，数组、字符串，方便在npm search中搜索</p>\n<p>bugs</p>\n<p>你项目的提交问题的url和（或）邮件地址<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\"> &quot;url&quot; : &quot;http://github.com/owner/project/issues&quot;,</div><div class=\"line\">&quot;email&quot; : &quot;project@hostname.com&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>license</p>\n<p>你应该要指定一个许可证，让人知道使用的权利和限制的。</p>\n<p>最简单的方法是，假如你用一个像BSD或者MIT这样通用的许可证，就只需要指定一个许可证的名字，像这样：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123; &quot;license&quot; : &quot;BSD&quot; &#125;</div></pre></td></tr></table></figure></p>\n<p>如果你又更复杂的许可条件，或者想要提供给更多地细节，可以这样:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;licenses&quot; : [</div><div class=\"line\">  &#123; &quot;type&quot; : &quot;MyLicense&quot;</div><div class=\"line\">  , &quot;url&quot; : &quot;http://github.com/owner/project/path/to/license&quot;</div><div class=\"line\">  &#125;</div><div class=\"line\">]</div></pre></td></tr></table></figure></p>\n<p>repository</p>\n<p>指定你的代码存放的地方。这个对希望贡献的人有帮助。如果git仓库在github上，那么npm docs命令能找到你。</p>\n<p>这样做：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;repository&quot; :</div><div class=\"line\">  &#123; &quot;type&quot; : &quot;git&quot;</div><div class=\"line\">  , &quot;url&quot; : &quot;http://github.com/isaacs/npm.git&quot;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&quot;repository&quot; :</div><div class=\"line\">  &#123; &quot;type&quot; : &quot;svn&quot;</div><div class=\"line\">  , &quot;url&quot; : &quot;http://v8.googlecode.com/svn/trunk/&quot;</div><div class=\"line\">  &#125;</div></pre></td></tr></table></figure></p>\n<p>URL应该是公开的（即便是只读的）能直接被未经过修改的版本控制程序处理的url。不应该是一个html的项目页面。因为它是给计算机看的。</p>\n<p>scripts</p>\n<p>“scripts”是一个由脚本命令组成的hash对象，他们在包不同的生命周期中被执行。key是生命周期事件，value是要运行的命令。</p>\n<p>参考上面的npm start、npm test命令</p>\n<p>更多详细请看 npm-scripts(7)</p>\n<p>config</p>\n<p>“config” hash可以用来配置用于包脚本中的跨版本参数。在实例中，如果一个包有下面的配置：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\"> &quot;name&quot; : &quot;foo&quot;,</div><div class=\"line\"> &quot;config&quot; : &#123; &quot;port&quot; : &quot;8080&quot; &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>然后有一个“start”命令引用了npm_package_config_port环境变量，用户可以通过npm config set foo:port 8001来重写他。</p>\n<p>参见 npm-config(7) 和 npm-scripts(7)。</p>\n<p>dependencies</p>\n<p>依赖是给一组包名指定版本范围的一个hash。这个版本范围是一个由一个或多个空格分隔的字符串。依赖还可以用tarball或者git URL。</p>\n<p>请不要将测试或过渡性的依赖放在dependencieshash中。见下文的devDependencies</p>\n<p>详见semver(7).</p>\n<pre><code>version 必须完全和version一致\n&gt;version 必须比version大\n&gt;=version 同上\n&lt;version 同上\n&lt;=version 同上\n~version 大约一样，见semver(7)\n1.2.x 1.2.0, 1.2.1, 等，但不包括1.3.0\nhttp://... 见下文&apos;依赖URL&apos;\n* 所有\n&quot;&quot; 空，同*\nversion1 - version2 同 &gt;=version1 &lt;=version2.\nrange1 || range2 二选一。\ngit... 见下文&apos;依赖Git URL&apos;\nuser/repo 见下文&apos;GitHub URLs&apos;\n</code></pre><p>比如下面都是合法的：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123; &quot;dependencies&quot; :</div><div class=\"line\">  &#123; &quot;foo&quot; : &quot;1.0.0 - 2.9999.9999&quot;</div><div class=\"line\">  , &quot;bar&quot; : &quot;&gt;=1.0.2 &lt;2.1.2&quot;</div><div class=\"line\">  , &quot;baz&quot; : &quot;&gt;1.0.2 &lt;=2.3.4&quot;</div><div class=\"line\">  , &quot;boo&quot; : &quot;2.0.1&quot;</div><div class=\"line\">  , &quot;qux&quot; : &quot;&lt;1.0.0 || &gt;=2.3.1 &lt;2.4.5 || &gt;=2.5.2 &lt;3.0.0&quot;</div><div class=\"line\">  , &quot;asd&quot; : &quot;http://asdf.com/asdf.tar.gz&quot;</div><div class=\"line\">  , &quot;til&quot; : &quot;~1.2&quot;</div><div class=\"line\">  , &quot;elf&quot; : &quot;~1.2.3&quot;</div><div class=\"line\">  , &quot;two&quot; : &quot;2.x&quot;</div><div class=\"line\">  , &quot;thr&quot; : &quot;3.3.x&quot;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>devDependencies</p>\n<p>如果有人要使用你的模块，那么他们可能不需要你开发使用的外部测试或者文档框架。</p>\n<p>在这种情况下，最好将这些附属的项目列在devDependencies中。</p>\n<p>这些东西会在执行npm link或者npm install的时候初始化，并可以像其他npm配置参数一样管理。详见npm-config(7)。</p>\n<p>对于非特定平台的构建步骤，比如需要编译CoffeeScript，可以用prepublish脚本去实现，并把它依赖的包放在devDependency中。（译者注：prepublish定义了在执行npm publish的时候先行执行的脚本）</p>\n<p>比如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123; &quot;name&quot;: &quot;ethopia-waza&quot;,</div><div class=\"line\">  &quot;description&quot;: &quot;a delightfully fruity coffee varietal&quot;,</div><div class=\"line\">  &quot;version&quot;: &quot;1.2.3&quot;,</div><div class=\"line\">  &quot;devDependencies&quot;: &#123;</div><div class=\"line\">    &quot;coffee-script&quot;: &quot;~1.6.3&quot;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  &quot;scripts&quot;: &#123;</div><div class=\"line\">    &quot;prepublish&quot;: &quot;coffee -o lib/ -c src/waza.coffee&quot;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  &quot;main&quot;: &quot;lib/waza.js&quot;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>prepublish脚本会在publishing前运行，这样用户就不用自己去require来编译就能使用。并且在开发模式中（比如本地运行npm install）会运行这个脚本以便更好地测试。</p>\n"},{"title":"node+hexo","_content":"\n安装nodejs\n\n```\nsudo dnf install nodejs\n```\n\n会同时安装npm\n\n检查是否成功\n\n```\nnode -v\nnpm -v\n```\n\n成功会显示版本号\n\n安装hexo\n\n```\n$ npm install -g hexo-cli\n```\n\n如果出现npm error\n\n则：\n\n```\n$ sudo npm install -g hexo-cli\n```\n\n## 初始化\n\n在电脑的某个地方新建一个名为hexo的文件夹（名字可以随便取），比如我的是`F:\\Workspaces\\hexo`，由于这个文件夹将来就作为你存放代码的地方，所以最好不要随便放。\n\n```\n$ cd /f/Workspaces/hexo/\n$ hexo init\n```\n\n```\n$ hexo g # 生成\n$ hexo s # 启动服务\n```\n\n如果hexo安装成功，则在C:\\hexo文件夹下的文件目录为\n\n```\n\n.\n├── _config.yml // 网站的配置信息，你可以在此配置大部分的参数。\n├── package.json\n├── scaffolds // 模板文件夹。当你新建文章时，Hexo会根据scaffold来建立文件。\n├── source // 存放用户资源的地方\n|   ├── _drafts\n|   └── _posts\n└── themes // 存放网站的主题。Hexo会根据主题来生成静态页面。\n```\n\n之后输入\n\n```\nhexo server\n```\n\n此时会启动本地部署好的默认的博客网站 地址是：[http://localhost:4000/](http://localhost:4000/)\n不出意外 这里应该是没啥问题的。。\n\n#### 创建Github账号\n\n访问Github官网进行注册 ，这里没啥好说的。\n\n#### 创建与账号同名的Repository\n\n一定要同名的Repository，比如帐号是myid,那新建的Repository名称应该是myid.github.io\n\n#### 配置SSH\n\n##### (1) 生成SSH\n\n检查是否已经有SSH Key，打开Git Bash，输入\n\ncd ~/.ssh\n如果没有这个目录，则生成一个新的SSH，输入\n\n```\nssh-keygen -t rsa -C \"your e-mail\"\n```\n\n其中，your e-mail是你注册Github时用到的邮箱。\n\n然后接下来几步都直接按回车键，最后生成如下\n\n[![rsa](http://i.imgur.com/RSCTurW.jpg)](http://i.imgur.com/RSCTurW.jpg)\n\n##### (2) 复制公钥内容到Github账户信息中\n\n打开~/.ssh/id_rsa.pub文件，复制里面的内容；\n\n打开Github官网，登陆后进入到个人设置(点击头像->setting)，点击右侧的SSH Keys，点击Add SSH key；填写title之后，将之前复制的内容粘贴到Key框中，最后点击Add key即可。\n\n##### (3) 测试SSH是否配置成功\n\n输入\n\n```\nssh -T git@github.com\n```\n\n如果显示以下，则说明ssh配置成功。\n\n```\nHi username! You've successfully authenticated, but GitHub does not\nprovide shell access.\n```\n\n##### (4) 配置github 账户\n\n```\ngit config --global user.name \"username\"\ngit config --global user.email \"email\"\n```\n\n配置完之后输入：\n\n```\ngit config --list查看已设配置\n```\n\n看username ,email是不是都对了\n\n将网站发布到Github的同名repository中\n\n打开C:\\Hexo文件夹中的_config.yml文件，找到如下位置，填写\n\n```\n# Deployment\n## Docs: http://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repo: git@github.com:MyGithub/MyGithub.github.io\n```\n\n注： (1) 其中MyGithub替换成你的Github账户; (2)注意在yml文件中，:后面都是要带空格的。\n\n此时，通过访问[http://MyGithub.github.io可以看到默认的Hexo首页面（与之前本地测试时一样）。](http://MyGithub.github.io%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E9%BB%98%E8%AE%A4%E7%9A%84Hexo%E9%A6%96%E9%A1%B5%E9%9D%A2%EF%BC%88%E4%B8%8E%E4%B9%8B%E5%89%8D%E6%9C%AC%E5%9C%B0%E6%B5%8B%E8%AF%95%E6%97%B6%E4%B8%80%E6%A0%B7%EF%BC%89%E3%80%82)\n\n### 选择Hexo主题及发表文章\n\n#### (1) 下载Next主题\n\n我自己用的是Next主题，有很多版本，我没有使用最新的，用了个5.1.1版本 [下载地址](http://pan.baidu.com/s/1bJXJdG)\n\n下载之后解压，重命名为next,拷贝到C:\\hexo\\themes 目录中即可\n\n#### (2) 修改网站的主题为Next\n\n打开C:\\Hexo下的_config.yml文件，找到theme字段，将其修改为next\n\n```\n# Extensions\n## Plugins: http://hexo.io/plugins/\n## Themes: http://hexo.io/themes/\ntheme: next\n```\n\n#### (3) 本地验证是否可用\n\n输入\n\n```\nhexo s --debug\n```\n\n访问本地网站[http://localhost:4000/](http://localhost:4000/)，确认网站主题是否切换为Next.\n\n#### (4) 更新Github\n\n在git中进入网站根目录\n\n```\n$ cd c:/hexo\n$ hexo -g #编译本地内容\n$ hexo -d #发布到github\n```\n\n这里可能会报错，如果提示需要安装hexo-deployer-git插件，就执行以下语句：\n\n```\n$ npm install hexo-deployer-git\n```\n\n之后重新部署发布即可\n\n### 发布文章\n\n这里可以参考hexo的官方文档，通过命令的形式来玩\n\n```\nhexo n \"name of the new post\"\n```\n\n回车后，在source文件夹下的_post文件夹下，可以看到新建了一个name of the new post.md的文件\n也可以到C:\\hexo\\source_posts 目录下直接新建.md 结尾的文件就可以了，所以平时如果写了markdown格式的文档可以拷贝到这个路径下直接就发布了\n\n完了之后走一遍：\n\n```\nhexo g -d\n```\n\n关于文章，注意需要使用markdown语法进行书写,这里推荐一个markdown的[简明语法介绍](http://ibruce.info/2013/11/26/markdown/)\n\n### Goddady 域名与github博客地址绑定\n\n截止到目前为止，你应该可以通过访问[http://MyGithub.github.io](http://MyGithub.github.io)来看到以上创建的网站了。\n\n但是，如何拥有一个属于自己的域名地址，并将其指向在Github上所创建的网站呢？\n\n#### 注册域名\n\n我选择了国外的[Goddady](https://sg.godaddy.com/zh?isc=gennbacn29&countrview=1&currencytype=CNY&mkwid=WFSMCUdy&cvosrc=ppc.baidu)进行域名的注册  花了我29大洋申请了个域名[barrysite.me](http://barrysite.me/),怎么注册买东西这里不说。只谈绑定操作\n\n##### 进入godaddy DNS 管理界面\n\n##### 修改如下两个地方\n\n[![1](https://github.com/lubaolei161/blogMaterial/blob/master/1.jpg?raw=true)](https://github.com/lubaolei161/blogMaterial/blob/master/1.jpg?raw=true)\n\n类型为A的地方，IP地址修改为Githup服务器ip地址，通过以下命令获取：\n\n```\nping github.io\n```\n\n类型为CNAME的地方，值修改为博客地址 如：lubaolei161.github.io\n\n##### 添加CNAME文件到Github对应的repository\n\n这里注意的是不要直接在github上建立这个文件，要在hexo的sources目录下新建个CNAME\n内容就是你购买的域名,如我的：\n\n```\nbarrysite.me\n```\n\n之后重新部署发布即可。 至此，可以通过自己的域名直接访问博客了。[我的博客地址](http://barrysite.me)\n\n### Hexo Next主题下基本配置\n\n列举了安装之后如何订制你的博客，请参考我的另一篇文章：\n[Hexo Next主题下基本配置](http://barrysite.me/2017/05/07/Hexo%20Next%E4%B8%BB%E9%A2%98%E4%B8%8B%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/)\n\nhexo支持markdown，如何编辑文章并且发布到hexo博客网站上去？\n\n**步骤如下：**\n\n 1、选择一个markdown编辑器，编写文章，比如我使用markdownPad,\n\n地址：[http://www.markdownpad.com/download.html](http://www.markdownpad.com/download.html)   ，编写好之后，保存为md文件。\n\n还可以使用一些在线的markdown编辑器，比如csdn提供的[http://write.blog.csdn.net/mdeditor](http://write.blog.csdn.net/mdeditor)\n\n也支持导出md文件，还支持图片，反而markdownPad选择图片功能要付钱呢\n\n\n\n2、将md文件放在你的hexo网站所在位置下的source\\_posts目录，这个目录下存储了很多个md文件，每个文件对应着一篇博客。\n\n\n\n3、打开git bash,达到hexo网站的目录下，使用hexo generete 命令产生静态文件\n\n\n\n4、hexo server ,然后到[http://localhost:4000/](http://localhost:4000/)预览网站效果，最后同步public目录下的文件到github 上就行啦。\n\n## 写博客\n\n定位到我们的hexo根目录，执行命令：\n\n```\nhexo new 'my-first-blog'\n```\n\nhexo会帮我们在`_posts`下生成相关md文件：\n\n我们只需要打开这个文件就可以开始写博客了，默认生成如下内容：\n\n当然你也可以直接自己新建md文件，用这个命令的好处是帮我们自动生成了时间。\n\n一般完整格式如下：\n\n```\n---\ntitle: postName #文章页面上的显示名称，一般是中文\ndate: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改\ncategories: 默认分类 #分类\ntags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格\ndescription: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面\n---\n\n以下是正文\n```\n\n那么`hexo new page 'postName'`命令和`hexo new 'postName'`有什么区别呢？\n\n```\nhexo new page \"my-second-blog\"\n```\n\n生成如下：\n\n最终部署时生成：`hexo\\public\\my-second-blog\\index.html`，但是它不会作为文章出现在博文目录。\n\n### 写博客工具\n\n那么用什么工具写博客呢？这个我还没去找，以前自己使用editor.md简单弄了个，大家有好用的hexo写博客工具可以推荐个。\n\n### 如何让博文列表不显示全部内容\n\n默认情况下，生成的博文目录会显示全部的文章内容，如何设置文章摘要的长度呢？\n\n答案是在合适的位置加上`<!--more-->`即可，例如：\n\n```\n# 前言\n\n使用github pages服务搭建博客的好处有：\n\n1. 全是静态文件，访问速度快；\n2. 免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；\n3. 可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；\n\n<!--more-->\n\n4. 数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；\n5. 博客内容可以轻松打包、转移、发布到其它平台；\n6. 等等；\n```\n","source":"_posts/node+hexo.md","raw":"---\ntitle: node+hexo\ntags: [hexo,前端,node,js]\ncategories: hexo\n---\n\n安装nodejs\n\n```\nsudo dnf install nodejs\n```\n\n会同时安装npm\n\n检查是否成功\n\n```\nnode -v\nnpm -v\n```\n\n成功会显示版本号\n\n安装hexo\n\n```\n$ npm install -g hexo-cli\n```\n\n如果出现npm error\n\n则：\n\n```\n$ sudo npm install -g hexo-cli\n```\n\n## 初始化\n\n在电脑的某个地方新建一个名为hexo的文件夹（名字可以随便取），比如我的是`F:\\Workspaces\\hexo`，由于这个文件夹将来就作为你存放代码的地方，所以最好不要随便放。\n\n```\n$ cd /f/Workspaces/hexo/\n$ hexo init\n```\n\n```\n$ hexo g # 生成\n$ hexo s # 启动服务\n```\n\n如果hexo安装成功，则在C:\\hexo文件夹下的文件目录为\n\n```\n\n.\n├── _config.yml // 网站的配置信息，你可以在此配置大部分的参数。\n├── package.json\n├── scaffolds // 模板文件夹。当你新建文章时，Hexo会根据scaffold来建立文件。\n├── source // 存放用户资源的地方\n|   ├── _drafts\n|   └── _posts\n└── themes // 存放网站的主题。Hexo会根据主题来生成静态页面。\n```\n\n之后输入\n\n```\nhexo server\n```\n\n此时会启动本地部署好的默认的博客网站 地址是：[http://localhost:4000/](http://localhost:4000/)\n不出意外 这里应该是没啥问题的。。\n\n#### 创建Github账号\n\n访问Github官网进行注册 ，这里没啥好说的。\n\n#### 创建与账号同名的Repository\n\n一定要同名的Repository，比如帐号是myid,那新建的Repository名称应该是myid.github.io\n\n#### 配置SSH\n\n##### (1) 生成SSH\n\n检查是否已经有SSH Key，打开Git Bash，输入\n\ncd ~/.ssh\n如果没有这个目录，则生成一个新的SSH，输入\n\n```\nssh-keygen -t rsa -C \"your e-mail\"\n```\n\n其中，your e-mail是你注册Github时用到的邮箱。\n\n然后接下来几步都直接按回车键，最后生成如下\n\n[![rsa](http://i.imgur.com/RSCTurW.jpg)](http://i.imgur.com/RSCTurW.jpg)\n\n##### (2) 复制公钥内容到Github账户信息中\n\n打开~/.ssh/id_rsa.pub文件，复制里面的内容；\n\n打开Github官网，登陆后进入到个人设置(点击头像->setting)，点击右侧的SSH Keys，点击Add SSH key；填写title之后，将之前复制的内容粘贴到Key框中，最后点击Add key即可。\n\n##### (3) 测试SSH是否配置成功\n\n输入\n\n```\nssh -T git@github.com\n```\n\n如果显示以下，则说明ssh配置成功。\n\n```\nHi username! You've successfully authenticated, but GitHub does not\nprovide shell access.\n```\n\n##### (4) 配置github 账户\n\n```\ngit config --global user.name \"username\"\ngit config --global user.email \"email\"\n```\n\n配置完之后输入：\n\n```\ngit config --list查看已设配置\n```\n\n看username ,email是不是都对了\n\n将网站发布到Github的同名repository中\n\n打开C:\\Hexo文件夹中的_config.yml文件，找到如下位置，填写\n\n```\n# Deployment\n## Docs: http://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repo: git@github.com:MyGithub/MyGithub.github.io\n```\n\n注： (1) 其中MyGithub替换成你的Github账户; (2)注意在yml文件中，:后面都是要带空格的。\n\n此时，通过访问[http://MyGithub.github.io可以看到默认的Hexo首页面（与之前本地测试时一样）。](http://MyGithub.github.io%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E9%BB%98%E8%AE%A4%E7%9A%84Hexo%E9%A6%96%E9%A1%B5%E9%9D%A2%EF%BC%88%E4%B8%8E%E4%B9%8B%E5%89%8D%E6%9C%AC%E5%9C%B0%E6%B5%8B%E8%AF%95%E6%97%B6%E4%B8%80%E6%A0%B7%EF%BC%89%E3%80%82)\n\n### 选择Hexo主题及发表文章\n\n#### (1) 下载Next主题\n\n我自己用的是Next主题，有很多版本，我没有使用最新的，用了个5.1.1版本 [下载地址](http://pan.baidu.com/s/1bJXJdG)\n\n下载之后解压，重命名为next,拷贝到C:\\hexo\\themes 目录中即可\n\n#### (2) 修改网站的主题为Next\n\n打开C:\\Hexo下的_config.yml文件，找到theme字段，将其修改为next\n\n```\n# Extensions\n## Plugins: http://hexo.io/plugins/\n## Themes: http://hexo.io/themes/\ntheme: next\n```\n\n#### (3) 本地验证是否可用\n\n输入\n\n```\nhexo s --debug\n```\n\n访问本地网站[http://localhost:4000/](http://localhost:4000/)，确认网站主题是否切换为Next.\n\n#### (4) 更新Github\n\n在git中进入网站根目录\n\n```\n$ cd c:/hexo\n$ hexo -g #编译本地内容\n$ hexo -d #发布到github\n```\n\n这里可能会报错，如果提示需要安装hexo-deployer-git插件，就执行以下语句：\n\n```\n$ npm install hexo-deployer-git\n```\n\n之后重新部署发布即可\n\n### 发布文章\n\n这里可以参考hexo的官方文档，通过命令的形式来玩\n\n```\nhexo n \"name of the new post\"\n```\n\n回车后，在source文件夹下的_post文件夹下，可以看到新建了一个name of the new post.md的文件\n也可以到C:\\hexo\\source_posts 目录下直接新建.md 结尾的文件就可以了，所以平时如果写了markdown格式的文档可以拷贝到这个路径下直接就发布了\n\n完了之后走一遍：\n\n```\nhexo g -d\n```\n\n关于文章，注意需要使用markdown语法进行书写,这里推荐一个markdown的[简明语法介绍](http://ibruce.info/2013/11/26/markdown/)\n\n### Goddady 域名与github博客地址绑定\n\n截止到目前为止，你应该可以通过访问[http://MyGithub.github.io](http://MyGithub.github.io)来看到以上创建的网站了。\n\n但是，如何拥有一个属于自己的域名地址，并将其指向在Github上所创建的网站呢？\n\n#### 注册域名\n\n我选择了国外的[Goddady](https://sg.godaddy.com/zh?isc=gennbacn29&countrview=1&currencytype=CNY&mkwid=WFSMCUdy&cvosrc=ppc.baidu)进行域名的注册  花了我29大洋申请了个域名[barrysite.me](http://barrysite.me/),怎么注册买东西这里不说。只谈绑定操作\n\n##### 进入godaddy DNS 管理界面\n\n##### 修改如下两个地方\n\n[![1](https://github.com/lubaolei161/blogMaterial/blob/master/1.jpg?raw=true)](https://github.com/lubaolei161/blogMaterial/blob/master/1.jpg?raw=true)\n\n类型为A的地方，IP地址修改为Githup服务器ip地址，通过以下命令获取：\n\n```\nping github.io\n```\n\n类型为CNAME的地方，值修改为博客地址 如：lubaolei161.github.io\n\n##### 添加CNAME文件到Github对应的repository\n\n这里注意的是不要直接在github上建立这个文件，要在hexo的sources目录下新建个CNAME\n内容就是你购买的域名,如我的：\n\n```\nbarrysite.me\n```\n\n之后重新部署发布即可。 至此，可以通过自己的域名直接访问博客了。[我的博客地址](http://barrysite.me)\n\n### Hexo Next主题下基本配置\n\n列举了安装之后如何订制你的博客，请参考我的另一篇文章：\n[Hexo Next主题下基本配置](http://barrysite.me/2017/05/07/Hexo%20Next%E4%B8%BB%E9%A2%98%E4%B8%8B%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/)\n\nhexo支持markdown，如何编辑文章并且发布到hexo博客网站上去？\n\n**步骤如下：**\n\n 1、选择一个markdown编辑器，编写文章，比如我使用markdownPad,\n\n地址：[http://www.markdownpad.com/download.html](http://www.markdownpad.com/download.html)   ，编写好之后，保存为md文件。\n\n还可以使用一些在线的markdown编辑器，比如csdn提供的[http://write.blog.csdn.net/mdeditor](http://write.blog.csdn.net/mdeditor)\n\n也支持导出md文件，还支持图片，反而markdownPad选择图片功能要付钱呢\n\n\n\n2、将md文件放在你的hexo网站所在位置下的source\\_posts目录，这个目录下存储了很多个md文件，每个文件对应着一篇博客。\n\n\n\n3、打开git bash,达到hexo网站的目录下，使用hexo generete 命令产生静态文件\n\n\n\n4、hexo server ,然后到[http://localhost:4000/](http://localhost:4000/)预览网站效果，最后同步public目录下的文件到github 上就行啦。\n\n## 写博客\n\n定位到我们的hexo根目录，执行命令：\n\n```\nhexo new 'my-first-blog'\n```\n\nhexo会帮我们在`_posts`下生成相关md文件：\n\n我们只需要打开这个文件就可以开始写博客了，默认生成如下内容：\n\n当然你也可以直接自己新建md文件，用这个命令的好处是帮我们自动生成了时间。\n\n一般完整格式如下：\n\n```\n---\ntitle: postName #文章页面上的显示名称，一般是中文\ndate: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改\ncategories: 默认分类 #分类\ntags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格\ndescription: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面\n---\n\n以下是正文\n```\n\n那么`hexo new page 'postName'`命令和`hexo new 'postName'`有什么区别呢？\n\n```\nhexo new page \"my-second-blog\"\n```\n\n生成如下：\n\n最终部署时生成：`hexo\\public\\my-second-blog\\index.html`，但是它不会作为文章出现在博文目录。\n\n### 写博客工具\n\n那么用什么工具写博客呢？这个我还没去找，以前自己使用editor.md简单弄了个，大家有好用的hexo写博客工具可以推荐个。\n\n### 如何让博文列表不显示全部内容\n\n默认情况下，生成的博文目录会显示全部的文章内容，如何设置文章摘要的长度呢？\n\n答案是在合适的位置加上`<!--more-->`即可，例如：\n\n```\n# 前言\n\n使用github pages服务搭建博客的好处有：\n\n1. 全是静态文件，访问速度快；\n2. 免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；\n3. 可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；\n\n<!--more-->\n\n4. 数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；\n5. 博客内容可以轻松打包、转移、发布到其它平台；\n6. 等等；\n```\n","slug":"node+hexo","published":1,"date":"2017-05-22T05:03:19.682Z","updated":"2017-05-25T01:03:22.306Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmtsh00194wvs3hm5xl4q","content":"<p>安装nodejs</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo dnf install nodejs</div></pre></td></tr></table></figure>\n<p>会同时安装npm</p>\n<p>检查是否成功</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">node -v</div><div class=\"line\">npm -v</div></pre></td></tr></table></figure>\n<p>成功会显示版本号</p>\n<p>安装hexo</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo-cli</div></pre></td></tr></table></figure>\n<p>如果出现npm error</p>\n<p>则：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo npm install -g hexo-cli</div></pre></td></tr></table></figure>\n<h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><p>在电脑的某个地方新建一个名为hexo的文件夹（名字可以随便取），比如我的是<code>F:\\Workspaces\\hexo</code>，由于这个文件夹将来就作为你存放代码的地方，所以最好不要随便放。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cd /f/Workspaces/hexo/</div><div class=\"line\">$ hexo init</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo g # 生成</div><div class=\"line\">$ hexo s # 启动服务</div></pre></td></tr></table></figure>\n<p>如果hexo安装成功，则在C:\\hexo文件夹下的文件目录为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">.</div><div class=\"line\">├── _config.yml // 网站的配置信息，你可以在此配置大部分的参数。</div><div class=\"line\">├── package.json</div><div class=\"line\">├── scaffolds // 模板文件夹。当你新建文章时，Hexo会根据scaffold来建立文件。</div><div class=\"line\">├── source // 存放用户资源的地方</div><div class=\"line\">|   ├── _drafts</div><div class=\"line\">|   └── _posts</div><div class=\"line\">└── themes // 存放网站的主题。Hexo会根据主题来生成静态页面。</div></pre></td></tr></table></figure>\n<p>之后输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo server</div></pre></td></tr></table></figure>\n<p>此时会启动本地部署好的默认的博客网站 地址是：<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"external\">http://localhost:4000/</a><br>不出意外 这里应该是没啥问题的。。</p>\n<h4 id=\"创建Github账号\"><a href=\"#创建Github账号\" class=\"headerlink\" title=\"创建Github账号\"></a>创建Github账号</h4><p>访问Github官网进行注册 ，这里没啥好说的。</p>\n<h4 id=\"创建与账号同名的Repository\"><a href=\"#创建与账号同名的Repository\" class=\"headerlink\" title=\"创建与账号同名的Repository\"></a>创建与账号同名的Repository</h4><p>一定要同名的Repository，比如帐号是myid,那新建的Repository名称应该是myid.github.io</p>\n<h4 id=\"配置SSH\"><a href=\"#配置SSH\" class=\"headerlink\" title=\"配置SSH\"></a>配置SSH</h4><h5 id=\"1-生成SSH\"><a href=\"#1-生成SSH\" class=\"headerlink\" title=\"(1) 生成SSH\"></a>(1) 生成SSH</h5><p>检查是否已经有SSH Key，打开Git Bash，输入</p>\n<p>cd ~/.ssh<br>如果没有这个目录，则生成一个新的SSH，输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh-keygen -t rsa -C &quot;your e-mail&quot;</div></pre></td></tr></table></figure>\n<p>其中，your e-mail是你注册Github时用到的邮箱。</p>\n<p>然后接下来几步都直接按回车键，最后生成如下</p>\n<p><a href=\"http://i.imgur.com/RSCTurW.jpg\" target=\"_blank\" rel=\"external\"><img src=\"http://i.imgur.com/RSCTurW.jpg\" alt=\"rsa\"></a></p>\n<h5 id=\"2-复制公钥内容到Github账户信息中\"><a href=\"#2-复制公钥内容到Github账户信息中\" class=\"headerlink\" title=\"(2) 复制公钥内容到Github账户信息中\"></a>(2) 复制公钥内容到Github账户信息中</h5><p>打开~/.ssh/id_rsa.pub文件，复制里面的内容；</p>\n<p>打开Github官网，登陆后进入到个人设置(点击头像-&gt;setting)，点击右侧的SSH Keys，点击Add SSH key；填写title之后，将之前复制的内容粘贴到Key框中，最后点击Add key即可。</p>\n<h5 id=\"3-测试SSH是否配置成功\"><a href=\"#3-测试SSH是否配置成功\" class=\"headerlink\" title=\"(3) 测试SSH是否配置成功\"></a>(3) 测试SSH是否配置成功</h5><p>输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh -T git@github.com</div></pre></td></tr></table></figure>\n<p>如果显示以下，则说明ssh配置成功。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Hi username! You&apos;ve successfully authenticated, but GitHub does not</div><div class=\"line\">provide shell access.</div></pre></td></tr></table></figure>\n<h5 id=\"4-配置github-账户\"><a href=\"#4-配置github-账户\" class=\"headerlink\" title=\"(4) 配置github 账户\"></a>(4) 配置github 账户</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global user.name &quot;username&quot;</div><div class=\"line\">git config --global user.email &quot;email&quot;</div></pre></td></tr></table></figure>\n<p>配置完之后输入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --list查看已设配置</div></pre></td></tr></table></figure>\n<p>看username ,email是不是都对了</p>\n<p>将网站发布到Github的同名repository中</p>\n<p>打开C:\\Hexo文件夹中的_config.yml文件，找到如下位置，填写</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Deployment</div><div class=\"line\">## Docs: http://hexo.io/docs/deployment.html</div><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: git@github.com:MyGithub/MyGithub.github.io</div></pre></td></tr></table></figure>\n<p>注： (1) 其中MyGithub替换成你的Github账户; (2)注意在yml文件中，:后面都是要带空格的。</p>\n<p>此时，通过访问<a href=\"http://MyGithub.github.io%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E9%BB%98%E8%AE%A4%E7%9A%84Hexo%E9%A6%96%E9%A1%B5%E9%9D%A2%EF%BC%88%E4%B8%8E%E4%B9%8B%E5%89%8D%E6%9C%AC%E5%9C%B0%E6%B5%8B%E8%AF%95%E6%97%B6%E4%B8%80%E6%A0%B7%EF%BC%89%E3%80%82\" target=\"_blank\" rel=\"external\">http://MyGithub.github.io可以看到默认的Hexo首页面（与之前本地测试时一样）。</a></p>\n<h3 id=\"选择Hexo主题及发表文章\"><a href=\"#选择Hexo主题及发表文章\" class=\"headerlink\" title=\"选择Hexo主题及发表文章\"></a>选择Hexo主题及发表文章</h3><h4 id=\"1-下载Next主题\"><a href=\"#1-下载Next主题\" class=\"headerlink\" title=\"(1) 下载Next主题\"></a>(1) 下载Next主题</h4><p>我自己用的是Next主题，有很多版本，我没有使用最新的，用了个5.1.1版本 <a href=\"http://pan.baidu.com/s/1bJXJdG\" target=\"_blank\" rel=\"external\">下载地址</a></p>\n<p>下载之后解压，重命名为next,拷贝到C:\\hexo\\themes 目录中即可</p>\n<h4 id=\"2-修改网站的主题为Next\"><a href=\"#2-修改网站的主题为Next\" class=\"headerlink\" title=\"(2) 修改网站的主题为Next\"></a>(2) 修改网站的主题为Next</h4><p>打开C:\\Hexo下的_config.yml文件，找到theme字段，将其修改为next</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Extensions</div><div class=\"line\">## Plugins: http://hexo.io/plugins/</div><div class=\"line\">## Themes: http://hexo.io/themes/</div><div class=\"line\">theme: next</div></pre></td></tr></table></figure>\n<h4 id=\"3-本地验证是否可用\"><a href=\"#3-本地验证是否可用\" class=\"headerlink\" title=\"(3) 本地验证是否可用\"></a>(3) 本地验证是否可用</h4><p>输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo s --debug</div></pre></td></tr></table></figure>\n<p>访问本地网站<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"external\">http://localhost:4000/</a>，确认网站主题是否切换为Next.</p>\n<h4 id=\"4-更新Github\"><a href=\"#4-更新Github\" class=\"headerlink\" title=\"(4) 更新Github\"></a>(4) 更新Github</h4><p>在git中进入网站根目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cd c:/hexo</div><div class=\"line\">$ hexo -g #编译本地内容</div><div class=\"line\">$ hexo -d #发布到github</div></pre></td></tr></table></figure>\n<p>这里可能会报错，如果提示需要安装hexo-deployer-git插件，就执行以下语句：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-deployer-git</div></pre></td></tr></table></figure>\n<p>之后重新部署发布即可</p>\n<h3 id=\"发布文章\"><a href=\"#发布文章\" class=\"headerlink\" title=\"发布文章\"></a>发布文章</h3><p>这里可以参考hexo的官方文档，通过命令的形式来玩</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo n &quot;name of the new post&quot;</div></pre></td></tr></table></figure>\n<p>回车后，在source文件夹下的_post文件夹下，可以看到新建了一个name of the new post.md的文件<br>也可以到C:\\hexo\\source_posts 目录下直接新建.md 结尾的文件就可以了，所以平时如果写了markdown格式的文档可以拷贝到这个路径下直接就发布了</p>\n<p>完了之后走一遍：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo g -d</div></pre></td></tr></table></figure>\n<p>关于文章，注意需要使用markdown语法进行书写,这里推荐一个markdown的<a href=\"http://ibruce.info/2013/11/26/markdown/\" target=\"_blank\" rel=\"external\">简明语法介绍</a></p>\n<h3 id=\"Goddady-域名与github博客地址绑定\"><a href=\"#Goddady-域名与github博客地址绑定\" class=\"headerlink\" title=\"Goddady 域名与github博客地址绑定\"></a>Goddady 域名与github博客地址绑定</h3><p>截止到目前为止，你应该可以通过访问<a href=\"http://MyGithub.github.io\" target=\"_blank\" rel=\"external\">http://MyGithub.github.io</a>来看到以上创建的网站了。</p>\n<p>但是，如何拥有一个属于自己的域名地址，并将其指向在Github上所创建的网站呢？</p>\n<h4 id=\"注册域名\"><a href=\"#注册域名\" class=\"headerlink\" title=\"注册域名\"></a>注册域名</h4><p>我选择了国外的<a href=\"https://sg.godaddy.com/zh?isc=gennbacn29&amp;countrview=1&amp;currencytype=CNY&amp;mkwid=WFSMCUdy&amp;cvosrc=ppc.baidu\" target=\"_blank\" rel=\"external\">Goddady</a>进行域名的注册  花了我29大洋申请了个域名<a href=\"http://barrysite.me/\" target=\"_blank\" rel=\"external\">barrysite.me</a>,怎么注册买东西这里不说。只谈绑定操作</p>\n<h5 id=\"进入godaddy-DNS-管理界面\"><a href=\"#进入godaddy-DNS-管理界面\" class=\"headerlink\" title=\"进入godaddy DNS 管理界面\"></a>进入godaddy DNS 管理界面</h5><h5 id=\"修改如下两个地方\"><a href=\"#修改如下两个地方\" class=\"headerlink\" title=\"修改如下两个地方\"></a>修改如下两个地方</h5><p><a href=\"https://github.com/lubaolei161/blogMaterial/blob/master/1.jpg?raw=true\" target=\"_blank\" rel=\"external\"><img src=\"https://github.com/lubaolei161/blogMaterial/blob/master/1.jpg?raw=true\" alt=\"1\"></a></p>\n<p>类型为A的地方，IP地址修改为Githup服务器ip地址，通过以下命令获取：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ping github.io</div></pre></td></tr></table></figure>\n<p>类型为CNAME的地方，值修改为博客地址 如：lubaolei161.github.io</p>\n<h5 id=\"添加CNAME文件到Github对应的repository\"><a href=\"#添加CNAME文件到Github对应的repository\" class=\"headerlink\" title=\"添加CNAME文件到Github对应的repository\"></a>添加CNAME文件到Github对应的repository</h5><p>这里注意的是不要直接在github上建立这个文件，要在hexo的sources目录下新建个CNAME<br>内容就是你购买的域名,如我的：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">barrysite.me</div></pre></td></tr></table></figure>\n<p>之后重新部署发布即可。 至此，可以通过自己的域名直接访问博客了。<a href=\"http://barrysite.me\" target=\"_blank\" rel=\"external\">我的博客地址</a></p>\n<h3 id=\"Hexo-Next主题下基本配置\"><a href=\"#Hexo-Next主题下基本配置\" class=\"headerlink\" title=\"Hexo Next主题下基本配置\"></a>Hexo Next主题下基本配置</h3><p>列举了安装之后如何订制你的博客，请参考我的另一篇文章：<br><a href=\"http://barrysite.me/2017/05/07/Hexo%20Next%E4%B8%BB%E9%A2%98%E4%B8%8B%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/\" target=\"_blank\" rel=\"external\">Hexo Next主题下基本配置</a></p>\n<p>hexo支持markdown，如何编辑文章并且发布到hexo博客网站上去？</p>\n<p><strong>步骤如下：</strong></p>\n<p> 1、选择一个markdown编辑器，编写文章，比如我使用markdownPad,</p>\n<p>地址：<a href=\"http://www.markdownpad.com/download.html\" target=\"_blank\" rel=\"external\">http://www.markdownpad.com/download.html</a>   ，编写好之后，保存为md文件。</p>\n<p>还可以使用一些在线的markdown编辑器，比如csdn提供的<a href=\"http://write.blog.csdn.net/mdeditor\" target=\"_blank\" rel=\"external\">http://write.blog.csdn.net/mdeditor</a></p>\n<p>也支持导出md文件，还支持图片，反而markdownPad选择图片功能要付钱呢</p>\n<p>2、将md文件放在你的hexo网站所在位置下的source_posts目录，这个目录下存储了很多个md文件，每个文件对应着一篇博客。</p>\n<p>3、打开git bash,达到hexo网站的目录下，使用hexo generete 命令产生静态文件</p>\n<p>4、hexo server ,然后到<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"external\">http://localhost:4000/</a>预览网站效果，最后同步public目录下的文件到github 上就行啦。</p>\n<h2 id=\"写博客\"><a href=\"#写博客\" class=\"headerlink\" title=\"写博客\"></a>写博客</h2><p>定位到我们的hexo根目录，执行命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new &apos;my-first-blog&apos;</div></pre></td></tr></table></figure>\n<p>hexo会帮我们在<code>_posts</code>下生成相关md文件：</p>\n<p>我们只需要打开这个文件就可以开始写博客了，默认生成如下内容：</p>\n<p>当然你也可以直接自己新建md文件，用这个命令的好处是帮我们自动生成了时间。</p>\n<p>一般完整格式如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title: postName #文章页面上的显示名称，一般是中文</div><div class=\"line\">date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改</div><div class=\"line\">categories: 默认分类 #分类</div><div class=\"line\">tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格</div><div class=\"line\">description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</div><div class=\"line\">---</div><div class=\"line\"></div><div class=\"line\">以下是正文</div></pre></td></tr></table></figure>\n<p>那么<code>hexo new page &#39;postName&#39;</code>命令和<code>hexo new &#39;postName&#39;</code>有什么区别呢？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new page &quot;my-second-blog&quot;</div></pre></td></tr></table></figure>\n<p>生成如下：</p>\n<p>最终部署时生成：<code>hexo\\public\\my-second-blog\\index.html</code>，但是它不会作为文章出现在博文目录。</p>\n<h3 id=\"写博客工具\"><a href=\"#写博客工具\" class=\"headerlink\" title=\"写博客工具\"></a>写博客工具</h3><p>那么用什么工具写博客呢？这个我还没去找，以前自己使用editor.md简单弄了个，大家有好用的hexo写博客工具可以推荐个。</p>\n<h3 id=\"如何让博文列表不显示全部内容\"><a href=\"#如何让博文列表不显示全部内容\" class=\"headerlink\" title=\"如何让博文列表不显示全部内容\"></a>如何让博文列表不显示全部内容</h3><p>默认情况下，生成的博文目录会显示全部的文章内容，如何设置文章摘要的长度呢？</p>\n<p>答案是在合适的位置加上<code>&lt;!--more--&gt;</code>即可，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 前言</div><div class=\"line\"></div><div class=\"line\">使用github pages服务搭建博客的好处有：</div><div class=\"line\"></div><div class=\"line\">1. 全是静态文件，访问速度快；</div><div class=\"line\">2. 免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</div><div class=\"line\">3. 可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</div><div class=\"line\"></div><div class=\"line\">&lt;!--more--&gt;</div><div class=\"line\"></div><div class=\"line\">4. 数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</div><div class=\"line\">5. 博客内容可以轻松打包、转移、发布到其它平台；</div><div class=\"line\">6. 等等；</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>安装nodejs</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo dnf install nodejs</div></pre></td></tr></table></figure>\n<p>会同时安装npm</p>\n<p>检查是否成功</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">node -v</div><div class=\"line\">npm -v</div></pre></td></tr></table></figure>\n<p>成功会显示版本号</p>\n<p>安装hexo</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g hexo-cli</div></pre></td></tr></table></figure>\n<p>如果出现npm error</p>\n<p>则：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo npm install -g hexo-cli</div></pre></td></tr></table></figure>\n<h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><p>在电脑的某个地方新建一个名为hexo的文件夹（名字可以随便取），比如我的是<code>F:\\Workspaces\\hexo</code>，由于这个文件夹将来就作为你存放代码的地方，所以最好不要随便放。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cd /f/Workspaces/hexo/</div><div class=\"line\">$ hexo init</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo g # 生成</div><div class=\"line\">$ hexo s # 启动服务</div></pre></td></tr></table></figure>\n<p>如果hexo安装成功，则在C:\\hexo文件夹下的文件目录为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">.</div><div class=\"line\">├── _config.yml // 网站的配置信息，你可以在此配置大部分的参数。</div><div class=\"line\">├── package.json</div><div class=\"line\">├── scaffolds // 模板文件夹。当你新建文章时，Hexo会根据scaffold来建立文件。</div><div class=\"line\">├── source // 存放用户资源的地方</div><div class=\"line\">|   ├── _drafts</div><div class=\"line\">|   └── _posts</div><div class=\"line\">└── themes // 存放网站的主题。Hexo会根据主题来生成静态页面。</div></pre></td></tr></table></figure>\n<p>之后输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo server</div></pre></td></tr></table></figure>\n<p>此时会启动本地部署好的默认的博客网站 地址是：<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"external\">http://localhost:4000/</a><br>不出意外 这里应该是没啥问题的。。</p>\n<h4 id=\"创建Github账号\"><a href=\"#创建Github账号\" class=\"headerlink\" title=\"创建Github账号\"></a>创建Github账号</h4><p>访问Github官网进行注册 ，这里没啥好说的。</p>\n<h4 id=\"创建与账号同名的Repository\"><a href=\"#创建与账号同名的Repository\" class=\"headerlink\" title=\"创建与账号同名的Repository\"></a>创建与账号同名的Repository</h4><p>一定要同名的Repository，比如帐号是myid,那新建的Repository名称应该是myid.github.io</p>\n<h4 id=\"配置SSH\"><a href=\"#配置SSH\" class=\"headerlink\" title=\"配置SSH\"></a>配置SSH</h4><h5 id=\"1-生成SSH\"><a href=\"#1-生成SSH\" class=\"headerlink\" title=\"(1) 生成SSH\"></a>(1) 生成SSH</h5><p>检查是否已经有SSH Key，打开Git Bash，输入</p>\n<p>cd ~/.ssh<br>如果没有这个目录，则生成一个新的SSH，输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh-keygen -t rsa -C &quot;your e-mail&quot;</div></pre></td></tr></table></figure>\n<p>其中，your e-mail是你注册Github时用到的邮箱。</p>\n<p>然后接下来几步都直接按回车键，最后生成如下</p>\n<p><a href=\"http://i.imgur.com/RSCTurW.jpg\" target=\"_blank\" rel=\"external\"><img src=\"http://i.imgur.com/RSCTurW.jpg\" alt=\"rsa\"></a></p>\n<h5 id=\"2-复制公钥内容到Github账户信息中\"><a href=\"#2-复制公钥内容到Github账户信息中\" class=\"headerlink\" title=\"(2) 复制公钥内容到Github账户信息中\"></a>(2) 复制公钥内容到Github账户信息中</h5><p>打开~/.ssh/id_rsa.pub文件，复制里面的内容；</p>\n<p>打开Github官网，登陆后进入到个人设置(点击头像-&gt;setting)，点击右侧的SSH Keys，点击Add SSH key；填写title之后，将之前复制的内容粘贴到Key框中，最后点击Add key即可。</p>\n<h5 id=\"3-测试SSH是否配置成功\"><a href=\"#3-测试SSH是否配置成功\" class=\"headerlink\" title=\"(3) 测试SSH是否配置成功\"></a>(3) 测试SSH是否配置成功</h5><p>输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh -T git@github.com</div></pre></td></tr></table></figure>\n<p>如果显示以下，则说明ssh配置成功。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Hi username! You&apos;ve successfully authenticated, but GitHub does not</div><div class=\"line\">provide shell access.</div></pre></td></tr></table></figure>\n<h5 id=\"4-配置github-账户\"><a href=\"#4-配置github-账户\" class=\"headerlink\" title=\"(4) 配置github 账户\"></a>(4) 配置github 账户</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global user.name &quot;username&quot;</div><div class=\"line\">git config --global user.email &quot;email&quot;</div></pre></td></tr></table></figure>\n<p>配置完之后输入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --list查看已设配置</div></pre></td></tr></table></figure>\n<p>看username ,email是不是都对了</p>\n<p>将网站发布到Github的同名repository中</p>\n<p>打开C:\\Hexo文件夹中的_config.yml文件，找到如下位置，填写</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Deployment</div><div class=\"line\">## Docs: http://hexo.io/docs/deployment.html</div><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: git@github.com:MyGithub/MyGithub.github.io</div></pre></td></tr></table></figure>\n<p>注： (1) 其中MyGithub替换成你的Github账户; (2)注意在yml文件中，:后面都是要带空格的。</p>\n<p>此时，通过访问<a href=\"http://MyGithub.github.io%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E9%BB%98%E8%AE%A4%E7%9A%84Hexo%E9%A6%96%E9%A1%B5%E9%9D%A2%EF%BC%88%E4%B8%8E%E4%B9%8B%E5%89%8D%E6%9C%AC%E5%9C%B0%E6%B5%8B%E8%AF%95%E6%97%B6%E4%B8%80%E6%A0%B7%EF%BC%89%E3%80%82\" target=\"_blank\" rel=\"external\">http://MyGithub.github.io可以看到默认的Hexo首页面（与之前本地测试时一样）。</a></p>\n<h3 id=\"选择Hexo主题及发表文章\"><a href=\"#选择Hexo主题及发表文章\" class=\"headerlink\" title=\"选择Hexo主题及发表文章\"></a>选择Hexo主题及发表文章</h3><h4 id=\"1-下载Next主题\"><a href=\"#1-下载Next主题\" class=\"headerlink\" title=\"(1) 下载Next主题\"></a>(1) 下载Next主题</h4><p>我自己用的是Next主题，有很多版本，我没有使用最新的，用了个5.1.1版本 <a href=\"http://pan.baidu.com/s/1bJXJdG\" target=\"_blank\" rel=\"external\">下载地址</a></p>\n<p>下载之后解压，重命名为next,拷贝到C:\\hexo\\themes 目录中即可</p>\n<h4 id=\"2-修改网站的主题为Next\"><a href=\"#2-修改网站的主题为Next\" class=\"headerlink\" title=\"(2) 修改网站的主题为Next\"></a>(2) 修改网站的主题为Next</h4><p>打开C:\\Hexo下的_config.yml文件，找到theme字段，将其修改为next</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Extensions</div><div class=\"line\">## Plugins: http://hexo.io/plugins/</div><div class=\"line\">## Themes: http://hexo.io/themes/</div><div class=\"line\">theme: next</div></pre></td></tr></table></figure>\n<h4 id=\"3-本地验证是否可用\"><a href=\"#3-本地验证是否可用\" class=\"headerlink\" title=\"(3) 本地验证是否可用\"></a>(3) 本地验证是否可用</h4><p>输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo s --debug</div></pre></td></tr></table></figure>\n<p>访问本地网站<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"external\">http://localhost:4000/</a>，确认网站主题是否切换为Next.</p>\n<h4 id=\"4-更新Github\"><a href=\"#4-更新Github\" class=\"headerlink\" title=\"(4) 更新Github\"></a>(4) 更新Github</h4><p>在git中进入网站根目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cd c:/hexo</div><div class=\"line\">$ hexo -g #编译本地内容</div><div class=\"line\">$ hexo -d #发布到github</div></pre></td></tr></table></figure>\n<p>这里可能会报错，如果提示需要安装hexo-deployer-git插件，就执行以下语句：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install hexo-deployer-git</div></pre></td></tr></table></figure>\n<p>之后重新部署发布即可</p>\n<h3 id=\"发布文章\"><a href=\"#发布文章\" class=\"headerlink\" title=\"发布文章\"></a>发布文章</h3><p>这里可以参考hexo的官方文档，通过命令的形式来玩</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo n &quot;name of the new post&quot;</div></pre></td></tr></table></figure>\n<p>回车后，在source文件夹下的_post文件夹下，可以看到新建了一个name of the new post.md的文件<br>也可以到C:\\hexo\\source_posts 目录下直接新建.md 结尾的文件就可以了，所以平时如果写了markdown格式的文档可以拷贝到这个路径下直接就发布了</p>\n<p>完了之后走一遍：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo g -d</div></pre></td></tr></table></figure>\n<p>关于文章，注意需要使用markdown语法进行书写,这里推荐一个markdown的<a href=\"http://ibruce.info/2013/11/26/markdown/\" target=\"_blank\" rel=\"external\">简明语法介绍</a></p>\n<h3 id=\"Goddady-域名与github博客地址绑定\"><a href=\"#Goddady-域名与github博客地址绑定\" class=\"headerlink\" title=\"Goddady 域名与github博客地址绑定\"></a>Goddady 域名与github博客地址绑定</h3><p>截止到目前为止，你应该可以通过访问<a href=\"http://MyGithub.github.io\" target=\"_blank\" rel=\"external\">http://MyGithub.github.io</a>来看到以上创建的网站了。</p>\n<p>但是，如何拥有一个属于自己的域名地址，并将其指向在Github上所创建的网站呢？</p>\n<h4 id=\"注册域名\"><a href=\"#注册域名\" class=\"headerlink\" title=\"注册域名\"></a>注册域名</h4><p>我选择了国外的<a href=\"https://sg.godaddy.com/zh?isc=gennbacn29&amp;countrview=1&amp;currencytype=CNY&amp;mkwid=WFSMCUdy&amp;cvosrc=ppc.baidu\" target=\"_blank\" rel=\"external\">Goddady</a>进行域名的注册  花了我29大洋申请了个域名<a href=\"http://barrysite.me/\" target=\"_blank\" rel=\"external\">barrysite.me</a>,怎么注册买东西这里不说。只谈绑定操作</p>\n<h5 id=\"进入godaddy-DNS-管理界面\"><a href=\"#进入godaddy-DNS-管理界面\" class=\"headerlink\" title=\"进入godaddy DNS 管理界面\"></a>进入godaddy DNS 管理界面</h5><h5 id=\"修改如下两个地方\"><a href=\"#修改如下两个地方\" class=\"headerlink\" title=\"修改如下两个地方\"></a>修改如下两个地方</h5><p><a href=\"https://github.com/lubaolei161/blogMaterial/blob/master/1.jpg?raw=true\" target=\"_blank\" rel=\"external\"><img src=\"https://github.com/lubaolei161/blogMaterial/blob/master/1.jpg?raw=true\" alt=\"1\"></a></p>\n<p>类型为A的地方，IP地址修改为Githup服务器ip地址，通过以下命令获取：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ping github.io</div></pre></td></tr></table></figure>\n<p>类型为CNAME的地方，值修改为博客地址 如：lubaolei161.github.io</p>\n<h5 id=\"添加CNAME文件到Github对应的repository\"><a href=\"#添加CNAME文件到Github对应的repository\" class=\"headerlink\" title=\"添加CNAME文件到Github对应的repository\"></a>添加CNAME文件到Github对应的repository</h5><p>这里注意的是不要直接在github上建立这个文件，要在hexo的sources目录下新建个CNAME<br>内容就是你购买的域名,如我的：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">barrysite.me</div></pre></td></tr></table></figure>\n<p>之后重新部署发布即可。 至此，可以通过自己的域名直接访问博客了。<a href=\"http://barrysite.me\" target=\"_blank\" rel=\"external\">我的博客地址</a></p>\n<h3 id=\"Hexo-Next主题下基本配置\"><a href=\"#Hexo-Next主题下基本配置\" class=\"headerlink\" title=\"Hexo Next主题下基本配置\"></a>Hexo Next主题下基本配置</h3><p>列举了安装之后如何订制你的博客，请参考我的另一篇文章：<br><a href=\"http://barrysite.me/2017/05/07/Hexo%20Next%E4%B8%BB%E9%A2%98%E4%B8%8B%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/\" target=\"_blank\" rel=\"external\">Hexo Next主题下基本配置</a></p>\n<p>hexo支持markdown，如何编辑文章并且发布到hexo博客网站上去？</p>\n<p><strong>步骤如下：</strong></p>\n<p> 1、选择一个markdown编辑器，编写文章，比如我使用markdownPad,</p>\n<p>地址：<a href=\"http://www.markdownpad.com/download.html\" target=\"_blank\" rel=\"external\">http://www.markdownpad.com/download.html</a>   ，编写好之后，保存为md文件。</p>\n<p>还可以使用一些在线的markdown编辑器，比如csdn提供的<a href=\"http://write.blog.csdn.net/mdeditor\" target=\"_blank\" rel=\"external\">http://write.blog.csdn.net/mdeditor</a></p>\n<p>也支持导出md文件，还支持图片，反而markdownPad选择图片功能要付钱呢</p>\n<p>2、将md文件放在你的hexo网站所在位置下的source_posts目录，这个目录下存储了很多个md文件，每个文件对应着一篇博客。</p>\n<p>3、打开git bash,达到hexo网站的目录下，使用hexo generete 命令产生静态文件</p>\n<p>4、hexo server ,然后到<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"external\">http://localhost:4000/</a>预览网站效果，最后同步public目录下的文件到github 上就行啦。</p>\n<h2 id=\"写博客\"><a href=\"#写博客\" class=\"headerlink\" title=\"写博客\"></a>写博客</h2><p>定位到我们的hexo根目录，执行命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new &apos;my-first-blog&apos;</div></pre></td></tr></table></figure>\n<p>hexo会帮我们在<code>_posts</code>下生成相关md文件：</p>\n<p>我们只需要打开这个文件就可以开始写博客了，默认生成如下内容：</p>\n<p>当然你也可以直接自己新建md文件，用这个命令的好处是帮我们自动生成了时间。</p>\n<p>一般完整格式如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title: postName #文章页面上的显示名称，一般是中文</div><div class=\"line\">date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改</div><div class=\"line\">categories: 默认分类 #分类</div><div class=\"line\">tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格</div><div class=\"line\">description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</div><div class=\"line\">---</div><div class=\"line\"></div><div class=\"line\">以下是正文</div></pre></td></tr></table></figure>\n<p>那么<code>hexo new page &#39;postName&#39;</code>命令和<code>hexo new &#39;postName&#39;</code>有什么区别呢？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new page &quot;my-second-blog&quot;</div></pre></td></tr></table></figure>\n<p>生成如下：</p>\n<p>最终部署时生成：<code>hexo\\public\\my-second-blog\\index.html</code>，但是它不会作为文章出现在博文目录。</p>\n<h3 id=\"写博客工具\"><a href=\"#写博客工具\" class=\"headerlink\" title=\"写博客工具\"></a>写博客工具</h3><p>那么用什么工具写博客呢？这个我还没去找，以前自己使用editor.md简单弄了个，大家有好用的hexo写博客工具可以推荐个。</p>\n<h3 id=\"如何让博文列表不显示全部内容\"><a href=\"#如何让博文列表不显示全部内容\" class=\"headerlink\" title=\"如何让博文列表不显示全部内容\"></a>如何让博文列表不显示全部内容</h3><p>默认情况下，生成的博文目录会显示全部的文章内容，如何设置文章摘要的长度呢？</p>\n<p>答案是在合适的位置加上<code>&lt;!--more--&gt;</code>即可，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 前言</div><div class=\"line\"></div><div class=\"line\">使用github pages服务搭建博客的好处有：</div><div class=\"line\"></div><div class=\"line\">1. 全是静态文件，访问速度快；</div><div class=\"line\">2. 免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</div><div class=\"line\">3. 可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</div><div class=\"line\"></div><div class=\"line\">&lt;!--more--&gt;</div><div class=\"line\"></div><div class=\"line\">4. 数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</div><div class=\"line\">5. 博客内容可以轻松打包、转移、发布到其它平台；</div><div class=\"line\">6. 等等；</div></pre></td></tr></table></figure>\n"},{"title":"react-weather-app","toc":true,"comments":1,"_content":"Today we will walk through the creation of our first React web app!\n\nAt the end, we will have a simple production-ready weather app:\n\n[![Snapshot of the final weather app](https://github.com/ericvicenti/intro-to-react/raw/master/images/Final.png)](https://github.com/ericvicenti/intro-to-react/raw/master/images/Final.png)\n\n# [  ](http://www.ctolib.com/ericvicenti-intro-to-react.html#create-your-first-app)Create your first app\n\nFirst you'll need [node.js](https://nodejs.org/en/) and a JavaScript editor like [atom](https://atom.io/).\n\nNext, open a terminal and install `create-react-app`:\n\n```\nnpm install -g create-react-app\n```\n\n(Depending on your node installation, you may need to add \"sudo\" at the front of the `npm install -g` command)\n\nNow we will create our sample Weather app:\n\n```\ncreate-react-app weather\n```\n\nNow a bunch of dev tools are getting installed, which will help you build your React app. When it completes, you can run the following to start your app:\n\n```\ncd weather\nnpm start\n```\n\nNow, your new app will load in your browser!\n\n[![Snapshot of the final weather app](https://github.com/ericvicenti/intro-to-react/raw/master/images/Init.png)](https://github.com/ericvicenti/intro-to-react/raw/master/images/Init.png)\n\n# [  ](http://www.ctolib.com/ericvicenti-intro-to-react.html#components-and-props)Components and Props\n\nLets take a look at the basic app that was generated for us. In your editor, open `weather/src/App.js`. The app currently looks like this:\n\n```\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h2>Welcome to React</h2>\n        </div>\n        <p className=\"App-intro\">\n          To get started, edit <code>src/App.js</code> and save to reload.\n        </p>\n      </div>\n    );\n  }\n}\n```\n\nOur whole app is in one component, and the render function is at the heart of it. Try modifying some text, save, and watch the app automatically show those changes!\n\nNow lets go ahead and make a new component, `WeatherDisplay`. The render function is the heart of the component because it defines what will be displayed. For now, lets just display a `<h1>` HTML tag, with some text inside.\n\n```\nclass WeatherDisplay extends Component {\n  render() {\n    return (\n      <h1>Displaying some Weather!</h1>\n    );\n  }\n}\n```\n\nLets modify our App component to use this new one.\n\n```\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <WeatherDisplay zip={\"12345\"} />\n      </div>\n    );\n  }\n}\n```\n\nAs you can see, we are passing data into `WeatherDisplay`. This data is a prop, called \"zip\". We can modify our component to display the data being passed in:\n\n```\nclass WeatherDisplay extends Component {\n  render() {\n    return (\n      <h1>Displaying weather for city {this.props.zip}</h1>\n    );\n  }\n}\n```\n\nNear the top of the file, lets add some different places that we might want to display weather for:\n\n```\nconst PLACES = [\n  { name: \"Palo Alto\", zip: \"94303\" },\n  { name: \"San Jose\", zip: \"94088\" },\n  { name: \"Santa Cruz\", zip: \"95062\" },\n  { name: \"Honolulu\", zip: \"96803\" }\n];\n```\n\nNow, upgrade the App's render function to iterate over each place, and render a `<button>` tag for it.\n\n```\nreturn (\n  <div className=\"App\">\n    <WeatherDisplay zip={\"12345\"} />\n    {PLACES.map((place, index) => (\n      <button\n        key={index}\n        onClick={() => {\n          console.log('Clicked index '+index);\n        }}\n      >\n          {place.name}\n      </button>\n    ))}\n  </div>\n);\n```\n\nWe are creating an array of `a` elements for it, and the `key` prop is used to tell React what is the order of the elements in the array.\n\nThere is also an `onClick` event handler, where we log the click to the console. You can see the log statements by opening the \"Developer Tools\" in your browser. Your app should now look like this:\n\n[![Snapshot of the app with props](https://github.com/ericvicenti/intro-to-react/raw/master/images/Props.png)](https://github.com/ericvicenti/intro-to-react/raw/master/images/Props.png)\n\nAt this point, [your `App.js` file should look like this](http://www.ctolib.com/ericvicenti/intro-to-react/blob/master/1-Components-and-Props-App.js).\n\n# [  ](http://www.ctolib.com/ericvicenti-intro-to-react.html#state)State\n\nWe want our app to be able to switch between places, so we can use state to keep that data in our App component.\n\nFirst, lets add a constructor function that will use the normal class `super` function, and then set up the initial `this.state`:\n\n```\nconstructor() {\n  super();\n  this.state = {\n    activePlace: 0,\n  };\n}\n```\n\nOur `render` function can use the data from `this.state` when declaring the UI. To change state, we can use the React component's `setState` method, which will change the state and re-run the render function to get the new UI.\n\nLet's use the `this.state` and `this.setState` in our App component:\n\n```\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      activePlace: 0,\n    };\n  }\n  render() {\n    const activePlace = this.state.activePlace;\n    return (\n      <div className=\"App\">\n        {PLACES.map((place, index) => (\n          <button\n            key={index}\n            onClick={() => {\n              this.setState({ activePlace: index });\n            }}\n          >\n              {place.name}\n          </button>\n        ))}\n        <WeatherDisplay\n          key={activePlace}\n          zip={PLACES[activePlace].zip}\n        />\n      </div>\n    );\n  }\n}\n```\n\n[![Snapshot of the weather app with changing state](https://github.com/ericvicenti/intro-to-react/raw/master/images/State.png)](https://github.com/ericvicenti/intro-to-react/raw/master/images/State.png)\n\nAt this point, [your `App.js` file should look like this](http://www.ctolib.com/ericvicenti/intro-to-react/blob/master/2-State-App.js).\n\n# [  ](http://www.ctolib.com/ericvicenti-intro-to-react.html#lifecycle-methods-and-data-fetching)Lifecycle Methods and Data Fetching\n\nSometimes we want to add imperative code that gets called at certain times in our component's lifetime. The [lifecycle methods](https://facebook.github.io/react/docs/react-component.html#the-component-lifecycle) of a React component allows us to write additional code for these cases.\n\nIn this example, we want to make an API call when the component first shows up on screen, so we will add code to `componentDidMount`. Lets update the `WeatherDisplay` component to the following:\n\n```\nclass WeatherDisplay extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null\n    };\n  }\n  componentDidMount() {\n    const zip = this.props.zip;\n    const URL = \"http://api.openweathermap.org/data/2.5/weather?q=\" +\n      zip +\n      \"&appid=b1b35bba8b434a28a0be2a3e1071ae5b&units=imperial\";\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({ weatherData: json });\n    });\n  }\n  render() {\n    const weatherData = this.state.weatherData;\n    if (!weatherData) return <div>Loading</div>;\n    return <div>{JSON.stringify(weatherData)}</div>;\n  }\n}\n```\n\nLet's improve our render method so we can display the data nicely once it is loaded:\n\n```\nconst weather = weatherData.weather[0];\nconst iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\nreturn (\n  <div>\n    <h1>\n      {weather.main} in {weatherData.name}\n      <img src={iconUrl} alt={weatherData.description} />\n    </h1>\n    <p>Current: {weatherData.main.temp}°</p>\n    <p>High: {weatherData.main.temp_max}°</p>\n    <p>Low: {weatherData.main.temp_min}°</p>\n    <p>Wind Speed: {weatherData.wind.speed} mi/hr</p>\n  </div>\n);\n```\n\n[![Snapshot of the weather app with weather data loading](https://github.com/ericvicenti/intro-to-react/raw/master/images/DataLoad.png)](https://github.com/ericvicenti/intro-to-react/raw/master/images/DataLoad.png)\n\nAt this point, [your `App.js` file should look like this](http://www.ctolib.com/ericvicenti/intro-to-react/blob/master/3-Lifecycle-and-Data-App.js).\n\n# [  ](http://www.ctolib.com/ericvicenti-intro-to-react.html#installing-components)Installing Components\n\nOur app is still somewhat ugly. We can fix that by adding `className` props to our divs, and importing some CSS.\n\nOr, we can install a library from `npm` that will help.\n\n[Bootstrap](http://getbootstrap.com/) is popular UI toolkit for HTML and CSS. Let's install it, alongside `react-bootstrap` which provides the React components for it:\n\n```\nnpm install --save bootstrap react-bootstrap\n```\n\nIn the top of the app file, import the css from the bootstrap module:\n\n```\nimport \"bootstrap/dist/css/bootstrap.css\";\n```\n\nNext, import the components we want to use from `react-bootstrap`. You can find components on the [react-bootstrap site](https://react-bootstrap.github.io/components.html).\n\n```\nimport { Navbar, NavItem, Nav, Grid, Row, Col } from \"react-bootstrap\";\n```\n\nNow, replace the App component's render function to use the bootstrap components:\n\n```\n<div>\n  <Navbar>\n    <Navbar.Header>\n      <Navbar.Brand>\n        React Simple Weather App\n      </Navbar.Brand>\n    </Navbar.Header>\n  </Navbar>\n  <Grid>\n    <Row>\n      <Col md={4} sm={4}>\n        <h3>Select a city</h3>\n        <Nav\n          bsStyle=\"pills\"\n          stacked\n          activeKey={activePlace}\n          onSelect={index => {\n            this.setState({ activePlace: index });\n          }}\n        >\n          {PLACES.map((place, index) => (\n            <NavItem key={index} eventKey={index}>{place.name}</NavItem>\n          ))}\n        </Nav>\n      </Col>\n      <Col md={8} sm={8}>\n        <WeatherDisplay key={activePlace} zip={PLACES[activePlace].zip} />\n      </Col>\n    </Row>\n  </Grid>\n</div>\n```\n\n[![Snapshot of the app with Bootstrap components](https://github.com/ericvicenti/intro-to-react/raw/master/images/Bootstrap.png)](https://github.com/ericvicenti/intro-to-react/raw/master/images/Bootstrap.png)\n\nNow our app is starting to look more polished, but it would be nice to have a custom theme. We can install `bootswatch` to do that.\n\n```\nnpm install --save bootswatch\n```\n\n[Browse the bootswatch website](http://bootswatch.com/) to find a theme, and install it by replacing the import of bootstrap css with the following. In this case we are using the 'journal' theme.\n\n```\nimport \"bootswatch/journal/bootstrap.css\";\n```\n\nThe final, working app should look like this:\n\n[![Snapshot of the weather app with weather data loading](https://github.com/ericvicenti/intro-to-react/raw/master/images/Final.png)](https://github.com/ericvicenti/intro-to-react/raw/master/images/Final.png)\n\n[The final source code of the app is here](http://www.ctolib.com/ericvicenti/intro-to-react/blob/master/AppSnapshots/4-Installing-Components-App.js)\n\n# [  ](http://www.ctolib.com/ericvicenti-intro-to-react.html#resources-and-other-topics)Resources and other topics\n\n- [React](http://www.ctolib.com/ericvicenti/intro-to-react/blob/master/reactjs.org) - Official Documentation\n- [React Native](https://facebook.github.io/react-native/) - Use the same techniques to build mobile apps for iOS and Android\n- [Redux](http://redux.js.org/) - Manage data in large applications when props become tedious\n- [Relay](https://facebook.github.io/relay/) - Easily connect React Components with GraphQL data\n- [Jest](https://facebook.github.io/jest/) - Test framework for JS\n- [Flow](https://flow.org/) - Static type checker for JS\n\n# [  ](http://www.ctolib.com/ericvicenti-intro-to-react.html#deploying---extra-credit)Deploying - (Extra credit!)\n\nIt is very easy to deploy your new weather app.\n\nFirst, publish your app's code to a Github repo. Then, browse to your repo and review the ReadMe file that is generated for your app. There are deployment instructions for many popular services.\n\nOne of the easiest services to use is Netlify, especially when you use the \"continuous deployment\" mechanism.\n\n\n\n","source":"_posts/react-weather-app.md","raw":"---\ntitle: react-weather-app\ntags: [react,前端,js]\ncategories: react\ntoc: true\ncomments: true\n---\nToday we will walk through the creation of our first React web app!\n\nAt the end, we will have a simple production-ready weather app:\n\n[![Snapshot of the final weather app](https://github.com/ericvicenti/intro-to-react/raw/master/images/Final.png)](https://github.com/ericvicenti/intro-to-react/raw/master/images/Final.png)\n\n# [  ](http://www.ctolib.com/ericvicenti-intro-to-react.html#create-your-first-app)Create your first app\n\nFirst you'll need [node.js](https://nodejs.org/en/) and a JavaScript editor like [atom](https://atom.io/).\n\nNext, open a terminal and install `create-react-app`:\n\n```\nnpm install -g create-react-app\n```\n\n(Depending on your node installation, you may need to add \"sudo\" at the front of the `npm install -g` command)\n\nNow we will create our sample Weather app:\n\n```\ncreate-react-app weather\n```\n\nNow a bunch of dev tools are getting installed, which will help you build your React app. When it completes, you can run the following to start your app:\n\n```\ncd weather\nnpm start\n```\n\nNow, your new app will load in your browser!\n\n[![Snapshot of the final weather app](https://github.com/ericvicenti/intro-to-react/raw/master/images/Init.png)](https://github.com/ericvicenti/intro-to-react/raw/master/images/Init.png)\n\n# [  ](http://www.ctolib.com/ericvicenti-intro-to-react.html#components-and-props)Components and Props\n\nLets take a look at the basic app that was generated for us. In your editor, open `weather/src/App.js`. The app currently looks like this:\n\n```\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h2>Welcome to React</h2>\n        </div>\n        <p className=\"App-intro\">\n          To get started, edit <code>src/App.js</code> and save to reload.\n        </p>\n      </div>\n    );\n  }\n}\n```\n\nOur whole app is in one component, and the render function is at the heart of it. Try modifying some text, save, and watch the app automatically show those changes!\n\nNow lets go ahead and make a new component, `WeatherDisplay`. The render function is the heart of the component because it defines what will be displayed. For now, lets just display a `<h1>` HTML tag, with some text inside.\n\n```\nclass WeatherDisplay extends Component {\n  render() {\n    return (\n      <h1>Displaying some Weather!</h1>\n    );\n  }\n}\n```\n\nLets modify our App component to use this new one.\n\n```\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <WeatherDisplay zip={\"12345\"} />\n      </div>\n    );\n  }\n}\n```\n\nAs you can see, we are passing data into `WeatherDisplay`. This data is a prop, called \"zip\". We can modify our component to display the data being passed in:\n\n```\nclass WeatherDisplay extends Component {\n  render() {\n    return (\n      <h1>Displaying weather for city {this.props.zip}</h1>\n    );\n  }\n}\n```\n\nNear the top of the file, lets add some different places that we might want to display weather for:\n\n```\nconst PLACES = [\n  { name: \"Palo Alto\", zip: \"94303\" },\n  { name: \"San Jose\", zip: \"94088\" },\n  { name: \"Santa Cruz\", zip: \"95062\" },\n  { name: \"Honolulu\", zip: \"96803\" }\n];\n```\n\nNow, upgrade the App's render function to iterate over each place, and render a `<button>` tag for it.\n\n```\nreturn (\n  <div className=\"App\">\n    <WeatherDisplay zip={\"12345\"} />\n    {PLACES.map((place, index) => (\n      <button\n        key={index}\n        onClick={() => {\n          console.log('Clicked index '+index);\n        }}\n      >\n          {place.name}\n      </button>\n    ))}\n  </div>\n);\n```\n\nWe are creating an array of `a` elements for it, and the `key` prop is used to tell React what is the order of the elements in the array.\n\nThere is also an `onClick` event handler, where we log the click to the console. You can see the log statements by opening the \"Developer Tools\" in your browser. Your app should now look like this:\n\n[![Snapshot of the app with props](https://github.com/ericvicenti/intro-to-react/raw/master/images/Props.png)](https://github.com/ericvicenti/intro-to-react/raw/master/images/Props.png)\n\nAt this point, [your `App.js` file should look like this](http://www.ctolib.com/ericvicenti/intro-to-react/blob/master/1-Components-and-Props-App.js).\n\n# [  ](http://www.ctolib.com/ericvicenti-intro-to-react.html#state)State\n\nWe want our app to be able to switch between places, so we can use state to keep that data in our App component.\n\nFirst, lets add a constructor function that will use the normal class `super` function, and then set up the initial `this.state`:\n\n```\nconstructor() {\n  super();\n  this.state = {\n    activePlace: 0,\n  };\n}\n```\n\nOur `render` function can use the data from `this.state` when declaring the UI. To change state, we can use the React component's `setState` method, which will change the state and re-run the render function to get the new UI.\n\nLet's use the `this.state` and `this.setState` in our App component:\n\n```\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      activePlace: 0,\n    };\n  }\n  render() {\n    const activePlace = this.state.activePlace;\n    return (\n      <div className=\"App\">\n        {PLACES.map((place, index) => (\n          <button\n            key={index}\n            onClick={() => {\n              this.setState({ activePlace: index });\n            }}\n          >\n              {place.name}\n          </button>\n        ))}\n        <WeatherDisplay\n          key={activePlace}\n          zip={PLACES[activePlace].zip}\n        />\n      </div>\n    );\n  }\n}\n```\n\n[![Snapshot of the weather app with changing state](https://github.com/ericvicenti/intro-to-react/raw/master/images/State.png)](https://github.com/ericvicenti/intro-to-react/raw/master/images/State.png)\n\nAt this point, [your `App.js` file should look like this](http://www.ctolib.com/ericvicenti/intro-to-react/blob/master/2-State-App.js).\n\n# [  ](http://www.ctolib.com/ericvicenti-intro-to-react.html#lifecycle-methods-and-data-fetching)Lifecycle Methods and Data Fetching\n\nSometimes we want to add imperative code that gets called at certain times in our component's lifetime. The [lifecycle methods](https://facebook.github.io/react/docs/react-component.html#the-component-lifecycle) of a React component allows us to write additional code for these cases.\n\nIn this example, we want to make an API call when the component first shows up on screen, so we will add code to `componentDidMount`. Lets update the `WeatherDisplay` component to the following:\n\n```\nclass WeatherDisplay extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weatherData: null\n    };\n  }\n  componentDidMount() {\n    const zip = this.props.zip;\n    const URL = \"http://api.openweathermap.org/data/2.5/weather?q=\" +\n      zip +\n      \"&appid=b1b35bba8b434a28a0be2a3e1071ae5b&units=imperial\";\n    fetch(URL).then(res => res.json()).then(json => {\n      this.setState({ weatherData: json });\n    });\n  }\n  render() {\n    const weatherData = this.state.weatherData;\n    if (!weatherData) return <div>Loading</div>;\n    return <div>{JSON.stringify(weatherData)}</div>;\n  }\n}\n```\n\nLet's improve our render method so we can display the data nicely once it is loaded:\n\n```\nconst weather = weatherData.weather[0];\nconst iconUrl = \"http://openweathermap.org/img/w/\" + weather.icon + \".png\";\nreturn (\n  <div>\n    <h1>\n      {weather.main} in {weatherData.name}\n      <img src={iconUrl} alt={weatherData.description} />\n    </h1>\n    <p>Current: {weatherData.main.temp}°</p>\n    <p>High: {weatherData.main.temp_max}°</p>\n    <p>Low: {weatherData.main.temp_min}°</p>\n    <p>Wind Speed: {weatherData.wind.speed} mi/hr</p>\n  </div>\n);\n```\n\n[![Snapshot of the weather app with weather data loading](https://github.com/ericvicenti/intro-to-react/raw/master/images/DataLoad.png)](https://github.com/ericvicenti/intro-to-react/raw/master/images/DataLoad.png)\n\nAt this point, [your `App.js` file should look like this](http://www.ctolib.com/ericvicenti/intro-to-react/blob/master/3-Lifecycle-and-Data-App.js).\n\n# [  ](http://www.ctolib.com/ericvicenti-intro-to-react.html#installing-components)Installing Components\n\nOur app is still somewhat ugly. We can fix that by adding `className` props to our divs, and importing some CSS.\n\nOr, we can install a library from `npm` that will help.\n\n[Bootstrap](http://getbootstrap.com/) is popular UI toolkit for HTML and CSS. Let's install it, alongside `react-bootstrap` which provides the React components for it:\n\n```\nnpm install --save bootstrap react-bootstrap\n```\n\nIn the top of the app file, import the css from the bootstrap module:\n\n```\nimport \"bootstrap/dist/css/bootstrap.css\";\n```\n\nNext, import the components we want to use from `react-bootstrap`. You can find components on the [react-bootstrap site](https://react-bootstrap.github.io/components.html).\n\n```\nimport { Navbar, NavItem, Nav, Grid, Row, Col } from \"react-bootstrap\";\n```\n\nNow, replace the App component's render function to use the bootstrap components:\n\n```\n<div>\n  <Navbar>\n    <Navbar.Header>\n      <Navbar.Brand>\n        React Simple Weather App\n      </Navbar.Brand>\n    </Navbar.Header>\n  </Navbar>\n  <Grid>\n    <Row>\n      <Col md={4} sm={4}>\n        <h3>Select a city</h3>\n        <Nav\n          bsStyle=\"pills\"\n          stacked\n          activeKey={activePlace}\n          onSelect={index => {\n            this.setState({ activePlace: index });\n          }}\n        >\n          {PLACES.map((place, index) => (\n            <NavItem key={index} eventKey={index}>{place.name}</NavItem>\n          ))}\n        </Nav>\n      </Col>\n      <Col md={8} sm={8}>\n        <WeatherDisplay key={activePlace} zip={PLACES[activePlace].zip} />\n      </Col>\n    </Row>\n  </Grid>\n</div>\n```\n\n[![Snapshot of the app with Bootstrap components](https://github.com/ericvicenti/intro-to-react/raw/master/images/Bootstrap.png)](https://github.com/ericvicenti/intro-to-react/raw/master/images/Bootstrap.png)\n\nNow our app is starting to look more polished, but it would be nice to have a custom theme. We can install `bootswatch` to do that.\n\n```\nnpm install --save bootswatch\n```\n\n[Browse the bootswatch website](http://bootswatch.com/) to find a theme, and install it by replacing the import of bootstrap css with the following. In this case we are using the 'journal' theme.\n\n```\nimport \"bootswatch/journal/bootstrap.css\";\n```\n\nThe final, working app should look like this:\n\n[![Snapshot of the weather app with weather data loading](https://github.com/ericvicenti/intro-to-react/raw/master/images/Final.png)](https://github.com/ericvicenti/intro-to-react/raw/master/images/Final.png)\n\n[The final source code of the app is here](http://www.ctolib.com/ericvicenti/intro-to-react/blob/master/AppSnapshots/4-Installing-Components-App.js)\n\n# [  ](http://www.ctolib.com/ericvicenti-intro-to-react.html#resources-and-other-topics)Resources and other topics\n\n- [React](http://www.ctolib.com/ericvicenti/intro-to-react/blob/master/reactjs.org) - Official Documentation\n- [React Native](https://facebook.github.io/react-native/) - Use the same techniques to build mobile apps for iOS and Android\n- [Redux](http://redux.js.org/) - Manage data in large applications when props become tedious\n- [Relay](https://facebook.github.io/relay/) - Easily connect React Components with GraphQL data\n- [Jest](https://facebook.github.io/jest/) - Test framework for JS\n- [Flow](https://flow.org/) - Static type checker for JS\n\n# [  ](http://www.ctolib.com/ericvicenti-intro-to-react.html#deploying---extra-credit)Deploying - (Extra credit!)\n\nIt is very easy to deploy your new weather app.\n\nFirst, publish your app's code to a Github repo. Then, browse to your repo and review the ReadMe file that is generated for your app. There are deployment instructions for many popular services.\n\nOne of the easiest services to use is Netlify, especially when you use the \"continuous deployment\" mechanism.\n\n\n\n","slug":"react-weather-app","published":1,"date":"2017-06-01T06:44:34.135Z","updated":"2017-06-01T07:01:30.047Z","layout":"post","photos":[],"link":"","_id":"cj3fbmtsh001c4wvsg5dnzyel","content":"<p>Today we will walk through the creation of our first React web app!</p>\n<p>At the end, we will have a simple production-ready weather app:</p>\n<p><a href=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/Final.png\" target=\"_blank\" rel=\"external\"><img src=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/Final.png\" alt=\"Snapshot of the final weather app\"></a></p>\n<h1 id=\"Create-your-first-app\"><a href=\"#Create-your-first-app\" class=\"headerlink\" title=\"  Create your first app\"></a><a href=\"http://www.ctolib.com/ericvicenti-intro-to-react.html#create-your-first-app\" target=\"_blank\" rel=\"external\">  </a>Create your first app</h1><p>First you’ll need <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">node.js</a> and a JavaScript editor like <a href=\"https://atom.io/\" target=\"_blank\" rel=\"external\">atom</a>.</p>\n<p>Next, open a terminal and install <code>create-react-app</code>:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g create-react-app</div></pre></td></tr></table></figure>\n<p>(Depending on your node installation, you may need to add “sudo” at the front of the <code>npm install -g</code> command)</p>\n<p>Now we will create our sample Weather app:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">create-react-app weather</div></pre></td></tr></table></figure>\n<p>Now a bunch of dev tools are getting installed, which will help you build your React app. When it completes, you can run the following to start your app:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd weather</div><div class=\"line\">npm start</div></pre></td></tr></table></figure>\n<p>Now, your new app will load in your browser!</p>\n<p><a href=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/Init.png\" target=\"_blank\" rel=\"external\"><img src=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/Init.png\" alt=\"Snapshot of the final weather app\"></a></p>\n<h1 id=\"Components-and-Props\"><a href=\"#Components-and-Props\" class=\"headerlink\" title=\"  Components and Props\"></a><a href=\"http://www.ctolib.com/ericvicenti-intro-to-react.html#components-and-props\" target=\"_blank\" rel=\"external\">  </a>Components and Props</h1><p>Lets take a look at the basic app that was generated for us. In your editor, open <code>weather/src/App.js</code>. The app currently looks like this:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">class App extends Component &#123;</div><div class=\"line\">  render() &#123;</div><div class=\"line\">    return (</div><div class=\"line\">      &lt;div className=&quot;App&quot;&gt;</div><div class=\"line\">        &lt;div className=&quot;App-header&quot;&gt;</div><div class=\"line\">          &lt;img src=&#123;logo&#125; className=&quot;App-logo&quot; alt=&quot;logo&quot; /&gt;</div><div class=\"line\">          &lt;h2&gt;Welcome to React&lt;/h2&gt;</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">        &lt;p className=&quot;App-intro&quot;&gt;</div><div class=\"line\">          To get started, edit &lt;code&gt;src/App.js&lt;/code&gt; and save to reload.</div><div class=\"line\">        &lt;/p&gt;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">    );</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Our whole app is in one component, and the render function is at the heart of it. Try modifying some text, save, and watch the app automatically show those changes!</p>\n<p>Now lets go ahead and make a new component, <code>WeatherDisplay</code>. The render function is the heart of the component because it defines what will be displayed. For now, lets just display a <code>&lt;h1&gt;</code> HTML tag, with some text inside.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">class WeatherDisplay extends Component &#123;</div><div class=\"line\">  render() &#123;</div><div class=\"line\">    return (</div><div class=\"line\">      &lt;h1&gt;Displaying some Weather!&lt;/h1&gt;</div><div class=\"line\">    );</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Lets modify our App component to use this new one.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">class App extends Component &#123;</div><div class=\"line\">  render() &#123;</div><div class=\"line\">    return (</div><div class=\"line\">      &lt;div className=&quot;App&quot;&gt;</div><div class=\"line\">        &lt;WeatherDisplay zip=&#123;&quot;12345&quot;&#125; /&gt;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">    );</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>As you can see, we are passing data into <code>WeatherDisplay</code>. This data is a prop, called “zip”. We can modify our component to display the data being passed in:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">class WeatherDisplay extends Component &#123;</div><div class=\"line\">  render() &#123;</div><div class=\"line\">    return (</div><div class=\"line\">      &lt;h1&gt;Displaying weather for city &#123;this.props.zip&#125;&lt;/h1&gt;</div><div class=\"line\">    );</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Near the top of the file, lets add some different places that we might want to display weather for:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">const PLACES = [</div><div class=\"line\">  &#123; name: &quot;Palo Alto&quot;, zip: &quot;94303&quot; &#125;,</div><div class=\"line\">  &#123; name: &quot;San Jose&quot;, zip: &quot;94088&quot; &#125;,</div><div class=\"line\">  &#123; name: &quot;Santa Cruz&quot;, zip: &quot;95062&quot; &#125;,</div><div class=\"line\">  &#123; name: &quot;Honolulu&quot;, zip: &quot;96803&quot; &#125;</div><div class=\"line\">];</div></pre></td></tr></table></figure>\n<p>Now, upgrade the App’s render function to iterate over each place, and render a <code>&lt;button&gt;</code> tag for it.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">return (</div><div class=\"line\">  &lt;div className=&quot;App&quot;&gt;</div><div class=\"line\">    &lt;WeatherDisplay zip=&#123;&quot;12345&quot;&#125; /&gt;</div><div class=\"line\">    &#123;PLACES.map((place, index) =&gt; (</div><div class=\"line\">      &lt;button</div><div class=\"line\">        key=&#123;index&#125;</div><div class=\"line\">        onClick=&#123;() =&gt; &#123;</div><div class=\"line\">          console.log(&apos;Clicked index &apos;+index);</div><div class=\"line\">        &#125;&#125;</div><div class=\"line\">      &gt;</div><div class=\"line\">          &#123;place.name&#125;</div><div class=\"line\">      &lt;/button&gt;</div><div class=\"line\">    ))&#125;</div><div class=\"line\">  &lt;/div&gt;</div><div class=\"line\">);</div></pre></td></tr></table></figure>\n<p>We are creating an array of <code>a</code> elements for it, and the <code>key</code> prop is used to tell React what is the order of the elements in the array.</p>\n<p>There is also an <code>onClick</code> event handler, where we log the click to the console. You can see the log statements by opening the “Developer Tools” in your browser. Your app should now look like this:</p>\n<p><a href=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/Props.png\" target=\"_blank\" rel=\"external\"><img src=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/Props.png\" alt=\"Snapshot of the app with props\"></a></p>\n<p>At this point, <a href=\"http://www.ctolib.com/ericvicenti/intro-to-react/blob/master/1-Components-and-Props-App.js\" target=\"_blank\" rel=\"external\">your <code>App.js</code> file should look like this</a>.</p>\n<h1 id=\"State\"><a href=\"#State\" class=\"headerlink\" title=\"  State\"></a><a href=\"http://www.ctolib.com/ericvicenti-intro-to-react.html#state\" target=\"_blank\" rel=\"external\">  </a>State</h1><p>We want our app to be able to switch between places, so we can use state to keep that data in our App component.</p>\n<p>First, lets add a constructor function that will use the normal class <code>super</code> function, and then set up the initial <code>this.state</code>:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">constructor() &#123;</div><div class=\"line\">  super();</div><div class=\"line\">  this.state = &#123;</div><div class=\"line\">    activePlace: 0,</div><div class=\"line\">  &#125;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Our <code>render</code> function can use the data from <code>this.state</code> when declaring the UI. To change state, we can use the React component’s <code>setState</code> method, which will change the state and re-run the render function to get the new UI.</p>\n<p>Let’s use the <code>this.state</code> and <code>this.setState</code> in our App component:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\">class App extends Component &#123;</div><div class=\"line\">  constructor() &#123;</div><div class=\"line\">    super();</div><div class=\"line\">    this.state = &#123;</div><div class=\"line\">      activePlace: 0,</div><div class=\"line\">    &#125;;</div><div class=\"line\">  &#125;</div><div class=\"line\">  render() &#123;</div><div class=\"line\">    const activePlace = this.state.activePlace;</div><div class=\"line\">    return (</div><div class=\"line\">      &lt;div className=&quot;App&quot;&gt;</div><div class=\"line\">        &#123;PLACES.map((place, index) =&gt; (</div><div class=\"line\">          &lt;button</div><div class=\"line\">            key=&#123;index&#125;</div><div class=\"line\">            onClick=&#123;() =&gt; &#123;</div><div class=\"line\">              this.setState(&#123; activePlace: index &#125;);</div><div class=\"line\">            &#125;&#125;</div><div class=\"line\">          &gt;</div><div class=\"line\">              &#123;place.name&#125;</div><div class=\"line\">          &lt;/button&gt;</div><div class=\"line\">        ))&#125;</div><div class=\"line\">        &lt;WeatherDisplay</div><div class=\"line\">          key=&#123;activePlace&#125;</div><div class=\"line\">          zip=&#123;PLACES[activePlace].zip&#125;</div><div class=\"line\">        /&gt;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">    );</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/State.png\" target=\"_blank\" rel=\"external\"><img src=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/State.png\" alt=\"Snapshot of the weather app with changing state\"></a></p>\n<p>At this point, <a href=\"http://www.ctolib.com/ericvicenti/intro-to-react/blob/master/2-State-App.js\" target=\"_blank\" rel=\"external\">your <code>App.js</code> file should look like this</a>.</p>\n<h1 id=\"Lifecycle-Methods-and-Data-Fetching\"><a href=\"#Lifecycle-Methods-and-Data-Fetching\" class=\"headerlink\" title=\"  Lifecycle Methods and Data Fetching\"></a><a href=\"http://www.ctolib.com/ericvicenti-intro-to-react.html#lifecycle-methods-and-data-fetching\" target=\"_blank\" rel=\"external\">  </a>Lifecycle Methods and Data Fetching</h1><p>Sometimes we want to add imperative code that gets called at certain times in our component’s lifetime. The <a href=\"https://facebook.github.io/react/docs/react-component.html#the-component-lifecycle\" target=\"_blank\" rel=\"external\">lifecycle methods</a> of a React component allows us to write additional code for these cases.</p>\n<p>In this example, we want to make an API call when the component first shows up on screen, so we will add code to <code>componentDidMount</code>. Lets update the <code>WeatherDisplay</code> component to the following:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">class WeatherDisplay extends Component &#123;</div><div class=\"line\">  constructor() &#123;</div><div class=\"line\">    super();</div><div class=\"line\">    this.state = &#123;</div><div class=\"line\">      weatherData: null</div><div class=\"line\">    &#125;;</div><div class=\"line\">  &#125;</div><div class=\"line\">  componentDidMount() &#123;</div><div class=\"line\">    const zip = this.props.zip;</div><div class=\"line\">    const URL = &quot;http://api.openweathermap.org/data/2.5/weather?q=&quot; +</div><div class=\"line\">      zip +</div><div class=\"line\">      &quot;&amp;appid=b1b35bba8b434a28a0be2a3e1071ae5b&amp;units=imperial&quot;;</div><div class=\"line\">    fetch(URL).then(res =&gt; res.json()).then(json =&gt; &#123;</div><div class=\"line\">      this.setState(&#123; weatherData: json &#125;);</div><div class=\"line\">    &#125;);</div><div class=\"line\">  &#125;</div><div class=\"line\">  render() &#123;</div><div class=\"line\">    const weatherData = this.state.weatherData;</div><div class=\"line\">    if (!weatherData) return &lt;div&gt;Loading&lt;/div&gt;;</div><div class=\"line\">    return &lt;div&gt;&#123;JSON.stringify(weatherData)&#125;&lt;/div&gt;;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Let’s improve our render method so we can display the data nicely once it is loaded:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">const weather = weatherData.weather[0];</div><div class=\"line\">const iconUrl = &quot;http://openweathermap.org/img/w/&quot; + weather.icon + &quot;.png&quot;;</div><div class=\"line\">return (</div><div class=\"line\">  &lt;div&gt;</div><div class=\"line\">    &lt;h1&gt;</div><div class=\"line\">      &#123;weather.main&#125; in &#123;weatherData.name&#125;</div><div class=\"line\">      &lt;img src=&#123;iconUrl&#125; alt=&#123;weatherData.description&#125; /&gt;</div><div class=\"line\">    &lt;/h1&gt;</div><div class=\"line\">    &lt;p&gt;Current: &#123;weatherData.main.temp&#125;°&lt;/p&gt;</div><div class=\"line\">    &lt;p&gt;High: &#123;weatherData.main.temp_max&#125;°&lt;/p&gt;</div><div class=\"line\">    &lt;p&gt;Low: &#123;weatherData.main.temp_min&#125;°&lt;/p&gt;</div><div class=\"line\">    &lt;p&gt;Wind Speed: &#123;weatherData.wind.speed&#125; mi/hr&lt;/p&gt;</div><div class=\"line\">  &lt;/div&gt;</div><div class=\"line\">);</div></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/DataLoad.png\" target=\"_blank\" rel=\"external\"><img src=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/DataLoad.png\" alt=\"Snapshot of the weather app with weather data loading\"></a></p>\n<p>At this point, <a href=\"http://www.ctolib.com/ericvicenti/intro-to-react/blob/master/3-Lifecycle-and-Data-App.js\" target=\"_blank\" rel=\"external\">your <code>App.js</code> file should look like this</a>.</p>\n<h1 id=\"Installing-Components\"><a href=\"#Installing-Components\" class=\"headerlink\" title=\"  Installing Components\"></a><a href=\"http://www.ctolib.com/ericvicenti-intro-to-react.html#installing-components\" target=\"_blank\" rel=\"external\">  </a>Installing Components</h1><p>Our app is still somewhat ugly. We can fix that by adding <code>className</code> props to our divs, and importing some CSS.</p>\n<p>Or, we can install a library from <code>npm</code> that will help.</p>\n<p><a href=\"http://getbootstrap.com/\" target=\"_blank\" rel=\"external\">Bootstrap</a> is popular UI toolkit for HTML and CSS. Let’s install it, alongside <code>react-bootstrap</code> which provides the React components for it:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install --save bootstrap react-bootstrap</div></pre></td></tr></table></figure>\n<p>In the top of the app file, import the css from the bootstrap module:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">import &quot;bootstrap/dist/css/bootstrap.css&quot;;</div></pre></td></tr></table></figure>\n<p>Next, import the components we want to use from <code>react-bootstrap</code>. You can find components on the <a href=\"https://react-bootstrap.github.io/components.html\" target=\"_blank\" rel=\"external\">react-bootstrap site</a>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">import &#123; Navbar, NavItem, Nav, Grid, Row, Col &#125; from &quot;react-bootstrap&quot;;</div></pre></td></tr></table></figure>\n<p>Now, replace the App component’s render function to use the bootstrap components:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div&gt;</div><div class=\"line\">  &lt;Navbar&gt;</div><div class=\"line\">    &lt;Navbar.Header&gt;</div><div class=\"line\">      &lt;Navbar.Brand&gt;</div><div class=\"line\">        React Simple Weather App</div><div class=\"line\">      &lt;/Navbar.Brand&gt;</div><div class=\"line\">    &lt;/Navbar.Header&gt;</div><div class=\"line\">  &lt;/Navbar&gt;</div><div class=\"line\">  &lt;Grid&gt;</div><div class=\"line\">    &lt;Row&gt;</div><div class=\"line\">      &lt;Col md=&#123;4&#125; sm=&#123;4&#125;&gt;</div><div class=\"line\">        &lt;h3&gt;Select a city&lt;/h3&gt;</div><div class=\"line\">        &lt;Nav</div><div class=\"line\">          bsStyle=&quot;pills&quot;</div><div class=\"line\">          stacked</div><div class=\"line\">          activeKey=&#123;activePlace&#125;</div><div class=\"line\">          onSelect=&#123;index =&gt; &#123;</div><div class=\"line\">            this.setState(&#123; activePlace: index &#125;);</div><div class=\"line\">          &#125;&#125;</div><div class=\"line\">        &gt;</div><div class=\"line\">          &#123;PLACES.map((place, index) =&gt; (</div><div class=\"line\">            &lt;NavItem key=&#123;index&#125; eventKey=&#123;index&#125;&gt;&#123;place.name&#125;&lt;/NavItem&gt;</div><div class=\"line\">          ))&#125;</div><div class=\"line\">        &lt;/Nav&gt;</div><div class=\"line\">      &lt;/Col&gt;</div><div class=\"line\">      &lt;Col md=&#123;8&#125; sm=&#123;8&#125;&gt;</div><div class=\"line\">        &lt;WeatherDisplay key=&#123;activePlace&#125; zip=&#123;PLACES[activePlace].zip&#125; /&gt;</div><div class=\"line\">      &lt;/Col&gt;</div><div class=\"line\">    &lt;/Row&gt;</div><div class=\"line\">  &lt;/Grid&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/Bootstrap.png\" target=\"_blank\" rel=\"external\"><img src=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/Bootstrap.png\" alt=\"Snapshot of the app with Bootstrap components\"></a></p>\n<p>Now our app is starting to look more polished, but it would be nice to have a custom theme. We can install <code>bootswatch</code> to do that.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install --save bootswatch</div></pre></td></tr></table></figure>\n<p><a href=\"http://bootswatch.com/\" target=\"_blank\" rel=\"external\">Browse the bootswatch website</a> to find a theme, and install it by replacing the import of bootstrap css with the following. In this case we are using the ‘journal’ theme.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">import &quot;bootswatch/journal/bootstrap.css&quot;;</div></pre></td></tr></table></figure>\n<p>The final, working app should look like this:</p>\n<p><a href=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/Final.png\" target=\"_blank\" rel=\"external\"><img src=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/Final.png\" alt=\"Snapshot of the weather app with weather data loading\"></a></p>\n<p><a href=\"http://www.ctolib.com/ericvicenti/intro-to-react/blob/master/AppSnapshots/4-Installing-Components-App.js\" target=\"_blank\" rel=\"external\">The final source code of the app is here</a></p>\n<h1 id=\"Resources-and-other-topics\"><a href=\"#Resources-and-other-topics\" class=\"headerlink\" title=\"  Resources and other topics\"></a><a href=\"http://www.ctolib.com/ericvicenti-intro-to-react.html#resources-and-other-topics\" target=\"_blank\" rel=\"external\">  </a>Resources and other topics</h1><ul>\n<li><a href=\"http://www.ctolib.com/ericvicenti/intro-to-react/blob/master/reactjs.org\" target=\"_blank\" rel=\"external\">React</a> - Official Documentation</li>\n<li><a href=\"https://facebook.github.io/react-native/\" target=\"_blank\" rel=\"external\">React Native</a> - Use the same techniques to build mobile apps for iOS and Android</li>\n<li><a href=\"http://redux.js.org/\" target=\"_blank\" rel=\"external\">Redux</a> - Manage data in large applications when props become tedious</li>\n<li><a href=\"https://facebook.github.io/relay/\" target=\"_blank\" rel=\"external\">Relay</a> - Easily connect React Components with GraphQL data</li>\n<li><a href=\"https://facebook.github.io/jest/\" target=\"_blank\" rel=\"external\">Jest</a> - Test framework for JS</li>\n<li><a href=\"https://flow.org/\" target=\"_blank\" rel=\"external\">Flow</a> - Static type checker for JS</li>\n</ul>\n<h1 id=\"Deploying-Extra-credit\"><a href=\"#Deploying-Extra-credit\" class=\"headerlink\" title=\"  Deploying - (Extra credit!)\"></a><a href=\"http://www.ctolib.com/ericvicenti-intro-to-react.html#deploying---extra-credit\" target=\"_blank\" rel=\"external\">  </a>Deploying - (Extra credit!)</h1><p>It is very easy to deploy your new weather app.</p>\n<p>First, publish your app’s code to a Github repo. Then, browse to your repo and review the ReadMe file that is generated for your app. There are deployment instructions for many popular services.</p>\n<p>One of the easiest services to use is Netlify, especially when you use the “continuous deployment” mechanism.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Today we will walk through the creation of our first React web app!</p>\n<p>At the end, we will have a simple production-ready weather app:</p>\n<p><a href=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/Final.png\" target=\"_blank\" rel=\"external\"><img src=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/Final.png\" alt=\"Snapshot of the final weather app\"></a></p>\n<h1 id=\"Create-your-first-app\"><a href=\"#Create-your-first-app\" class=\"headerlink\" title=\"  Create your first app\"></a><a href=\"http://www.ctolib.com/ericvicenti-intro-to-react.html#create-your-first-app\" target=\"_blank\" rel=\"external\">  </a>Create your first app</h1><p>First you’ll need <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">node.js</a> and a JavaScript editor like <a href=\"https://atom.io/\" target=\"_blank\" rel=\"external\">atom</a>.</p>\n<p>Next, open a terminal and install <code>create-react-app</code>:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g create-react-app</div></pre></td></tr></table></figure>\n<p>(Depending on your node installation, you may need to add “sudo” at the front of the <code>npm install -g</code> command)</p>\n<p>Now we will create our sample Weather app:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">create-react-app weather</div></pre></td></tr></table></figure>\n<p>Now a bunch of dev tools are getting installed, which will help you build your React app. When it completes, you can run the following to start your app:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd weather</div><div class=\"line\">npm start</div></pre></td></tr></table></figure>\n<p>Now, your new app will load in your browser!</p>\n<p><a href=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/Init.png\" target=\"_blank\" rel=\"external\"><img src=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/Init.png\" alt=\"Snapshot of the final weather app\"></a></p>\n<h1 id=\"Components-and-Props\"><a href=\"#Components-and-Props\" class=\"headerlink\" title=\"  Components and Props\"></a><a href=\"http://www.ctolib.com/ericvicenti-intro-to-react.html#components-and-props\" target=\"_blank\" rel=\"external\">  </a>Components and Props</h1><p>Lets take a look at the basic app that was generated for us. In your editor, open <code>weather/src/App.js</code>. The app currently looks like this:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">class App extends Component &#123;</div><div class=\"line\">  render() &#123;</div><div class=\"line\">    return (</div><div class=\"line\">      &lt;div className=&quot;App&quot;&gt;</div><div class=\"line\">        &lt;div className=&quot;App-header&quot;&gt;</div><div class=\"line\">          &lt;img src=&#123;logo&#125; className=&quot;App-logo&quot; alt=&quot;logo&quot; /&gt;</div><div class=\"line\">          &lt;h2&gt;Welcome to React&lt;/h2&gt;</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">        &lt;p className=&quot;App-intro&quot;&gt;</div><div class=\"line\">          To get started, edit &lt;code&gt;src/App.js&lt;/code&gt; and save to reload.</div><div class=\"line\">        &lt;/p&gt;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">    );</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Our whole app is in one component, and the render function is at the heart of it. Try modifying some text, save, and watch the app automatically show those changes!</p>\n<p>Now lets go ahead and make a new component, <code>WeatherDisplay</code>. The render function is the heart of the component because it defines what will be displayed. For now, lets just display a <code>&lt;h1&gt;</code> HTML tag, with some text inside.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">class WeatherDisplay extends Component &#123;</div><div class=\"line\">  render() &#123;</div><div class=\"line\">    return (</div><div class=\"line\">      &lt;h1&gt;Displaying some Weather!&lt;/h1&gt;</div><div class=\"line\">    );</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Lets modify our App component to use this new one.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">class App extends Component &#123;</div><div class=\"line\">  render() &#123;</div><div class=\"line\">    return (</div><div class=\"line\">      &lt;div className=&quot;App&quot;&gt;</div><div class=\"line\">        &lt;WeatherDisplay zip=&#123;&quot;12345&quot;&#125; /&gt;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">    );</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>As you can see, we are passing data into <code>WeatherDisplay</code>. This data is a prop, called “zip”. We can modify our component to display the data being passed in:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">class WeatherDisplay extends Component &#123;</div><div class=\"line\">  render() &#123;</div><div class=\"line\">    return (</div><div class=\"line\">      &lt;h1&gt;Displaying weather for city &#123;this.props.zip&#125;&lt;/h1&gt;</div><div class=\"line\">    );</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Near the top of the file, lets add some different places that we might want to display weather for:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">const PLACES = [</div><div class=\"line\">  &#123; name: &quot;Palo Alto&quot;, zip: &quot;94303&quot; &#125;,</div><div class=\"line\">  &#123; name: &quot;San Jose&quot;, zip: &quot;94088&quot; &#125;,</div><div class=\"line\">  &#123; name: &quot;Santa Cruz&quot;, zip: &quot;95062&quot; &#125;,</div><div class=\"line\">  &#123; name: &quot;Honolulu&quot;, zip: &quot;96803&quot; &#125;</div><div class=\"line\">];</div></pre></td></tr></table></figure>\n<p>Now, upgrade the App’s render function to iterate over each place, and render a <code>&lt;button&gt;</code> tag for it.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">return (</div><div class=\"line\">  &lt;div className=&quot;App&quot;&gt;</div><div class=\"line\">    &lt;WeatherDisplay zip=&#123;&quot;12345&quot;&#125; /&gt;</div><div class=\"line\">    &#123;PLACES.map((place, index) =&gt; (</div><div class=\"line\">      &lt;button</div><div class=\"line\">        key=&#123;index&#125;</div><div class=\"line\">        onClick=&#123;() =&gt; &#123;</div><div class=\"line\">          console.log(&apos;Clicked index &apos;+index);</div><div class=\"line\">        &#125;&#125;</div><div class=\"line\">      &gt;</div><div class=\"line\">          &#123;place.name&#125;</div><div class=\"line\">      &lt;/button&gt;</div><div class=\"line\">    ))&#125;</div><div class=\"line\">  &lt;/div&gt;</div><div class=\"line\">);</div></pre></td></tr></table></figure>\n<p>We are creating an array of <code>a</code> elements for it, and the <code>key</code> prop is used to tell React what is the order of the elements in the array.</p>\n<p>There is also an <code>onClick</code> event handler, where we log the click to the console. You can see the log statements by opening the “Developer Tools” in your browser. Your app should now look like this:</p>\n<p><a href=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/Props.png\" target=\"_blank\" rel=\"external\"><img src=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/Props.png\" alt=\"Snapshot of the app with props\"></a></p>\n<p>At this point, <a href=\"http://www.ctolib.com/ericvicenti/intro-to-react/blob/master/1-Components-and-Props-App.js\" target=\"_blank\" rel=\"external\">your <code>App.js</code> file should look like this</a>.</p>\n<h1 id=\"State\"><a href=\"#State\" class=\"headerlink\" title=\"  State\"></a><a href=\"http://www.ctolib.com/ericvicenti-intro-to-react.html#state\" target=\"_blank\" rel=\"external\">  </a>State</h1><p>We want our app to be able to switch between places, so we can use state to keep that data in our App component.</p>\n<p>First, lets add a constructor function that will use the normal class <code>super</code> function, and then set up the initial <code>this.state</code>:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">constructor() &#123;</div><div class=\"line\">  super();</div><div class=\"line\">  this.state = &#123;</div><div class=\"line\">    activePlace: 0,</div><div class=\"line\">  &#125;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Our <code>render</code> function can use the data from <code>this.state</code> when declaring the UI. To change state, we can use the React component’s <code>setState</code> method, which will change the state and re-run the render function to get the new UI.</p>\n<p>Let’s use the <code>this.state</code> and <code>this.setState</code> in our App component:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\">class App extends Component &#123;</div><div class=\"line\">  constructor() &#123;</div><div class=\"line\">    super();</div><div class=\"line\">    this.state = &#123;</div><div class=\"line\">      activePlace: 0,</div><div class=\"line\">    &#125;;</div><div class=\"line\">  &#125;</div><div class=\"line\">  render() &#123;</div><div class=\"line\">    const activePlace = this.state.activePlace;</div><div class=\"line\">    return (</div><div class=\"line\">      &lt;div className=&quot;App&quot;&gt;</div><div class=\"line\">        &#123;PLACES.map((place, index) =&gt; (</div><div class=\"line\">          &lt;button</div><div class=\"line\">            key=&#123;index&#125;</div><div class=\"line\">            onClick=&#123;() =&gt; &#123;</div><div class=\"line\">              this.setState(&#123; activePlace: index &#125;);</div><div class=\"line\">            &#125;&#125;</div><div class=\"line\">          &gt;</div><div class=\"line\">              &#123;place.name&#125;</div><div class=\"line\">          &lt;/button&gt;</div><div class=\"line\">        ))&#125;</div><div class=\"line\">        &lt;WeatherDisplay</div><div class=\"line\">          key=&#123;activePlace&#125;</div><div class=\"line\">          zip=&#123;PLACES[activePlace].zip&#125;</div><div class=\"line\">        /&gt;</div><div class=\"line\">      &lt;/div&gt;</div><div class=\"line\">    );</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/State.png\" target=\"_blank\" rel=\"external\"><img src=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/State.png\" alt=\"Snapshot of the weather app with changing state\"></a></p>\n<p>At this point, <a href=\"http://www.ctolib.com/ericvicenti/intro-to-react/blob/master/2-State-App.js\" target=\"_blank\" rel=\"external\">your <code>App.js</code> file should look like this</a>.</p>\n<h1 id=\"Lifecycle-Methods-and-Data-Fetching\"><a href=\"#Lifecycle-Methods-and-Data-Fetching\" class=\"headerlink\" title=\"  Lifecycle Methods and Data Fetching\"></a><a href=\"http://www.ctolib.com/ericvicenti-intro-to-react.html#lifecycle-methods-and-data-fetching\" target=\"_blank\" rel=\"external\">  </a>Lifecycle Methods and Data Fetching</h1><p>Sometimes we want to add imperative code that gets called at certain times in our component’s lifetime. The <a href=\"https://facebook.github.io/react/docs/react-component.html#the-component-lifecycle\" target=\"_blank\" rel=\"external\">lifecycle methods</a> of a React component allows us to write additional code for these cases.</p>\n<p>In this example, we want to make an API call when the component first shows up on screen, so we will add code to <code>componentDidMount</code>. Lets update the <code>WeatherDisplay</code> component to the following:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">class WeatherDisplay extends Component &#123;</div><div class=\"line\">  constructor() &#123;</div><div class=\"line\">    super();</div><div class=\"line\">    this.state = &#123;</div><div class=\"line\">      weatherData: null</div><div class=\"line\">    &#125;;</div><div class=\"line\">  &#125;</div><div class=\"line\">  componentDidMount() &#123;</div><div class=\"line\">    const zip = this.props.zip;</div><div class=\"line\">    const URL = &quot;http://api.openweathermap.org/data/2.5/weather?q=&quot; +</div><div class=\"line\">      zip +</div><div class=\"line\">      &quot;&amp;appid=b1b35bba8b434a28a0be2a3e1071ae5b&amp;units=imperial&quot;;</div><div class=\"line\">    fetch(URL).then(res =&gt; res.json()).then(json =&gt; &#123;</div><div class=\"line\">      this.setState(&#123; weatherData: json &#125;);</div><div class=\"line\">    &#125;);</div><div class=\"line\">  &#125;</div><div class=\"line\">  render() &#123;</div><div class=\"line\">    const weatherData = this.state.weatherData;</div><div class=\"line\">    if (!weatherData) return &lt;div&gt;Loading&lt;/div&gt;;</div><div class=\"line\">    return &lt;div&gt;&#123;JSON.stringify(weatherData)&#125;&lt;/div&gt;;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Let’s improve our render method so we can display the data nicely once it is loaded:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">const weather = weatherData.weather[0];</div><div class=\"line\">const iconUrl = &quot;http://openweathermap.org/img/w/&quot; + weather.icon + &quot;.png&quot;;</div><div class=\"line\">return (</div><div class=\"line\">  &lt;div&gt;</div><div class=\"line\">    &lt;h1&gt;</div><div class=\"line\">      &#123;weather.main&#125; in &#123;weatherData.name&#125;</div><div class=\"line\">      &lt;img src=&#123;iconUrl&#125; alt=&#123;weatherData.description&#125; /&gt;</div><div class=\"line\">    &lt;/h1&gt;</div><div class=\"line\">    &lt;p&gt;Current: &#123;weatherData.main.temp&#125;°&lt;/p&gt;</div><div class=\"line\">    &lt;p&gt;High: &#123;weatherData.main.temp_max&#125;°&lt;/p&gt;</div><div class=\"line\">    &lt;p&gt;Low: &#123;weatherData.main.temp_min&#125;°&lt;/p&gt;</div><div class=\"line\">    &lt;p&gt;Wind Speed: &#123;weatherData.wind.speed&#125; mi/hr&lt;/p&gt;</div><div class=\"line\">  &lt;/div&gt;</div><div class=\"line\">);</div></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/DataLoad.png\" target=\"_blank\" rel=\"external\"><img src=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/DataLoad.png\" alt=\"Snapshot of the weather app with weather data loading\"></a></p>\n<p>At this point, <a href=\"http://www.ctolib.com/ericvicenti/intro-to-react/blob/master/3-Lifecycle-and-Data-App.js\" target=\"_blank\" rel=\"external\">your <code>App.js</code> file should look like this</a>.</p>\n<h1 id=\"Installing-Components\"><a href=\"#Installing-Components\" class=\"headerlink\" title=\"  Installing Components\"></a><a href=\"http://www.ctolib.com/ericvicenti-intro-to-react.html#installing-components\" target=\"_blank\" rel=\"external\">  </a>Installing Components</h1><p>Our app is still somewhat ugly. We can fix that by adding <code>className</code> props to our divs, and importing some CSS.</p>\n<p>Or, we can install a library from <code>npm</code> that will help.</p>\n<p><a href=\"http://getbootstrap.com/\" target=\"_blank\" rel=\"external\">Bootstrap</a> is popular UI toolkit for HTML and CSS. Let’s install it, alongside <code>react-bootstrap</code> which provides the React components for it:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install --save bootstrap react-bootstrap</div></pre></td></tr></table></figure>\n<p>In the top of the app file, import the css from the bootstrap module:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">import &quot;bootstrap/dist/css/bootstrap.css&quot;;</div></pre></td></tr></table></figure>\n<p>Next, import the components we want to use from <code>react-bootstrap</code>. You can find components on the <a href=\"https://react-bootstrap.github.io/components.html\" target=\"_blank\" rel=\"external\">react-bootstrap site</a>.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">import &#123; Navbar, NavItem, Nav, Grid, Row, Col &#125; from &quot;react-bootstrap&quot;;</div></pre></td></tr></table></figure>\n<p>Now, replace the App component’s render function to use the bootstrap components:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div&gt;</div><div class=\"line\">  &lt;Navbar&gt;</div><div class=\"line\">    &lt;Navbar.Header&gt;</div><div class=\"line\">      &lt;Navbar.Brand&gt;</div><div class=\"line\">        React Simple Weather App</div><div class=\"line\">      &lt;/Navbar.Brand&gt;</div><div class=\"line\">    &lt;/Navbar.Header&gt;</div><div class=\"line\">  &lt;/Navbar&gt;</div><div class=\"line\">  &lt;Grid&gt;</div><div class=\"line\">    &lt;Row&gt;</div><div class=\"line\">      &lt;Col md=&#123;4&#125; sm=&#123;4&#125;&gt;</div><div class=\"line\">        &lt;h3&gt;Select a city&lt;/h3&gt;</div><div class=\"line\">        &lt;Nav</div><div class=\"line\">          bsStyle=&quot;pills&quot;</div><div class=\"line\">          stacked</div><div class=\"line\">          activeKey=&#123;activePlace&#125;</div><div class=\"line\">          onSelect=&#123;index =&gt; &#123;</div><div class=\"line\">            this.setState(&#123; activePlace: index &#125;);</div><div class=\"line\">          &#125;&#125;</div><div class=\"line\">        &gt;</div><div class=\"line\">          &#123;PLACES.map((place, index) =&gt; (</div><div class=\"line\">            &lt;NavItem key=&#123;index&#125; eventKey=&#123;index&#125;&gt;&#123;place.name&#125;&lt;/NavItem&gt;</div><div class=\"line\">          ))&#125;</div><div class=\"line\">        &lt;/Nav&gt;</div><div class=\"line\">      &lt;/Col&gt;</div><div class=\"line\">      &lt;Col md=&#123;8&#125; sm=&#123;8&#125;&gt;</div><div class=\"line\">        &lt;WeatherDisplay key=&#123;activePlace&#125; zip=&#123;PLACES[activePlace].zip&#125; /&gt;</div><div class=\"line\">      &lt;/Col&gt;</div><div class=\"line\">    &lt;/Row&gt;</div><div class=\"line\">  &lt;/Grid&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/Bootstrap.png\" target=\"_blank\" rel=\"external\"><img src=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/Bootstrap.png\" alt=\"Snapshot of the app with Bootstrap components\"></a></p>\n<p>Now our app is starting to look more polished, but it would be nice to have a custom theme. We can install <code>bootswatch</code> to do that.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install --save bootswatch</div></pre></td></tr></table></figure>\n<p><a href=\"http://bootswatch.com/\" target=\"_blank\" rel=\"external\">Browse the bootswatch website</a> to find a theme, and install it by replacing the import of bootstrap css with the following. In this case we are using the ‘journal’ theme.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">import &quot;bootswatch/journal/bootstrap.css&quot;;</div></pre></td></tr></table></figure>\n<p>The final, working app should look like this:</p>\n<p><a href=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/Final.png\" target=\"_blank\" rel=\"external\"><img src=\"https://github.com/ericvicenti/intro-to-react/raw/master/images/Final.png\" alt=\"Snapshot of the weather app with weather data loading\"></a></p>\n<p><a href=\"http://www.ctolib.com/ericvicenti/intro-to-react/blob/master/AppSnapshots/4-Installing-Components-App.js\" target=\"_blank\" rel=\"external\">The final source code of the app is here</a></p>\n<h1 id=\"Resources-and-other-topics\"><a href=\"#Resources-and-other-topics\" class=\"headerlink\" title=\"  Resources and other topics\"></a><a href=\"http://www.ctolib.com/ericvicenti-intro-to-react.html#resources-and-other-topics\" target=\"_blank\" rel=\"external\">  </a>Resources and other topics</h1><ul>\n<li><a href=\"http://www.ctolib.com/ericvicenti/intro-to-react/blob/master/reactjs.org\" target=\"_blank\" rel=\"external\">React</a> - Official Documentation</li>\n<li><a href=\"https://facebook.github.io/react-native/\" target=\"_blank\" rel=\"external\">React Native</a> - Use the same techniques to build mobile apps for iOS and Android</li>\n<li><a href=\"http://redux.js.org/\" target=\"_blank\" rel=\"external\">Redux</a> - Manage data in large applications when props become tedious</li>\n<li><a href=\"https://facebook.github.io/relay/\" target=\"_blank\" rel=\"external\">Relay</a> - Easily connect React Components with GraphQL data</li>\n<li><a href=\"https://facebook.github.io/jest/\" target=\"_blank\" rel=\"external\">Jest</a> - Test framework for JS</li>\n<li><a href=\"https://flow.org/\" target=\"_blank\" rel=\"external\">Flow</a> - Static type checker for JS</li>\n</ul>\n<h1 id=\"Deploying-Extra-credit\"><a href=\"#Deploying-Extra-credit\" class=\"headerlink\" title=\"  Deploying - (Extra credit!)\"></a><a href=\"http://www.ctolib.com/ericvicenti-intro-to-react.html#deploying---extra-credit\" target=\"_blank\" rel=\"external\">  </a>Deploying - (Extra credit!)</h1><p>It is very easy to deploy your new weather app.</p>\n<p>First, publish your app’s code to a Github repo. Then, browse to your repo and review the ReadMe file that is generated for your app. There are deployment instructions for many popular services.</p>\n<p>One of the easiest services to use is Netlify, especially when you use the “continuous deployment” mechanism.</p>\n"},{"title":"html5离线应用","_content":"# 使用 HTML5 开发离线应用\n\nWeb2.0 技术鼓励个人的参与，每个人都是 Web 内容的撰写者。如果 Web 应用能够提供离线的功能，让用户在没有网络的地方（例如飞机上）和时候（网络坏了），也能进行内容撰写，等到有网络的时候，再同步到 Web 上，就大大方便了用户的使用。HTML5 作为新一代的 HTML 标准，包含了对离线功能的支持。本文介绍了 HTML5 离线功能中的离线资源缓存、在线状态检测、本地数据存储等内容，并举例说明了如何使用 HTML5 的新特性开发离线应用。\n\n## HTML5 离线功能介绍\n\nHTML5 是目前正在讨论的新一代 HTML 标准，它代表了现在 Web 领域的最新发展方向。在 HTML5 标准中，加入了新的多样的内容描述标签，直接支持表单验证、视频音频标签、网页元素的拖拽、离线存储和工作线程等功能。其中一个新特性就是对离线应用开发的支持。\n\n在开发支持离线的 Web 应用程序时，开发者通常需要使用以下三个方面的功能：\n\n1. 离线资源缓存：需要一种方式来指明应用程序离线工作时所需的资源文件。这样，浏览器才能在在线状态时，把这些文件缓存到本地。此后，当用户离线访问应用程序时，这些资源文件会自动加载，从而让用户正常使用。HTML5 中，通过 cache manifest 文件指明需要缓存的资源，并支持自动和手动两种缓存更新方式。\n2. 在线状态检测：开发者需要知道浏览器是否在线，这样才能够针对在线或离线的状态，做出对应的处理。在 HTML5 中，提供了两种检测当前网络是否在线的方式。\n3. 本地数据存储：离线时，需要能够把数据存储到本地，以便在线时同步到服务器上。为了满足不同的存储需求，HTML5 提供了 DOM Storage 和 Web SQL Database 两种存储机制。前者提供了易用的 key/value 对存储方式，而后者提供了基本的关系数据库存储功能。\n\n尽管 HTML5 还处于草稿状态，但是各大主流浏览器都已经实现了其中的很多功能。Chrome、Firefox、Safari 和 Opera 的最新版本都对 HTML5 离线功能提供了完整的支持。IE8 也支持了其中的在线状态检测和 DOM Storage 功能。下面将具体介绍 HTML5 离线功能中的离线资源缓存、在线状态检测、DOM Storage 和 Web SQL Database，最后通过一个简单的 Web 程序说明使用 HTML5 开发离线应用的方法。\n\n## 离线资源缓存\n\n为了能够让用户在离线状态下继续访问 Web 应用，开发者需要提供一个 cache manifest 文件。这个文件中列出了所有需要在离线状态下使用的资源，浏览器会把这些资源缓存到本地。本节先通过一个例子展示 cache manifest 文件的用途，然后详细描述其书写方法，最后说明缓存的更新方式。\n\n### cache manifest 示例\n\n我们通过 W3C 提供的示例来说明。Clock Web 应用由三个文件“clock.html”、“clock.css”和“clock.js”组成。\n\n##### 清单 1. Clock 应用代码\n\n```\n <!-- clock.html -->\n <!DOCTYPE HTML>\n <html>\n <head>\n  <title>Clock</title>\n  <script src=\"clock.js\"></script>\n  <link rel=\"stylesheet\" href=\"clock.css\">\n </head>\n <body>\n  <p>The time is: <output id=\"clock\"></output></p>\n </body>\n </html>\n\n /* clock.css */\n output { font: 2em sans-serif; }\n\n /* clock.js */\n setTimeout(function () {\n    document.getElementById('clock').value = new Date();\n }, 1000);\n```\n\n当用户在离线状态下访问“clock.html”时，页面将无法展现。为了支持离线访问，开发者必须添加 cache manifest 文件，指明需要缓存的资源。这个例子中的 cache manifest 文件为“clock.manifest”，它声明了 3 个需要缓存的资源文件“clock.html”、“clock.css”和“clock.js”。\n\n##### 清单 2. clock.manifest 代码\n\n```\n CACHE MANIFEST\n clock.html\n clock.css\n clock.js\n```\n\n添加了 cache manifest 文件后，还需要修改“clock.html”，把 <html> 标签的 manifest 属性设置为“clock.manifest”。修改后的“clock.html”代码如下。\n\n##### 清单 3. 设置 manifest 后的 clock.html 代码\n\n```\n <!-- clock.html -->\n <!DOCTYPE HTML>\n <html manifest=\"clock.manifest\">\n <head>\n  <title>Clock</title>\n  <script src=\"clock.js\"></script>\n  <link rel=\"stylesheet\" href=\"clock.css\">\n </head>\n <body>\n  <p>The time is: <output id=\"clock\"></output></p>\n </body>\n </html>\n```\n\n修改后，当用户在线访问“clock.html”时，浏览器会缓存“clock.html”、“clock.css”和“clock.js”文件；而当用户离线访问时，这个 Web 应用也可以正常使用了。\n\n### cache manifest 格式\n\n下面说明书写 cache manifest 文件需要遵循的格式。\n\n1. 首行必须是 CACHE MANIFEST。\n2. 其后，每一行列出一个需要缓存的资源文件名。\n3. 可根据需要列出在线访问的白名单。白名单中的所有资源不会被缓存，在使用时将直接在线访问。声明白名单使用 NETWORK：标识符。\n4. 如果在白名单后还要补充需要缓存的资源，可以使用 CACHE：标识符。\n5. 如果要声明某 URI 不能访问时的替补 URI，可以使用 FALLBACK：标识符。其后的每一行包含两个 URI，当第一个 URI 不可访问时，浏览器将尝试使用第二个 URI。\n6. 注释要另起一行，以 # 号开头。\n\n清单 4 的代码中给出了 cache manifest 中各类标识符的使用示例。\n\n##### 清单 4. cache manifest 示例代码\n\n```\n CACHE MANIFEST\n # 上一行是必须书写的。\n\n images/sound-icon.png\n images/background.png\n\n NETWORK:\n comm.cgi\n```\n\n\\# 下面是另一些需要缓存的资源，在这个示例中只有一个 css 文件。\n\n```\n CACHE:\n style/default.css\n\n FALLBACK:\n /files/projects /projects\n```\n\n### 更新缓存\n\n应用程序可以等待浏览器自动更新缓存，也可以使用 Javascript 接口手动触发更新。\n\n1. 自动更新\n\n   浏览器除了在第一次访问 Web 应用时缓存资源外，只会在 cache manifest 文件本身发生变化时更新缓存。而 cache manifest 中的资源文件发生变化并不会触发更新。\n\n2. 手动更新\n\n   开发者也可以使用 window.applicationCache 的接口更新缓存。方法是检测 window.applicationCache.status 的值，如果是 UPDATEREADY，那么可以调用 window.applicationCache.update() 更新缓存。示范代码如下。\n\n   ##### 清单 5 手动更新缓存\n\n   ```\n    if (window.applicationCache.status == window.applicationCache.UPDATEREADY)\n   ｛\n    window.applicationCache.update();\n   ｝\n   ```\n\n## 在线状态检测\n\n如果 Web 应用程序仅仅是一些静态页面的组合，那么通过 cache manifest 缓存资源文件以后，就可以支持离线访问了。但是随着互联网的发展，特别是 Web2.0 概念流行以来，用户的提交的数据渐渐成为互联网的主流。那么在开发支持离线的 Web 应用时，就不能仅仅满足于静态页面的展现，还必需考虑如何让用户在离线状态下也可以操作数据。离线状态时，把数据存储在本地；在线以后，再把数据同步到服务器上。为了做到这一点，开发者首先必须知道浏览器是否在线。HTML5 提供了两种检测是否在线的方式：navigator.online 和 online/offline 事件。\n\n1. navigator.onLine\n\n   navigator.onLine 属性表示当前是否在线。如果为 true, 表示在线；如果为 false, 表示离线。当网络状态发生变化时，navigator.onLine 的值也随之变化。开发者可以通过读取它的值获取网络状态。\n\n2. online/offline 事件\n\n   当开发离线应用时，通过 navigator.onLine 获取网络状态通常是不够的。开发者还需要在网络状态发生变化时立刻得到通知，因此 HTML5 还提供了 online/offline 事件。当在线 / 离线状态切换时，online/offline 事件将触发在 body 元素上，并且沿着 document.body、document 和 window 的顺序冒泡。因此，开发者可以通过监听它们的 online/offline 事件来获悉网络状态。\n\n## DOM Storage\n\n在开发支持离线功能的 Web 应用时，开发者需要在本地存储数据。当前浏览器支持的 cookie 虽然也可以用来存储数据，但是 cookie 长度非常小（通常几 k），而且功能有限。因此，HTML5 中新引入了 DOM Storage 机制，用于存储 key/value 对，它的设计目标是提供大规模、安全且易用的存储功能。\n\n### DOM Storage 分类\n\nDOM Storage 分为两类：sessionStorage 和 localStorage。除了以下区别外，这两类存储对象的功能是完全一致的。\n\n1. sessionStorage 用于存储与当前浏览器窗口关联的数据。窗口关闭后，sessionStorage 中存储的数据将无法使用。\n2. localStorage 用于长期存储数据。窗口关闭后，localStorage 中的数据仍然可以被访问。所有浏览器窗口可以共享 localStorage 的数据。\n\n### DOM Storage 接口\n\n每一个 Storage 对象都可以存储一系列 key/value 对，Storage 接口定义为：\n\n```\n interface Storage {\n  readonly attribute unsigned long length;\n  getter DOMString key(in unsigned long index);\n  getter any getItem(in DOMString key);\n  setter creator void setItem(in DOMString key, in any data);\n  deleter void removeItem(in DOMString key);\n  void clear();\n };\n```\n\n其中最常用的接口是 getItem 和 setItem。getItem 用于获取指定 key 的 value，而 setItem 用于设置指定 key 的 value。\n\n### DOM Storage 示例\n\n这里给出一个使用了 sessionStorage 的例子，localStorage 的用法与它相同。首先使用 SetItem 添加了一个名为“userName”的项，它的值是“developerworks”。然后，调用 getItem 得到“userName”的值，并且弹出提示框显示它。最后，调用 removeItem 删除“userName”。\n\n##### 清单 6 DOM Storage 示例代码\n\n```\n <!DOCTYPE HTML>\n <html>\n <body>\n <script>\n // 在 sessionStorage 中定义'userName'变量\n sessionStorage.setItem('userName', 'developerworks');\n // 访问'userName'变量\n alert(\"Your user is: \" + sessionStorage.getItem('userName'));\n // 最后删除'userName'\n sessionStorage.removeItem('userName');\n </script>\n </body>\n </html>\n```\n\n## Web SQL Database\n\n除了 DOM Storage 以外，HTML5 中还有另外一种数据存储方式 Web SQL Database。它提供了基本的关系数据库功能，支持页面上的复杂的、交互式的数据存储。它既可以用来存储用户产生的数据，也可以作为从服务器获取数据的本地高速缓存。例如可以把电子邮件、日程等数据存储到数据库中。Web SQL Database 支持数据库事务的概念，从而保证了即使多个浏览器窗口操作同一数据，也不会产生冲突。\n\n### Web SQL Database 基本用法\n\n1. 创建和打开数据库\n\n使用数据库的第一步是创建并打开数据库，API 是 openDatabase。当数据库已经存在时，openDatabase 仅仅打开数据库；如果这个数据库不存在，那么就创建一个空数据库并且打开它。openDatabase 的定义是：\n\n```\n  Database openDatabase(in DOMString name, in DOMString version,\n  in DOMString displayName, in unsigned long estimatedSize,\n  in optional DatabaseCallback creationCallback);\n```\n\nname：数据库名。\n\nversion：数据库版本。\n\ndisplayName：显示名称。\n\nestimatedSize：数据库预估长度（以字节为单位）。\n\ncreationCallback：回调函数。\n\n1. 执行事务处理\n\n   在打开数据库以后，就可以使用事务 API transaction。每一个事务作为操作数据库的原子操作，不会被打断，从而避免了数据冲突。transaction 的定义是：\n\n   ```\n    void transaction(in SQLTransactionCallback callback,\n    in optional SQLTransactionErrorCallback errorCallback,\n    in optional SQLVoidCallback successCallback);\n   ```\n\n   callback：事务回调函数，其中可以执行 SQL 语句。\n\n   errorCallback：出错回调函数。\n\n   successCallback：执行成功回调函数。\n\n2. 执行 SQL 语句\n\n   在事务的回调函数 callback 中，可以执行 SQL 语句，API 是 executeSQL。executeSQL 的定义是：\n\n   ```\n     void executeSql(in DOMString sqlStatement,\n     in optional ObjectArray arguments, in optional SQLStatementCallback callback,\n     in optional SQLStatementErrorCallback errorCallback);\n   ```\n\n   sqlStatement：SQL 语句。\n\n   arguments：SQL 语句需要的参数。\n\n   callback：回调函数。\n\n   errorCallback：出错回调函数。\n\n### Web SQL Database 示例\n\n下面通过一个例子说明 Web SQL Database 的基本用法。它首先调用 openDatabase 创建了名为“fooDB”的数据库。然后使用 transaction 执行两条 SQL 语句。第一条 SQL 语句创建了名为“foo”的表，第二条 SQL 语句向表中插入一条记录。\n\n##### 清单 7 Web SQL Database 示例代码\n\n```\n var db = openDatabase('fooDB', '1.0', 'fooDB', 2 * 1024);\n db.transaction(function (tx) {\n  tx.executeSql('CREATE TABLE IF NOT EXISTS foo (id unique, text)');\n  tx.executeSql('INSERT INTO foo (id, text) VALUES (1, \"foobar\")');\n });\n```\n\n## 离线应用示例\n\n最后，通过一个例子来说明使用 HTML5 开发离线应用的基本方法。这个例子会用到前面提到的离线资源缓存、在线状态检测和 DOM Storage 等功能。假设我们开发一个便签管理的 Web 应用程序，用户可以在其中添加和删除便签。它支持离线功能，允许用户在离线状态下添加、删除便签，并且当在线以后能够同步到服务器上。\n\n1. 应用程序页面\n\n   这个程序的界面很简单，如图 1 所示。用户点击“New Note”按钮可以在弹出框中创建新的便签，双击某便签就表示删除它。\n\n   ##### 图 1. 应用程序页面\n\n   ​\n\n   这个页面的源文件是 index.html，它的代码如清单 8 所示。\n\n   ##### 清单 8 页面 HTML 代码\n\n   ```\n    <html manifest=\"notes.manifest\">\n    <head>\n    <script type=\"text/javascript\" src=\"server.js\"></script>\n    <script type=\"text/javascript\" src=\"data.js\"></script>\n    <script type=\"text/javascript\" src=\"UI.js\"></script>\n    <title>Note List</title>\n    </head>\n\n    <body onload = \"SyncWithServer()\">\n    <input type=\"button\" value=\"New Note\" onclick=\"newNote()\">\n    <ul id=\"list\"></ul>\n    </body>\n    </html>\n   ```\n\n   在 body 中声明了一个按钮和一个无序列表。当按下“New Note”按钮时，newNote 函数将被调用，它用来添加一条新的便签。而无序列表初始为空，它是用来显示便签的列表。\n\n2. cache manifest 文件\n\n   定义 cache manifest 文件，声明需要缓存的资源。在这个例子中，需要缓存“index.html”、“server.js”、“data.js”和“UI.js”等 4 个文件。除了前面列出的“index.html”外，“server.js”、“data.js”和“UI.js”分别包含服务器相关、数据存储和用户界面代码。cache manifest 文件定义如下。\n\n   ##### 清单 9 cache manifest 文件\n\n   ```\n    CACHE MANIFEST\n    index.html\n    server.js\n    data.js\n    UI.js\n   ```\n\n3. 用户界面代码\n\n   用户界面代码定义在 UI.js 中。\n\n   ##### 清单 10 用户界面代码 UI.js\n\n   ```\n    function newNote()\n    {\n       var title = window.prompt(\"New Note:\");\n       if (title)\n       {\n           add(title);\n       }\n    }\n\n    function add(title)\n    {\n       // 在界面中添加\n       addUIItem(title);\n       // 在数据中添加\n       addDataItem(title);\n    }\n\n    function remove(title)\n    {\n       // 从界面中删除\n       removeUIItem(title);\n       // 从数据中删除\n       removeDataItem(title);\n    }\n\n    function addUIItem(title)\n    {\n       var item = document.createElement(\"li\");\n       item.setAttribute(\"ondblclick\", \"remove('\"+title+\"')\");\n       item.innerHTML=title;\n\n       var list = document.getElementById(\"list\");\n       list.appendChild(item);\n    }\n\n    function removeUIItem(title)\n    {\n       var list = document.getElementById(\"list\");\n       for (var i = 0; i < list.children.length; i++) {\n           if(list.children[i].innerHTML == title)\n           {\n               list.removeChild(list.children[i]);\n           }\n       }\n    }\n   ```\n\n   UI.js 中的代码包含添加便签和删除便签的界面操作。\n\n   - 添加便签\n\n   1. 用户点击“New Note”按钮，newNote 函数被调用。\n   2. newNote 函数会弹出对话框，用户输入新便签内容。newNote 调用 add 函数。\n   3. add 函数分别调用 addUIItem 和 addDataItem 添加页面元素和数据。addDataItem 代码将在后面列出。\n   4. addUIItem 函数在页面列表中添加一项。并指明 ondblclick 事件的处理函数是 remove，使得双击操作可以删除便签。\n\n   - 删除便签\n\n   1. 用户双击某便签时，调用 remove 函数。\n   2. remove 函数分别调用 removeUIItem 和 removeDataItem 删除页面元素和数据。removeDataItem 将在后面列出。\n   3. removeUIItem 函数删除页面列表中的相应项。\n\n4. 数据存储代码\n\n   数据存储代码定义在 data.js 中。\n\n   ##### 清单 11 数据存储代码 data.js\n\n   ```\n    var storage = window['localStorage'];\n\n    function addDataItem(title)\n    {\n       if (navigator.onLine) // 在线状态\n       {\n           addServerItem(title);\n       }\n       else // 离线状态\n       {\n           var str = storage.getItem(\"toAdd\");\n           if(str == null)\n           {\n               str = title;\n           }\n           else\n           {\n               str = str + \",\" + title;\n           }\n           storage.setItem(\"toAdd\", str);\n       }\n    }\n\n    function removeDataItem(title)\n    {\n       if (navigator.onLine) // 在线状态\n       {\n           removeServerItem(title);\n       }\n       else // 离线状态\n       {\n           var str = storage.getItem(\"toRemove\");\n           if(str == null)\n           {\n               str = title;\n           }\n           else\n           {\n               str = str + \",\" + title;\n           }\n           storage.setItem(\"toRemove\", str);\n       }\n    }\n\n    function SyncWithServer()\n    {\n       // 如果当前是离线状态，不需要做任何处理\n       if (navigator.onLine == false)return;\n\n       var i = 0;\n       // 和服务器同步添加操作\n       var str = storage.getItem(\"toAdd\");\n       if(str != null)\n       {\n           var addItems = str.split(\",\");\n           for(i = 0; i<addItems.length; i++)\n           {\n               addDataItem(addItems[i]);\n           }\n           storage.removeItem(\"toAdd\");\n       }\n\n       // 和服务器同步删除操作\n       str = storage.getItem(\"toRemove\");\n       if(str != null)\n       {\n           var removeItems = str.split(\",\");\n           for(i = 0; i<removeItems.length; i++)\n           {\n               removeDataItem(removeItems[i]);\n           }\n           storage.removeItem(\"toRemove\");\n       }\n\n       // 删除界面中的所有便签\n       var list = document.getElementById(\"list\");\n       while(list.lastChild != list.firstElementChild)\n           list.removeChild(list.lastChild);\n       if(list.firstElementChild)\n           list.removeChild(list.firstElementChild);\n\n       // 从服务器获取全部便签，并显示在界面中\n       var allItems = getServerItems();\n       if(allItems != \"\")\n       {\n           var items = allItems.split(\",\");\n           for(i = 0; i<items.length; i++)\n           {\n               addUIItem(items[i]);\n           }\n       }\n    }\n   ```\n\n   window.addEventListener(\"online\", SyncWithServer,false);\n\n   data.js 中的代码包含添加便签、删除便签和与服务器同步等数据操作。其中用到了 navigator.onLine 属性、online 事件、DOM Storage 等 HTML5 新功能。\n\n   - 添加便签：addDataItem\n\n   1. 通过 navigator.onLine 判断是否在线。\n   2. 如果在线，那么调用 addServerItem 直接把数据存储到服务器上。addServerItem 将在后面列出。\n   3. 如果离线，那么把数据添加到 localStorage 的“toAdd”项中。\n\n   - 删除便签：removeDataItem\n\n   1. 通过 navigator.onLine 判断是否在线。\n   2. 如果在线，那么调用 removeServerItem 直接在服务器上删除数据。removeServerItem 将在后面列出。\n   3. 如果离线，那么把数据添加到 localStorage 的“toRemove”项中。\n\n   - 数据同步：SyncWithServer\n\n   在 data.js 的最后一行，注册了 window 的 online 事件处理函数 SyncWithServer。当 online 事件发生时，SyncWithServer 将被调用。其功能如下。\n\n   1. 如果 navigator.onLine 表示当前离线，则不做任何操作。\n   2. 把 localStorage 中“toAdd”项的所有数据添加到服务器上，并删除“toAdd”项。\n   3. 把 localStorage 中“toRemove”项的所有数据从服务器中删除，并删除“toRemove”项。\n   4. 删除当前页面列表中的所有便签。\n   5. 调用 getServerItems 从服务器获取所有便签，并添加在页面列表中。getServerItems 将在后面列出。\n\n5. 服务器相关代码\n\n   服务器相关代码定义在 server.js 中。\n\n   ##### 清单 12 服务器相关代码 server.js\n\n   ```\n    function addServerItem(title)\n    {\n       // 在服务器中添加一项\n    }\n\n    function removeServerItem(title)\n    {\n       // 在服务器中删除一项\n    }\n\n    function getServerItems()\n    {\n       // 返回服务器中存储的便签列表\n    }\n   ```\n\n   由于这部分代码与服务器有关，这里只说明各个函数的功能，具体实现可以根据不同服务器编写代码。\n\n   - 在服务器中添加一项：addServerItem\n   - 在服务器中删除一项：removeServerItem\n   - 返回服务器中存储的便签列表：getServerItems\n\n## 总结\n\n本文介绍了 HTML5 为了支持离线应用程序新增的强大功能。通过阅读本文，读者能够了解到 HTML5 中离线相关特性的基本用法，从而掌握利用 HTML5 开发 Web 离线应用的方法。\n","source":"_posts/使用HTML5开发离线应用.md","raw":"---\ntitle: html5离线应用\ntags: [html,前端]\ncategories: html\n---\n# 使用 HTML5 开发离线应用\n\nWeb2.0 技术鼓励个人的参与，每个人都是 Web 内容的撰写者。如果 Web 应用能够提供离线的功能，让用户在没有网络的地方（例如飞机上）和时候（网络坏了），也能进行内容撰写，等到有网络的时候，再同步到 Web 上，就大大方便了用户的使用。HTML5 作为新一代的 HTML 标准，包含了对离线功能的支持。本文介绍了 HTML5 离线功能中的离线资源缓存、在线状态检测、本地数据存储等内容，并举例说明了如何使用 HTML5 的新特性开发离线应用。\n\n## HTML5 离线功能介绍\n\nHTML5 是目前正在讨论的新一代 HTML 标准，它代表了现在 Web 领域的最新发展方向。在 HTML5 标准中，加入了新的多样的内容描述标签，直接支持表单验证、视频音频标签、网页元素的拖拽、离线存储和工作线程等功能。其中一个新特性就是对离线应用开发的支持。\n\n在开发支持离线的 Web 应用程序时，开发者通常需要使用以下三个方面的功能：\n\n1. 离线资源缓存：需要一种方式来指明应用程序离线工作时所需的资源文件。这样，浏览器才能在在线状态时，把这些文件缓存到本地。此后，当用户离线访问应用程序时，这些资源文件会自动加载，从而让用户正常使用。HTML5 中，通过 cache manifest 文件指明需要缓存的资源，并支持自动和手动两种缓存更新方式。\n2. 在线状态检测：开发者需要知道浏览器是否在线，这样才能够针对在线或离线的状态，做出对应的处理。在 HTML5 中，提供了两种检测当前网络是否在线的方式。\n3. 本地数据存储：离线时，需要能够把数据存储到本地，以便在线时同步到服务器上。为了满足不同的存储需求，HTML5 提供了 DOM Storage 和 Web SQL Database 两种存储机制。前者提供了易用的 key/value 对存储方式，而后者提供了基本的关系数据库存储功能。\n\n尽管 HTML5 还处于草稿状态，但是各大主流浏览器都已经实现了其中的很多功能。Chrome、Firefox、Safari 和 Opera 的最新版本都对 HTML5 离线功能提供了完整的支持。IE8 也支持了其中的在线状态检测和 DOM Storage 功能。下面将具体介绍 HTML5 离线功能中的离线资源缓存、在线状态检测、DOM Storage 和 Web SQL Database，最后通过一个简单的 Web 程序说明使用 HTML5 开发离线应用的方法。\n\n## 离线资源缓存\n\n为了能够让用户在离线状态下继续访问 Web 应用，开发者需要提供一个 cache manifest 文件。这个文件中列出了所有需要在离线状态下使用的资源，浏览器会把这些资源缓存到本地。本节先通过一个例子展示 cache manifest 文件的用途，然后详细描述其书写方法，最后说明缓存的更新方式。\n\n### cache manifest 示例\n\n我们通过 W3C 提供的示例来说明。Clock Web 应用由三个文件“clock.html”、“clock.css”和“clock.js”组成。\n\n##### 清单 1. Clock 应用代码\n\n```\n <!-- clock.html -->\n <!DOCTYPE HTML>\n <html>\n <head>\n  <title>Clock</title>\n  <script src=\"clock.js\"></script>\n  <link rel=\"stylesheet\" href=\"clock.css\">\n </head>\n <body>\n  <p>The time is: <output id=\"clock\"></output></p>\n </body>\n </html>\n\n /* clock.css */\n output { font: 2em sans-serif; }\n\n /* clock.js */\n setTimeout(function () {\n    document.getElementById('clock').value = new Date();\n }, 1000);\n```\n\n当用户在离线状态下访问“clock.html”时，页面将无法展现。为了支持离线访问，开发者必须添加 cache manifest 文件，指明需要缓存的资源。这个例子中的 cache manifest 文件为“clock.manifest”，它声明了 3 个需要缓存的资源文件“clock.html”、“clock.css”和“clock.js”。\n\n##### 清单 2. clock.manifest 代码\n\n```\n CACHE MANIFEST\n clock.html\n clock.css\n clock.js\n```\n\n添加了 cache manifest 文件后，还需要修改“clock.html”，把 <html> 标签的 manifest 属性设置为“clock.manifest”。修改后的“clock.html”代码如下。\n\n##### 清单 3. 设置 manifest 后的 clock.html 代码\n\n```\n <!-- clock.html -->\n <!DOCTYPE HTML>\n <html manifest=\"clock.manifest\">\n <head>\n  <title>Clock</title>\n  <script src=\"clock.js\"></script>\n  <link rel=\"stylesheet\" href=\"clock.css\">\n </head>\n <body>\n  <p>The time is: <output id=\"clock\"></output></p>\n </body>\n </html>\n```\n\n修改后，当用户在线访问“clock.html”时，浏览器会缓存“clock.html”、“clock.css”和“clock.js”文件；而当用户离线访问时，这个 Web 应用也可以正常使用了。\n\n### cache manifest 格式\n\n下面说明书写 cache manifest 文件需要遵循的格式。\n\n1. 首行必须是 CACHE MANIFEST。\n2. 其后，每一行列出一个需要缓存的资源文件名。\n3. 可根据需要列出在线访问的白名单。白名单中的所有资源不会被缓存，在使用时将直接在线访问。声明白名单使用 NETWORK：标识符。\n4. 如果在白名单后还要补充需要缓存的资源，可以使用 CACHE：标识符。\n5. 如果要声明某 URI 不能访问时的替补 URI，可以使用 FALLBACK：标识符。其后的每一行包含两个 URI，当第一个 URI 不可访问时，浏览器将尝试使用第二个 URI。\n6. 注释要另起一行，以 # 号开头。\n\n清单 4 的代码中给出了 cache manifest 中各类标识符的使用示例。\n\n##### 清单 4. cache manifest 示例代码\n\n```\n CACHE MANIFEST\n # 上一行是必须书写的。\n\n images/sound-icon.png\n images/background.png\n\n NETWORK:\n comm.cgi\n```\n\n\\# 下面是另一些需要缓存的资源，在这个示例中只有一个 css 文件。\n\n```\n CACHE:\n style/default.css\n\n FALLBACK:\n /files/projects /projects\n```\n\n### 更新缓存\n\n应用程序可以等待浏览器自动更新缓存，也可以使用 Javascript 接口手动触发更新。\n\n1. 自动更新\n\n   浏览器除了在第一次访问 Web 应用时缓存资源外，只会在 cache manifest 文件本身发生变化时更新缓存。而 cache manifest 中的资源文件发生变化并不会触发更新。\n\n2. 手动更新\n\n   开发者也可以使用 window.applicationCache 的接口更新缓存。方法是检测 window.applicationCache.status 的值，如果是 UPDATEREADY，那么可以调用 window.applicationCache.update() 更新缓存。示范代码如下。\n\n   ##### 清单 5 手动更新缓存\n\n   ```\n    if (window.applicationCache.status == window.applicationCache.UPDATEREADY)\n   ｛\n    window.applicationCache.update();\n   ｝\n   ```\n\n## 在线状态检测\n\n如果 Web 应用程序仅仅是一些静态页面的组合，那么通过 cache manifest 缓存资源文件以后，就可以支持离线访问了。但是随着互联网的发展，特别是 Web2.0 概念流行以来，用户的提交的数据渐渐成为互联网的主流。那么在开发支持离线的 Web 应用时，就不能仅仅满足于静态页面的展现，还必需考虑如何让用户在离线状态下也可以操作数据。离线状态时，把数据存储在本地；在线以后，再把数据同步到服务器上。为了做到这一点，开发者首先必须知道浏览器是否在线。HTML5 提供了两种检测是否在线的方式：navigator.online 和 online/offline 事件。\n\n1. navigator.onLine\n\n   navigator.onLine 属性表示当前是否在线。如果为 true, 表示在线；如果为 false, 表示离线。当网络状态发生变化时，navigator.onLine 的值也随之变化。开发者可以通过读取它的值获取网络状态。\n\n2. online/offline 事件\n\n   当开发离线应用时，通过 navigator.onLine 获取网络状态通常是不够的。开发者还需要在网络状态发生变化时立刻得到通知，因此 HTML5 还提供了 online/offline 事件。当在线 / 离线状态切换时，online/offline 事件将触发在 body 元素上，并且沿着 document.body、document 和 window 的顺序冒泡。因此，开发者可以通过监听它们的 online/offline 事件来获悉网络状态。\n\n## DOM Storage\n\n在开发支持离线功能的 Web 应用时，开发者需要在本地存储数据。当前浏览器支持的 cookie 虽然也可以用来存储数据，但是 cookie 长度非常小（通常几 k），而且功能有限。因此，HTML5 中新引入了 DOM Storage 机制，用于存储 key/value 对，它的设计目标是提供大规模、安全且易用的存储功能。\n\n### DOM Storage 分类\n\nDOM Storage 分为两类：sessionStorage 和 localStorage。除了以下区别外，这两类存储对象的功能是完全一致的。\n\n1. sessionStorage 用于存储与当前浏览器窗口关联的数据。窗口关闭后，sessionStorage 中存储的数据将无法使用。\n2. localStorage 用于长期存储数据。窗口关闭后，localStorage 中的数据仍然可以被访问。所有浏览器窗口可以共享 localStorage 的数据。\n\n### DOM Storage 接口\n\n每一个 Storage 对象都可以存储一系列 key/value 对，Storage 接口定义为：\n\n```\n interface Storage {\n  readonly attribute unsigned long length;\n  getter DOMString key(in unsigned long index);\n  getter any getItem(in DOMString key);\n  setter creator void setItem(in DOMString key, in any data);\n  deleter void removeItem(in DOMString key);\n  void clear();\n };\n```\n\n其中最常用的接口是 getItem 和 setItem。getItem 用于获取指定 key 的 value，而 setItem 用于设置指定 key 的 value。\n\n### DOM Storage 示例\n\n这里给出一个使用了 sessionStorage 的例子，localStorage 的用法与它相同。首先使用 SetItem 添加了一个名为“userName”的项，它的值是“developerworks”。然后，调用 getItem 得到“userName”的值，并且弹出提示框显示它。最后，调用 removeItem 删除“userName”。\n\n##### 清单 6 DOM Storage 示例代码\n\n```\n <!DOCTYPE HTML>\n <html>\n <body>\n <script>\n // 在 sessionStorage 中定义'userName'变量\n sessionStorage.setItem('userName', 'developerworks');\n // 访问'userName'变量\n alert(\"Your user is: \" + sessionStorage.getItem('userName'));\n // 最后删除'userName'\n sessionStorage.removeItem('userName');\n </script>\n </body>\n </html>\n```\n\n## Web SQL Database\n\n除了 DOM Storage 以外，HTML5 中还有另外一种数据存储方式 Web SQL Database。它提供了基本的关系数据库功能，支持页面上的复杂的、交互式的数据存储。它既可以用来存储用户产生的数据，也可以作为从服务器获取数据的本地高速缓存。例如可以把电子邮件、日程等数据存储到数据库中。Web SQL Database 支持数据库事务的概念，从而保证了即使多个浏览器窗口操作同一数据，也不会产生冲突。\n\n### Web SQL Database 基本用法\n\n1. 创建和打开数据库\n\n使用数据库的第一步是创建并打开数据库，API 是 openDatabase。当数据库已经存在时，openDatabase 仅仅打开数据库；如果这个数据库不存在，那么就创建一个空数据库并且打开它。openDatabase 的定义是：\n\n```\n  Database openDatabase(in DOMString name, in DOMString version,\n  in DOMString displayName, in unsigned long estimatedSize,\n  in optional DatabaseCallback creationCallback);\n```\n\nname：数据库名。\n\nversion：数据库版本。\n\ndisplayName：显示名称。\n\nestimatedSize：数据库预估长度（以字节为单位）。\n\ncreationCallback：回调函数。\n\n1. 执行事务处理\n\n   在打开数据库以后，就可以使用事务 API transaction。每一个事务作为操作数据库的原子操作，不会被打断，从而避免了数据冲突。transaction 的定义是：\n\n   ```\n    void transaction(in SQLTransactionCallback callback,\n    in optional SQLTransactionErrorCallback errorCallback,\n    in optional SQLVoidCallback successCallback);\n   ```\n\n   callback：事务回调函数，其中可以执行 SQL 语句。\n\n   errorCallback：出错回调函数。\n\n   successCallback：执行成功回调函数。\n\n2. 执行 SQL 语句\n\n   在事务的回调函数 callback 中，可以执行 SQL 语句，API 是 executeSQL。executeSQL 的定义是：\n\n   ```\n     void executeSql(in DOMString sqlStatement,\n     in optional ObjectArray arguments, in optional SQLStatementCallback callback,\n     in optional SQLStatementErrorCallback errorCallback);\n   ```\n\n   sqlStatement：SQL 语句。\n\n   arguments：SQL 语句需要的参数。\n\n   callback：回调函数。\n\n   errorCallback：出错回调函数。\n\n### Web SQL Database 示例\n\n下面通过一个例子说明 Web SQL Database 的基本用法。它首先调用 openDatabase 创建了名为“fooDB”的数据库。然后使用 transaction 执行两条 SQL 语句。第一条 SQL 语句创建了名为“foo”的表，第二条 SQL 语句向表中插入一条记录。\n\n##### 清单 7 Web SQL Database 示例代码\n\n```\n var db = openDatabase('fooDB', '1.0', 'fooDB', 2 * 1024);\n db.transaction(function (tx) {\n  tx.executeSql('CREATE TABLE IF NOT EXISTS foo (id unique, text)');\n  tx.executeSql('INSERT INTO foo (id, text) VALUES (1, \"foobar\")');\n });\n```\n\n## 离线应用示例\n\n最后，通过一个例子来说明使用 HTML5 开发离线应用的基本方法。这个例子会用到前面提到的离线资源缓存、在线状态检测和 DOM Storage 等功能。假设我们开发一个便签管理的 Web 应用程序，用户可以在其中添加和删除便签。它支持离线功能，允许用户在离线状态下添加、删除便签，并且当在线以后能够同步到服务器上。\n\n1. 应用程序页面\n\n   这个程序的界面很简单，如图 1 所示。用户点击“New Note”按钮可以在弹出框中创建新的便签，双击某便签就表示删除它。\n\n   ##### 图 1. 应用程序页面\n\n   ​\n\n   这个页面的源文件是 index.html，它的代码如清单 8 所示。\n\n   ##### 清单 8 页面 HTML 代码\n\n   ```\n    <html manifest=\"notes.manifest\">\n    <head>\n    <script type=\"text/javascript\" src=\"server.js\"></script>\n    <script type=\"text/javascript\" src=\"data.js\"></script>\n    <script type=\"text/javascript\" src=\"UI.js\"></script>\n    <title>Note List</title>\n    </head>\n\n    <body onload = \"SyncWithServer()\">\n    <input type=\"button\" value=\"New Note\" onclick=\"newNote()\">\n    <ul id=\"list\"></ul>\n    </body>\n    </html>\n   ```\n\n   在 body 中声明了一个按钮和一个无序列表。当按下“New Note”按钮时，newNote 函数将被调用，它用来添加一条新的便签。而无序列表初始为空，它是用来显示便签的列表。\n\n2. cache manifest 文件\n\n   定义 cache manifest 文件，声明需要缓存的资源。在这个例子中，需要缓存“index.html”、“server.js”、“data.js”和“UI.js”等 4 个文件。除了前面列出的“index.html”外，“server.js”、“data.js”和“UI.js”分别包含服务器相关、数据存储和用户界面代码。cache manifest 文件定义如下。\n\n   ##### 清单 9 cache manifest 文件\n\n   ```\n    CACHE MANIFEST\n    index.html\n    server.js\n    data.js\n    UI.js\n   ```\n\n3. 用户界面代码\n\n   用户界面代码定义在 UI.js 中。\n\n   ##### 清单 10 用户界面代码 UI.js\n\n   ```\n    function newNote()\n    {\n       var title = window.prompt(\"New Note:\");\n       if (title)\n       {\n           add(title);\n       }\n    }\n\n    function add(title)\n    {\n       // 在界面中添加\n       addUIItem(title);\n       // 在数据中添加\n       addDataItem(title);\n    }\n\n    function remove(title)\n    {\n       // 从界面中删除\n       removeUIItem(title);\n       // 从数据中删除\n       removeDataItem(title);\n    }\n\n    function addUIItem(title)\n    {\n       var item = document.createElement(\"li\");\n       item.setAttribute(\"ondblclick\", \"remove('\"+title+\"')\");\n       item.innerHTML=title;\n\n       var list = document.getElementById(\"list\");\n       list.appendChild(item);\n    }\n\n    function removeUIItem(title)\n    {\n       var list = document.getElementById(\"list\");\n       for (var i = 0; i < list.children.length; i++) {\n           if(list.children[i].innerHTML == title)\n           {\n               list.removeChild(list.children[i]);\n           }\n       }\n    }\n   ```\n\n   UI.js 中的代码包含添加便签和删除便签的界面操作。\n\n   - 添加便签\n\n   1. 用户点击“New Note”按钮，newNote 函数被调用。\n   2. newNote 函数会弹出对话框，用户输入新便签内容。newNote 调用 add 函数。\n   3. add 函数分别调用 addUIItem 和 addDataItem 添加页面元素和数据。addDataItem 代码将在后面列出。\n   4. addUIItem 函数在页面列表中添加一项。并指明 ondblclick 事件的处理函数是 remove，使得双击操作可以删除便签。\n\n   - 删除便签\n\n   1. 用户双击某便签时，调用 remove 函数。\n   2. remove 函数分别调用 removeUIItem 和 removeDataItem 删除页面元素和数据。removeDataItem 将在后面列出。\n   3. removeUIItem 函数删除页面列表中的相应项。\n\n4. 数据存储代码\n\n   数据存储代码定义在 data.js 中。\n\n   ##### 清单 11 数据存储代码 data.js\n\n   ```\n    var storage = window['localStorage'];\n\n    function addDataItem(title)\n    {\n       if (navigator.onLine) // 在线状态\n       {\n           addServerItem(title);\n       }\n       else // 离线状态\n       {\n           var str = storage.getItem(\"toAdd\");\n           if(str == null)\n           {\n               str = title;\n           }\n           else\n           {\n               str = str + \",\" + title;\n           }\n           storage.setItem(\"toAdd\", str);\n       }\n    }\n\n    function removeDataItem(title)\n    {\n       if (navigator.onLine) // 在线状态\n       {\n           removeServerItem(title);\n       }\n       else // 离线状态\n       {\n           var str = storage.getItem(\"toRemove\");\n           if(str == null)\n           {\n               str = title;\n           }\n           else\n           {\n               str = str + \",\" + title;\n           }\n           storage.setItem(\"toRemove\", str);\n       }\n    }\n\n    function SyncWithServer()\n    {\n       // 如果当前是离线状态，不需要做任何处理\n       if (navigator.onLine == false)return;\n\n       var i = 0;\n       // 和服务器同步添加操作\n       var str = storage.getItem(\"toAdd\");\n       if(str != null)\n       {\n           var addItems = str.split(\",\");\n           for(i = 0; i<addItems.length; i++)\n           {\n               addDataItem(addItems[i]);\n           }\n           storage.removeItem(\"toAdd\");\n       }\n\n       // 和服务器同步删除操作\n       str = storage.getItem(\"toRemove\");\n       if(str != null)\n       {\n           var removeItems = str.split(\",\");\n           for(i = 0; i<removeItems.length; i++)\n           {\n               removeDataItem(removeItems[i]);\n           }\n           storage.removeItem(\"toRemove\");\n       }\n\n       // 删除界面中的所有便签\n       var list = document.getElementById(\"list\");\n       while(list.lastChild != list.firstElementChild)\n           list.removeChild(list.lastChild);\n       if(list.firstElementChild)\n           list.removeChild(list.firstElementChild);\n\n       // 从服务器获取全部便签，并显示在界面中\n       var allItems = getServerItems();\n       if(allItems != \"\")\n       {\n           var items = allItems.split(\",\");\n           for(i = 0; i<items.length; i++)\n           {\n               addUIItem(items[i]);\n           }\n       }\n    }\n   ```\n\n   window.addEventListener(\"online\", SyncWithServer,false);\n\n   data.js 中的代码包含添加便签、删除便签和与服务器同步等数据操作。其中用到了 navigator.onLine 属性、online 事件、DOM Storage 等 HTML5 新功能。\n\n   - 添加便签：addDataItem\n\n   1. 通过 navigator.onLine 判断是否在线。\n   2. 如果在线，那么调用 addServerItem 直接把数据存储到服务器上。addServerItem 将在后面列出。\n   3. 如果离线，那么把数据添加到 localStorage 的“toAdd”项中。\n\n   - 删除便签：removeDataItem\n\n   1. 通过 navigator.onLine 判断是否在线。\n   2. 如果在线，那么调用 removeServerItem 直接在服务器上删除数据。removeServerItem 将在后面列出。\n   3. 如果离线，那么把数据添加到 localStorage 的“toRemove”项中。\n\n   - 数据同步：SyncWithServer\n\n   在 data.js 的最后一行，注册了 window 的 online 事件处理函数 SyncWithServer。当 online 事件发生时，SyncWithServer 将被调用。其功能如下。\n\n   1. 如果 navigator.onLine 表示当前离线，则不做任何操作。\n   2. 把 localStorage 中“toAdd”项的所有数据添加到服务器上，并删除“toAdd”项。\n   3. 把 localStorage 中“toRemove”项的所有数据从服务器中删除，并删除“toRemove”项。\n   4. 删除当前页面列表中的所有便签。\n   5. 调用 getServerItems 从服务器获取所有便签，并添加在页面列表中。getServerItems 将在后面列出。\n\n5. 服务器相关代码\n\n   服务器相关代码定义在 server.js 中。\n\n   ##### 清单 12 服务器相关代码 server.js\n\n   ```\n    function addServerItem(title)\n    {\n       // 在服务器中添加一项\n    }\n\n    function removeServerItem(title)\n    {\n       // 在服务器中删除一项\n    }\n\n    function getServerItems()\n    {\n       // 返回服务器中存储的便签列表\n    }\n   ```\n\n   由于这部分代码与服务器有关，这里只说明各个函数的功能，具体实现可以根据不同服务器编写代码。\n\n   - 在服务器中添加一项：addServerItem\n   - 在服务器中删除一项：removeServerItem\n   - 返回服务器中存储的便签列表：getServerItems\n\n## 总结\n\n本文介绍了 HTML5 为了支持离线应用程序新增的强大功能。通过阅读本文，读者能够了解到 HTML5 中离线相关特性的基本用法，从而掌握利用 HTML5 开发 Web 离线应用的方法。\n","slug":"使用HTML5开发离线应用","published":1,"date":"2017-05-22T05:03:19.690Z","updated":"2017-05-25T01:00:55.800Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmtsh001h4wvs27py1gvm","content":"<h1 id=\"使用-HTML5-开发离线应用\"><a href=\"#使用-HTML5-开发离线应用\" class=\"headerlink\" title=\"使用 HTML5 开发离线应用\"></a>使用 HTML5 开发离线应用</h1><p>Web2.0 技术鼓励个人的参与，每个人都是 Web 内容的撰写者。如果 Web 应用能够提供离线的功能，让用户在没有网络的地方（例如飞机上）和时候（网络坏了），也能进行内容撰写，等到有网络的时候，再同步到 Web 上，就大大方便了用户的使用。HTML5 作为新一代的 HTML 标准，包含了对离线功能的支持。本文介绍了 HTML5 离线功能中的离线资源缓存、在线状态检测、本地数据存储等内容，并举例说明了如何使用 HTML5 的新特性开发离线应用。</p>\n<h2 id=\"HTML5-离线功能介绍\"><a href=\"#HTML5-离线功能介绍\" class=\"headerlink\" title=\"HTML5 离线功能介绍\"></a>HTML5 离线功能介绍</h2><p>HTML5 是目前正在讨论的新一代 HTML 标准，它代表了现在 Web 领域的最新发展方向。在 HTML5 标准中，加入了新的多样的内容描述标签，直接支持表单验证、视频音频标签、网页元素的拖拽、离线存储和工作线程等功能。其中一个新特性就是对离线应用开发的支持。</p>\n<p>在开发支持离线的 Web 应用程序时，开发者通常需要使用以下三个方面的功能：</p>\n<ol>\n<li>离线资源缓存：需要一种方式来指明应用程序离线工作时所需的资源文件。这样，浏览器才能在在线状态时，把这些文件缓存到本地。此后，当用户离线访问应用程序时，这些资源文件会自动加载，从而让用户正常使用。HTML5 中，通过 cache manifest 文件指明需要缓存的资源，并支持自动和手动两种缓存更新方式。</li>\n<li>在线状态检测：开发者需要知道浏览器是否在线，这样才能够针对在线或离线的状态，做出对应的处理。在 HTML5 中，提供了两种检测当前网络是否在线的方式。</li>\n<li>本地数据存储：离线时，需要能够把数据存储到本地，以便在线时同步到服务器上。为了满足不同的存储需求，HTML5 提供了 DOM Storage 和 Web SQL Database 两种存储机制。前者提供了易用的 key/value 对存储方式，而后者提供了基本的关系数据库存储功能。</li>\n</ol>\n<p>尽管 HTML5 还处于草稿状态，但是各大主流浏览器都已经实现了其中的很多功能。Chrome、Firefox、Safari 和 Opera 的最新版本都对 HTML5 离线功能提供了完整的支持。IE8 也支持了其中的在线状态检测和 DOM Storage 功能。下面将具体介绍 HTML5 离线功能中的离线资源缓存、在线状态检测、DOM Storage 和 Web SQL Database，最后通过一个简单的 Web 程序说明使用 HTML5 开发离线应用的方法。</p>\n<h2 id=\"离线资源缓存\"><a href=\"#离线资源缓存\" class=\"headerlink\" title=\"离线资源缓存\"></a>离线资源缓存</h2><p>为了能够让用户在离线状态下继续访问 Web 应用，开发者需要提供一个 cache manifest 文件。这个文件中列出了所有需要在离线状态下使用的资源，浏览器会把这些资源缓存到本地。本节先通过一个例子展示 cache manifest 文件的用途，然后详细描述其书写方法，最后说明缓存的更新方式。</p>\n<h3 id=\"cache-manifest-示例\"><a href=\"#cache-manifest-示例\" class=\"headerlink\" title=\"cache manifest 示例\"></a>cache manifest 示例</h3><p>我们通过 W3C 提供的示例来说明。Clock Web 应用由三个文件“clock.html”、“clock.css”和“clock.js”组成。</p>\n<h5 id=\"清单-1-Clock-应用代码\"><a href=\"#清单-1-Clock-应用代码\" class=\"headerlink\" title=\"清单 1. Clock 应用代码\"></a>清单 1. Clock 应用代码</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- clock.html --&gt;</div><div class=\"line\">&lt;!DOCTYPE HTML&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\"> &lt;title&gt;Clock&lt;/title&gt;</div><div class=\"line\"> &lt;script src=&quot;clock.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\"> &lt;link rel=&quot;stylesheet&quot; href=&quot;clock.css&quot;&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\"> &lt;p&gt;The time is: &lt;output id=&quot;clock&quot;&gt;&lt;/output&gt;&lt;/p&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div><div class=\"line\"></div><div class=\"line\">/* clock.css */</div><div class=\"line\">output &#123; font: 2em sans-serif; &#125;</div><div class=\"line\"></div><div class=\"line\">/* clock.js */</div><div class=\"line\">setTimeout(function () &#123;</div><div class=\"line\">   document.getElementById(&apos;clock&apos;).value = new Date();</div><div class=\"line\">&#125;, 1000);</div></pre></td></tr></table></figure>\n<p>当用户在离线状态下访问“clock.html”时，页面将无法展现。为了支持离线访问，开发者必须添加 cache manifest 文件，指明需要缓存的资源。这个例子中的 cache manifest 文件为“clock.manifest”，它声明了 3 个需要缓存的资源文件“clock.html”、“clock.css”和“clock.js”。</p>\n<h5 id=\"清单-2-clock-manifest-代码\"><a href=\"#清单-2-clock-manifest-代码\" class=\"headerlink\" title=\"清单 2. clock.manifest 代码\"></a>清单 2. clock.manifest 代码</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">CACHE MANIFEST</div><div class=\"line\">clock.html</div><div class=\"line\">clock.css</div><div class=\"line\">clock.js</div></pre></td></tr></table></figure>\n<p>添加了 cache manifest 文件后，还需要修改“clock.html”，把 <html> 标签的 manifest 属性设置为“clock.manifest”。修改后的“clock.html”代码如下。</html></p>\n<h5 id=\"清单-3-设置-manifest-后的-clock-html-代码\"><a href=\"#清单-3-设置-manifest-后的-clock-html-代码\" class=\"headerlink\" title=\"清单 3. 设置 manifest 后的 clock.html 代码\"></a>清单 3. 设置 manifest 后的 clock.html 代码</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- clock.html --&gt;</div><div class=\"line\">&lt;!DOCTYPE HTML&gt;</div><div class=\"line\">&lt;html manifest=&quot;clock.manifest&quot;&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\"> &lt;title&gt;Clock&lt;/title&gt;</div><div class=\"line\"> &lt;script src=&quot;clock.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\"> &lt;link rel=&quot;stylesheet&quot; href=&quot;clock.css&quot;&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\"> &lt;p&gt;The time is: &lt;output id=&quot;clock&quot;&gt;&lt;/output&gt;&lt;/p&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n<p>修改后，当用户在线访问“clock.html”时，浏览器会缓存“clock.html”、“clock.css”和“clock.js”文件；而当用户离线访问时，这个 Web 应用也可以正常使用了。</p>\n<h3 id=\"cache-manifest-格式\"><a href=\"#cache-manifest-格式\" class=\"headerlink\" title=\"cache manifest 格式\"></a>cache manifest 格式</h3><p>下面说明书写 cache manifest 文件需要遵循的格式。</p>\n<ol>\n<li>首行必须是 CACHE MANIFEST。</li>\n<li>其后，每一行列出一个需要缓存的资源文件名。</li>\n<li>可根据需要列出在线访问的白名单。白名单中的所有资源不会被缓存，在使用时将直接在线访问。声明白名单使用 NETWORK：标识符。</li>\n<li>如果在白名单后还要补充需要缓存的资源，可以使用 CACHE：标识符。</li>\n<li>如果要声明某 URI 不能访问时的替补 URI，可以使用 FALLBACK：标识符。其后的每一行包含两个 URI，当第一个 URI 不可访问时，浏览器将尝试使用第二个 URI。</li>\n<li>注释要另起一行，以 # 号开头。</li>\n</ol>\n<p>清单 4 的代码中给出了 cache manifest 中各类标识符的使用示例。</p>\n<h5 id=\"清单-4-cache-manifest-示例代码\"><a href=\"#清单-4-cache-manifest-示例代码\" class=\"headerlink\" title=\"清单 4. cache manifest 示例代码\"></a>清单 4. cache manifest 示例代码</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">CACHE MANIFEST</div><div class=\"line\"># 上一行是必须书写的。</div><div class=\"line\"></div><div class=\"line\">images/sound-icon.png</div><div class=\"line\">images/background.png</div><div class=\"line\"></div><div class=\"line\">NETWORK:</div><div class=\"line\">comm.cgi</div></pre></td></tr></table></figure>\n<p># 下面是另一些需要缓存的资源，在这个示例中只有一个 css 文件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">CACHE:</div><div class=\"line\">style/default.css</div><div class=\"line\"></div><div class=\"line\">FALLBACK:</div><div class=\"line\">/files/projects /projects</div></pre></td></tr></table></figure>\n<h3 id=\"更新缓存\"><a href=\"#更新缓存\" class=\"headerlink\" title=\"更新缓存\"></a>更新缓存</h3><p>应用程序可以等待浏览器自动更新缓存，也可以使用 Javascript 接口手动触发更新。</p>\n<ol>\n<li><p>自动更新</p>\n<p>浏览器除了在第一次访问 Web 应用时缓存资源外，只会在 cache manifest 文件本身发生变化时更新缓存。而 cache manifest 中的资源文件发生变化并不会触发更新。</p>\n</li>\n<li><p>手动更新</p>\n<p>开发者也可以使用 window.applicationCache 的接口更新缓存。方法是检测 window.applicationCache.status 的值，如果是 UPDATEREADY，那么可以调用 window.applicationCache.update() 更新缓存。示范代码如下。</p>\n<h5 id=\"清单-5-手动更新缓存\"><a href=\"#清单-5-手动更新缓存\" class=\"headerlink\" title=\"清单 5 手动更新缓存\"></a>清单 5 手动更新缓存</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"> if (window.applicationCache.status == window.applicationCache.UPDATEREADY)</div><div class=\"line\">｛</div><div class=\"line\"> window.applicationCache.update();</div><div class=\"line\">｝</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"在线状态检测\"><a href=\"#在线状态检测\" class=\"headerlink\" title=\"在线状态检测\"></a>在线状态检测</h2><p>如果 Web 应用程序仅仅是一些静态页面的组合，那么通过 cache manifest 缓存资源文件以后，就可以支持离线访问了。但是随着互联网的发展，特别是 Web2.0 概念流行以来，用户的提交的数据渐渐成为互联网的主流。那么在开发支持离线的 Web 应用时，就不能仅仅满足于静态页面的展现，还必需考虑如何让用户在离线状态下也可以操作数据。离线状态时，把数据存储在本地；在线以后，再把数据同步到服务器上。为了做到这一点，开发者首先必须知道浏览器是否在线。HTML5 提供了两种检测是否在线的方式：navigator.online 和 online/offline 事件。</p>\n<ol>\n<li><p>navigator.onLine</p>\n<p>navigator.onLine 属性表示当前是否在线。如果为 true, 表示在线；如果为 false, 表示离线。当网络状态发生变化时，navigator.onLine 的值也随之变化。开发者可以通过读取它的值获取网络状态。</p>\n</li>\n<li><p>online/offline 事件</p>\n<p>当开发离线应用时，通过 navigator.onLine 获取网络状态通常是不够的。开发者还需要在网络状态发生变化时立刻得到通知，因此 HTML5 还提供了 online/offline 事件。当在线 / 离线状态切换时，online/offline 事件将触发在 body 元素上，并且沿着 document.body、document 和 window 的顺序冒泡。因此，开发者可以通过监听它们的 online/offline 事件来获悉网络状态。</p>\n</li>\n</ol>\n<h2 id=\"DOM-Storage\"><a href=\"#DOM-Storage\" class=\"headerlink\" title=\"DOM Storage\"></a>DOM Storage</h2><p>在开发支持离线功能的 Web 应用时，开发者需要在本地存储数据。当前浏览器支持的 cookie 虽然也可以用来存储数据，但是 cookie 长度非常小（通常几 k），而且功能有限。因此，HTML5 中新引入了 DOM Storage 机制，用于存储 key/value 对，它的设计目标是提供大规模、安全且易用的存储功能。</p>\n<h3 id=\"DOM-Storage-分类\"><a href=\"#DOM-Storage-分类\" class=\"headerlink\" title=\"DOM Storage 分类\"></a>DOM Storage 分类</h3><p>DOM Storage 分为两类：sessionStorage 和 localStorage。除了以下区别外，这两类存储对象的功能是完全一致的。</p>\n<ol>\n<li>sessionStorage 用于存储与当前浏览器窗口关联的数据。窗口关闭后，sessionStorage 中存储的数据将无法使用。</li>\n<li>localStorage 用于长期存储数据。窗口关闭后，localStorage 中的数据仍然可以被访问。所有浏览器窗口可以共享 localStorage 的数据。</li>\n</ol>\n<h3 id=\"DOM-Storage-接口\"><a href=\"#DOM-Storage-接口\" class=\"headerlink\" title=\"DOM Storage 接口\"></a>DOM Storage 接口</h3><p>每一个 Storage 对象都可以存储一系列 key/value 对，Storage 接口定义为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">interface Storage &#123;</div><div class=\"line\"> readonly attribute unsigned long length;</div><div class=\"line\"> getter DOMString key(in unsigned long index);</div><div class=\"line\"> getter any getItem(in DOMString key);</div><div class=\"line\"> setter creator void setItem(in DOMString key, in any data);</div><div class=\"line\"> deleter void removeItem(in DOMString key);</div><div class=\"line\"> void clear();</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p>其中最常用的接口是 getItem 和 setItem。getItem 用于获取指定 key 的 value，而 setItem 用于设置指定 key 的 value。</p>\n<h3 id=\"DOM-Storage-示例\"><a href=\"#DOM-Storage-示例\" class=\"headerlink\" title=\"DOM Storage 示例\"></a>DOM Storage 示例</h3><p>这里给出一个使用了 sessionStorage 的例子，localStorage 的用法与它相同。首先使用 SetItem 添加了一个名为“userName”的项，它的值是“developerworks”。然后，调用 getItem 得到“userName”的值，并且弹出提示框显示它。最后，调用 removeItem 删除“userName”。</p>\n<h5 id=\"清单-6-DOM-Storage-示例代码\"><a href=\"#清单-6-DOM-Storage-示例代码\" class=\"headerlink\" title=\"清单 6 DOM Storage 示例代码\"></a>清单 6 DOM Storage 示例代码</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE HTML&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">// 在 sessionStorage 中定义&apos;userName&apos;变量</div><div class=\"line\">sessionStorage.setItem(&apos;userName&apos;, &apos;developerworks&apos;);</div><div class=\"line\">// 访问&apos;userName&apos;变量</div><div class=\"line\">alert(&quot;Your user is: &quot; + sessionStorage.getItem(&apos;userName&apos;));</div><div class=\"line\">// 最后删除&apos;userName&apos;</div><div class=\"line\">sessionStorage.removeItem(&apos;userName&apos;);</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"Web-SQL-Database\"><a href=\"#Web-SQL-Database\" class=\"headerlink\" title=\"Web SQL Database\"></a>Web SQL Database</h2><p>除了 DOM Storage 以外，HTML5 中还有另外一种数据存储方式 Web SQL Database。它提供了基本的关系数据库功能，支持页面上的复杂的、交互式的数据存储。它既可以用来存储用户产生的数据，也可以作为从服务器获取数据的本地高速缓存。例如可以把电子邮件、日程等数据存储到数据库中。Web SQL Database 支持数据库事务的概念，从而保证了即使多个浏览器窗口操作同一数据，也不会产生冲突。</p>\n<h3 id=\"Web-SQL-Database-基本用法\"><a href=\"#Web-SQL-Database-基本用法\" class=\"headerlink\" title=\"Web SQL Database 基本用法\"></a>Web SQL Database 基本用法</h3><ol>\n<li>创建和打开数据库</li>\n</ol>\n<p>使用数据库的第一步是创建并打开数据库，API 是 openDatabase。当数据库已经存在时，openDatabase 仅仅打开数据库；如果这个数据库不存在，那么就创建一个空数据库并且打开它。openDatabase 的定义是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Database openDatabase(in DOMString name, in DOMString version,</div><div class=\"line\">in DOMString displayName, in unsigned long estimatedSize,</div><div class=\"line\">in optional DatabaseCallback creationCallback);</div></pre></td></tr></table></figure>\n<p>name：数据库名。</p>\n<p>version：数据库版本。</p>\n<p>displayName：显示名称。</p>\n<p>estimatedSize：数据库预估长度（以字节为单位）。</p>\n<p>creationCallback：回调函数。</p>\n<ol>\n<li><p>执行事务处理</p>\n<p>在打开数据库以后，就可以使用事务 API transaction。每一个事务作为操作数据库的原子操作，不会被打断，从而避免了数据冲突。transaction 的定义是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">void transaction(in SQLTransactionCallback callback,</div><div class=\"line\">in optional SQLTransactionErrorCallback errorCallback,</div><div class=\"line\">in optional SQLVoidCallback successCallback);</div></pre></td></tr></table></figure>\n<p>callback：事务回调函数，其中可以执行 SQL 语句。</p>\n<p>errorCallback：出错回调函数。</p>\n<p>successCallback：执行成功回调函数。</p>\n</li>\n<li><p>执行 SQL 语句</p>\n<p>在事务的回调函数 callback 中，可以执行 SQL 语句，API 是 executeSQL。executeSQL 的定义是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">void executeSql(in DOMString sqlStatement,</div><div class=\"line\">in optional ObjectArray arguments, in optional SQLStatementCallback callback,</div><div class=\"line\">in optional SQLStatementErrorCallback errorCallback);</div></pre></td></tr></table></figure>\n<p>sqlStatement：SQL 语句。</p>\n<p>arguments：SQL 语句需要的参数。</p>\n<p>callback：回调函数。</p>\n<p>errorCallback：出错回调函数。</p>\n</li>\n</ol>\n<h3 id=\"Web-SQL-Database-示例\"><a href=\"#Web-SQL-Database-示例\" class=\"headerlink\" title=\"Web SQL Database 示例\"></a>Web SQL Database 示例</h3><p>下面通过一个例子说明 Web SQL Database 的基本用法。它首先调用 openDatabase 创建了名为“fooDB”的数据库。然后使用 transaction 执行两条 SQL 语句。第一条 SQL 语句创建了名为“foo”的表，第二条 SQL 语句向表中插入一条记录。</p>\n<h5 id=\"清单-7-Web-SQL-Database-示例代码\"><a href=\"#清单-7-Web-SQL-Database-示例代码\" class=\"headerlink\" title=\"清单 7 Web SQL Database 示例代码\"></a>清单 7 Web SQL Database 示例代码</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">var db = openDatabase(&apos;fooDB&apos;, &apos;1.0&apos;, &apos;fooDB&apos;, 2 * 1024);</div><div class=\"line\">db.transaction(function (tx) &#123;</div><div class=\"line\"> tx.executeSql(&apos;CREATE TABLE IF NOT EXISTS foo (id unique, text)&apos;);</div><div class=\"line\"> tx.executeSql(&apos;INSERT INTO foo (id, text) VALUES (1, &quot;foobar&quot;)&apos;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"离线应用示例\"><a href=\"#离线应用示例\" class=\"headerlink\" title=\"离线应用示例\"></a>离线应用示例</h2><p>最后，通过一个例子来说明使用 HTML5 开发离线应用的基本方法。这个例子会用到前面提到的离线资源缓存、在线状态检测和 DOM Storage 等功能。假设我们开发一个便签管理的 Web 应用程序，用户可以在其中添加和删除便签。它支持离线功能，允许用户在离线状态下添加、删除便签，并且当在线以后能够同步到服务器上。</p>\n<ol>\n<li><p>应用程序页面</p>\n<p>这个程序的界面很简单，如图 1 所示。用户点击“New Note”按钮可以在弹出框中创建新的便签，双击某便签就表示删除它。</p>\n<h5 id=\"图-1-应用程序页面\"><a href=\"#图-1-应用程序页面\" class=\"headerlink\" title=\"图 1. 应用程序页面\"></a>图 1. 应用程序页面</h5><p>​</p>\n<p>这个页面的源文件是 index.html，它的代码如清单 8 所示。</p>\n<h5 id=\"清单-8-页面-HTML-代码\"><a href=\"#清单-8-页面-HTML-代码\" class=\"headerlink\" title=\"清单 8 页面 HTML 代码\"></a>清单 8 页面 HTML 代码</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html manifest=&quot;notes.manifest&quot;&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;server.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;data.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;UI.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;title&gt;Note List&lt;/title&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;body onload = &quot;SyncWithServer()&quot;&gt;</div><div class=\"line\">&lt;input type=&quot;button&quot; value=&quot;New Note&quot; onclick=&quot;newNote()&quot;&gt;</div><div class=\"line\">&lt;ul id=&quot;list&quot;&gt;&lt;/ul&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n<p>在 body 中声明了一个按钮和一个无序列表。当按下“New Note”按钮时，newNote 函数将被调用，它用来添加一条新的便签。而无序列表初始为空，它是用来显示便签的列表。</p>\n</li>\n<li><p>cache manifest 文件</p>\n<p>定义 cache manifest 文件，声明需要缓存的资源。在这个例子中，需要缓存“index.html”、“server.js”、“data.js”和“UI.js”等 4 个文件。除了前面列出的“index.html”外，“server.js”、“data.js”和“UI.js”分别包含服务器相关、数据存储和用户界面代码。cache manifest 文件定义如下。</p>\n<h5 id=\"清单-9-cache-manifest-文件\"><a href=\"#清单-9-cache-manifest-文件\" class=\"headerlink\" title=\"清单 9 cache manifest 文件\"></a>清单 9 cache manifest 文件</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">CACHE MANIFEST</div><div class=\"line\">index.html</div><div class=\"line\">server.js</div><div class=\"line\">data.js</div><div class=\"line\">UI.js</div></pre></td></tr></table></figure>\n</li>\n<li><p>用户界面代码</p>\n<p>用户界面代码定义在 UI.js 中。</p>\n<h5 id=\"清单-10-用户界面代码-UI-js\"><a href=\"#清单-10-用户界面代码-UI-js\" class=\"headerlink\" title=\"清单 10 用户界面代码 UI.js\"></a>清单 10 用户界面代码 UI.js</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\">function newNote()</div><div class=\"line\">&#123;</div><div class=\"line\">   var title = window.prompt(&quot;New Note:&quot;);</div><div class=\"line\">   if (title)</div><div class=\"line\">   &#123;</div><div class=\"line\">       add(title);</div><div class=\"line\">   &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">function add(title)</div><div class=\"line\">&#123;</div><div class=\"line\">   // 在界面中添加</div><div class=\"line\">   addUIItem(title);</div><div class=\"line\">   // 在数据中添加</div><div class=\"line\">   addDataItem(title);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">function remove(title)</div><div class=\"line\">&#123;</div><div class=\"line\">   // 从界面中删除</div><div class=\"line\">   removeUIItem(title);</div><div class=\"line\">   // 从数据中删除</div><div class=\"line\">   removeDataItem(title);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">function addUIItem(title)</div><div class=\"line\">&#123;</div><div class=\"line\">   var item = document.createElement(&quot;li&quot;);</div><div class=\"line\">   item.setAttribute(&quot;ondblclick&quot;, &quot;remove(&apos;&quot;+title+&quot;&apos;)&quot;);</div><div class=\"line\">   item.innerHTML=title;</div><div class=\"line\"></div><div class=\"line\">   var list = document.getElementById(&quot;list&quot;);</div><div class=\"line\">   list.appendChild(item);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">function removeUIItem(title)</div><div class=\"line\">&#123;</div><div class=\"line\">   var list = document.getElementById(&quot;list&quot;);</div><div class=\"line\">   for (var i = 0; i &lt; list.children.length; i++) &#123;</div><div class=\"line\">       if(list.children[i].innerHTML == title)</div><div class=\"line\">       &#123;</div><div class=\"line\">           list.removeChild(list.children[i]);</div><div class=\"line\">       &#125;</div><div class=\"line\">   &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>UI.js 中的代码包含添加便签和删除便签的界面操作。</p>\n<ul>\n<li>添加便签</li>\n</ul>\n<ol>\n<li>用户点击“New Note”按钮，newNote 函数被调用。</li>\n<li>newNote 函数会弹出对话框，用户输入新便签内容。newNote 调用 add 函数。</li>\n<li>add 函数分别调用 addUIItem 和 addDataItem 添加页面元素和数据。addDataItem 代码将在后面列出。</li>\n<li>addUIItem 函数在页面列表中添加一项。并指明 ondblclick 事件的处理函数是 remove，使得双击操作可以删除便签。</li>\n</ol>\n<ul>\n<li>删除便签</li>\n</ul>\n<ol>\n<li>用户双击某便签时，调用 remove 函数。</li>\n<li>remove 函数分别调用 removeUIItem 和 removeDataItem 删除页面元素和数据。removeDataItem 将在后面列出。</li>\n<li>removeUIItem 函数删除页面列表中的相应项。</li>\n</ol>\n</li>\n<li><p>数据存储代码</p>\n<p>数据存储代码定义在 data.js 中。</p>\n<h5 id=\"清单-11-数据存储代码-data-js\"><a href=\"#清单-11-数据存储代码-data-js\" class=\"headerlink\" title=\"清单 11 数据存储代码 data.js\"></a>清单 11 数据存储代码 data.js</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div></pre></td><td class=\"code\"><pre><div class=\"line\">var storage = window[&apos;localStorage&apos;];</div><div class=\"line\"></div><div class=\"line\">function addDataItem(title)</div><div class=\"line\">&#123;</div><div class=\"line\">   if (navigator.onLine) // 在线状态</div><div class=\"line\">   &#123;</div><div class=\"line\">       addServerItem(title);</div><div class=\"line\">   &#125;</div><div class=\"line\">   else // 离线状态</div><div class=\"line\">   &#123;</div><div class=\"line\">       var str = storage.getItem(&quot;toAdd&quot;);</div><div class=\"line\">       if(str == null)</div><div class=\"line\">       &#123;</div><div class=\"line\">           str = title;</div><div class=\"line\">       &#125;</div><div class=\"line\">       else</div><div class=\"line\">       &#123;</div><div class=\"line\">           str = str + &quot;,&quot; + title;</div><div class=\"line\">       &#125;</div><div class=\"line\">       storage.setItem(&quot;toAdd&quot;, str);</div><div class=\"line\">   &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">function removeDataItem(title)</div><div class=\"line\">&#123;</div><div class=\"line\">   if (navigator.onLine) // 在线状态</div><div class=\"line\">   &#123;</div><div class=\"line\">       removeServerItem(title);</div><div class=\"line\">   &#125;</div><div class=\"line\">   else // 离线状态</div><div class=\"line\">   &#123;</div><div class=\"line\">       var str = storage.getItem(&quot;toRemove&quot;);</div><div class=\"line\">       if(str == null)</div><div class=\"line\">       &#123;</div><div class=\"line\">           str = title;</div><div class=\"line\">       &#125;</div><div class=\"line\">       else</div><div class=\"line\">       &#123;</div><div class=\"line\">           str = str + &quot;,&quot; + title;</div><div class=\"line\">       &#125;</div><div class=\"line\">       storage.setItem(&quot;toRemove&quot;, str);</div><div class=\"line\">   &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">function SyncWithServer()</div><div class=\"line\">&#123;</div><div class=\"line\">   // 如果当前是离线状态，不需要做任何处理</div><div class=\"line\">   if (navigator.onLine == false)return;</div><div class=\"line\"></div><div class=\"line\">   var i = 0;</div><div class=\"line\">   // 和服务器同步添加操作</div><div class=\"line\">   var str = storage.getItem(&quot;toAdd&quot;);</div><div class=\"line\">   if(str != null)</div><div class=\"line\">   &#123;</div><div class=\"line\">       var addItems = str.split(&quot;,&quot;);</div><div class=\"line\">       for(i = 0; i&lt;addItems.length; i++)</div><div class=\"line\">       &#123;</div><div class=\"line\">           addDataItem(addItems[i]);</div><div class=\"line\">       &#125;</div><div class=\"line\">       storage.removeItem(&quot;toAdd&quot;);</div><div class=\"line\">   &#125;</div><div class=\"line\"></div><div class=\"line\">   // 和服务器同步删除操作</div><div class=\"line\">   str = storage.getItem(&quot;toRemove&quot;);</div><div class=\"line\">   if(str != null)</div><div class=\"line\">   &#123;</div><div class=\"line\">       var removeItems = str.split(&quot;,&quot;);</div><div class=\"line\">       for(i = 0; i&lt;removeItems.length; i++)</div><div class=\"line\">       &#123;</div><div class=\"line\">           removeDataItem(removeItems[i]);</div><div class=\"line\">       &#125;</div><div class=\"line\">       storage.removeItem(&quot;toRemove&quot;);</div><div class=\"line\">   &#125;</div><div class=\"line\"></div><div class=\"line\">   // 删除界面中的所有便签</div><div class=\"line\">   var list = document.getElementById(&quot;list&quot;);</div><div class=\"line\">   while(list.lastChild != list.firstElementChild)</div><div class=\"line\">       list.removeChild(list.lastChild);</div><div class=\"line\">   if(list.firstElementChild)</div><div class=\"line\">       list.removeChild(list.firstElementChild);</div><div class=\"line\"></div><div class=\"line\">   // 从服务器获取全部便签，并显示在界面中</div><div class=\"line\">   var allItems = getServerItems();</div><div class=\"line\">   if(allItems != &quot;&quot;)</div><div class=\"line\">   &#123;</div><div class=\"line\">       var items = allItems.split(&quot;,&quot;);</div><div class=\"line\">       for(i = 0; i&lt;items.length; i++)</div><div class=\"line\">       &#123;</div><div class=\"line\">           addUIItem(items[i]);</div><div class=\"line\">       &#125;</div><div class=\"line\">   &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>window.addEventListener(“online”, SyncWithServer,false);</p>\n<p>data.js 中的代码包含添加便签、删除便签和与服务器同步等数据操作。其中用到了 navigator.onLine 属性、online 事件、DOM Storage 等 HTML5 新功能。</p>\n<ul>\n<li>添加便签：addDataItem</li>\n</ul>\n<ol>\n<li>通过 navigator.onLine 判断是否在线。</li>\n<li>如果在线，那么调用 addServerItem 直接把数据存储到服务器上。addServerItem 将在后面列出。</li>\n<li>如果离线，那么把数据添加到 localStorage 的“toAdd”项中。</li>\n</ol>\n<ul>\n<li>删除便签：removeDataItem</li>\n</ul>\n<ol>\n<li>通过 navigator.onLine 判断是否在线。</li>\n<li>如果在线，那么调用 removeServerItem 直接在服务器上删除数据。removeServerItem 将在后面列出。</li>\n<li>如果离线，那么把数据添加到 localStorage 的“toRemove”项中。</li>\n</ol>\n<ul>\n<li>数据同步：SyncWithServer</li>\n</ul>\n<p>在 data.js 的最后一行，注册了 window 的 online 事件处理函数 SyncWithServer。当 online 事件发生时，SyncWithServer 将被调用。其功能如下。</p>\n<ol>\n<li>如果 navigator.onLine 表示当前离线，则不做任何操作。</li>\n<li>把 localStorage 中“toAdd”项的所有数据添加到服务器上，并删除“toAdd”项。</li>\n<li>把 localStorage 中“toRemove”项的所有数据从服务器中删除，并删除“toRemove”项。</li>\n<li>删除当前页面列表中的所有便签。</li>\n<li>调用 getServerItems 从服务器获取所有便签，并添加在页面列表中。getServerItems 将在后面列出。</li>\n</ol>\n</li>\n<li><p>服务器相关代码</p>\n<p>服务器相关代码定义在 server.js 中。</p>\n<h5 id=\"清单-12-服务器相关代码-server-js\"><a href=\"#清单-12-服务器相关代码-server-js\" class=\"headerlink\" title=\"清单 12 服务器相关代码 server.js\"></a>清单 12 服务器相关代码 server.js</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">function addServerItem(title)</div><div class=\"line\">&#123;</div><div class=\"line\">   // 在服务器中添加一项</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">function removeServerItem(title)</div><div class=\"line\">&#123;</div><div class=\"line\">   // 在服务器中删除一项</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">function getServerItems()</div><div class=\"line\">&#123;</div><div class=\"line\">   // 返回服务器中存储的便签列表</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>由于这部分代码与服务器有关，这里只说明各个函数的功能，具体实现可以根据不同服务器编写代码。</p>\n<ul>\n<li>在服务器中添加一项：addServerItem</li>\n<li>在服务器中删除一项：removeServerItem</li>\n<li>返回服务器中存储的便签列表：getServerItems</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>本文介绍了 HTML5 为了支持离线应用程序新增的强大功能。通过阅读本文，读者能够了解到 HTML5 中离线相关特性的基本用法，从而掌握利用 HTML5 开发 Web 离线应用的方法。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"使用-HTML5-开发离线应用\"><a href=\"#使用-HTML5-开发离线应用\" class=\"headerlink\" title=\"使用 HTML5 开发离线应用\"></a>使用 HTML5 开发离线应用</h1><p>Web2.0 技术鼓励个人的参与，每个人都是 Web 内容的撰写者。如果 Web 应用能够提供离线的功能，让用户在没有网络的地方（例如飞机上）和时候（网络坏了），也能进行内容撰写，等到有网络的时候，再同步到 Web 上，就大大方便了用户的使用。HTML5 作为新一代的 HTML 标准，包含了对离线功能的支持。本文介绍了 HTML5 离线功能中的离线资源缓存、在线状态检测、本地数据存储等内容，并举例说明了如何使用 HTML5 的新特性开发离线应用。</p>\n<h2 id=\"HTML5-离线功能介绍\"><a href=\"#HTML5-离线功能介绍\" class=\"headerlink\" title=\"HTML5 离线功能介绍\"></a>HTML5 离线功能介绍</h2><p>HTML5 是目前正在讨论的新一代 HTML 标准，它代表了现在 Web 领域的最新发展方向。在 HTML5 标准中，加入了新的多样的内容描述标签，直接支持表单验证、视频音频标签、网页元素的拖拽、离线存储和工作线程等功能。其中一个新特性就是对离线应用开发的支持。</p>\n<p>在开发支持离线的 Web 应用程序时，开发者通常需要使用以下三个方面的功能：</p>\n<ol>\n<li>离线资源缓存：需要一种方式来指明应用程序离线工作时所需的资源文件。这样，浏览器才能在在线状态时，把这些文件缓存到本地。此后，当用户离线访问应用程序时，这些资源文件会自动加载，从而让用户正常使用。HTML5 中，通过 cache manifest 文件指明需要缓存的资源，并支持自动和手动两种缓存更新方式。</li>\n<li>在线状态检测：开发者需要知道浏览器是否在线，这样才能够针对在线或离线的状态，做出对应的处理。在 HTML5 中，提供了两种检测当前网络是否在线的方式。</li>\n<li>本地数据存储：离线时，需要能够把数据存储到本地，以便在线时同步到服务器上。为了满足不同的存储需求，HTML5 提供了 DOM Storage 和 Web SQL Database 两种存储机制。前者提供了易用的 key/value 对存储方式，而后者提供了基本的关系数据库存储功能。</li>\n</ol>\n<p>尽管 HTML5 还处于草稿状态，但是各大主流浏览器都已经实现了其中的很多功能。Chrome、Firefox、Safari 和 Opera 的最新版本都对 HTML5 离线功能提供了完整的支持。IE8 也支持了其中的在线状态检测和 DOM Storage 功能。下面将具体介绍 HTML5 离线功能中的离线资源缓存、在线状态检测、DOM Storage 和 Web SQL Database，最后通过一个简单的 Web 程序说明使用 HTML5 开发离线应用的方法。</p>\n<h2 id=\"离线资源缓存\"><a href=\"#离线资源缓存\" class=\"headerlink\" title=\"离线资源缓存\"></a>离线资源缓存</h2><p>为了能够让用户在离线状态下继续访问 Web 应用，开发者需要提供一个 cache manifest 文件。这个文件中列出了所有需要在离线状态下使用的资源，浏览器会把这些资源缓存到本地。本节先通过一个例子展示 cache manifest 文件的用途，然后详细描述其书写方法，最后说明缓存的更新方式。</p>\n<h3 id=\"cache-manifest-示例\"><a href=\"#cache-manifest-示例\" class=\"headerlink\" title=\"cache manifest 示例\"></a>cache manifest 示例</h3><p>我们通过 W3C 提供的示例来说明。Clock Web 应用由三个文件“clock.html”、“clock.css”和“clock.js”组成。</p>\n<h5 id=\"清单-1-Clock-应用代码\"><a href=\"#清单-1-Clock-应用代码\" class=\"headerlink\" title=\"清单 1. Clock 应用代码\"></a>清单 1. Clock 应用代码</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- clock.html --&gt;</div><div class=\"line\">&lt;!DOCTYPE HTML&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\"> &lt;title&gt;Clock&lt;/title&gt;</div><div class=\"line\"> &lt;script src=&quot;clock.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\"> &lt;link rel=&quot;stylesheet&quot; href=&quot;clock.css&quot;&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\"> &lt;p&gt;The time is: &lt;output id=&quot;clock&quot;&gt;&lt;/output&gt;&lt;/p&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div><div class=\"line\"></div><div class=\"line\">/* clock.css */</div><div class=\"line\">output &#123; font: 2em sans-serif; &#125;</div><div class=\"line\"></div><div class=\"line\">/* clock.js */</div><div class=\"line\">setTimeout(function () &#123;</div><div class=\"line\">   document.getElementById(&apos;clock&apos;).value = new Date();</div><div class=\"line\">&#125;, 1000);</div></pre></td></tr></table></figure>\n<p>当用户在离线状态下访问“clock.html”时，页面将无法展现。为了支持离线访问，开发者必须添加 cache manifest 文件，指明需要缓存的资源。这个例子中的 cache manifest 文件为“clock.manifest”，它声明了 3 个需要缓存的资源文件“clock.html”、“clock.css”和“clock.js”。</p>\n<h5 id=\"清单-2-clock-manifest-代码\"><a href=\"#清单-2-clock-manifest-代码\" class=\"headerlink\" title=\"清单 2. clock.manifest 代码\"></a>清单 2. clock.manifest 代码</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">CACHE MANIFEST</div><div class=\"line\">clock.html</div><div class=\"line\">clock.css</div><div class=\"line\">clock.js</div></pre></td></tr></table></figure>\n<p>添加了 cache manifest 文件后，还需要修改“clock.html”，把 <html> 标签的 manifest 属性设置为“clock.manifest”。修改后的“clock.html”代码如下。</html></p>\n<h5 id=\"清单-3-设置-manifest-后的-clock-html-代码\"><a href=\"#清单-3-设置-manifest-后的-clock-html-代码\" class=\"headerlink\" title=\"清单 3. 设置 manifest 后的 clock.html 代码\"></a>清单 3. 设置 manifest 后的 clock.html 代码</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- clock.html --&gt;</div><div class=\"line\">&lt;!DOCTYPE HTML&gt;</div><div class=\"line\">&lt;html manifest=&quot;clock.manifest&quot;&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\"> &lt;title&gt;Clock&lt;/title&gt;</div><div class=\"line\"> &lt;script src=&quot;clock.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\"> &lt;link rel=&quot;stylesheet&quot; href=&quot;clock.css&quot;&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\"> &lt;p&gt;The time is: &lt;output id=&quot;clock&quot;&gt;&lt;/output&gt;&lt;/p&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n<p>修改后，当用户在线访问“clock.html”时，浏览器会缓存“clock.html”、“clock.css”和“clock.js”文件；而当用户离线访问时，这个 Web 应用也可以正常使用了。</p>\n<h3 id=\"cache-manifest-格式\"><a href=\"#cache-manifest-格式\" class=\"headerlink\" title=\"cache manifest 格式\"></a>cache manifest 格式</h3><p>下面说明书写 cache manifest 文件需要遵循的格式。</p>\n<ol>\n<li>首行必须是 CACHE MANIFEST。</li>\n<li>其后，每一行列出一个需要缓存的资源文件名。</li>\n<li>可根据需要列出在线访问的白名单。白名单中的所有资源不会被缓存，在使用时将直接在线访问。声明白名单使用 NETWORK：标识符。</li>\n<li>如果在白名单后还要补充需要缓存的资源，可以使用 CACHE：标识符。</li>\n<li>如果要声明某 URI 不能访问时的替补 URI，可以使用 FALLBACK：标识符。其后的每一行包含两个 URI，当第一个 URI 不可访问时，浏览器将尝试使用第二个 URI。</li>\n<li>注释要另起一行，以 # 号开头。</li>\n</ol>\n<p>清单 4 的代码中给出了 cache manifest 中各类标识符的使用示例。</p>\n<h5 id=\"清单-4-cache-manifest-示例代码\"><a href=\"#清单-4-cache-manifest-示例代码\" class=\"headerlink\" title=\"清单 4. cache manifest 示例代码\"></a>清单 4. cache manifest 示例代码</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">CACHE MANIFEST</div><div class=\"line\"># 上一行是必须书写的。</div><div class=\"line\"></div><div class=\"line\">images/sound-icon.png</div><div class=\"line\">images/background.png</div><div class=\"line\"></div><div class=\"line\">NETWORK:</div><div class=\"line\">comm.cgi</div></pre></td></tr></table></figure>\n<p># 下面是另一些需要缓存的资源，在这个示例中只有一个 css 文件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">CACHE:</div><div class=\"line\">style/default.css</div><div class=\"line\"></div><div class=\"line\">FALLBACK:</div><div class=\"line\">/files/projects /projects</div></pre></td></tr></table></figure>\n<h3 id=\"更新缓存\"><a href=\"#更新缓存\" class=\"headerlink\" title=\"更新缓存\"></a>更新缓存</h3><p>应用程序可以等待浏览器自动更新缓存，也可以使用 Javascript 接口手动触发更新。</p>\n<ol>\n<li><p>自动更新</p>\n<p>浏览器除了在第一次访问 Web 应用时缓存资源外，只会在 cache manifest 文件本身发生变化时更新缓存。而 cache manifest 中的资源文件发生变化并不会触发更新。</p>\n</li>\n<li><p>手动更新</p>\n<p>开发者也可以使用 window.applicationCache 的接口更新缓存。方法是检测 window.applicationCache.status 的值，如果是 UPDATEREADY，那么可以调用 window.applicationCache.update() 更新缓存。示范代码如下。</p>\n<h5 id=\"清单-5-手动更新缓存\"><a href=\"#清单-5-手动更新缓存\" class=\"headerlink\" title=\"清单 5 手动更新缓存\"></a>清单 5 手动更新缓存</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"> if (window.applicationCache.status == window.applicationCache.UPDATEREADY)</div><div class=\"line\">｛</div><div class=\"line\"> window.applicationCache.update();</div><div class=\"line\">｝</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"在线状态检测\"><a href=\"#在线状态检测\" class=\"headerlink\" title=\"在线状态检测\"></a>在线状态检测</h2><p>如果 Web 应用程序仅仅是一些静态页面的组合，那么通过 cache manifest 缓存资源文件以后，就可以支持离线访问了。但是随着互联网的发展，特别是 Web2.0 概念流行以来，用户的提交的数据渐渐成为互联网的主流。那么在开发支持离线的 Web 应用时，就不能仅仅满足于静态页面的展现，还必需考虑如何让用户在离线状态下也可以操作数据。离线状态时，把数据存储在本地；在线以后，再把数据同步到服务器上。为了做到这一点，开发者首先必须知道浏览器是否在线。HTML5 提供了两种检测是否在线的方式：navigator.online 和 online/offline 事件。</p>\n<ol>\n<li><p>navigator.onLine</p>\n<p>navigator.onLine 属性表示当前是否在线。如果为 true, 表示在线；如果为 false, 表示离线。当网络状态发生变化时，navigator.onLine 的值也随之变化。开发者可以通过读取它的值获取网络状态。</p>\n</li>\n<li><p>online/offline 事件</p>\n<p>当开发离线应用时，通过 navigator.onLine 获取网络状态通常是不够的。开发者还需要在网络状态发生变化时立刻得到通知，因此 HTML5 还提供了 online/offline 事件。当在线 / 离线状态切换时，online/offline 事件将触发在 body 元素上，并且沿着 document.body、document 和 window 的顺序冒泡。因此，开发者可以通过监听它们的 online/offline 事件来获悉网络状态。</p>\n</li>\n</ol>\n<h2 id=\"DOM-Storage\"><a href=\"#DOM-Storage\" class=\"headerlink\" title=\"DOM Storage\"></a>DOM Storage</h2><p>在开发支持离线功能的 Web 应用时，开发者需要在本地存储数据。当前浏览器支持的 cookie 虽然也可以用来存储数据，但是 cookie 长度非常小（通常几 k），而且功能有限。因此，HTML5 中新引入了 DOM Storage 机制，用于存储 key/value 对，它的设计目标是提供大规模、安全且易用的存储功能。</p>\n<h3 id=\"DOM-Storage-分类\"><a href=\"#DOM-Storage-分类\" class=\"headerlink\" title=\"DOM Storage 分类\"></a>DOM Storage 分类</h3><p>DOM Storage 分为两类：sessionStorage 和 localStorage。除了以下区别外，这两类存储对象的功能是完全一致的。</p>\n<ol>\n<li>sessionStorage 用于存储与当前浏览器窗口关联的数据。窗口关闭后，sessionStorage 中存储的数据将无法使用。</li>\n<li>localStorage 用于长期存储数据。窗口关闭后，localStorage 中的数据仍然可以被访问。所有浏览器窗口可以共享 localStorage 的数据。</li>\n</ol>\n<h3 id=\"DOM-Storage-接口\"><a href=\"#DOM-Storage-接口\" class=\"headerlink\" title=\"DOM Storage 接口\"></a>DOM Storage 接口</h3><p>每一个 Storage 对象都可以存储一系列 key/value 对，Storage 接口定义为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">interface Storage &#123;</div><div class=\"line\"> readonly attribute unsigned long length;</div><div class=\"line\"> getter DOMString key(in unsigned long index);</div><div class=\"line\"> getter any getItem(in DOMString key);</div><div class=\"line\"> setter creator void setItem(in DOMString key, in any data);</div><div class=\"line\"> deleter void removeItem(in DOMString key);</div><div class=\"line\"> void clear();</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p>其中最常用的接口是 getItem 和 setItem。getItem 用于获取指定 key 的 value，而 setItem 用于设置指定 key 的 value。</p>\n<h3 id=\"DOM-Storage-示例\"><a href=\"#DOM-Storage-示例\" class=\"headerlink\" title=\"DOM Storage 示例\"></a>DOM Storage 示例</h3><p>这里给出一个使用了 sessionStorage 的例子，localStorage 的用法与它相同。首先使用 SetItem 添加了一个名为“userName”的项，它的值是“developerworks”。然后，调用 getItem 得到“userName”的值，并且弹出提示框显示它。最后，调用 removeItem 删除“userName”。</p>\n<h5 id=\"清单-6-DOM-Storage-示例代码\"><a href=\"#清单-6-DOM-Storage-示例代码\" class=\"headerlink\" title=\"清单 6 DOM Storage 示例代码\"></a>清单 6 DOM Storage 示例代码</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE HTML&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">&lt;script&gt;</div><div class=\"line\">// 在 sessionStorage 中定义&apos;userName&apos;变量</div><div class=\"line\">sessionStorage.setItem(&apos;userName&apos;, &apos;developerworks&apos;);</div><div class=\"line\">// 访问&apos;userName&apos;变量</div><div class=\"line\">alert(&quot;Your user is: &quot; + sessionStorage.getItem(&apos;userName&apos;));</div><div class=\"line\">// 最后删除&apos;userName&apos;</div><div class=\"line\">sessionStorage.removeItem(&apos;userName&apos;);</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"Web-SQL-Database\"><a href=\"#Web-SQL-Database\" class=\"headerlink\" title=\"Web SQL Database\"></a>Web SQL Database</h2><p>除了 DOM Storage 以外，HTML5 中还有另外一种数据存储方式 Web SQL Database。它提供了基本的关系数据库功能，支持页面上的复杂的、交互式的数据存储。它既可以用来存储用户产生的数据，也可以作为从服务器获取数据的本地高速缓存。例如可以把电子邮件、日程等数据存储到数据库中。Web SQL Database 支持数据库事务的概念，从而保证了即使多个浏览器窗口操作同一数据，也不会产生冲突。</p>\n<h3 id=\"Web-SQL-Database-基本用法\"><a href=\"#Web-SQL-Database-基本用法\" class=\"headerlink\" title=\"Web SQL Database 基本用法\"></a>Web SQL Database 基本用法</h3><ol>\n<li>创建和打开数据库</li>\n</ol>\n<p>使用数据库的第一步是创建并打开数据库，API 是 openDatabase。当数据库已经存在时，openDatabase 仅仅打开数据库；如果这个数据库不存在，那么就创建一个空数据库并且打开它。openDatabase 的定义是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Database openDatabase(in DOMString name, in DOMString version,</div><div class=\"line\">in DOMString displayName, in unsigned long estimatedSize,</div><div class=\"line\">in optional DatabaseCallback creationCallback);</div></pre></td></tr></table></figure>\n<p>name：数据库名。</p>\n<p>version：数据库版本。</p>\n<p>displayName：显示名称。</p>\n<p>estimatedSize：数据库预估长度（以字节为单位）。</p>\n<p>creationCallback：回调函数。</p>\n<ol>\n<li><p>执行事务处理</p>\n<p>在打开数据库以后，就可以使用事务 API transaction。每一个事务作为操作数据库的原子操作，不会被打断，从而避免了数据冲突。transaction 的定义是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">void transaction(in SQLTransactionCallback callback,</div><div class=\"line\">in optional SQLTransactionErrorCallback errorCallback,</div><div class=\"line\">in optional SQLVoidCallback successCallback);</div></pre></td></tr></table></figure>\n<p>callback：事务回调函数，其中可以执行 SQL 语句。</p>\n<p>errorCallback：出错回调函数。</p>\n<p>successCallback：执行成功回调函数。</p>\n</li>\n<li><p>执行 SQL 语句</p>\n<p>在事务的回调函数 callback 中，可以执行 SQL 语句，API 是 executeSQL。executeSQL 的定义是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">void executeSql(in DOMString sqlStatement,</div><div class=\"line\">in optional ObjectArray arguments, in optional SQLStatementCallback callback,</div><div class=\"line\">in optional SQLStatementErrorCallback errorCallback);</div></pre></td></tr></table></figure>\n<p>sqlStatement：SQL 语句。</p>\n<p>arguments：SQL 语句需要的参数。</p>\n<p>callback：回调函数。</p>\n<p>errorCallback：出错回调函数。</p>\n</li>\n</ol>\n<h3 id=\"Web-SQL-Database-示例\"><a href=\"#Web-SQL-Database-示例\" class=\"headerlink\" title=\"Web SQL Database 示例\"></a>Web SQL Database 示例</h3><p>下面通过一个例子说明 Web SQL Database 的基本用法。它首先调用 openDatabase 创建了名为“fooDB”的数据库。然后使用 transaction 执行两条 SQL 语句。第一条 SQL 语句创建了名为“foo”的表，第二条 SQL 语句向表中插入一条记录。</p>\n<h5 id=\"清单-7-Web-SQL-Database-示例代码\"><a href=\"#清单-7-Web-SQL-Database-示例代码\" class=\"headerlink\" title=\"清单 7 Web SQL Database 示例代码\"></a>清单 7 Web SQL Database 示例代码</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">var db = openDatabase(&apos;fooDB&apos;, &apos;1.0&apos;, &apos;fooDB&apos;, 2 * 1024);</div><div class=\"line\">db.transaction(function (tx) &#123;</div><div class=\"line\"> tx.executeSql(&apos;CREATE TABLE IF NOT EXISTS foo (id unique, text)&apos;);</div><div class=\"line\"> tx.executeSql(&apos;INSERT INTO foo (id, text) VALUES (1, &quot;foobar&quot;)&apos;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"离线应用示例\"><a href=\"#离线应用示例\" class=\"headerlink\" title=\"离线应用示例\"></a>离线应用示例</h2><p>最后，通过一个例子来说明使用 HTML5 开发离线应用的基本方法。这个例子会用到前面提到的离线资源缓存、在线状态检测和 DOM Storage 等功能。假设我们开发一个便签管理的 Web 应用程序，用户可以在其中添加和删除便签。它支持离线功能，允许用户在离线状态下添加、删除便签，并且当在线以后能够同步到服务器上。</p>\n<ol>\n<li><p>应用程序页面</p>\n<p>这个程序的界面很简单，如图 1 所示。用户点击“New Note”按钮可以在弹出框中创建新的便签，双击某便签就表示删除它。</p>\n<h5 id=\"图-1-应用程序页面\"><a href=\"#图-1-应用程序页面\" class=\"headerlink\" title=\"图 1. 应用程序页面\"></a>图 1. 应用程序页面</h5><p>​</p>\n<p>这个页面的源文件是 index.html，它的代码如清单 8 所示。</p>\n<h5 id=\"清单-8-页面-HTML-代码\"><a href=\"#清单-8-页面-HTML-代码\" class=\"headerlink\" title=\"清单 8 页面 HTML 代码\"></a>清单 8 页面 HTML 代码</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html manifest=&quot;notes.manifest&quot;&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;server.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;data.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;UI.js&quot;&gt;&lt;/script&gt;</div><div class=\"line\">&lt;title&gt;Note List&lt;/title&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;body onload = &quot;SyncWithServer()&quot;&gt;</div><div class=\"line\">&lt;input type=&quot;button&quot; value=&quot;New Note&quot; onclick=&quot;newNote()&quot;&gt;</div><div class=\"line\">&lt;ul id=&quot;list&quot;&gt;&lt;/ul&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n<p>在 body 中声明了一个按钮和一个无序列表。当按下“New Note”按钮时，newNote 函数将被调用，它用来添加一条新的便签。而无序列表初始为空，它是用来显示便签的列表。</p>\n</li>\n<li><p>cache manifest 文件</p>\n<p>定义 cache manifest 文件，声明需要缓存的资源。在这个例子中，需要缓存“index.html”、“server.js”、“data.js”和“UI.js”等 4 个文件。除了前面列出的“index.html”外，“server.js”、“data.js”和“UI.js”分别包含服务器相关、数据存储和用户界面代码。cache manifest 文件定义如下。</p>\n<h5 id=\"清单-9-cache-manifest-文件\"><a href=\"#清单-9-cache-manifest-文件\" class=\"headerlink\" title=\"清单 9 cache manifest 文件\"></a>清单 9 cache manifest 文件</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">CACHE MANIFEST</div><div class=\"line\">index.html</div><div class=\"line\">server.js</div><div class=\"line\">data.js</div><div class=\"line\">UI.js</div></pre></td></tr></table></figure>\n</li>\n<li><p>用户界面代码</p>\n<p>用户界面代码定义在 UI.js 中。</p>\n<h5 id=\"清单-10-用户界面代码-UI-js\"><a href=\"#清单-10-用户界面代码-UI-js\" class=\"headerlink\" title=\"清单 10 用户界面代码 UI.js\"></a>清单 10 用户界面代码 UI.js</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\">function newNote()</div><div class=\"line\">&#123;</div><div class=\"line\">   var title = window.prompt(&quot;New Note:&quot;);</div><div class=\"line\">   if (title)</div><div class=\"line\">   &#123;</div><div class=\"line\">       add(title);</div><div class=\"line\">   &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">function add(title)</div><div class=\"line\">&#123;</div><div class=\"line\">   // 在界面中添加</div><div class=\"line\">   addUIItem(title);</div><div class=\"line\">   // 在数据中添加</div><div class=\"line\">   addDataItem(title);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">function remove(title)</div><div class=\"line\">&#123;</div><div class=\"line\">   // 从界面中删除</div><div class=\"line\">   removeUIItem(title);</div><div class=\"line\">   // 从数据中删除</div><div class=\"line\">   removeDataItem(title);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">function addUIItem(title)</div><div class=\"line\">&#123;</div><div class=\"line\">   var item = document.createElement(&quot;li&quot;);</div><div class=\"line\">   item.setAttribute(&quot;ondblclick&quot;, &quot;remove(&apos;&quot;+title+&quot;&apos;)&quot;);</div><div class=\"line\">   item.innerHTML=title;</div><div class=\"line\"></div><div class=\"line\">   var list = document.getElementById(&quot;list&quot;);</div><div class=\"line\">   list.appendChild(item);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">function removeUIItem(title)</div><div class=\"line\">&#123;</div><div class=\"line\">   var list = document.getElementById(&quot;list&quot;);</div><div class=\"line\">   for (var i = 0; i &lt; list.children.length; i++) &#123;</div><div class=\"line\">       if(list.children[i].innerHTML == title)</div><div class=\"line\">       &#123;</div><div class=\"line\">           list.removeChild(list.children[i]);</div><div class=\"line\">       &#125;</div><div class=\"line\">   &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>UI.js 中的代码包含添加便签和删除便签的界面操作。</p>\n<ul>\n<li>添加便签</li>\n</ul>\n<ol>\n<li>用户点击“New Note”按钮，newNote 函数被调用。</li>\n<li>newNote 函数会弹出对话框，用户输入新便签内容。newNote 调用 add 函数。</li>\n<li>add 函数分别调用 addUIItem 和 addDataItem 添加页面元素和数据。addDataItem 代码将在后面列出。</li>\n<li>addUIItem 函数在页面列表中添加一项。并指明 ondblclick 事件的处理函数是 remove，使得双击操作可以删除便签。</li>\n</ol>\n<ul>\n<li>删除便签</li>\n</ul>\n<ol>\n<li>用户双击某便签时，调用 remove 函数。</li>\n<li>remove 函数分别调用 removeUIItem 和 removeDataItem 删除页面元素和数据。removeDataItem 将在后面列出。</li>\n<li>removeUIItem 函数删除页面列表中的相应项。</li>\n</ol>\n</li>\n<li><p>数据存储代码</p>\n<p>数据存储代码定义在 data.js 中。</p>\n<h5 id=\"清单-11-数据存储代码-data-js\"><a href=\"#清单-11-数据存储代码-data-js\" class=\"headerlink\" title=\"清单 11 数据存储代码 data.js\"></a>清单 11 数据存储代码 data.js</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div></pre></td><td class=\"code\"><pre><div class=\"line\">var storage = window[&apos;localStorage&apos;];</div><div class=\"line\"></div><div class=\"line\">function addDataItem(title)</div><div class=\"line\">&#123;</div><div class=\"line\">   if (navigator.onLine) // 在线状态</div><div class=\"line\">   &#123;</div><div class=\"line\">       addServerItem(title);</div><div class=\"line\">   &#125;</div><div class=\"line\">   else // 离线状态</div><div class=\"line\">   &#123;</div><div class=\"line\">       var str = storage.getItem(&quot;toAdd&quot;);</div><div class=\"line\">       if(str == null)</div><div class=\"line\">       &#123;</div><div class=\"line\">           str = title;</div><div class=\"line\">       &#125;</div><div class=\"line\">       else</div><div class=\"line\">       &#123;</div><div class=\"line\">           str = str + &quot;,&quot; + title;</div><div class=\"line\">       &#125;</div><div class=\"line\">       storage.setItem(&quot;toAdd&quot;, str);</div><div class=\"line\">   &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">function removeDataItem(title)</div><div class=\"line\">&#123;</div><div class=\"line\">   if (navigator.onLine) // 在线状态</div><div class=\"line\">   &#123;</div><div class=\"line\">       removeServerItem(title);</div><div class=\"line\">   &#125;</div><div class=\"line\">   else // 离线状态</div><div class=\"line\">   &#123;</div><div class=\"line\">       var str = storage.getItem(&quot;toRemove&quot;);</div><div class=\"line\">       if(str == null)</div><div class=\"line\">       &#123;</div><div class=\"line\">           str = title;</div><div class=\"line\">       &#125;</div><div class=\"line\">       else</div><div class=\"line\">       &#123;</div><div class=\"line\">           str = str + &quot;,&quot; + title;</div><div class=\"line\">       &#125;</div><div class=\"line\">       storage.setItem(&quot;toRemove&quot;, str);</div><div class=\"line\">   &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">function SyncWithServer()</div><div class=\"line\">&#123;</div><div class=\"line\">   // 如果当前是离线状态，不需要做任何处理</div><div class=\"line\">   if (navigator.onLine == false)return;</div><div class=\"line\"></div><div class=\"line\">   var i = 0;</div><div class=\"line\">   // 和服务器同步添加操作</div><div class=\"line\">   var str = storage.getItem(&quot;toAdd&quot;);</div><div class=\"line\">   if(str != null)</div><div class=\"line\">   &#123;</div><div class=\"line\">       var addItems = str.split(&quot;,&quot;);</div><div class=\"line\">       for(i = 0; i&lt;addItems.length; i++)</div><div class=\"line\">       &#123;</div><div class=\"line\">           addDataItem(addItems[i]);</div><div class=\"line\">       &#125;</div><div class=\"line\">       storage.removeItem(&quot;toAdd&quot;);</div><div class=\"line\">   &#125;</div><div class=\"line\"></div><div class=\"line\">   // 和服务器同步删除操作</div><div class=\"line\">   str = storage.getItem(&quot;toRemove&quot;);</div><div class=\"line\">   if(str != null)</div><div class=\"line\">   &#123;</div><div class=\"line\">       var removeItems = str.split(&quot;,&quot;);</div><div class=\"line\">       for(i = 0; i&lt;removeItems.length; i++)</div><div class=\"line\">       &#123;</div><div class=\"line\">           removeDataItem(removeItems[i]);</div><div class=\"line\">       &#125;</div><div class=\"line\">       storage.removeItem(&quot;toRemove&quot;);</div><div class=\"line\">   &#125;</div><div class=\"line\"></div><div class=\"line\">   // 删除界面中的所有便签</div><div class=\"line\">   var list = document.getElementById(&quot;list&quot;);</div><div class=\"line\">   while(list.lastChild != list.firstElementChild)</div><div class=\"line\">       list.removeChild(list.lastChild);</div><div class=\"line\">   if(list.firstElementChild)</div><div class=\"line\">       list.removeChild(list.firstElementChild);</div><div class=\"line\"></div><div class=\"line\">   // 从服务器获取全部便签，并显示在界面中</div><div class=\"line\">   var allItems = getServerItems();</div><div class=\"line\">   if(allItems != &quot;&quot;)</div><div class=\"line\">   &#123;</div><div class=\"line\">       var items = allItems.split(&quot;,&quot;);</div><div class=\"line\">       for(i = 0; i&lt;items.length; i++)</div><div class=\"line\">       &#123;</div><div class=\"line\">           addUIItem(items[i]);</div><div class=\"line\">       &#125;</div><div class=\"line\">   &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>window.addEventListener(“online”, SyncWithServer,false);</p>\n<p>data.js 中的代码包含添加便签、删除便签和与服务器同步等数据操作。其中用到了 navigator.onLine 属性、online 事件、DOM Storage 等 HTML5 新功能。</p>\n<ul>\n<li>添加便签：addDataItem</li>\n</ul>\n<ol>\n<li>通过 navigator.onLine 判断是否在线。</li>\n<li>如果在线，那么调用 addServerItem 直接把数据存储到服务器上。addServerItem 将在后面列出。</li>\n<li>如果离线，那么把数据添加到 localStorage 的“toAdd”项中。</li>\n</ol>\n<ul>\n<li>删除便签：removeDataItem</li>\n</ul>\n<ol>\n<li>通过 navigator.onLine 判断是否在线。</li>\n<li>如果在线，那么调用 removeServerItem 直接在服务器上删除数据。removeServerItem 将在后面列出。</li>\n<li>如果离线，那么把数据添加到 localStorage 的“toRemove”项中。</li>\n</ol>\n<ul>\n<li>数据同步：SyncWithServer</li>\n</ul>\n<p>在 data.js 的最后一行，注册了 window 的 online 事件处理函数 SyncWithServer。当 online 事件发生时，SyncWithServer 将被调用。其功能如下。</p>\n<ol>\n<li>如果 navigator.onLine 表示当前离线，则不做任何操作。</li>\n<li>把 localStorage 中“toAdd”项的所有数据添加到服务器上，并删除“toAdd”项。</li>\n<li>把 localStorage 中“toRemove”项的所有数据从服务器中删除，并删除“toRemove”项。</li>\n<li>删除当前页面列表中的所有便签。</li>\n<li>调用 getServerItems 从服务器获取所有便签，并添加在页面列表中。getServerItems 将在后面列出。</li>\n</ol>\n</li>\n<li><p>服务器相关代码</p>\n<p>服务器相关代码定义在 server.js 中。</p>\n<h5 id=\"清单-12-服务器相关代码-server-js\"><a href=\"#清单-12-服务器相关代码-server-js\" class=\"headerlink\" title=\"清单 12 服务器相关代码 server.js\"></a>清单 12 服务器相关代码 server.js</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">function addServerItem(title)</div><div class=\"line\">&#123;</div><div class=\"line\">   // 在服务器中添加一项</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">function removeServerItem(title)</div><div class=\"line\">&#123;</div><div class=\"line\">   // 在服务器中删除一项</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">function getServerItems()</div><div class=\"line\">&#123;</div><div class=\"line\">   // 返回服务器中存储的便签列表</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>由于这部分代码与服务器有关，这里只说明各个函数的功能，具体实现可以根据不同服务器编写代码。</p>\n<ul>\n<li>在服务器中添加一项：addServerItem</li>\n<li>在服务器中删除一项：removeServerItem</li>\n<li>返回服务器中存储的便签列表：getServerItems</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>本文介绍了 HTML5 为了支持离线应用程序新增的强大功能。通过阅读本文，读者能够了解到 HTML5 中离线相关特性的基本用法，从而掌握利用 HTML5 开发 Web 离线应用的方法。</p>\n"},{"title":"树莓派安装samba","_content":"创建Samba共享其实非常简单（两个步骤）：\n\n1. **安装Samba**\n2. **配置Samba**\n\n```\nsudo apt-get install samba samba-common-bin\n```\n\n- 安装完成后接着添加samba用户和密码，为了方便直接使用树莓派的默认用户pi。\n\n```\n~ sudo smbpasswd -a pi\n# password 123456789\n# smbpasswd -x pi //delete user.\n```\n\n- 备份Samba[配置文件](http://www.07net01.com/tags-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-0.html)\n\n```\n# Backup conf file.\n~ sudo cp -p /etc/samba/smb.conf /etc/samba/smb.conf_bak\n```\n\n- 修改默认的配置文件smb.conf（nano[编辑器](http://www.07net01.com/tags-%E7%BC%96%E8%BE%91%E5%99%A8-0.html)）\n\n```\nsudo nano /etc/samba/smb.conf\n```\n\n将[global]字段里的”workgroup = WORKGROUP”按需修改成和你[电脑](http://www.07net01.com/tags-%E7%94%B5%E8%84%91-0.html)同一个工作组（默认应该就是WORKGROUP），然后将位于下方的[homes]、[printers]字段的配置统统注释掉，然后添加下面配置。\n\n```\n#custom add begin.\n[CohoStudio_NAS]\ncomment=Raspberry Pi NAS.\npath=/home/pi/nas\nread only = no #任何人都具有了访问修改的权限\n#因为是公共文件夹，所以给了所有用户全部权限，可以自定义\ncreate mask = 0777 #新创建文件的默认属性\ndirectory mask = 0777 #新创建文件夹的默认属性\nguest ok = yes #默认的访问用户名为guest\nbrowseable = yes\npublic = yes\n\n[RaspberryPi_HOME]\ncomment=Raspberry Pi Home.\npath=/home/pi\nwriteable=yes\nbrowsable=yes\ncreate mask=0777\ndirectory mask=0777\nvalid users=pi\npublic=no\n# custom add end.\n```\n\n- 配置完成后启动\n\n```\nsudo /etc/init.d/samba restart\n# ubuntu command:  sudo /etc/init.d/smbd restart\npi@raspberrypi ~ $ sudo /etc/init.d/samba start\n[ ok ] Starting Samba daemons: nmbd smbd.\n```\n\nWell done. [Windows](http://www.07net01.com/)电脑连到Raspberry Pi同一个[局域网](http://www.07net01.com/tags-%E5%B1%80%E5%9F%9F%E7%BD%91-0.html)络，就可以看到树莓派的samba共享文件夹了。\n\n注：\n\n- 用 smbpasswd 命令直接设置，需要首先要添加系统用户然后用 smbpasswd -a 用户名 添加 Samba 用户；\n\n```\nsmbpasswd -e 用户名 # 激活用户\n```\n\n- 挂载USB移动硬盘（将移动硬盘挂载在/home/pi/nas/目录下面）：\n\n```\nsudo mount /dev/sda1 /home/pi/nas/\n```\n\n有时候卸载USB移动硬盘的时候会提示设备忙(Device is busy)，只需要加上 –l 参数就行了：\n\n```\nsudo umount -l /home/pi/nas/\n```\n","source":"_posts/在树莓派上安装配置samba.md","raw":"---\ntitle: 树莓派安装samba\ntags: [树莓派,物联网,linux]\ncategories: raspberry pi\n---\n创建Samba共享其实非常简单（两个步骤）：\n\n1. **安装Samba**\n2. **配置Samba**\n\n```\nsudo apt-get install samba samba-common-bin\n```\n\n- 安装完成后接着添加samba用户和密码，为了方便直接使用树莓派的默认用户pi。\n\n```\n~ sudo smbpasswd -a pi\n# password 123456789\n# smbpasswd -x pi //delete user.\n```\n\n- 备份Samba[配置文件](http://www.07net01.com/tags-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-0.html)\n\n```\n# Backup conf file.\n~ sudo cp -p /etc/samba/smb.conf /etc/samba/smb.conf_bak\n```\n\n- 修改默认的配置文件smb.conf（nano[编辑器](http://www.07net01.com/tags-%E7%BC%96%E8%BE%91%E5%99%A8-0.html)）\n\n```\nsudo nano /etc/samba/smb.conf\n```\n\n将[global]字段里的”workgroup = WORKGROUP”按需修改成和你[电脑](http://www.07net01.com/tags-%E7%94%B5%E8%84%91-0.html)同一个工作组（默认应该就是WORKGROUP），然后将位于下方的[homes]、[printers]字段的配置统统注释掉，然后添加下面配置。\n\n```\n#custom add begin.\n[CohoStudio_NAS]\ncomment=Raspberry Pi NAS.\npath=/home/pi/nas\nread only = no #任何人都具有了访问修改的权限\n#因为是公共文件夹，所以给了所有用户全部权限，可以自定义\ncreate mask = 0777 #新创建文件的默认属性\ndirectory mask = 0777 #新创建文件夹的默认属性\nguest ok = yes #默认的访问用户名为guest\nbrowseable = yes\npublic = yes\n\n[RaspberryPi_HOME]\ncomment=Raspberry Pi Home.\npath=/home/pi\nwriteable=yes\nbrowsable=yes\ncreate mask=0777\ndirectory mask=0777\nvalid users=pi\npublic=no\n# custom add end.\n```\n\n- 配置完成后启动\n\n```\nsudo /etc/init.d/samba restart\n# ubuntu command:  sudo /etc/init.d/smbd restart\npi@raspberrypi ~ $ sudo /etc/init.d/samba start\n[ ok ] Starting Samba daemons: nmbd smbd.\n```\n\nWell done. [Windows](http://www.07net01.com/)电脑连到Raspberry Pi同一个[局域网](http://www.07net01.com/tags-%E5%B1%80%E5%9F%9F%E7%BD%91-0.html)络，就可以看到树莓派的samba共享文件夹了。\n\n注：\n\n- 用 smbpasswd 命令直接设置，需要首先要添加系统用户然后用 smbpasswd -a 用户名 添加 Samba 用户；\n\n```\nsmbpasswd -e 用户名 # 激活用户\n```\n\n- 挂载USB移动硬盘（将移动硬盘挂载在/home/pi/nas/目录下面）：\n\n```\nsudo mount /dev/sda1 /home/pi/nas/\n```\n\n有时候卸载USB移动硬盘的时候会提示设备忙(Device is busy)，只需要加上 –l 参数就行了：\n\n```\nsudo umount -l /home/pi/nas/\n```\n","slug":"在树莓派上安装配置samba","published":1,"date":"2017-05-22T05:03:19.692Z","updated":"2017-05-25T01:01:47.503Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmtsh001k4wvs2q9k7m9v","content":"<p>创建Samba共享其实非常简单（两个步骤）：</p>\n<ol>\n<li><strong>安装Samba</strong></li>\n<li><strong>配置Samba</strong></li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install samba samba-common-bin</div></pre></td></tr></table></figure>\n<ul>\n<li>安装完成后接着添加samba用户和密码，为了方便直接使用树莓派的默认用户pi。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">~ sudo smbpasswd -a pi</div><div class=\"line\"># password 123456789</div><div class=\"line\"># smbpasswd -x pi //delete user.</div></pre></td></tr></table></figure>\n<ul>\n<li>备份Samba<a href=\"http://www.07net01.com/tags-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-0.html\" target=\"_blank\" rel=\"external\">配置文件</a></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Backup conf file.</div><div class=\"line\">~ sudo cp -p /etc/samba/smb.conf /etc/samba/smb.conf_bak</div></pre></td></tr></table></figure>\n<ul>\n<li>修改默认的配置文件smb.conf（nano<a href=\"http://www.07net01.com/tags-%E7%BC%96%E8%BE%91%E5%99%A8-0.html\" target=\"_blank\" rel=\"external\">编辑器</a>）</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/samba/smb.conf</div></pre></td></tr></table></figure>\n<p>将[global]字段里的”workgroup = WORKGROUP”按需修改成和你<a href=\"http://www.07net01.com/tags-%E7%94%B5%E8%84%91-0.html\" target=\"_blank\" rel=\"external\">电脑</a>同一个工作组（默认应该就是WORKGROUP），然后将位于下方的[homes]、[printers]字段的配置统统注释掉，然后添加下面配置。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">#custom add begin.</div><div class=\"line\">[CohoStudio_NAS]</div><div class=\"line\">comment=Raspberry Pi NAS.</div><div class=\"line\">path=/home/pi/nas</div><div class=\"line\">read only = no #任何人都具有了访问修改的权限</div><div class=\"line\">#因为是公共文件夹，所以给了所有用户全部权限，可以自定义</div><div class=\"line\">create mask = 0777 #新创建文件的默认属性</div><div class=\"line\">directory mask = 0777 #新创建文件夹的默认属性</div><div class=\"line\">guest ok = yes #默认的访问用户名为guest</div><div class=\"line\">browseable = yes</div><div class=\"line\">public = yes</div><div class=\"line\"></div><div class=\"line\">[RaspberryPi_HOME]</div><div class=\"line\">comment=Raspberry Pi Home.</div><div class=\"line\">path=/home/pi</div><div class=\"line\">writeable=yes</div><div class=\"line\">browsable=yes</div><div class=\"line\">create mask=0777</div><div class=\"line\">directory mask=0777</div><div class=\"line\">valid users=pi</div><div class=\"line\">public=no</div><div class=\"line\"># custom add end.</div></pre></td></tr></table></figure>\n<ul>\n<li>配置完成后启动</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo /etc/init.d/samba restart</div><div class=\"line\"># ubuntu command:  sudo /etc/init.d/smbd restart</div><div class=\"line\">pi@raspberrypi ~ $ sudo /etc/init.d/samba start</div><div class=\"line\">[ ok ] Starting Samba daemons: nmbd smbd.</div></pre></td></tr></table></figure>\n<p>Well done. <a href=\"http://www.07net01.com/\" target=\"_blank\" rel=\"external\">Windows</a>电脑连到Raspberry Pi同一个<a href=\"http://www.07net01.com/tags-%E5%B1%80%E5%9F%9F%E7%BD%91-0.html\" target=\"_blank\" rel=\"external\">局域网</a>络，就可以看到树莓派的samba共享文件夹了。</p>\n<p>注：</p>\n<ul>\n<li>用 smbpasswd 命令直接设置，需要首先要添加系统用户然后用 smbpasswd -a 用户名 添加 Samba 用户；</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">smbpasswd -e 用户名 # 激活用户</div></pre></td></tr></table></figure>\n<ul>\n<li>挂载USB移动硬盘（将移动硬盘挂载在/home/pi/nas/目录下面）：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo mount /dev/sda1 /home/pi/nas/</div></pre></td></tr></table></figure>\n<p>有时候卸载USB移动硬盘的时候会提示设备忙(Device is busy)，只需要加上 –l 参数就行了：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo umount -l /home/pi/nas/</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>创建Samba共享其实非常简单（两个步骤）：</p>\n<ol>\n<li><strong>安装Samba</strong></li>\n<li><strong>配置Samba</strong></li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install samba samba-common-bin</div></pre></td></tr></table></figure>\n<ul>\n<li>安装完成后接着添加samba用户和密码，为了方便直接使用树莓派的默认用户pi。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">~ sudo smbpasswd -a pi</div><div class=\"line\"># password 123456789</div><div class=\"line\"># smbpasswd -x pi //delete user.</div></pre></td></tr></table></figure>\n<ul>\n<li>备份Samba<a href=\"http://www.07net01.com/tags-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-0.html\" target=\"_blank\" rel=\"external\">配置文件</a></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Backup conf file.</div><div class=\"line\">~ sudo cp -p /etc/samba/smb.conf /etc/samba/smb.conf_bak</div></pre></td></tr></table></figure>\n<ul>\n<li>修改默认的配置文件smb.conf（nano<a href=\"http://www.07net01.com/tags-%E7%BC%96%E8%BE%91%E5%99%A8-0.html\" target=\"_blank\" rel=\"external\">编辑器</a>）</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/samba/smb.conf</div></pre></td></tr></table></figure>\n<p>将[global]字段里的”workgroup = WORKGROUP”按需修改成和你<a href=\"http://www.07net01.com/tags-%E7%94%B5%E8%84%91-0.html\" target=\"_blank\" rel=\"external\">电脑</a>同一个工作组（默认应该就是WORKGROUP），然后将位于下方的[homes]、[printers]字段的配置统统注释掉，然后添加下面配置。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">#custom add begin.</div><div class=\"line\">[CohoStudio_NAS]</div><div class=\"line\">comment=Raspberry Pi NAS.</div><div class=\"line\">path=/home/pi/nas</div><div class=\"line\">read only = no #任何人都具有了访问修改的权限</div><div class=\"line\">#因为是公共文件夹，所以给了所有用户全部权限，可以自定义</div><div class=\"line\">create mask = 0777 #新创建文件的默认属性</div><div class=\"line\">directory mask = 0777 #新创建文件夹的默认属性</div><div class=\"line\">guest ok = yes #默认的访问用户名为guest</div><div class=\"line\">browseable = yes</div><div class=\"line\">public = yes</div><div class=\"line\"></div><div class=\"line\">[RaspberryPi_HOME]</div><div class=\"line\">comment=Raspberry Pi Home.</div><div class=\"line\">path=/home/pi</div><div class=\"line\">writeable=yes</div><div class=\"line\">browsable=yes</div><div class=\"line\">create mask=0777</div><div class=\"line\">directory mask=0777</div><div class=\"line\">valid users=pi</div><div class=\"line\">public=no</div><div class=\"line\"># custom add end.</div></pre></td></tr></table></figure>\n<ul>\n<li>配置完成后启动</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo /etc/init.d/samba restart</div><div class=\"line\"># ubuntu command:  sudo /etc/init.d/smbd restart</div><div class=\"line\">pi@raspberrypi ~ $ sudo /etc/init.d/samba start</div><div class=\"line\">[ ok ] Starting Samba daemons: nmbd smbd.</div></pre></td></tr></table></figure>\n<p>Well done. <a href=\"http://www.07net01.com/\" target=\"_blank\" rel=\"external\">Windows</a>电脑连到Raspberry Pi同一个<a href=\"http://www.07net01.com/tags-%E5%B1%80%E5%9F%9F%E7%BD%91-0.html\" target=\"_blank\" rel=\"external\">局域网</a>络，就可以看到树莓派的samba共享文件夹了。</p>\n<p>注：</p>\n<ul>\n<li>用 smbpasswd 命令直接设置，需要首先要添加系统用户然后用 smbpasswd -a 用户名 添加 Samba 用户；</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">smbpasswd -e 用户名 # 激活用户</div></pre></td></tr></table></figure>\n<ul>\n<li>挂载USB移动硬盘（将移动硬盘挂载在/home/pi/nas/目录下面）：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo mount /dev/sda1 /home/pi/nas/</div></pre></td></tr></table></figure>\n<p>有时候卸载USB移动硬盘的时候会提示设备忙(Device is busy)，只需要加上 –l 参数就行了：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo umount -l /home/pi/nas/</div></pre></td></tr></table></figure>\n"},{"title":"树莓派搭建SVN","_content":"1、首先需要安装Subversion软件：\n\n```\nsudo apt-get install subversion\n```\n\n2、创建仓库\n\n```\nsvnadmin create /var/svn\n```\n\n/var/svn 为所创建仓库的路径，理论上可以是任何目录\n3、修改配置文件/var/svn/conf/svnserve.conf\n\n去掉#[general]前面的#号\n\n```\n[general]\n#匿名访问的权限，可以是read,write,none,默认为read\nanon-access = none\n#认证用户的权限，可以是read,write,none,默认为write\nauth-access = write\n#密码数据库的路径，去掉前面的#\npassword-db = passwd\n```\n\n注意：所有的行都必须顶格，否则报错。 建议：为了防止不必要的错误，建议你直接用我上面的内容覆盖掉文件原来的内容.\n\n4、修改配置文件passwd\n\n```\n[users]\nsvnuser = password\nukonline2000 = ukonline2000\n```\n\n注意：\n一定要去掉[users]前面的#,否则svn只能以匿名用户登录，客户端不会出现登录窗口，除非你的anon不为none,否则将返回一个错误。\n这里的密码都是没有加密的，我按照一些教程所说的用htpasswd生成的密码无法使用。\n\n5、停止Subversion服务器：\n\n```\nkillall svnserve\n```\n\n6、启动Subversion服务器 对于单个代码仓库,启动命令：\n\n```\nsvnserve -d -r /var/svn\n```\n\n其中-d表示在后台运行，-r指定服务器的根目录，这样访问服务器时就可以直接 用svn://服务器ip来访问了。\n\n另外,客户端推荐用TortoiseSVN。\n","source":"_posts/在树莓派上搭建代码托管服务(SVN).md","raw":"---\ntitle: 树莓派搭建SVN\ntags: [树莓派,物联网,linux]\ncategories: raspberry pi\n---\n1、首先需要安装Subversion软件：\n\n```\nsudo apt-get install subversion\n```\n\n2、创建仓库\n\n```\nsvnadmin create /var/svn\n```\n\n/var/svn 为所创建仓库的路径，理论上可以是任何目录\n3、修改配置文件/var/svn/conf/svnserve.conf\n\n去掉#[general]前面的#号\n\n```\n[general]\n#匿名访问的权限，可以是read,write,none,默认为read\nanon-access = none\n#认证用户的权限，可以是read,write,none,默认为write\nauth-access = write\n#密码数据库的路径，去掉前面的#\npassword-db = passwd\n```\n\n注意：所有的行都必须顶格，否则报错。 建议：为了防止不必要的错误，建议你直接用我上面的内容覆盖掉文件原来的内容.\n\n4、修改配置文件passwd\n\n```\n[users]\nsvnuser = password\nukonline2000 = ukonline2000\n```\n\n注意：\n一定要去掉[users]前面的#,否则svn只能以匿名用户登录，客户端不会出现登录窗口，除非你的anon不为none,否则将返回一个错误。\n这里的密码都是没有加密的，我按照一些教程所说的用htpasswd生成的密码无法使用。\n\n5、停止Subversion服务器：\n\n```\nkillall svnserve\n```\n\n6、启动Subversion服务器 对于单个代码仓库,启动命令：\n\n```\nsvnserve -d -r /var/svn\n```\n\n其中-d表示在后台运行，-r指定服务器的根目录，这样访问服务器时就可以直接 用svn://服务器ip来访问了。\n\n另外,客户端推荐用TortoiseSVN。\n","slug":"在树莓派上搭建代码托管服务(SVN)","published":1,"date":"2017-05-22T05:03:19.694Z","updated":"2017-05-25T01:01:58.154Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmtsh001o4wvsvtgnl9rj","content":"<p>1、首先需要安装Subversion软件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install subversion</div></pre></td></tr></table></figure>\n<p>2、创建仓库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">svnadmin create /var/svn</div></pre></td></tr></table></figure>\n<p>/var/svn 为所创建仓库的路径，理论上可以是任何目录<br>3、修改配置文件/var/svn/conf/svnserve.conf</p>\n<p>去掉#[general]前面的#号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">[general]</div><div class=\"line\">#匿名访问的权限，可以是read,write,none,默认为read</div><div class=\"line\">anon-access = none</div><div class=\"line\">#认证用户的权限，可以是read,write,none,默认为write</div><div class=\"line\">auth-access = write</div><div class=\"line\">#密码数据库的路径，去掉前面的#</div><div class=\"line\">password-db = passwd</div></pre></td></tr></table></figure>\n<p>注意：所有的行都必须顶格，否则报错。 建议：为了防止不必要的错误，建议你直接用我上面的内容覆盖掉文件原来的内容.</p>\n<p>4、修改配置文件passwd</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[users]</div><div class=\"line\">svnuser = password</div><div class=\"line\">ukonline2000 = ukonline2000</div></pre></td></tr></table></figure>\n<p>注意：<br>一定要去掉[users]前面的#,否则svn只能以匿名用户登录，客户端不会出现登录窗口，除非你的anon不为none,否则将返回一个错误。<br>这里的密码都是没有加密的，我按照一些教程所说的用htpasswd生成的密码无法使用。</p>\n<p>5、停止Subversion服务器：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">killall svnserve</div></pre></td></tr></table></figure>\n<p>6、启动Subversion服务器 对于单个代码仓库,启动命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">svnserve -d -r /var/svn</div></pre></td></tr></table></figure>\n<p>其中-d表示在后台运行，-r指定服务器的根目录，这样访问服务器时就可以直接 用svn://服务器ip来访问了。</p>\n<p>另外,客户端推荐用TortoiseSVN。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1、首先需要安装Subversion软件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install subversion</div></pre></td></tr></table></figure>\n<p>2、创建仓库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">svnadmin create /var/svn</div></pre></td></tr></table></figure>\n<p>/var/svn 为所创建仓库的路径，理论上可以是任何目录<br>3、修改配置文件/var/svn/conf/svnserve.conf</p>\n<p>去掉#[general]前面的#号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">[general]</div><div class=\"line\">#匿名访问的权限，可以是read,write,none,默认为read</div><div class=\"line\">anon-access = none</div><div class=\"line\">#认证用户的权限，可以是read,write,none,默认为write</div><div class=\"line\">auth-access = write</div><div class=\"line\">#密码数据库的路径，去掉前面的#</div><div class=\"line\">password-db = passwd</div></pre></td></tr></table></figure>\n<p>注意：所有的行都必须顶格，否则报错。 建议：为了防止不必要的错误，建议你直接用我上面的内容覆盖掉文件原来的内容.</p>\n<p>4、修改配置文件passwd</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[users]</div><div class=\"line\">svnuser = password</div><div class=\"line\">ukonline2000 = ukonline2000</div></pre></td></tr></table></figure>\n<p>注意：<br>一定要去掉[users]前面的#,否则svn只能以匿名用户登录，客户端不会出现登录窗口，除非你的anon不为none,否则将返回一个错误。<br>这里的密码都是没有加密的，我按照一些教程所说的用htpasswd生成的密码无法使用。</p>\n<p>5、停止Subversion服务器：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">killall svnserve</div></pre></td></tr></table></figure>\n<p>6、启动Subversion服务器 对于单个代码仓库,启动命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">svnserve -d -r /var/svn</div></pre></td></tr></table></figure>\n<p>其中-d表示在后台运行，-r指定服务器的根目录，这样访问服务器时就可以直接 用svn://服务器ip来访问了。</p>\n<p>另外,客户端推荐用TortoiseSVN。</p>\n"},{"title":"常见的移动端WEB问题解决方案","_content":"#### 1、安卓浏览器看背景图片，有些设备会模糊。\n用同等比例的图片在PC机上很清楚，但是手机上很模糊，原因是什么呢？\n\n经过研究，是devicePixelRatio作怪，因为手机分辨率太小，如果按照分辨率来显示网页，这样字会非常小，所以苹果当初就把iPhone 4的960640分辨率，在网页里只显示了480320，这样devicePixelRatio＝2。现在android比较乱，有1.5的，有2的也有3的。\n\n想让图片在手机里显示更为清晰，必须使用2x的背景图来代替img标签（一般情况都是用2倍）。例如一个div的宽高是100100，背景图必须得200200，然后background-size:contain;，这样显示出来的图片就比较清晰了。\n\n代码可以如下：\n```\nbackground:url(../images/icon/all.png) no-repeat center center;\n-webkit-background-size:50px 50px;\nbackground-size: 50px 50px;display:inline-block; width:100%; height:50px;\n```\n#### 2、图片加载\n若您遇到图片加载很慢的问题，对这种情况，手机开发一般用canvas方法加载：\n\n具体的canvas API 参见：http://javascript.ruanyifeng.com/htmlapi/canvas.html\n\n下面举例说明一个canvas的例子：\n```\n<li><canvas></canvas></li>\n```\njs动态加载图片和li 总共举例17张图片！\n```\nvar total=17;\nvar zWin=$(window);\nvar render=function(){\n  var padding=2;\n  var winWidth=zWin.width();\n  var picWidth=Math.floor((winWidth-padding*3)/4);\n  var tmpl ='';\n  for (var i=1;i<=totla;i++){\n  var p=padding;\n  var imgSrc='img/'+i+'.jpg';\n  if(i%4==1){\n   p=0;\n  }\n  tmpl +='<li style=\"width:'+picWidth+'px;height:'+picWidth+'px;padding-left:'+p+'px;padding-top:'+padding+'px;\"><canvas id=\"cvs_'+i+'\"></canvas></li>';\n  var imageObj = new Image();\n  imageObj.index = i;\n  imageObj.onload = function(){\n    var cvs =$('#cvs_'+this.index)[0].getContext('2d');\n    cvs.width = this.width;\n    cvs.height=this.height;\n    cvs.drawImage(this,0,0);\n  }\n  imageObj.src=imgSrc;\n  }\n\n}\nrender();\n```\n#### 3、假如手机网站不用兼容IE浏览器，一般我们会使用zeptojs。zeptojs内置Touch events方法，具体可以看http://zeptojs.com/#Touch events\n\n看了一下zeptio新版的API，已经支持IE10以上浏览器，对zeptojs可以选择使用！\n#### 4、防止手机中网页放大和缩小\n这点是最基本的，最为手机网站开发者来说应该都知道的，就是设置meta中的viewport\n\n还有就是，有些手机网站我们看到如下声明：\n```\n<!DOCTYPE html PUBLIC \"-//WAPFORUM//DTD XHTML Mobile 1.0//EN\" \"http://www.wapforum.org/DTD/xhtml-mobile10.dtd\">\n```\n设置了DTD的方式是XHTML的写法，假如我们页面运用的是html5，可以不用设置DTD,直接声明<!DOCTYPE html>。\n\n使用viewport使页面禁止缩放。 通常把user-scalable设置为0来关闭用户对页面视图缩放的行为。\n```\n<meta name=\"viewport\" content=\"user-scalable=0\" />\n```\n但是为了更好的兼容，我们会使用完整的viewport设置。\n```\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=0\" />\n```\n当然，user-scalable=0,有的人也写成user-scalable=no，都可以的。\n#### 5、apple-mobile-web-app-capable\n\napple-mobile-web-app-capable是设置Web应用是否以全屏模式运行。\n\n语法：\n```\n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n```\n说明：\n\n如果content设置为yes，Web应用会以全屏模式运行，反之，则不会。content的默认值是no，表示正常显示。你可以通过只读属性window.navigator.standalone来确定网页是否以全屏模式显示。\n#### 6、format-detection\nformat-detection 启动或禁用自动识别页面中的电话号码。\n语法：\n```\n<meta name=\"format-detection\" content=\"telephone=no\">\n```\n说明：\n\n默认情况下，设备会自动识别任何可能是电话号码的字符串。设置telephone=no可以禁用这项功能。\n#### 7、html5调用安卓或者ios的拨号功能\nhtml5提供了自动调用拨号的标签，只要在a标签的href中添加tel:就可以了。\n\n如下：\n```\n<a href=\"tel:4008106999,1034\">400-810-6999 转 1034</a>\n```\n#### 8、html5GPS定位功能\n具体请看：http://www.jb51.net/post/html5_GPS_getCurrentPosition\n#### 9、上下拉动滚动条时卡顿、慢\n```\nbody {\n  -webkit-overflow-scrolling: touch;\n  overflow-scrolling: touch;\n}\n```\nAndroid3+和iOS5+支持CSS3的新属性为overflow-scrolling\n#### 10、禁止复制、选中文本\n```\nElement {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -khtml-user-select: none;\n   user-select: none;\n}\n```\n解决移动设备可选中页面文本(视产品需要而定)\n#### 11、长时间按住页面出现闪退\n```\nelement {\n  -webkit-touch-callout: none;\n}\n```\n#### 12、iphone及ipad下输入框默认内阴影\n```\nElement{\n  -webkit-appearance: none;\n}\n```\n#### 13、ios和android下触摸元素时出现半透明灰色遮罩\n```\nElement {\n  -webkit-tap-highlight-color:rgba(255,255,255,0)\n}\n```\n设置alpha值为0就可以去除半透明灰色遮罩，备注：transparent的属性值在android下无效。\n\n后面一篇文章有详细介绍，地址：http://www.jb51.net/post/phone_web_ysk\n#### 14、active兼容处理 即 伪类 :active 失效\n方法一：body添加ontouchstart\n```\n<body ontouchstart=\"\">\n```\n方法二：js给 document 绑定 touchstart 或 touchend 事件\n```\n<style>\na {\n color: #000;\n}\na:active {\n color: #fff;\n}\n</style>\n<a herf=foo >bar</a>\n<script>\n document.addEventListener('touchstart',function(){},false);\n</script>\n```\n#### 15、动画定义3D启用硬件加速\n```\nElement {\n  -webkit-transform:translate3d(0, 0, 0)\n  transform: translate3d(0, 0, 0);\n}\n```\n注意：3D变形会消耗更多的内存与功耗\n#### 16、Retina屏的1px边框\n```\nElement{\n  border-width: thin;\n}\n```\n#### 17、webkit mask 兼容处理\n某些低端手机不支持css3 mask，可以选择性的降级处理。\n\n比如可以使用js判断来引用不同class：\n```\nif( 'WebkitMask' in document.documentElement.style){\n  alert('支持mask');\n} else {\n  alert('不支持mask');\n}\n```\n#### 18、旋转屏幕时，字体大小调整的问题\n```\nhtml, body, form, fieldset, p, div, h1, h2, h3, h4, h5, h6 {\n  -webkit-text-size-adjust:100%;\n}\n```\n#### 19、transition闪屏\n```\n/设置内嵌的元素在 3D 空间如何呈现：保留3D /\n\n-webkit-transform-style: preserve-3d;\n/ 设置进行转换的元素的背面在面对用户时是否可见：隐藏 /\n\n-webkit-backface-visibility:hidden;\n```\n#### 20、圆角bug\n某些Android手机圆角失效\n```\nbackground-clip: padding-box;\n```\n#### 21、顶部状态栏背景色\n```\n<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\n```\n说明：\n\n除非你先使用apple-mobile-web-app-capable指定全屏模式，否则这个meta标签不会起任何作用。\n\n如果content设置为default，则状态栏正常显示。如果设置为blank，则状态栏会有一个黑色的背景。如果设置为blank-translucent，则状态栏显示为黑色半透明。如果设置为default或blank，则页面显示在状态栏的下方，即状态栏占据上方部分，页面占据下方部分，二者没有遮挡对方或被遮挡。如果设置为blank-translucent，则页面会充满屏幕，其中页面顶部会被状态栏遮盖住（会覆盖页面20px高度，而iphone4和itouch4的Retina屏幕为40px）。默认值是default。\n#### 22、设置缓存\n```\n<meta http-equiv=\"Cache-Control\" content=\"no-cache\" />\n```\n手机页面通常在第一次加载后会进行缓存，然后每次刷新会使用缓存而不是去重新向服务器发送请求。如果不希望使用缓存可以设置no-cache。\n#### 23、桌面图标\n```\n<link rel=\"apple-touch-icon\" href=\"touch-icon-iphone.png\" />\n<link rel=\"apple-touch-icon\" sizes=\"76x76\" href=\"touch-icon-ipad.png\" />\n<link rel=\"apple-touch-icon\" sizes=\"120x120\" href=\"touch-icon-iphone-retina.png\" />\n<link rel=\"apple-touch-icon\" sizes=\"152x152\" href=\"touch-icon-ipad-retina.png\" />\n```\niOS下针对不同设备定义不同的桌面图标。如果不定义则以当前屏幕截图作为图标。\n\n上面的写法可能大家会觉得会有默认光泽，下面这种设置方法可以去掉光泽效果，还原设计图的效果！\n```\n<link rel=\"apple-touch-icon-precomposed\" href=\"touch-icon-iphone.png\" />\n```\n图片尺寸可以设定为5757（px）或者Retina可以定为114114（px），ipad尺寸为72*72（px)\n#### 24、启动画面\n```\n<link rel=\"apple-touch-startup-image\" href=\"start.png\"/>\n```\niOS下页面启动加载时显示的画面图片，避免加载时的白屏。\n\n可以通过madia来指定不同的大小：\n```\n<!--iPhone-->\n<link href=\"apple-touch-startup-image-320x460.png\" media=\"(device-width: 320px)\" rel=\"apple-touch-startup-image\" />\n\n<!-- iPhone Retina -->\n<link href=\"apple-touch-startup-image-640x920.png\" media=\"(device-width: 320px) and (-webkit-device-pixel-ratio: 2)\" rel=\"apple-touch-startup-image\" />\n\n<!-- iPhone 5 -->\n<link rel=\"apple-touch-startup-image\" media=\"(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)\" href=\"apple-touch-startup-image-640x1096.png\">\n\n<!-- iPad portrait -->\n<link href=\"apple-touch-startup-image-768x1004.png\" media=\"(device-width: 768px) and (orientation: portrait)\" rel=\"apple-touch-startup-image\" />\n\n<!-- iPad landscape -->\n<link href=\"apple-touch-startup-image-748x1024.png\" media=\"(device-width: 768px) and (orientation: landscape)\" rel=\"apple-touch-startup-image\" />\n\n<!-- iPad Retina portrait -->\n<link href=\"apple-touch-startup-image-1536x2008.png\" media=\"(device-width: 1536px) and (orientation: portrait) and (-webkit-device-pixel-ratio: 2)\" rel=\"apple-touch-startup-image\" />\n\n<!-- iPad Retina landscape -->\n<link href=\"apple-touch-startup-image-1496x2048.png\"media=\"(device-width: 1536px) and (orientation: landscape) and (-webkit-device-pixel-ratio: 2)\"rel=\"apple-touch-startup-image\" />\n```\n#### 25、浏览器私有及其它meta\n以下属性在项目中没有应用过，可以写一个demo测试以下！\n\nQQ浏览器私有\n\n全屏模式\n```\n<meta name=\"x5-fullscreen\" content=\"true\">\n```\n强制竖屏\n```\n<meta name=\"x5-orientation\" content=\"portrait\">\n```\n强制横屏\n```\n<meta name=\"x5-orientation\" content=\"landscape\">\n```\n应用模式\n```\n<meta name=\"x5-page-mode\" content=\"app\">\n```\nUC浏览器私有\n\n全屏模式\n```\n<meta name=\"full-screen\" content=\"yes\">\n```\n强制竖屏\n```\n<meta name=\"screen-orientation\" content=\"portrait\">\n```\n强制横屏\n```\n<meta name=\"screen-orientation\" content=\"landscape\">\n```\n应用模式\n```\n<meta name=\"browsermode\" content=\"application\">\n```\n其它\n\n针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓\n```\n<meta name=\"HandheldFriendly\" content=\"true\">\n```\n微软的老式浏览器\n```\n<meta name=\"MobileOptimized\" content=\"320\">\n```\nwindows phone 点击无高光\n```\n<meta name=\"msapplication-tap-highlight\" content=\"no\">\n```\n#### 26、 IOS中input键盘事件keyup、keydown、keypress支持不是很好\n问题是这样的，用input search做模糊搜索的时候，在键盘里面输入关键词，会通过ajax后台查询，然后返回数据，然后再对返回的数据进行关键词标红。用input监听键盘keyup事件，在安卓手机浏览器中是可以的，但是在ios手机浏览器中变红很慢，用输入法输入之后，并未立刻相应keyup事件，只有在通过删除之后才能相应！\n\n解决办法：\n\n可以用html5的oninput事件去代替keyup\n```\n<input type=\"text\" id=\"testInput\">\n<script type=\"text/javascript\">\n  document.getElementById('testInput').addEventListener('input', function(e){\n    var value = e.target.value;\n  });\n</script>\n```\n然后就达到类似keyup的效果！\n#### 27、h5网站input 设置为type=number的问题\nh5网页input 的type设置为number一般会产生三个问题，一个问题是maxlength属性不好用了。另外一个是form提交的时候，默认给取整了。三是部分安卓手机出现样式问题。\n\n问题一解决，我目前用的是js。如下\n```\n<input type=\"number\" oninput=\"checkTextLength(this ,10)\">\n\nfunction checkTextLength(obj, length) {\n      if(obj.value.length > length)  {\n        obj.value = obj.value.substr(0, length);\n      }\n}\n```\n问题二，是因为form提交默认做了表单验证，step默认是1,要设置step属性，假如保留2位小数，写法如下：\n```\n<input type=\"number\" step=\"0.01\" />\n```\n关于step，我在这里做简单的介绍，input 中type=number，一般会自动生成一个上下箭头，点击上箭头默认增加一个step，点击下箭头默认会减少一个step。number中默认step是1。也就是step=0.01,可以允许输入2位小数，并且点击上下箭头分别增加0.01和减少0.01。\n\n假如step和min一起使用，那么数值必须在min和max之间。\n\n看下面的例子：\n```\n<input type=\"number\" step=\"3.1\" min=\"1\" />\n```\n输入框可以输入哪些数字？\n\n首先，最小值是1，那么可以输入1.0，第二个是可以输入（1+3.1）那就是4.1,以此类推，每次点击上下箭头都会增加或者减少3.1，输入其他数字无效。这就是step的简单介绍。\n\n问题三，去除input默认样式\n```\ninput[type=number] {\n  -moz-appearance:textfield;\n}\ninput[type=number]::-webkit-inner-spin-button,\ninput[type=number]::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n```\n#### 28、ios 设置input 按钮样式会被默认样式覆盖\n\n解决方式如下：\n```\ninput,\ntextarea {\n  border: 0;\n  -webkit-appearance: none;\n}\n```\n设置默认样式为none\n\n#### 29、IOS键盘字母输入，默认首字母大写\n\n解决方案，设置如下属性\n```\n<input type=\"text\" autocapitalize=\"off\" />\n```\n### 30、select 下拉选择设置右对齐\n设置如下：\n```\nselect option {\ndirection: rtl;\n}\n```\n#### 31、通过transform进行skew变形，rotate旋转会造成出现锯齿现象\n\n可以设置如下：\n```\n-webkit-transform: rotate(-4deg) skew(10deg) translateZ(0);\n transform: rotate(-4deg) skew(10deg) translateZ(0);\n outline: 1px solid rgba(255,255,255,0)\n```\n#### 32、移动端点击300ms延迟\n\n300ms尚可接受，不过因为300ms产生的问题，我们必须要解决。300ms导致用户体验并不是很好，解决这个问题，我们一般在移动端用tap事件来取代click事件。\n\n推荐两个js，一个是fastclick，一个是tap.js\n\n关于300ms延迟，具体请看：http://thx.github.io/mobile/300ms-click-delay/\n#### 33、移动端点透问题\n\n案例如下：\n```\n<div id=\"haorooms\">点头事件测试</div>\n\n<a href=\"www.jb51.net\">www.jb51.net</a>\n```\ndiv是绝对定位的蒙层,并且z-index高于a。而a标签是页面中的一个链接，我们给div绑定tap事件：\n```\n$('#haorooms').on('tap',function(){\n$('#haorooms').hide();\n});\n```\n我们点击蒙层时 div正常消失，但是当我们在a标签上点击蒙层时，发现a链接被触发，这就是所谓的点透事件。\n\n原因：\n\ntouchstart 早于 touchend 早于click。 亦即click的触发是有延迟的，这个时间大概在300ms左右，也就是说我们tap触发之后蒙层隐藏， 此时 click还没有触发，300ms之后由于蒙层隐藏，我们的click触发到了下面的a链接上。\n解决：\n\n（1）尽量都使用touch事件来替换click事件。例如用touchend事件(推荐)。\n（2）用fastclick，https://github.com/ftlabs/fastclick\n（3）用preventDefault阻止a标签的click\n（4）延迟一定的时间(300ms+)来处理事件 （不推荐）\n（5）以上一般都能解决，实在不行就换成click事件。\n下面介绍一下touchend事件，如下：\n```\n$(\"#haorooms\").on(\"touchend\", function (event) {\n   event.preventDefault();\n\n });\n```\n#### 34、消除 IE10 里面的那个叉号\n```\ninput:-ms-clear{display:none;}\n```\n#### 35、关于 iOS 与 OS X 端字体的优化(横竖屏会出现字体加粗不一致等)\n\niOS 浏览器横屏时会重置字体大小，设置 text-size-adjust 为 none 可以解决 iOS 上的问题，但桌面版 Safari 的字体缩放功能会失效，因此最佳方案是将 text-size-adjust 为 100% 。\n```\n-webkit-text-size-adjust: 100%;\n-ms-text-size-adjust: 100%;\ntext-size-adjust: 100%;\n```\n#### 36、关于 iOS 系统中，中文输入法输入英文时，字母之间可能会出现一个六分之一空格\n\n可以通过正则去掉\n```\nthis.value = this.value.replace(/\\u2006/g, '');\n```\n#### 37、移动端 HTML5 audio autoplay 失效问题\n\n这个不是 BUG，由于自动播放网页中的音频或视频，会给用户带来一些困扰或者不必要的流量消耗，所以苹果系统和安卓系统通常都会禁止自动播放和使用 JS 的触发播放，必须由用户来触发才可以播放。\n\n解决方法思路：先通过用户 touchstart 触碰，触发播放并暂停（音频开始加载，后面用 JS 再操作就没问题了）。\n\n解决代码：\n```\ndocument.addEventListener('touchstart', function () {\n  document.getElementsByTagName('audio')[0].play();\n  document.getElementsByTagName('audio')[0].pause();\n});\n```\n#### 38、移动端 HTML5 input date 不支持 placeholder 问题\n\n这个我感觉没有什么好的解决方案，用如下方法\n```\n<input placeholder=\"Date\" class=\"textbox-n\" type=\"text\" onfocus=\"(this.type='date')\"  id=\"date\">\n```\n有的浏览器可能要点击两遍！\n#### 39、部分机型存在type为search的input，自带close按钮样式修改方法\n\n有些机型的搜索input控件会自带close按钮（一个伪元素），而通常为了兼容所有浏览器，我们会自己实现一个，此时去掉原生close按钮的方法为\n```\n#Search::-webkit-search-cancel-button{\n  display: none;\n}\n```\n如果想使用原生close按钮，又想使其符合设计风格，可以对这个伪元素的样式进行修改。\n\n#### 40、唤起select的option展开\nzepto方式:\n```\n$(sltElement).trrgger(\"mousedown\");\n```\n原生js方式:\n```\nfunction showDropdown(sltElement) {\n  var event;\n  event = document.createEvent('MouseEvents');\n  event.initMouseEvent('mousedown', true, true, window);\n  sltElement.dispatchEvent(event);\n};\n```\n","source":"_posts/常见的移动端web问题解决方案.md","raw":"---\ntitle: 常见的移动端WEB问题解决方案\ntags: [前端,移动端,WEB]\ncategories: 移动端\n---\n#### 1、安卓浏览器看背景图片，有些设备会模糊。\n用同等比例的图片在PC机上很清楚，但是手机上很模糊，原因是什么呢？\n\n经过研究，是devicePixelRatio作怪，因为手机分辨率太小，如果按照分辨率来显示网页，这样字会非常小，所以苹果当初就把iPhone 4的960640分辨率，在网页里只显示了480320，这样devicePixelRatio＝2。现在android比较乱，有1.5的，有2的也有3的。\n\n想让图片在手机里显示更为清晰，必须使用2x的背景图来代替img标签（一般情况都是用2倍）。例如一个div的宽高是100100，背景图必须得200200，然后background-size:contain;，这样显示出来的图片就比较清晰了。\n\n代码可以如下：\n```\nbackground:url(../images/icon/all.png) no-repeat center center;\n-webkit-background-size:50px 50px;\nbackground-size: 50px 50px;display:inline-block; width:100%; height:50px;\n```\n#### 2、图片加载\n若您遇到图片加载很慢的问题，对这种情况，手机开发一般用canvas方法加载：\n\n具体的canvas API 参见：http://javascript.ruanyifeng.com/htmlapi/canvas.html\n\n下面举例说明一个canvas的例子：\n```\n<li><canvas></canvas></li>\n```\njs动态加载图片和li 总共举例17张图片！\n```\nvar total=17;\nvar zWin=$(window);\nvar render=function(){\n  var padding=2;\n  var winWidth=zWin.width();\n  var picWidth=Math.floor((winWidth-padding*3)/4);\n  var tmpl ='';\n  for (var i=1;i<=totla;i++){\n  var p=padding;\n  var imgSrc='img/'+i+'.jpg';\n  if(i%4==1){\n   p=0;\n  }\n  tmpl +='<li style=\"width:'+picWidth+'px;height:'+picWidth+'px;padding-left:'+p+'px;padding-top:'+padding+'px;\"><canvas id=\"cvs_'+i+'\"></canvas></li>';\n  var imageObj = new Image();\n  imageObj.index = i;\n  imageObj.onload = function(){\n    var cvs =$('#cvs_'+this.index)[0].getContext('2d');\n    cvs.width = this.width;\n    cvs.height=this.height;\n    cvs.drawImage(this,0,0);\n  }\n  imageObj.src=imgSrc;\n  }\n\n}\nrender();\n```\n#### 3、假如手机网站不用兼容IE浏览器，一般我们会使用zeptojs。zeptojs内置Touch events方法，具体可以看http://zeptojs.com/#Touch events\n\n看了一下zeptio新版的API，已经支持IE10以上浏览器，对zeptojs可以选择使用！\n#### 4、防止手机中网页放大和缩小\n这点是最基本的，最为手机网站开发者来说应该都知道的，就是设置meta中的viewport\n\n还有就是，有些手机网站我们看到如下声明：\n```\n<!DOCTYPE html PUBLIC \"-//WAPFORUM//DTD XHTML Mobile 1.0//EN\" \"http://www.wapforum.org/DTD/xhtml-mobile10.dtd\">\n```\n设置了DTD的方式是XHTML的写法，假如我们页面运用的是html5，可以不用设置DTD,直接声明<!DOCTYPE html>。\n\n使用viewport使页面禁止缩放。 通常把user-scalable设置为0来关闭用户对页面视图缩放的行为。\n```\n<meta name=\"viewport\" content=\"user-scalable=0\" />\n```\n但是为了更好的兼容，我们会使用完整的viewport设置。\n```\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=0\" />\n```\n当然，user-scalable=0,有的人也写成user-scalable=no，都可以的。\n#### 5、apple-mobile-web-app-capable\n\napple-mobile-web-app-capable是设置Web应用是否以全屏模式运行。\n\n语法：\n```\n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n```\n说明：\n\n如果content设置为yes，Web应用会以全屏模式运行，反之，则不会。content的默认值是no，表示正常显示。你可以通过只读属性window.navigator.standalone来确定网页是否以全屏模式显示。\n#### 6、format-detection\nformat-detection 启动或禁用自动识别页面中的电话号码。\n语法：\n```\n<meta name=\"format-detection\" content=\"telephone=no\">\n```\n说明：\n\n默认情况下，设备会自动识别任何可能是电话号码的字符串。设置telephone=no可以禁用这项功能。\n#### 7、html5调用安卓或者ios的拨号功能\nhtml5提供了自动调用拨号的标签，只要在a标签的href中添加tel:就可以了。\n\n如下：\n```\n<a href=\"tel:4008106999,1034\">400-810-6999 转 1034</a>\n```\n#### 8、html5GPS定位功能\n具体请看：http://www.jb51.net/post/html5_GPS_getCurrentPosition\n#### 9、上下拉动滚动条时卡顿、慢\n```\nbody {\n  -webkit-overflow-scrolling: touch;\n  overflow-scrolling: touch;\n}\n```\nAndroid3+和iOS5+支持CSS3的新属性为overflow-scrolling\n#### 10、禁止复制、选中文本\n```\nElement {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -khtml-user-select: none;\n   user-select: none;\n}\n```\n解决移动设备可选中页面文本(视产品需要而定)\n#### 11、长时间按住页面出现闪退\n```\nelement {\n  -webkit-touch-callout: none;\n}\n```\n#### 12、iphone及ipad下输入框默认内阴影\n```\nElement{\n  -webkit-appearance: none;\n}\n```\n#### 13、ios和android下触摸元素时出现半透明灰色遮罩\n```\nElement {\n  -webkit-tap-highlight-color:rgba(255,255,255,0)\n}\n```\n设置alpha值为0就可以去除半透明灰色遮罩，备注：transparent的属性值在android下无效。\n\n后面一篇文章有详细介绍，地址：http://www.jb51.net/post/phone_web_ysk\n#### 14、active兼容处理 即 伪类 :active 失效\n方法一：body添加ontouchstart\n```\n<body ontouchstart=\"\">\n```\n方法二：js给 document 绑定 touchstart 或 touchend 事件\n```\n<style>\na {\n color: #000;\n}\na:active {\n color: #fff;\n}\n</style>\n<a herf=foo >bar</a>\n<script>\n document.addEventListener('touchstart',function(){},false);\n</script>\n```\n#### 15、动画定义3D启用硬件加速\n```\nElement {\n  -webkit-transform:translate3d(0, 0, 0)\n  transform: translate3d(0, 0, 0);\n}\n```\n注意：3D变形会消耗更多的内存与功耗\n#### 16、Retina屏的1px边框\n```\nElement{\n  border-width: thin;\n}\n```\n#### 17、webkit mask 兼容处理\n某些低端手机不支持css3 mask，可以选择性的降级处理。\n\n比如可以使用js判断来引用不同class：\n```\nif( 'WebkitMask' in document.documentElement.style){\n  alert('支持mask');\n} else {\n  alert('不支持mask');\n}\n```\n#### 18、旋转屏幕时，字体大小调整的问题\n```\nhtml, body, form, fieldset, p, div, h1, h2, h3, h4, h5, h6 {\n  -webkit-text-size-adjust:100%;\n}\n```\n#### 19、transition闪屏\n```\n/设置内嵌的元素在 3D 空间如何呈现：保留3D /\n\n-webkit-transform-style: preserve-3d;\n/ 设置进行转换的元素的背面在面对用户时是否可见：隐藏 /\n\n-webkit-backface-visibility:hidden;\n```\n#### 20、圆角bug\n某些Android手机圆角失效\n```\nbackground-clip: padding-box;\n```\n#### 21、顶部状态栏背景色\n```\n<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\n```\n说明：\n\n除非你先使用apple-mobile-web-app-capable指定全屏模式，否则这个meta标签不会起任何作用。\n\n如果content设置为default，则状态栏正常显示。如果设置为blank，则状态栏会有一个黑色的背景。如果设置为blank-translucent，则状态栏显示为黑色半透明。如果设置为default或blank，则页面显示在状态栏的下方，即状态栏占据上方部分，页面占据下方部分，二者没有遮挡对方或被遮挡。如果设置为blank-translucent，则页面会充满屏幕，其中页面顶部会被状态栏遮盖住（会覆盖页面20px高度，而iphone4和itouch4的Retina屏幕为40px）。默认值是default。\n#### 22、设置缓存\n```\n<meta http-equiv=\"Cache-Control\" content=\"no-cache\" />\n```\n手机页面通常在第一次加载后会进行缓存，然后每次刷新会使用缓存而不是去重新向服务器发送请求。如果不希望使用缓存可以设置no-cache。\n#### 23、桌面图标\n```\n<link rel=\"apple-touch-icon\" href=\"touch-icon-iphone.png\" />\n<link rel=\"apple-touch-icon\" sizes=\"76x76\" href=\"touch-icon-ipad.png\" />\n<link rel=\"apple-touch-icon\" sizes=\"120x120\" href=\"touch-icon-iphone-retina.png\" />\n<link rel=\"apple-touch-icon\" sizes=\"152x152\" href=\"touch-icon-ipad-retina.png\" />\n```\niOS下针对不同设备定义不同的桌面图标。如果不定义则以当前屏幕截图作为图标。\n\n上面的写法可能大家会觉得会有默认光泽，下面这种设置方法可以去掉光泽效果，还原设计图的效果！\n```\n<link rel=\"apple-touch-icon-precomposed\" href=\"touch-icon-iphone.png\" />\n```\n图片尺寸可以设定为5757（px）或者Retina可以定为114114（px），ipad尺寸为72*72（px)\n#### 24、启动画面\n```\n<link rel=\"apple-touch-startup-image\" href=\"start.png\"/>\n```\niOS下页面启动加载时显示的画面图片，避免加载时的白屏。\n\n可以通过madia来指定不同的大小：\n```\n<!--iPhone-->\n<link href=\"apple-touch-startup-image-320x460.png\" media=\"(device-width: 320px)\" rel=\"apple-touch-startup-image\" />\n\n<!-- iPhone Retina -->\n<link href=\"apple-touch-startup-image-640x920.png\" media=\"(device-width: 320px) and (-webkit-device-pixel-ratio: 2)\" rel=\"apple-touch-startup-image\" />\n\n<!-- iPhone 5 -->\n<link rel=\"apple-touch-startup-image\" media=\"(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)\" href=\"apple-touch-startup-image-640x1096.png\">\n\n<!-- iPad portrait -->\n<link href=\"apple-touch-startup-image-768x1004.png\" media=\"(device-width: 768px) and (orientation: portrait)\" rel=\"apple-touch-startup-image\" />\n\n<!-- iPad landscape -->\n<link href=\"apple-touch-startup-image-748x1024.png\" media=\"(device-width: 768px) and (orientation: landscape)\" rel=\"apple-touch-startup-image\" />\n\n<!-- iPad Retina portrait -->\n<link href=\"apple-touch-startup-image-1536x2008.png\" media=\"(device-width: 1536px) and (orientation: portrait) and (-webkit-device-pixel-ratio: 2)\" rel=\"apple-touch-startup-image\" />\n\n<!-- iPad Retina landscape -->\n<link href=\"apple-touch-startup-image-1496x2048.png\"media=\"(device-width: 1536px) and (orientation: landscape) and (-webkit-device-pixel-ratio: 2)\"rel=\"apple-touch-startup-image\" />\n```\n#### 25、浏览器私有及其它meta\n以下属性在项目中没有应用过，可以写一个demo测试以下！\n\nQQ浏览器私有\n\n全屏模式\n```\n<meta name=\"x5-fullscreen\" content=\"true\">\n```\n强制竖屏\n```\n<meta name=\"x5-orientation\" content=\"portrait\">\n```\n强制横屏\n```\n<meta name=\"x5-orientation\" content=\"landscape\">\n```\n应用模式\n```\n<meta name=\"x5-page-mode\" content=\"app\">\n```\nUC浏览器私有\n\n全屏模式\n```\n<meta name=\"full-screen\" content=\"yes\">\n```\n强制竖屏\n```\n<meta name=\"screen-orientation\" content=\"portrait\">\n```\n强制横屏\n```\n<meta name=\"screen-orientation\" content=\"landscape\">\n```\n应用模式\n```\n<meta name=\"browsermode\" content=\"application\">\n```\n其它\n\n针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓\n```\n<meta name=\"HandheldFriendly\" content=\"true\">\n```\n微软的老式浏览器\n```\n<meta name=\"MobileOptimized\" content=\"320\">\n```\nwindows phone 点击无高光\n```\n<meta name=\"msapplication-tap-highlight\" content=\"no\">\n```\n#### 26、 IOS中input键盘事件keyup、keydown、keypress支持不是很好\n问题是这样的，用input search做模糊搜索的时候，在键盘里面输入关键词，会通过ajax后台查询，然后返回数据，然后再对返回的数据进行关键词标红。用input监听键盘keyup事件，在安卓手机浏览器中是可以的，但是在ios手机浏览器中变红很慢，用输入法输入之后，并未立刻相应keyup事件，只有在通过删除之后才能相应！\n\n解决办法：\n\n可以用html5的oninput事件去代替keyup\n```\n<input type=\"text\" id=\"testInput\">\n<script type=\"text/javascript\">\n  document.getElementById('testInput').addEventListener('input', function(e){\n    var value = e.target.value;\n  });\n</script>\n```\n然后就达到类似keyup的效果！\n#### 27、h5网站input 设置为type=number的问题\nh5网页input 的type设置为number一般会产生三个问题，一个问题是maxlength属性不好用了。另外一个是form提交的时候，默认给取整了。三是部分安卓手机出现样式问题。\n\n问题一解决，我目前用的是js。如下\n```\n<input type=\"number\" oninput=\"checkTextLength(this ,10)\">\n\nfunction checkTextLength(obj, length) {\n      if(obj.value.length > length)  {\n        obj.value = obj.value.substr(0, length);\n      }\n}\n```\n问题二，是因为form提交默认做了表单验证，step默认是1,要设置step属性，假如保留2位小数，写法如下：\n```\n<input type=\"number\" step=\"0.01\" />\n```\n关于step，我在这里做简单的介绍，input 中type=number，一般会自动生成一个上下箭头，点击上箭头默认增加一个step，点击下箭头默认会减少一个step。number中默认step是1。也就是step=0.01,可以允许输入2位小数，并且点击上下箭头分别增加0.01和减少0.01。\n\n假如step和min一起使用，那么数值必须在min和max之间。\n\n看下面的例子：\n```\n<input type=\"number\" step=\"3.1\" min=\"1\" />\n```\n输入框可以输入哪些数字？\n\n首先，最小值是1，那么可以输入1.0，第二个是可以输入（1+3.1）那就是4.1,以此类推，每次点击上下箭头都会增加或者减少3.1，输入其他数字无效。这就是step的简单介绍。\n\n问题三，去除input默认样式\n```\ninput[type=number] {\n  -moz-appearance:textfield;\n}\ninput[type=number]::-webkit-inner-spin-button,\ninput[type=number]::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n```\n#### 28、ios 设置input 按钮样式会被默认样式覆盖\n\n解决方式如下：\n```\ninput,\ntextarea {\n  border: 0;\n  -webkit-appearance: none;\n}\n```\n设置默认样式为none\n\n#### 29、IOS键盘字母输入，默认首字母大写\n\n解决方案，设置如下属性\n```\n<input type=\"text\" autocapitalize=\"off\" />\n```\n### 30、select 下拉选择设置右对齐\n设置如下：\n```\nselect option {\ndirection: rtl;\n}\n```\n#### 31、通过transform进行skew变形，rotate旋转会造成出现锯齿现象\n\n可以设置如下：\n```\n-webkit-transform: rotate(-4deg) skew(10deg) translateZ(0);\n transform: rotate(-4deg) skew(10deg) translateZ(0);\n outline: 1px solid rgba(255,255,255,0)\n```\n#### 32、移动端点击300ms延迟\n\n300ms尚可接受，不过因为300ms产生的问题，我们必须要解决。300ms导致用户体验并不是很好，解决这个问题，我们一般在移动端用tap事件来取代click事件。\n\n推荐两个js，一个是fastclick，一个是tap.js\n\n关于300ms延迟，具体请看：http://thx.github.io/mobile/300ms-click-delay/\n#### 33、移动端点透问题\n\n案例如下：\n```\n<div id=\"haorooms\">点头事件测试</div>\n\n<a href=\"www.jb51.net\">www.jb51.net</a>\n```\ndiv是绝对定位的蒙层,并且z-index高于a。而a标签是页面中的一个链接，我们给div绑定tap事件：\n```\n$('#haorooms').on('tap',function(){\n$('#haorooms').hide();\n});\n```\n我们点击蒙层时 div正常消失，但是当我们在a标签上点击蒙层时，发现a链接被触发，这就是所谓的点透事件。\n\n原因：\n\ntouchstart 早于 touchend 早于click。 亦即click的触发是有延迟的，这个时间大概在300ms左右，也就是说我们tap触发之后蒙层隐藏， 此时 click还没有触发，300ms之后由于蒙层隐藏，我们的click触发到了下面的a链接上。\n解决：\n\n（1）尽量都使用touch事件来替换click事件。例如用touchend事件(推荐)。\n（2）用fastclick，https://github.com/ftlabs/fastclick\n（3）用preventDefault阻止a标签的click\n（4）延迟一定的时间(300ms+)来处理事件 （不推荐）\n（5）以上一般都能解决，实在不行就换成click事件。\n下面介绍一下touchend事件，如下：\n```\n$(\"#haorooms\").on(\"touchend\", function (event) {\n   event.preventDefault();\n\n });\n```\n#### 34、消除 IE10 里面的那个叉号\n```\ninput:-ms-clear{display:none;}\n```\n#### 35、关于 iOS 与 OS X 端字体的优化(横竖屏会出现字体加粗不一致等)\n\niOS 浏览器横屏时会重置字体大小，设置 text-size-adjust 为 none 可以解决 iOS 上的问题，但桌面版 Safari 的字体缩放功能会失效，因此最佳方案是将 text-size-adjust 为 100% 。\n```\n-webkit-text-size-adjust: 100%;\n-ms-text-size-adjust: 100%;\ntext-size-adjust: 100%;\n```\n#### 36、关于 iOS 系统中，中文输入法输入英文时，字母之间可能会出现一个六分之一空格\n\n可以通过正则去掉\n```\nthis.value = this.value.replace(/\\u2006/g, '');\n```\n#### 37、移动端 HTML5 audio autoplay 失效问题\n\n这个不是 BUG，由于自动播放网页中的音频或视频，会给用户带来一些困扰或者不必要的流量消耗，所以苹果系统和安卓系统通常都会禁止自动播放和使用 JS 的触发播放，必须由用户来触发才可以播放。\n\n解决方法思路：先通过用户 touchstart 触碰，触发播放并暂停（音频开始加载，后面用 JS 再操作就没问题了）。\n\n解决代码：\n```\ndocument.addEventListener('touchstart', function () {\n  document.getElementsByTagName('audio')[0].play();\n  document.getElementsByTagName('audio')[0].pause();\n});\n```\n#### 38、移动端 HTML5 input date 不支持 placeholder 问题\n\n这个我感觉没有什么好的解决方案，用如下方法\n```\n<input placeholder=\"Date\" class=\"textbox-n\" type=\"text\" onfocus=\"(this.type='date')\"  id=\"date\">\n```\n有的浏览器可能要点击两遍！\n#### 39、部分机型存在type为search的input，自带close按钮样式修改方法\n\n有些机型的搜索input控件会自带close按钮（一个伪元素），而通常为了兼容所有浏览器，我们会自己实现一个，此时去掉原生close按钮的方法为\n```\n#Search::-webkit-search-cancel-button{\n  display: none;\n}\n```\n如果想使用原生close按钮，又想使其符合设计风格，可以对这个伪元素的样式进行修改。\n\n#### 40、唤起select的option展开\nzepto方式:\n```\n$(sltElement).trrgger(\"mousedown\");\n```\n原生js方式:\n```\nfunction showDropdown(sltElement) {\n  var event;\n  event = document.createEvent('MouseEvents');\n  event.initMouseEvent('mousedown', true, true, window);\n  sltElement.dispatchEvent(event);\n};\n```\n","slug":"常见的移动端web问题解决方案","published":1,"date":"2017-05-26T01:31:18.535Z","updated":"2017-05-26T01:59:54.300Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmtsx001q4wvsjsmvnbep","content":"<h4 id=\"1、安卓浏览器看背景图片，有些设备会模糊。\"><a href=\"#1、安卓浏览器看背景图片，有些设备会模糊。\" class=\"headerlink\" title=\"1、安卓浏览器看背景图片，有些设备会模糊。\"></a>1、安卓浏览器看背景图片，有些设备会模糊。</h4><p>用同等比例的图片在PC机上很清楚，但是手机上很模糊，原因是什么呢？</p>\n<p>经过研究，是devicePixelRatio作怪，因为手机分辨率太小，如果按照分辨率来显示网页，这样字会非常小，所以苹果当初就把iPhone 4的960640分辨率，在网页里只显示了480320，这样devicePixelRatio＝2。现在android比较乱，有1.5的，有2的也有3的。</p>\n<p>想让图片在手机里显示更为清晰，必须使用2x的背景图来代替img标签（一般情况都是用2倍）。例如一个div的宽高是100100，背景图必须得200200，然后background-size:contain;，这样显示出来的图片就比较清晰了。</p>\n<p>代码可以如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">background:url(../images/icon/all.png) no-repeat center center;</div><div class=\"line\">-webkit-background-size:50px 50px;</div><div class=\"line\">background-size: 50px 50px;display:inline-block; width:100%; height:50px;</div></pre></td></tr></table></figure></p>\n<h4 id=\"2、图片加载\"><a href=\"#2、图片加载\" class=\"headerlink\" title=\"2、图片加载\"></a>2、图片加载</h4><p>若您遇到图片加载很慢的问题，对这种情况，手机开发一般用canvas方法加载：</p>\n<p>具体的canvas API 参见：<a href=\"http://javascript.ruanyifeng.com/htmlapi/canvas.html\" target=\"_blank\" rel=\"external\">http://javascript.ruanyifeng.com/htmlapi/canvas.html</a></p>\n<p>下面举例说明一个canvas的例子：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;li&gt;&lt;canvas&gt;&lt;/canvas&gt;&lt;/li&gt;</div></pre></td></tr></table></figure></p>\n<p>js动态加载图片和li 总共举例17张图片！<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">var total=17;</div><div class=\"line\">var zWin=$(window);</div><div class=\"line\">var render=function()&#123;</div><div class=\"line\">  var padding=2;</div><div class=\"line\">  var winWidth=zWin.width();</div><div class=\"line\">  var picWidth=Math.floor((winWidth-padding*3)/4);</div><div class=\"line\">  var tmpl =&apos;&apos;;</div><div class=\"line\">  for (var i=1;i&lt;=totla;i++)&#123;</div><div class=\"line\">  var p=padding;</div><div class=\"line\">  var imgSrc=&apos;img/&apos;+i+&apos;.jpg&apos;;</div><div class=\"line\">  if(i%4==1)&#123;</div><div class=\"line\">   p=0;</div><div class=\"line\">  &#125;</div><div class=\"line\">  tmpl +=&apos;&lt;li style=&quot;width:&apos;+picWidth+&apos;px;height:&apos;+picWidth+&apos;px;padding-left:&apos;+p+&apos;px;padding-top:&apos;+padding+&apos;px;&quot;&gt;&lt;canvas id=&quot;cvs_&apos;+i+&apos;&quot;&gt;&lt;/canvas&gt;&lt;/li&gt;&apos;;</div><div class=\"line\">  var imageObj = new Image();</div><div class=\"line\">  imageObj.index = i;</div><div class=\"line\">  imageObj.onload = function()&#123;</div><div class=\"line\">    var cvs =$(&apos;#cvs_&apos;+this.index)[0].getContext(&apos;2d&apos;);</div><div class=\"line\">    cvs.width = this.width;</div><div class=\"line\">    cvs.height=this.height;</div><div class=\"line\">    cvs.drawImage(this,0,0);</div><div class=\"line\">  &#125;</div><div class=\"line\">  imageObj.src=imgSrc;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\">render();</div></pre></td></tr></table></figure></p>\n<h4 id=\"3、假如手机网站不用兼容IE浏览器，一般我们会使用zeptojs。zeptojs内置Touch-events方法，具体可以看http-zeptojs-com-Touch-events\"><a href=\"#3、假如手机网站不用兼容IE浏览器，一般我们会使用zeptojs。zeptojs内置Touch-events方法，具体可以看http-zeptojs-com-Touch-events\" class=\"headerlink\" title=\"3、假如手机网站不用兼容IE浏览器，一般我们会使用zeptojs。zeptojs内置Touch events方法，具体可以看http://zeptojs.com/#Touch events\"></a>3、假如手机网站不用兼容IE浏览器，一般我们会使用zeptojs。zeptojs内置Touch events方法，具体可以看<a href=\"http://zeptojs.com/#Touch\" target=\"_blank\" rel=\"external\">http://zeptojs.com/#Touch</a> events</h4><p>看了一下zeptio新版的API，已经支持IE10以上浏览器，对zeptojs可以选择使用！</p>\n<h4 id=\"4、防止手机中网页放大和缩小\"><a href=\"#4、防止手机中网页放大和缩小\" class=\"headerlink\" title=\"4、防止手机中网页放大和缩小\"></a>4、防止手机中网页放大和缩小</h4><p>这点是最基本的，最为手机网站开发者来说应该都知道的，就是设置meta中的viewport</p>\n<p>还有就是，有些手机网站我们看到如下声明：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html PUBLIC &quot;-//WAPFORUM//DTD XHTML Mobile 1.0//EN&quot; &quot;http://www.wapforum.org/DTD/xhtml-mobile10.dtd&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>设置了DTD的方式是XHTML的写法，假如我们页面运用的是html5，可以不用设置DTD,直接声明&lt;!DOCTYPE html&gt;。</p>\n<p>使用viewport使页面禁止缩放。 通常把user-scalable设置为0来关闭用户对页面视图缩放的行为。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;viewport&quot; content=&quot;user-scalable=0&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>但是为了更好的兼容，我们会使用完整的viewport设置。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=0&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>当然，user-scalable=0,有的人也写成user-scalable=no，都可以的。</p>\n<h4 id=\"5、apple-mobile-web-app-capable\"><a href=\"#5、apple-mobile-web-app-capable\" class=\"headerlink\" title=\"5、apple-mobile-web-app-capable\"></a>5、apple-mobile-web-app-capable</h4><p>apple-mobile-web-app-capable是设置Web应用是否以全屏模式运行。</p>\n<p>语法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>说明：</p>\n<p>如果content设置为yes，Web应用会以全屏模式运行，反之，则不会。content的默认值是no，表示正常显示。你可以通过只读属性window.navigator.standalone来确定网页是否以全屏模式显示。</p>\n<h4 id=\"6、format-detection\"><a href=\"#6、format-detection\" class=\"headerlink\" title=\"6、format-detection\"></a>6、format-detection</h4><p>format-detection 启动或禁用自动识别页面中的电话号码。<br>语法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>说明：</p>\n<p>默认情况下，设备会自动识别任何可能是电话号码的字符串。设置telephone=no可以禁用这项功能。</p>\n<h4 id=\"7、html5调用安卓或者ios的拨号功能\"><a href=\"#7、html5调用安卓或者ios的拨号功能\" class=\"headerlink\" title=\"7、html5调用安卓或者ios的拨号功能\"></a>7、html5调用安卓或者ios的拨号功能</h4><p>html5提供了自动调用拨号的标签，只要在a标签的href中添加tel:就可以了。</p>\n<p>如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;tel:4008106999,1034&quot;&gt;400-810-6999 转 1034&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<h4 id=\"8、html5GPS定位功能\"><a href=\"#8、html5GPS定位功能\" class=\"headerlink\" title=\"8、html5GPS定位功能\"></a>8、html5GPS定位功能</h4><p>具体请看：<a href=\"http://www.jb51.net/post/html5_GPS_getCurrentPosition\" target=\"_blank\" rel=\"external\">http://www.jb51.net/post/html5_GPS_getCurrentPosition</a></p>\n<h4 id=\"9、上下拉动滚动条时卡顿、慢\"><a href=\"#9、上下拉动滚动条时卡顿、慢\" class=\"headerlink\" title=\"9、上下拉动滚动条时卡顿、慢\"></a>9、上下拉动滚动条时卡顿、慢</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">body &#123;</div><div class=\"line\">  -webkit-overflow-scrolling: touch;</div><div class=\"line\">  overflow-scrolling: touch;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Android3+和iOS5+支持CSS3的新属性为overflow-scrolling</p>\n<h4 id=\"10、禁止复制、选中文本\"><a href=\"#10、禁止复制、选中文本\" class=\"headerlink\" title=\"10、禁止复制、选中文本\"></a>10、禁止复制、选中文本</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Element &#123;</div><div class=\"line\">  -webkit-user-select: none;</div><div class=\"line\">  -moz-user-select: none;</div><div class=\"line\">  -khtml-user-select: none;</div><div class=\"line\">   user-select: none;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>解决移动设备可选中页面文本(视产品需要而定)</p>\n<h4 id=\"11、长时间按住页面出现闪退\"><a href=\"#11、长时间按住页面出现闪退\" class=\"headerlink\" title=\"11、长时间按住页面出现闪退\"></a>11、长时间按住页面出现闪退</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">element &#123;</div><div class=\"line\">  -webkit-touch-callout: none;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"12、iphone及ipad下输入框默认内阴影\"><a href=\"#12、iphone及ipad下输入框默认内阴影\" class=\"headerlink\" title=\"12、iphone及ipad下输入框默认内阴影\"></a>12、iphone及ipad下输入框默认内阴影</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Element&#123;</div><div class=\"line\">  -webkit-appearance: none;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"13、ios和android下触摸元素时出现半透明灰色遮罩\"><a href=\"#13、ios和android下触摸元素时出现半透明灰色遮罩\" class=\"headerlink\" title=\"13、ios和android下触摸元素时出现半透明灰色遮罩\"></a>13、ios和android下触摸元素时出现半透明灰色遮罩</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Element &#123;</div><div class=\"line\">  -webkit-tap-highlight-color:rgba(255,255,255,0)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>设置alpha值为0就可以去除半透明灰色遮罩，备注：transparent的属性值在android下无效。</p>\n<p>后面一篇文章有详细介绍，地址：<a href=\"http://www.jb51.net/post/phone_web_ysk\" target=\"_blank\" rel=\"external\">http://www.jb51.net/post/phone_web_ysk</a></p>\n<h4 id=\"14、active兼容处理-即-伪类-active-失效\"><a href=\"#14、active兼容处理-即-伪类-active-失效\" class=\"headerlink\" title=\"14、active兼容处理 即 伪类 :active 失效\"></a>14、active兼容处理 即 伪类 :active 失效</h4><p>方法一：body添加ontouchstart<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;body ontouchstart=&quot;&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>方法二：js给 document 绑定 touchstart 或 touchend 事件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;style&gt;</div><div class=\"line\">a &#123;</div><div class=\"line\"> color: #000;</div><div class=\"line\">&#125;</div><div class=\"line\">a:active &#123;</div><div class=\"line\"> color: #fff;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/style&gt;</div><div class=\"line\">&lt;a herf=foo &gt;bar&lt;/a&gt;</div><div class=\"line\">&lt;script&gt;</div><div class=\"line\"> document.addEventListener(&apos;touchstart&apos;,function()&#123;&#125;,false);</div><div class=\"line\">&lt;/script&gt;</div></pre></td></tr></table></figure></p>\n<h4 id=\"15、动画定义3D启用硬件加速\"><a href=\"#15、动画定义3D启用硬件加速\" class=\"headerlink\" title=\"15、动画定义3D启用硬件加速\"></a>15、动画定义3D启用硬件加速</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">Element &#123;</div><div class=\"line\">  -webkit-transform:translate3d(0, 0, 0)</div><div class=\"line\">  transform: translate3d(0, 0, 0);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>注意：3D变形会消耗更多的内存与功耗</p>\n<h4 id=\"16、Retina屏的1px边框\"><a href=\"#16、Retina屏的1px边框\" class=\"headerlink\" title=\"16、Retina屏的1px边框\"></a>16、Retina屏的1px边框</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Element&#123;</div><div class=\"line\">  border-width: thin;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"17、webkit-mask-兼容处理\"><a href=\"#17、webkit-mask-兼容处理\" class=\"headerlink\" title=\"17、webkit mask 兼容处理\"></a>17、webkit mask 兼容处理</h4><p>某些低端手机不支持css3 mask，可以选择性的降级处理。</p>\n<p>比如可以使用js判断来引用不同class：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">if( &apos;WebkitMask&apos; in document.documentElement.style)&#123;</div><div class=\"line\">  alert(&apos;支持mask&apos;);</div><div class=\"line\">&#125; else &#123;</div><div class=\"line\">  alert(&apos;不支持mask&apos;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"18、旋转屏幕时，字体大小调整的问题\"><a href=\"#18、旋转屏幕时，字体大小调整的问题\" class=\"headerlink\" title=\"18、旋转屏幕时，字体大小调整的问题\"></a>18、旋转屏幕时，字体大小调整的问题</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">html, body, form, fieldset, p, div, h1, h2, h3, h4, h5, h6 &#123;</div><div class=\"line\">  -webkit-text-size-adjust:100%;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"19、transition闪屏\"><a href=\"#19、transition闪屏\" class=\"headerlink\" title=\"19、transition闪屏\"></a>19、transition闪屏</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">/设置内嵌的元素在 3D 空间如何呈现：保留3D /</div><div class=\"line\"></div><div class=\"line\">-webkit-transform-style: preserve-3d;</div><div class=\"line\">/ 设置进行转换的元素的背面在面对用户时是否可见：隐藏 /</div><div class=\"line\"></div><div class=\"line\">-webkit-backface-visibility:hidden;</div></pre></td></tr></table></figure>\n<h4 id=\"20、圆角bug\"><a href=\"#20、圆角bug\" class=\"headerlink\" title=\"20、圆角bug\"></a>20、圆角bug</h4><p>某些Android手机圆角失效<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">background-clip: padding-box;</div></pre></td></tr></table></figure></p>\n<h4 id=\"21、顶部状态栏背景色\"><a href=\"#21、顶部状态栏背景色\" class=\"headerlink\" title=\"21、顶部状态栏背景色\"></a>21、顶部状态栏背景色</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;apple-mobile-web-app-status-bar-style&quot; content=&quot;black&quot; /&gt;</div></pre></td></tr></table></figure>\n<p>说明：</p>\n<p>除非你先使用apple-mobile-web-app-capable指定全屏模式，否则这个meta标签不会起任何作用。</p>\n<p>如果content设置为default，则状态栏正常显示。如果设置为blank，则状态栏会有一个黑色的背景。如果设置为blank-translucent，则状态栏显示为黑色半透明。如果设置为default或blank，则页面显示在状态栏的下方，即状态栏占据上方部分，页面占据下方部分，二者没有遮挡对方或被遮挡。如果设置为blank-translucent，则页面会充满屏幕，其中页面顶部会被状态栏遮盖住（会覆盖页面20px高度，而iphone4和itouch4的Retina屏幕为40px）。默认值是default。</p>\n<h4 id=\"22、设置缓存\"><a href=\"#22、设置缓存\" class=\"headerlink\" title=\"22、设置缓存\"></a>22、设置缓存</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta http-equiv=&quot;Cache-Control&quot; content=&quot;no-cache&quot; /&gt;</div></pre></td></tr></table></figure>\n<p>手机页面通常在第一次加载后会进行缓存，然后每次刷新会使用缓存而不是去重新向服务器发送请求。如果不希望使用缓存可以设置no-cache。</p>\n<h4 id=\"23、桌面图标\"><a href=\"#23、桌面图标\" class=\"headerlink\" title=\"23、桌面图标\"></a>23、桌面图标</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;link rel=&quot;apple-touch-icon&quot; href=&quot;touch-icon-iphone.png&quot; /&gt;</div><div class=\"line\">&lt;link rel=&quot;apple-touch-icon&quot; sizes=&quot;76x76&quot; href=&quot;touch-icon-ipad.png&quot; /&gt;</div><div class=\"line\">&lt;link rel=&quot;apple-touch-icon&quot; sizes=&quot;120x120&quot; href=&quot;touch-icon-iphone-retina.png&quot; /&gt;</div><div class=\"line\">&lt;link rel=&quot;apple-touch-icon&quot; sizes=&quot;152x152&quot; href=&quot;touch-icon-ipad-retina.png&quot; /&gt;</div></pre></td></tr></table></figure>\n<p>iOS下针对不同设备定义不同的桌面图标。如果不定义则以当前屏幕截图作为图标。</p>\n<p>上面的写法可能大家会觉得会有默认光泽，下面这种设置方法可以去掉光泽效果，还原设计图的效果！<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;touch-icon-iphone.png&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>图片尺寸可以设定为5757（px）或者Retina可以定为114114（px），ipad尺寸为72*72（px)</p>\n<h4 id=\"24、启动画面\"><a href=\"#24、启动画面\" class=\"headerlink\" title=\"24、启动画面\"></a>24、启动画面</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;link rel=&quot;apple-touch-startup-image&quot; href=&quot;start.png&quot;/&gt;</div></pre></td></tr></table></figure>\n<p>iOS下页面启动加载时显示的画面图片，避免加载时的白屏。</p>\n<p>可以通过madia来指定不同的大小：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!--iPhone--&gt;</div><div class=\"line\">&lt;link href=&quot;apple-touch-startup-image-320x460.png&quot; media=&quot;(device-width: 320px)&quot; rel=&quot;apple-touch-startup-image&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- iPhone Retina --&gt;</div><div class=\"line\">&lt;link href=&quot;apple-touch-startup-image-640x920.png&quot; media=&quot;(device-width: 320px) and (-webkit-device-pixel-ratio: 2)&quot; rel=&quot;apple-touch-startup-image&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- iPhone 5 --&gt;</div><div class=\"line\">&lt;link rel=&quot;apple-touch-startup-image&quot; media=&quot;(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)&quot; href=&quot;apple-touch-startup-image-640x1096.png&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- iPad portrait --&gt;</div><div class=\"line\">&lt;link href=&quot;apple-touch-startup-image-768x1004.png&quot; media=&quot;(device-width: 768px) and (orientation: portrait)&quot; rel=&quot;apple-touch-startup-image&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- iPad landscape --&gt;</div><div class=\"line\">&lt;link href=&quot;apple-touch-startup-image-748x1024.png&quot; media=&quot;(device-width: 768px) and (orientation: landscape)&quot; rel=&quot;apple-touch-startup-image&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- iPad Retina portrait --&gt;</div><div class=\"line\">&lt;link href=&quot;apple-touch-startup-image-1536x2008.png&quot; media=&quot;(device-width: 1536px) and (orientation: portrait) and (-webkit-device-pixel-ratio: 2)&quot; rel=&quot;apple-touch-startup-image&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- iPad Retina landscape --&gt;</div><div class=\"line\">&lt;link href=&quot;apple-touch-startup-image-1496x2048.png&quot;media=&quot;(device-width: 1536px) and (orientation: landscape) and (-webkit-device-pixel-ratio: 2)&quot;rel=&quot;apple-touch-startup-image&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<h4 id=\"25、浏览器私有及其它meta\"><a href=\"#25、浏览器私有及其它meta\" class=\"headerlink\" title=\"25、浏览器私有及其它meta\"></a>25、浏览器私有及其它meta</h4><p>以下属性在项目中没有应用过，可以写一个demo测试以下！</p>\n<p>QQ浏览器私有</p>\n<p>全屏模式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;x5-fullscreen&quot; content=&quot;true&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>强制竖屏<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;x5-orientation&quot; content=&quot;portrait&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>强制横屏<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;x5-orientation&quot; content=&quot;landscape&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>应用模式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;x5-page-mode&quot; content=&quot;app&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>UC浏览器私有</p>\n<p>全屏模式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;full-screen&quot; content=&quot;yes&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>强制竖屏<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;screen-orientation&quot; content=&quot;portrait&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>强制横屏<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;screen-orientation&quot; content=&quot;landscape&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>应用模式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;browsermode&quot; content=&quot;application&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>其它</p>\n<p>针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;HandheldFriendly&quot; content=&quot;true&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>微软的老式浏览器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;MobileOptimized&quot; content=&quot;320&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>windows phone 点击无高光<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;msapplication-tap-highlight&quot; content=&quot;no&quot;&gt;</div></pre></td></tr></table></figure></p>\n<h4 id=\"26、-IOS中input键盘事件keyup、keydown、keypress支持不是很好\"><a href=\"#26、-IOS中input键盘事件keyup、keydown、keypress支持不是很好\" class=\"headerlink\" title=\"26、 IOS中input键盘事件keyup、keydown、keypress支持不是很好\"></a>26、 IOS中input键盘事件keyup、keydown、keypress支持不是很好</h4><p>问题是这样的，用input search做模糊搜索的时候，在键盘里面输入关键词，会通过ajax后台查询，然后返回数据，然后再对返回的数据进行关键词标红。用input监听键盘keyup事件，在安卓手机浏览器中是可以的，但是在ios手机浏览器中变红很慢，用输入法输入之后，并未立刻相应keyup事件，只有在通过删除之后才能相应！</p>\n<p>解决办法：</p>\n<p>可以用html5的oninput事件去代替keyup<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input type=&quot;text&quot; id=&quot;testInput&quot;&gt;</div><div class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class=\"line\">  document.getElementById(&apos;testInput&apos;).addEventListener(&apos;input&apos;, function(e)&#123;</div><div class=\"line\">    var value = e.target.value;</div><div class=\"line\">  &#125;);</div><div class=\"line\">&lt;/script&gt;</div></pre></td></tr></table></figure></p>\n<p>然后就达到类似keyup的效果！</p>\n<h4 id=\"27、h5网站input-设置为type-number的问题\"><a href=\"#27、h5网站input-设置为type-number的问题\" class=\"headerlink\" title=\"27、h5网站input 设置为type=number的问题\"></a>27、h5网站input 设置为type=number的问题</h4><p>h5网页input 的type设置为number一般会产生三个问题，一个问题是maxlength属性不好用了。另外一个是form提交的时候，默认给取整了。三是部分安卓手机出现样式问题。</p>\n<p>问题一解决，我目前用的是js。如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input type=&quot;number&quot; oninput=&quot;checkTextLength(this ,10)&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">function checkTextLength(obj, length) &#123;</div><div class=\"line\">      if(obj.value.length &gt; length)  &#123;</div><div class=\"line\">        obj.value = obj.value.substr(0, length);</div><div class=\"line\">      &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>问题二，是因为form提交默认做了表单验证，step默认是1,要设置step属性，假如保留2位小数，写法如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input type=&quot;number&quot; step=&quot;0.01&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>关于step，我在这里做简单的介绍，input 中type=number，一般会自动生成一个上下箭头，点击上箭头默认增加一个step，点击下箭头默认会减少一个step。number中默认step是1。也就是step=0.01,可以允许输入2位小数，并且点击上下箭头分别增加0.01和减少0.01。</p>\n<p>假如step和min一起使用，那么数值必须在min和max之间。</p>\n<p>看下面的例子：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input type=&quot;number&quot; step=&quot;3.1&quot; min=&quot;1&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>输入框可以输入哪些数字？</p>\n<p>首先，最小值是1，那么可以输入1.0，第二个是可以输入（1+3.1）那就是4.1,以此类推，每次点击上下箭头都会增加或者减少3.1，输入其他数字无效。这就是step的简单介绍。</p>\n<p>问题三，去除input默认样式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">input[type=number] &#123;</div><div class=\"line\">  -moz-appearance:textfield;</div><div class=\"line\">&#125;</div><div class=\"line\">input[type=number]::-webkit-inner-spin-button,</div><div class=\"line\">input[type=number]::-webkit-outer-spin-button &#123;</div><div class=\"line\">  -webkit-appearance: none;</div><div class=\"line\">  margin: 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"28、ios-设置input-按钮样式会被默认样式覆盖\"><a href=\"#28、ios-设置input-按钮样式会被默认样式覆盖\" class=\"headerlink\" title=\"28、ios 设置input 按钮样式会被默认样式覆盖\"></a>28、ios 设置input 按钮样式会被默认样式覆盖</h4><p>解决方式如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">input,</div><div class=\"line\">textarea &#123;</div><div class=\"line\">  border: 0;</div><div class=\"line\">  -webkit-appearance: none;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>设置默认样式为none</p>\n<h4 id=\"29、IOS键盘字母输入，默认首字母大写\"><a href=\"#29、IOS键盘字母输入，默认首字母大写\" class=\"headerlink\" title=\"29、IOS键盘字母输入，默认首字母大写\"></a>29、IOS键盘字母输入，默认首字母大写</h4><p>解决方案，设置如下属性<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input type=&quot;text&quot; autocapitalize=&quot;off&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<h3 id=\"30、select-下拉选择设置右对齐\"><a href=\"#30、select-下拉选择设置右对齐\" class=\"headerlink\" title=\"30、select 下拉选择设置右对齐\"></a>30、select 下拉选择设置右对齐</h3><p>设置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">select option &#123;</div><div class=\"line\">direction: rtl;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"31、通过transform进行skew变形，rotate旋转会造成出现锯齿现象\"><a href=\"#31、通过transform进行skew变形，rotate旋转会造成出现锯齿现象\" class=\"headerlink\" title=\"31、通过transform进行skew变形，rotate旋转会造成出现锯齿现象\"></a>31、通过transform进行skew变形，rotate旋转会造成出现锯齿现象</h4><p>可以设置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">-webkit-transform: rotate(-4deg) skew(10deg) translateZ(0);</div><div class=\"line\"> transform: rotate(-4deg) skew(10deg) translateZ(0);</div><div class=\"line\"> outline: 1px solid rgba(255,255,255,0)</div></pre></td></tr></table></figure></p>\n<h4 id=\"32、移动端点击300ms延迟\"><a href=\"#32、移动端点击300ms延迟\" class=\"headerlink\" title=\"32、移动端点击300ms延迟\"></a>32、移动端点击300ms延迟</h4><p>300ms尚可接受，不过因为300ms产生的问题，我们必须要解决。300ms导致用户体验并不是很好，解决这个问题，我们一般在移动端用tap事件来取代click事件。</p>\n<p>推荐两个js，一个是fastclick，一个是tap.js</p>\n<p>关于300ms延迟，具体请看：<a href=\"http://thx.github.io/mobile/300ms-click-delay/\" target=\"_blank\" rel=\"external\">http://thx.github.io/mobile/300ms-click-delay/</a></p>\n<h4 id=\"33、移动端点透问题\"><a href=\"#33、移动端点透问题\" class=\"headerlink\" title=\"33、移动端点透问题\"></a>33、移动端点透问题</h4><p>案例如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div id=&quot;haorooms&quot;&gt;点头事件测试&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;a href=&quot;www.jb51.net&quot;&gt;www.jb51.net&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p>div是绝对定位的蒙层,并且z-index高于a。而a标签是页面中的一个链接，我们给div绑定tap事件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(&apos;#haorooms&apos;).on(&apos;tap&apos;,function()&#123;</div><div class=\"line\">$(&apos;#haorooms&apos;).hide();</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>我们点击蒙层时 div正常消失，但是当我们在a标签上点击蒙层时，发现a链接被触发，这就是所谓的点透事件。</p>\n<p>原因：</p>\n<p>touchstart 早于 touchend 早于click。 亦即click的触发是有延迟的，这个时间大概在300ms左右，也就是说我们tap触发之后蒙层隐藏， 此时 click还没有触发，300ms之后由于蒙层隐藏，我们的click触发到了下面的a链接上。<br>解决：</p>\n<p>（1）尽量都使用touch事件来替换click事件。例如用touchend事件(推荐)。<br>（2）用fastclick，<a href=\"https://github.com/ftlabs/fastclick\" target=\"_blank\" rel=\"external\">https://github.com/ftlabs/fastclick</a><br>（3）用preventDefault阻止a标签的click<br>（4）延迟一定的时间(300ms+)来处理事件 （不推荐）<br>（5）以上一般都能解决，实在不行就换成click事件。<br>下面介绍一下touchend事件，如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(&quot;#haorooms&quot;).on(&quot;touchend&quot;, function (event) &#123;</div><div class=\"line\">   event.preventDefault();</div><div class=\"line\"></div><div class=\"line\"> &#125;);</div></pre></td></tr></table></figure></p>\n<h4 id=\"34、消除-IE10-里面的那个叉号\"><a href=\"#34、消除-IE10-里面的那个叉号\" class=\"headerlink\" title=\"34、消除 IE10 里面的那个叉号\"></a>34、消除 IE10 里面的那个叉号</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">input:-ms-clear&#123;display:none;&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"35、关于-iOS-与-OS-X-端字体的优化-横竖屏会出现字体加粗不一致等\"><a href=\"#35、关于-iOS-与-OS-X-端字体的优化-横竖屏会出现字体加粗不一致等\" class=\"headerlink\" title=\"35、关于 iOS 与 OS X 端字体的优化(横竖屏会出现字体加粗不一致等)\"></a>35、关于 iOS 与 OS X 端字体的优化(横竖屏会出现字体加粗不一致等)</h4><p>iOS 浏览器横屏时会重置字体大小，设置 text-size-adjust 为 none 可以解决 iOS 上的问题，但桌面版 Safari 的字体缩放功能会失效，因此最佳方案是将 text-size-adjust 为 100% 。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">-webkit-text-size-adjust: 100%;</div><div class=\"line\">-ms-text-size-adjust: 100%;</div><div class=\"line\">text-size-adjust: 100%;</div></pre></td></tr></table></figure></p>\n<h4 id=\"36、关于-iOS-系统中，中文输入法输入英文时，字母之间可能会出现一个六分之一空格\"><a href=\"#36、关于-iOS-系统中，中文输入法输入英文时，字母之间可能会出现一个六分之一空格\" class=\"headerlink\" title=\"36、关于 iOS 系统中，中文输入法输入英文时，字母之间可能会出现一个六分之一空格\"></a>36、关于 iOS 系统中，中文输入法输入英文时，字母之间可能会出现一个六分之一空格</h4><p>可以通过正则去掉<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">this.value = this.value.replace(/\\u2006/g, &apos;&apos;);</div></pre></td></tr></table></figure></p>\n<h4 id=\"37、移动端-HTML5-audio-autoplay-失效问题\"><a href=\"#37、移动端-HTML5-audio-autoplay-失效问题\" class=\"headerlink\" title=\"37、移动端 HTML5 audio autoplay 失效问题\"></a>37、移动端 HTML5 audio autoplay 失效问题</h4><p>这个不是 BUG，由于自动播放网页中的音频或视频，会给用户带来一些困扰或者不必要的流量消耗，所以苹果系统和安卓系统通常都会禁止自动播放和使用 JS 的触发播放，必须由用户来触发才可以播放。</p>\n<p>解决方法思路：先通过用户 touchstart 触碰，触发播放并暂停（音频开始加载，后面用 JS 再操作就没问题了）。</p>\n<p>解决代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">document.addEventListener(&apos;touchstart&apos;, function () &#123;</div><div class=\"line\">  document.getElementsByTagName(&apos;audio&apos;)[0].play();</div><div class=\"line\">  document.getElementsByTagName(&apos;audio&apos;)[0].pause();</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<h4 id=\"38、移动端-HTML5-input-date-不支持-placeholder-问题\"><a href=\"#38、移动端-HTML5-input-date-不支持-placeholder-问题\" class=\"headerlink\" title=\"38、移动端 HTML5 input date 不支持 placeholder 问题\"></a>38、移动端 HTML5 input date 不支持 placeholder 问题</h4><p>这个我感觉没有什么好的解决方案，用如下方法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input placeholder=&quot;Date&quot; class=&quot;textbox-n&quot; type=&quot;text&quot; onfocus=&quot;(this.type=&apos;date&apos;)&quot;  id=&quot;date&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>有的浏览器可能要点击两遍！</p>\n<h4 id=\"39、部分机型存在type为search的input，自带close按钮样式修改方法\"><a href=\"#39、部分机型存在type为search的input，自带close按钮样式修改方法\" class=\"headerlink\" title=\"39、部分机型存在type为search的input，自带close按钮样式修改方法\"></a>39、部分机型存在type为search的input，自带close按钮样式修改方法</h4><p>有些机型的搜索input控件会自带close按钮（一个伪元素），而通常为了兼容所有浏览器，我们会自己实现一个，此时去掉原生close按钮的方法为<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#Search::-webkit-search-cancel-button&#123;</div><div class=\"line\">  display: none;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>如果想使用原生close按钮，又想使其符合设计风格，可以对这个伪元素的样式进行修改。</p>\n<h4 id=\"40、唤起select的option展开\"><a href=\"#40、唤起select的option展开\" class=\"headerlink\" title=\"40、唤起select的option展开\"></a>40、唤起select的option展开</h4><p>zepto方式:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(sltElement).trrgger(&quot;mousedown&quot;);</div></pre></td></tr></table></figure></p>\n<p>原生js方式:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">function showDropdown(sltElement) &#123;</div><div class=\"line\">  var event;</div><div class=\"line\">  event = document.createEvent(&apos;MouseEvents&apos;);</div><div class=\"line\">  event.initMouseEvent(&apos;mousedown&apos;, true, true, window);</div><div class=\"line\">  sltElement.dispatchEvent(event);</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1、安卓浏览器看背景图片，有些设备会模糊。\"><a href=\"#1、安卓浏览器看背景图片，有些设备会模糊。\" class=\"headerlink\" title=\"1、安卓浏览器看背景图片，有些设备会模糊。\"></a>1、安卓浏览器看背景图片，有些设备会模糊。</h4><p>用同等比例的图片在PC机上很清楚，但是手机上很模糊，原因是什么呢？</p>\n<p>经过研究，是devicePixelRatio作怪，因为手机分辨率太小，如果按照分辨率来显示网页，这样字会非常小，所以苹果当初就把iPhone 4的960640分辨率，在网页里只显示了480320，这样devicePixelRatio＝2。现在android比较乱，有1.5的，有2的也有3的。</p>\n<p>想让图片在手机里显示更为清晰，必须使用2x的背景图来代替img标签（一般情况都是用2倍）。例如一个div的宽高是100100，背景图必须得200200，然后background-size:contain;，这样显示出来的图片就比较清晰了。</p>\n<p>代码可以如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">background:url(../images/icon/all.png) no-repeat center center;</div><div class=\"line\">-webkit-background-size:50px 50px;</div><div class=\"line\">background-size: 50px 50px;display:inline-block; width:100%; height:50px;</div></pre></td></tr></table></figure></p>\n<h4 id=\"2、图片加载\"><a href=\"#2、图片加载\" class=\"headerlink\" title=\"2、图片加载\"></a>2、图片加载</h4><p>若您遇到图片加载很慢的问题，对这种情况，手机开发一般用canvas方法加载：</p>\n<p>具体的canvas API 参见：<a href=\"http://javascript.ruanyifeng.com/htmlapi/canvas.html\" target=\"_blank\" rel=\"external\">http://javascript.ruanyifeng.com/htmlapi/canvas.html</a></p>\n<p>下面举例说明一个canvas的例子：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;li&gt;&lt;canvas&gt;&lt;/canvas&gt;&lt;/li&gt;</div></pre></td></tr></table></figure></p>\n<p>js动态加载图片和li 总共举例17张图片！<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">var total=17;</div><div class=\"line\">var zWin=$(window);</div><div class=\"line\">var render=function()&#123;</div><div class=\"line\">  var padding=2;</div><div class=\"line\">  var winWidth=zWin.width();</div><div class=\"line\">  var picWidth=Math.floor((winWidth-padding*3)/4);</div><div class=\"line\">  var tmpl =&apos;&apos;;</div><div class=\"line\">  for (var i=1;i&lt;=totla;i++)&#123;</div><div class=\"line\">  var p=padding;</div><div class=\"line\">  var imgSrc=&apos;img/&apos;+i+&apos;.jpg&apos;;</div><div class=\"line\">  if(i%4==1)&#123;</div><div class=\"line\">   p=0;</div><div class=\"line\">  &#125;</div><div class=\"line\">  tmpl +=&apos;&lt;li style=&quot;width:&apos;+picWidth+&apos;px;height:&apos;+picWidth+&apos;px;padding-left:&apos;+p+&apos;px;padding-top:&apos;+padding+&apos;px;&quot;&gt;&lt;canvas id=&quot;cvs_&apos;+i+&apos;&quot;&gt;&lt;/canvas&gt;&lt;/li&gt;&apos;;</div><div class=\"line\">  var imageObj = new Image();</div><div class=\"line\">  imageObj.index = i;</div><div class=\"line\">  imageObj.onload = function()&#123;</div><div class=\"line\">    var cvs =$(&apos;#cvs_&apos;+this.index)[0].getContext(&apos;2d&apos;);</div><div class=\"line\">    cvs.width = this.width;</div><div class=\"line\">    cvs.height=this.height;</div><div class=\"line\">    cvs.drawImage(this,0,0);</div><div class=\"line\">  &#125;</div><div class=\"line\">  imageObj.src=imgSrc;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\">render();</div></pre></td></tr></table></figure></p>\n<h4 id=\"3、假如手机网站不用兼容IE浏览器，一般我们会使用zeptojs。zeptojs内置Touch-events方法，具体可以看http-zeptojs-com-Touch-events\"><a href=\"#3、假如手机网站不用兼容IE浏览器，一般我们会使用zeptojs。zeptojs内置Touch-events方法，具体可以看http-zeptojs-com-Touch-events\" class=\"headerlink\" title=\"3、假如手机网站不用兼容IE浏览器，一般我们会使用zeptojs。zeptojs内置Touch events方法，具体可以看http://zeptojs.com/#Touch events\"></a>3、假如手机网站不用兼容IE浏览器，一般我们会使用zeptojs。zeptojs内置Touch events方法，具体可以看<a href=\"http://zeptojs.com/#Touch\" target=\"_blank\" rel=\"external\">http://zeptojs.com/#Touch</a> events</h4><p>看了一下zeptio新版的API，已经支持IE10以上浏览器，对zeptojs可以选择使用！</p>\n<h4 id=\"4、防止手机中网页放大和缩小\"><a href=\"#4、防止手机中网页放大和缩小\" class=\"headerlink\" title=\"4、防止手机中网页放大和缩小\"></a>4、防止手机中网页放大和缩小</h4><p>这点是最基本的，最为手机网站开发者来说应该都知道的，就是设置meta中的viewport</p>\n<p>还有就是，有些手机网站我们看到如下声明：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html PUBLIC &quot;-//WAPFORUM//DTD XHTML Mobile 1.0//EN&quot; &quot;http://www.wapforum.org/DTD/xhtml-mobile10.dtd&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>设置了DTD的方式是XHTML的写法，假如我们页面运用的是html5，可以不用设置DTD,直接声明&lt;!DOCTYPE html&gt;。</p>\n<p>使用viewport使页面禁止缩放。 通常把user-scalable设置为0来关闭用户对页面视图缩放的行为。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;viewport&quot; content=&quot;user-scalable=0&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>但是为了更好的兼容，我们会使用完整的viewport设置。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=0&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>当然，user-scalable=0,有的人也写成user-scalable=no，都可以的。</p>\n<h4 id=\"5、apple-mobile-web-app-capable\"><a href=\"#5、apple-mobile-web-app-capable\" class=\"headerlink\" title=\"5、apple-mobile-web-app-capable\"></a>5、apple-mobile-web-app-capable</h4><p>apple-mobile-web-app-capable是设置Web应用是否以全屏模式运行。</p>\n<p>语法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>说明：</p>\n<p>如果content设置为yes，Web应用会以全屏模式运行，反之，则不会。content的默认值是no，表示正常显示。你可以通过只读属性window.navigator.standalone来确定网页是否以全屏模式显示。</p>\n<h4 id=\"6、format-detection\"><a href=\"#6、format-detection\" class=\"headerlink\" title=\"6、format-detection\"></a>6、format-detection</h4><p>format-detection 启动或禁用自动识别页面中的电话号码。<br>语法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>说明：</p>\n<p>默认情况下，设备会自动识别任何可能是电话号码的字符串。设置telephone=no可以禁用这项功能。</p>\n<h4 id=\"7、html5调用安卓或者ios的拨号功能\"><a href=\"#7、html5调用安卓或者ios的拨号功能\" class=\"headerlink\" title=\"7、html5调用安卓或者ios的拨号功能\"></a>7、html5调用安卓或者ios的拨号功能</h4><p>html5提供了自动调用拨号的标签，只要在a标签的href中添加tel:就可以了。</p>\n<p>如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;tel:4008106999,1034&quot;&gt;400-810-6999 转 1034&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<h4 id=\"8、html5GPS定位功能\"><a href=\"#8、html5GPS定位功能\" class=\"headerlink\" title=\"8、html5GPS定位功能\"></a>8、html5GPS定位功能</h4><p>具体请看：<a href=\"http://www.jb51.net/post/html5_GPS_getCurrentPosition\" target=\"_blank\" rel=\"external\">http://www.jb51.net/post/html5_GPS_getCurrentPosition</a></p>\n<h4 id=\"9、上下拉动滚动条时卡顿、慢\"><a href=\"#9、上下拉动滚动条时卡顿、慢\" class=\"headerlink\" title=\"9、上下拉动滚动条时卡顿、慢\"></a>9、上下拉动滚动条时卡顿、慢</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">body &#123;</div><div class=\"line\">  -webkit-overflow-scrolling: touch;</div><div class=\"line\">  overflow-scrolling: touch;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Android3+和iOS5+支持CSS3的新属性为overflow-scrolling</p>\n<h4 id=\"10、禁止复制、选中文本\"><a href=\"#10、禁止复制、选中文本\" class=\"headerlink\" title=\"10、禁止复制、选中文本\"></a>10、禁止复制、选中文本</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Element &#123;</div><div class=\"line\">  -webkit-user-select: none;</div><div class=\"line\">  -moz-user-select: none;</div><div class=\"line\">  -khtml-user-select: none;</div><div class=\"line\">   user-select: none;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>解决移动设备可选中页面文本(视产品需要而定)</p>\n<h4 id=\"11、长时间按住页面出现闪退\"><a href=\"#11、长时间按住页面出现闪退\" class=\"headerlink\" title=\"11、长时间按住页面出现闪退\"></a>11、长时间按住页面出现闪退</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">element &#123;</div><div class=\"line\">  -webkit-touch-callout: none;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"12、iphone及ipad下输入框默认内阴影\"><a href=\"#12、iphone及ipad下输入框默认内阴影\" class=\"headerlink\" title=\"12、iphone及ipad下输入框默认内阴影\"></a>12、iphone及ipad下输入框默认内阴影</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Element&#123;</div><div class=\"line\">  -webkit-appearance: none;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"13、ios和android下触摸元素时出现半透明灰色遮罩\"><a href=\"#13、ios和android下触摸元素时出现半透明灰色遮罩\" class=\"headerlink\" title=\"13、ios和android下触摸元素时出现半透明灰色遮罩\"></a>13、ios和android下触摸元素时出现半透明灰色遮罩</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Element &#123;</div><div class=\"line\">  -webkit-tap-highlight-color:rgba(255,255,255,0)</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>设置alpha值为0就可以去除半透明灰色遮罩，备注：transparent的属性值在android下无效。</p>\n<p>后面一篇文章有详细介绍，地址：<a href=\"http://www.jb51.net/post/phone_web_ysk\" target=\"_blank\" rel=\"external\">http://www.jb51.net/post/phone_web_ysk</a></p>\n<h4 id=\"14、active兼容处理-即-伪类-active-失效\"><a href=\"#14、active兼容处理-即-伪类-active-失效\" class=\"headerlink\" title=\"14、active兼容处理 即 伪类 :active 失效\"></a>14、active兼容处理 即 伪类 :active 失效</h4><p>方法一：body添加ontouchstart<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;body ontouchstart=&quot;&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>方法二：js给 document 绑定 touchstart 或 touchend 事件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;style&gt;</div><div class=\"line\">a &#123;</div><div class=\"line\"> color: #000;</div><div class=\"line\">&#125;</div><div class=\"line\">a:active &#123;</div><div class=\"line\"> color: #fff;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/style&gt;</div><div class=\"line\">&lt;a herf=foo &gt;bar&lt;/a&gt;</div><div class=\"line\">&lt;script&gt;</div><div class=\"line\"> document.addEventListener(&apos;touchstart&apos;,function()&#123;&#125;,false);</div><div class=\"line\">&lt;/script&gt;</div></pre></td></tr></table></figure></p>\n<h4 id=\"15、动画定义3D启用硬件加速\"><a href=\"#15、动画定义3D启用硬件加速\" class=\"headerlink\" title=\"15、动画定义3D启用硬件加速\"></a>15、动画定义3D启用硬件加速</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">Element &#123;</div><div class=\"line\">  -webkit-transform:translate3d(0, 0, 0)</div><div class=\"line\">  transform: translate3d(0, 0, 0);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>注意：3D变形会消耗更多的内存与功耗</p>\n<h4 id=\"16、Retina屏的1px边框\"><a href=\"#16、Retina屏的1px边框\" class=\"headerlink\" title=\"16、Retina屏的1px边框\"></a>16、Retina屏的1px边框</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Element&#123;</div><div class=\"line\">  border-width: thin;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"17、webkit-mask-兼容处理\"><a href=\"#17、webkit-mask-兼容处理\" class=\"headerlink\" title=\"17、webkit mask 兼容处理\"></a>17、webkit mask 兼容处理</h4><p>某些低端手机不支持css3 mask，可以选择性的降级处理。</p>\n<p>比如可以使用js判断来引用不同class：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">if( &apos;WebkitMask&apos; in document.documentElement.style)&#123;</div><div class=\"line\">  alert(&apos;支持mask&apos;);</div><div class=\"line\">&#125; else &#123;</div><div class=\"line\">  alert(&apos;不支持mask&apos;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"18、旋转屏幕时，字体大小调整的问题\"><a href=\"#18、旋转屏幕时，字体大小调整的问题\" class=\"headerlink\" title=\"18、旋转屏幕时，字体大小调整的问题\"></a>18、旋转屏幕时，字体大小调整的问题</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">html, body, form, fieldset, p, div, h1, h2, h3, h4, h5, h6 &#123;</div><div class=\"line\">  -webkit-text-size-adjust:100%;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"19、transition闪屏\"><a href=\"#19、transition闪屏\" class=\"headerlink\" title=\"19、transition闪屏\"></a>19、transition闪屏</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">/设置内嵌的元素在 3D 空间如何呈现：保留3D /</div><div class=\"line\"></div><div class=\"line\">-webkit-transform-style: preserve-3d;</div><div class=\"line\">/ 设置进行转换的元素的背面在面对用户时是否可见：隐藏 /</div><div class=\"line\"></div><div class=\"line\">-webkit-backface-visibility:hidden;</div></pre></td></tr></table></figure>\n<h4 id=\"20、圆角bug\"><a href=\"#20、圆角bug\" class=\"headerlink\" title=\"20、圆角bug\"></a>20、圆角bug</h4><p>某些Android手机圆角失效<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">background-clip: padding-box;</div></pre></td></tr></table></figure></p>\n<h4 id=\"21、顶部状态栏背景色\"><a href=\"#21、顶部状态栏背景色\" class=\"headerlink\" title=\"21、顶部状态栏背景色\"></a>21、顶部状态栏背景色</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;apple-mobile-web-app-status-bar-style&quot; content=&quot;black&quot; /&gt;</div></pre></td></tr></table></figure>\n<p>说明：</p>\n<p>除非你先使用apple-mobile-web-app-capable指定全屏模式，否则这个meta标签不会起任何作用。</p>\n<p>如果content设置为default，则状态栏正常显示。如果设置为blank，则状态栏会有一个黑色的背景。如果设置为blank-translucent，则状态栏显示为黑色半透明。如果设置为default或blank，则页面显示在状态栏的下方，即状态栏占据上方部分，页面占据下方部分，二者没有遮挡对方或被遮挡。如果设置为blank-translucent，则页面会充满屏幕，其中页面顶部会被状态栏遮盖住（会覆盖页面20px高度，而iphone4和itouch4的Retina屏幕为40px）。默认值是default。</p>\n<h4 id=\"22、设置缓存\"><a href=\"#22、设置缓存\" class=\"headerlink\" title=\"22、设置缓存\"></a>22、设置缓存</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta http-equiv=&quot;Cache-Control&quot; content=&quot;no-cache&quot; /&gt;</div></pre></td></tr></table></figure>\n<p>手机页面通常在第一次加载后会进行缓存，然后每次刷新会使用缓存而不是去重新向服务器发送请求。如果不希望使用缓存可以设置no-cache。</p>\n<h4 id=\"23、桌面图标\"><a href=\"#23、桌面图标\" class=\"headerlink\" title=\"23、桌面图标\"></a>23、桌面图标</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;link rel=&quot;apple-touch-icon&quot; href=&quot;touch-icon-iphone.png&quot; /&gt;</div><div class=\"line\">&lt;link rel=&quot;apple-touch-icon&quot; sizes=&quot;76x76&quot; href=&quot;touch-icon-ipad.png&quot; /&gt;</div><div class=\"line\">&lt;link rel=&quot;apple-touch-icon&quot; sizes=&quot;120x120&quot; href=&quot;touch-icon-iphone-retina.png&quot; /&gt;</div><div class=\"line\">&lt;link rel=&quot;apple-touch-icon&quot; sizes=&quot;152x152&quot; href=&quot;touch-icon-ipad-retina.png&quot; /&gt;</div></pre></td></tr></table></figure>\n<p>iOS下针对不同设备定义不同的桌面图标。如果不定义则以当前屏幕截图作为图标。</p>\n<p>上面的写法可能大家会觉得会有默认光泽，下面这种设置方法可以去掉光泽效果，还原设计图的效果！<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;touch-icon-iphone.png&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>图片尺寸可以设定为5757（px）或者Retina可以定为114114（px），ipad尺寸为72*72（px)</p>\n<h4 id=\"24、启动画面\"><a href=\"#24、启动画面\" class=\"headerlink\" title=\"24、启动画面\"></a>24、启动画面</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;link rel=&quot;apple-touch-startup-image&quot; href=&quot;start.png&quot;/&gt;</div></pre></td></tr></table></figure>\n<p>iOS下页面启动加载时显示的画面图片，避免加载时的白屏。</p>\n<p>可以通过madia来指定不同的大小：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!--iPhone--&gt;</div><div class=\"line\">&lt;link href=&quot;apple-touch-startup-image-320x460.png&quot; media=&quot;(device-width: 320px)&quot; rel=&quot;apple-touch-startup-image&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- iPhone Retina --&gt;</div><div class=\"line\">&lt;link href=&quot;apple-touch-startup-image-640x920.png&quot; media=&quot;(device-width: 320px) and (-webkit-device-pixel-ratio: 2)&quot; rel=&quot;apple-touch-startup-image&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- iPhone 5 --&gt;</div><div class=\"line\">&lt;link rel=&quot;apple-touch-startup-image&quot; media=&quot;(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)&quot; href=&quot;apple-touch-startup-image-640x1096.png&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- iPad portrait --&gt;</div><div class=\"line\">&lt;link href=&quot;apple-touch-startup-image-768x1004.png&quot; media=&quot;(device-width: 768px) and (orientation: portrait)&quot; rel=&quot;apple-touch-startup-image&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- iPad landscape --&gt;</div><div class=\"line\">&lt;link href=&quot;apple-touch-startup-image-748x1024.png&quot; media=&quot;(device-width: 768px) and (orientation: landscape)&quot; rel=&quot;apple-touch-startup-image&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- iPad Retina portrait --&gt;</div><div class=\"line\">&lt;link href=&quot;apple-touch-startup-image-1536x2008.png&quot; media=&quot;(device-width: 1536px) and (orientation: portrait) and (-webkit-device-pixel-ratio: 2)&quot; rel=&quot;apple-touch-startup-image&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- iPad Retina landscape --&gt;</div><div class=\"line\">&lt;link href=&quot;apple-touch-startup-image-1496x2048.png&quot;media=&quot;(device-width: 1536px) and (orientation: landscape) and (-webkit-device-pixel-ratio: 2)&quot;rel=&quot;apple-touch-startup-image&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<h4 id=\"25、浏览器私有及其它meta\"><a href=\"#25、浏览器私有及其它meta\" class=\"headerlink\" title=\"25、浏览器私有及其它meta\"></a>25、浏览器私有及其它meta</h4><p>以下属性在项目中没有应用过，可以写一个demo测试以下！</p>\n<p>QQ浏览器私有</p>\n<p>全屏模式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;x5-fullscreen&quot; content=&quot;true&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>强制竖屏<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;x5-orientation&quot; content=&quot;portrait&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>强制横屏<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;x5-orientation&quot; content=&quot;landscape&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>应用模式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;x5-page-mode&quot; content=&quot;app&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>UC浏览器私有</p>\n<p>全屏模式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;full-screen&quot; content=&quot;yes&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>强制竖屏<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;screen-orientation&quot; content=&quot;portrait&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>强制横屏<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;screen-orientation&quot; content=&quot;landscape&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>应用模式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;browsermode&quot; content=&quot;application&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>其它</p>\n<p>针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;HandheldFriendly&quot; content=&quot;true&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>微软的老式浏览器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;MobileOptimized&quot; content=&quot;320&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>windows phone 点击无高光<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;msapplication-tap-highlight&quot; content=&quot;no&quot;&gt;</div></pre></td></tr></table></figure></p>\n<h4 id=\"26、-IOS中input键盘事件keyup、keydown、keypress支持不是很好\"><a href=\"#26、-IOS中input键盘事件keyup、keydown、keypress支持不是很好\" class=\"headerlink\" title=\"26、 IOS中input键盘事件keyup、keydown、keypress支持不是很好\"></a>26、 IOS中input键盘事件keyup、keydown、keypress支持不是很好</h4><p>问题是这样的，用input search做模糊搜索的时候，在键盘里面输入关键词，会通过ajax后台查询，然后返回数据，然后再对返回的数据进行关键词标红。用input监听键盘keyup事件，在安卓手机浏览器中是可以的，但是在ios手机浏览器中变红很慢，用输入法输入之后，并未立刻相应keyup事件，只有在通过删除之后才能相应！</p>\n<p>解决办法：</p>\n<p>可以用html5的oninput事件去代替keyup<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input type=&quot;text&quot; id=&quot;testInput&quot;&gt;</div><div class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class=\"line\">  document.getElementById(&apos;testInput&apos;).addEventListener(&apos;input&apos;, function(e)&#123;</div><div class=\"line\">    var value = e.target.value;</div><div class=\"line\">  &#125;);</div><div class=\"line\">&lt;/script&gt;</div></pre></td></tr></table></figure></p>\n<p>然后就达到类似keyup的效果！</p>\n<h4 id=\"27、h5网站input-设置为type-number的问题\"><a href=\"#27、h5网站input-设置为type-number的问题\" class=\"headerlink\" title=\"27、h5网站input 设置为type=number的问题\"></a>27、h5网站input 设置为type=number的问题</h4><p>h5网页input 的type设置为number一般会产生三个问题，一个问题是maxlength属性不好用了。另外一个是form提交的时候，默认给取整了。三是部分安卓手机出现样式问题。</p>\n<p>问题一解决，我目前用的是js。如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input type=&quot;number&quot; oninput=&quot;checkTextLength(this ,10)&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">function checkTextLength(obj, length) &#123;</div><div class=\"line\">      if(obj.value.length &gt; length)  &#123;</div><div class=\"line\">        obj.value = obj.value.substr(0, length);</div><div class=\"line\">      &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>问题二，是因为form提交默认做了表单验证，step默认是1,要设置step属性，假如保留2位小数，写法如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input type=&quot;number&quot; step=&quot;0.01&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>关于step，我在这里做简单的介绍，input 中type=number，一般会自动生成一个上下箭头，点击上箭头默认增加一个step，点击下箭头默认会减少一个step。number中默认step是1。也就是step=0.01,可以允许输入2位小数，并且点击上下箭头分别增加0.01和减少0.01。</p>\n<p>假如step和min一起使用，那么数值必须在min和max之间。</p>\n<p>看下面的例子：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input type=&quot;number&quot; step=&quot;3.1&quot; min=&quot;1&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>输入框可以输入哪些数字？</p>\n<p>首先，最小值是1，那么可以输入1.0，第二个是可以输入（1+3.1）那就是4.1,以此类推，每次点击上下箭头都会增加或者减少3.1，输入其他数字无效。这就是step的简单介绍。</p>\n<p>问题三，去除input默认样式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">input[type=number] &#123;</div><div class=\"line\">  -moz-appearance:textfield;</div><div class=\"line\">&#125;</div><div class=\"line\">input[type=number]::-webkit-inner-spin-button,</div><div class=\"line\">input[type=number]::-webkit-outer-spin-button &#123;</div><div class=\"line\">  -webkit-appearance: none;</div><div class=\"line\">  margin: 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"28、ios-设置input-按钮样式会被默认样式覆盖\"><a href=\"#28、ios-设置input-按钮样式会被默认样式覆盖\" class=\"headerlink\" title=\"28、ios 设置input 按钮样式会被默认样式覆盖\"></a>28、ios 设置input 按钮样式会被默认样式覆盖</h4><p>解决方式如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">input,</div><div class=\"line\">textarea &#123;</div><div class=\"line\">  border: 0;</div><div class=\"line\">  -webkit-appearance: none;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>设置默认样式为none</p>\n<h4 id=\"29、IOS键盘字母输入，默认首字母大写\"><a href=\"#29、IOS键盘字母输入，默认首字母大写\" class=\"headerlink\" title=\"29、IOS键盘字母输入，默认首字母大写\"></a>29、IOS键盘字母输入，默认首字母大写</h4><p>解决方案，设置如下属性<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input type=&quot;text&quot; autocapitalize=&quot;off&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<h3 id=\"30、select-下拉选择设置右对齐\"><a href=\"#30、select-下拉选择设置右对齐\" class=\"headerlink\" title=\"30、select 下拉选择设置右对齐\"></a>30、select 下拉选择设置右对齐</h3><p>设置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">select option &#123;</div><div class=\"line\">direction: rtl;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"31、通过transform进行skew变形，rotate旋转会造成出现锯齿现象\"><a href=\"#31、通过transform进行skew变形，rotate旋转会造成出现锯齿现象\" class=\"headerlink\" title=\"31、通过transform进行skew变形，rotate旋转会造成出现锯齿现象\"></a>31、通过transform进行skew变形，rotate旋转会造成出现锯齿现象</h4><p>可以设置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">-webkit-transform: rotate(-4deg) skew(10deg) translateZ(0);</div><div class=\"line\"> transform: rotate(-4deg) skew(10deg) translateZ(0);</div><div class=\"line\"> outline: 1px solid rgba(255,255,255,0)</div></pre></td></tr></table></figure></p>\n<h4 id=\"32、移动端点击300ms延迟\"><a href=\"#32、移动端点击300ms延迟\" class=\"headerlink\" title=\"32、移动端点击300ms延迟\"></a>32、移动端点击300ms延迟</h4><p>300ms尚可接受，不过因为300ms产生的问题，我们必须要解决。300ms导致用户体验并不是很好，解决这个问题，我们一般在移动端用tap事件来取代click事件。</p>\n<p>推荐两个js，一个是fastclick，一个是tap.js</p>\n<p>关于300ms延迟，具体请看：<a href=\"http://thx.github.io/mobile/300ms-click-delay/\" target=\"_blank\" rel=\"external\">http://thx.github.io/mobile/300ms-click-delay/</a></p>\n<h4 id=\"33、移动端点透问题\"><a href=\"#33、移动端点透问题\" class=\"headerlink\" title=\"33、移动端点透问题\"></a>33、移动端点透问题</h4><p>案例如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div id=&quot;haorooms&quot;&gt;点头事件测试&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;a href=&quot;www.jb51.net&quot;&gt;www.jb51.net&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p>div是绝对定位的蒙层,并且z-index高于a。而a标签是页面中的一个链接，我们给div绑定tap事件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(&apos;#haorooms&apos;).on(&apos;tap&apos;,function()&#123;</div><div class=\"line\">$(&apos;#haorooms&apos;).hide();</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>我们点击蒙层时 div正常消失，但是当我们在a标签上点击蒙层时，发现a链接被触发，这就是所谓的点透事件。</p>\n<p>原因：</p>\n<p>touchstart 早于 touchend 早于click。 亦即click的触发是有延迟的，这个时间大概在300ms左右，也就是说我们tap触发之后蒙层隐藏， 此时 click还没有触发，300ms之后由于蒙层隐藏，我们的click触发到了下面的a链接上。<br>解决：</p>\n<p>（1）尽量都使用touch事件来替换click事件。例如用touchend事件(推荐)。<br>（2）用fastclick，<a href=\"https://github.com/ftlabs/fastclick\" target=\"_blank\" rel=\"external\">https://github.com/ftlabs/fastclick</a><br>（3）用preventDefault阻止a标签的click<br>（4）延迟一定的时间(300ms+)来处理事件 （不推荐）<br>（5）以上一般都能解决，实在不行就换成click事件。<br>下面介绍一下touchend事件，如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(&quot;#haorooms&quot;).on(&quot;touchend&quot;, function (event) &#123;</div><div class=\"line\">   event.preventDefault();</div><div class=\"line\"></div><div class=\"line\"> &#125;);</div></pre></td></tr></table></figure></p>\n<h4 id=\"34、消除-IE10-里面的那个叉号\"><a href=\"#34、消除-IE10-里面的那个叉号\" class=\"headerlink\" title=\"34、消除 IE10 里面的那个叉号\"></a>34、消除 IE10 里面的那个叉号</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">input:-ms-clear&#123;display:none;&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"35、关于-iOS-与-OS-X-端字体的优化-横竖屏会出现字体加粗不一致等\"><a href=\"#35、关于-iOS-与-OS-X-端字体的优化-横竖屏会出现字体加粗不一致等\" class=\"headerlink\" title=\"35、关于 iOS 与 OS X 端字体的优化(横竖屏会出现字体加粗不一致等)\"></a>35、关于 iOS 与 OS X 端字体的优化(横竖屏会出现字体加粗不一致等)</h4><p>iOS 浏览器横屏时会重置字体大小，设置 text-size-adjust 为 none 可以解决 iOS 上的问题，但桌面版 Safari 的字体缩放功能会失效，因此最佳方案是将 text-size-adjust 为 100% 。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">-webkit-text-size-adjust: 100%;</div><div class=\"line\">-ms-text-size-adjust: 100%;</div><div class=\"line\">text-size-adjust: 100%;</div></pre></td></tr></table></figure></p>\n<h4 id=\"36、关于-iOS-系统中，中文输入法输入英文时，字母之间可能会出现一个六分之一空格\"><a href=\"#36、关于-iOS-系统中，中文输入法输入英文时，字母之间可能会出现一个六分之一空格\" class=\"headerlink\" title=\"36、关于 iOS 系统中，中文输入法输入英文时，字母之间可能会出现一个六分之一空格\"></a>36、关于 iOS 系统中，中文输入法输入英文时，字母之间可能会出现一个六分之一空格</h4><p>可以通过正则去掉<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">this.value = this.value.replace(/\\u2006/g, &apos;&apos;);</div></pre></td></tr></table></figure></p>\n<h4 id=\"37、移动端-HTML5-audio-autoplay-失效问题\"><a href=\"#37、移动端-HTML5-audio-autoplay-失效问题\" class=\"headerlink\" title=\"37、移动端 HTML5 audio autoplay 失效问题\"></a>37、移动端 HTML5 audio autoplay 失效问题</h4><p>这个不是 BUG，由于自动播放网页中的音频或视频，会给用户带来一些困扰或者不必要的流量消耗，所以苹果系统和安卓系统通常都会禁止自动播放和使用 JS 的触发播放，必须由用户来触发才可以播放。</p>\n<p>解决方法思路：先通过用户 touchstart 触碰，触发播放并暂停（音频开始加载，后面用 JS 再操作就没问题了）。</p>\n<p>解决代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">document.addEventListener(&apos;touchstart&apos;, function () &#123;</div><div class=\"line\">  document.getElementsByTagName(&apos;audio&apos;)[0].play();</div><div class=\"line\">  document.getElementsByTagName(&apos;audio&apos;)[0].pause();</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<h4 id=\"38、移动端-HTML5-input-date-不支持-placeholder-问题\"><a href=\"#38、移动端-HTML5-input-date-不支持-placeholder-问题\" class=\"headerlink\" title=\"38、移动端 HTML5 input date 不支持 placeholder 问题\"></a>38、移动端 HTML5 input date 不支持 placeholder 问题</h4><p>这个我感觉没有什么好的解决方案，用如下方法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input placeholder=&quot;Date&quot; class=&quot;textbox-n&quot; type=&quot;text&quot; onfocus=&quot;(this.type=&apos;date&apos;)&quot;  id=&quot;date&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>有的浏览器可能要点击两遍！</p>\n<h4 id=\"39、部分机型存在type为search的input，自带close按钮样式修改方法\"><a href=\"#39、部分机型存在type为search的input，自带close按钮样式修改方法\" class=\"headerlink\" title=\"39、部分机型存在type为search的input，自带close按钮样式修改方法\"></a>39、部分机型存在type为search的input，自带close按钮样式修改方法</h4><p>有些机型的搜索input控件会自带close按钮（一个伪元素），而通常为了兼容所有浏览器，我们会自己实现一个，此时去掉原生close按钮的方法为<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#Search::-webkit-search-cancel-button&#123;</div><div class=\"line\">  display: none;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>如果想使用原生close按钮，又想使其符合设计风格，可以对这个伪元素的样式进行修改。</p>\n<h4 id=\"40、唤起select的option展开\"><a href=\"#40、唤起select的option展开\" class=\"headerlink\" title=\"40、唤起select的option展开\"></a>40、唤起select的option展开</h4><p>zepto方式:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(sltElement).trrgger(&quot;mousedown&quot;);</div></pre></td></tr></table></figure></p>\n<p>原生js方式:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">function showDropdown(sltElement) &#123;</div><div class=\"line\">  var event;</div><div class=\"line\">  event = document.createEvent(&apos;MouseEvents&apos;);</div><div class=\"line\">  event.initMouseEvent(&apos;mousedown&apos;, true, true, window);</div><div class=\"line\">  sltElement.dispatchEvent(event);</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n"},{"title":"常用JavaScript代码","_content":"常用JavaScript代码，有：1.手机类型判断、2.字符串长度、3.获取url中的参数、4.js 绑定事件、5.当前浏览器JS的版本、6.全选/全不选、7.移除事件、8.回车提交、9.ajax提交等\n\n##### 手机类型判断\n\n~~~\nvar BrowserInfo = {\n    userAgent: navigator.userAgent.toLowerCase()\n    isAndroid: Boolean(navigator.userAgent.match(/android/ig)),\n    isIphone: Boolean(navigator.userAgent.match(/iphone|ipod/ig)),\n    isIpad: Boolean(navigator.userAgent.match(/ipad/ig)),\n    isWeixin: Boolean(navigator.userAgent.match(/MicroMessenger/ig)),\n}\n~~~\n\n##### 返回字符串长度，汉字计数为2\n\n~~~\nfunction strLength(str) {\n            var a = 0;\n            for (var i = 0; i < str.length; i++) {\n                if (str.charCodeAt(i) > 255)\n                    a += 2;//按照预期计数增加2\n                else\n                    a++;\n            }\n            return a;\n        }\n~~~\n\n##### 获取url中的参数\n\n~~~\nfunction GetQueryStringRegExp(name,url) {\n    var reg = new RegExp(\"(^|\\\\?|&)\" + name + \"=([^&]*)(\\\\s|&|$)\", \"i\");\n    if (reg.test(url)) return decodeURIComponent(RegExp.$2.replace(/\\+/g, \" \")); return \"\";\n}\n~~~\n\n##### js 绑定事件 适用于任何浏览器的元素绑定\n\n~~~\nfunction eventBind(obj, eventType, callBack) {\n        if (obj.addEventListener) {\n            obj.addEventListener(eventType, callBack, false);\n        }\n        else if (window.attachEvent) {\n            obj.attachEvent('on' + eventType, callBack);\n        }\n        else {\n            obj['on' + eventType] = callBack;\n        }\n    };\neventBind(document, 'click', bodyClick);\n~~~\n\n##### 获得当前浏览器JS的版本\n\n~~~\nfunction getjsversion(){\n    var n = navigator;\n    var u = n.userAgent;\n    var apn = n.appName;\n    var v = n.appVersion;\n    var ie = v.indexOf('MSIE ');\n    if (ie > 0){\n        apv = parseInt(i = v.substring(ie + 5));\n        if (apv > 3) {\n            apv = parseFloat(i);\n        }\n    } else {\n        apv = parseFloat(v);\n    }\n    var isie = (apn == 'Microsoft Internet Explorer');\n    var ismac = (u.indexOf('Mac') >= 0);\n    var javascriptVersion = \"1.0\";\n    if (String && String.prototype) {\n        javascriptVersion = '1.1';\n        if (javascriptVersion.match) {\n            javascriptVersion = '1.2';\n            var tm = new Date;\n            if (tm.setUTCDate) {\n                javascriptVersion = '1.3';\n                if (isie && ismac && apv >= 5) javascriptVersion = '1.4';\n                var pn = 0;\n                if (pn.toPrecision) {\n                    javascriptVersion = '1.5';\n                    a = new Array;\n                    if (a.forEach) {\n                        javascriptVersion = '1.6';\n                        i = 0;\n                        o = new Object;\n                        tcf = new Function('o', 'var e,i=0;try{i=new Iterator(o)}catch(e){}return i');\n                        i = tcf(o);\n                        if (i && i.next) {\n                            javascriptVersion = '1.7';\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return javascriptVersion;\n}\n~~~\n\n##### 获取当前点击事件的Object对象\n\n~~~\nfunction getEvent() {\n    if (document.all) {\n        return window.event; //如果是ie\n    }\n    func = getEvent.caller;\n    while (func != null) {\n        var arg0 = func.arguments[0];\n        if (arg0) {\n            if ((arg0.constructor == Event || arg0.constructor == MouseEvent)\n|| (typeof (arg0) == \"object\" && arg0.preventDefault && arg0.stopPropagation)) {\n                return arg0;\n            }\n        }\n        func = func.caller;\n    }\n    return null;\n};\n~~~\n\n##### 字符串截取方法\n\n~~~\ngetCharactersLen: function (charStr, cutCount) {\n        if (charStr == null || charStr == '') return '';\n        var totalCount = 0;\n        var newStr = '';\n        for (var i = 0; i < charStr.length; i++) {\n            var c = charStr.charCodeAt(i);\n            if (c < 255 && c > 0) {\n                totalCount++;\n            } else {\n                totalCount += 2;\n            }\n            if (totalCount >= cutCount) {\n                newStr += charStr.charAt(i);\n                break;\n            }\n            else {\n                newStr += charStr.charAt(i);\n            }\n        }\n        return newStr;\n    }\n~~~\n\n##### JS 弹出新窗口全屏\n\n~~~\nvar tmp = window.open(\"about:blank\", \"\", \"fullscreen=1\")\n                            tmp.moveTo(0, 0);\n                            tmp.resizeTo(screen.width + 20, screen.height);\n                            tmp.focus();\n                            tmp.location.href = 'http://www.che168.com/pinggu/eva_' + msgResult.message[0] + '.html';\n\nvar config_ = \"left=0,top=0,width=\" + (window.screen.Width) + \",height=\" + (window.screen.Height);\n                            window.open('http://www.che168.com/pinggu/eva_' + msgResult.message[0] + '.html', \"winHanle\", config_);\n//模拟form提交打开新页面\nvar f = document.createElement(\"form\");\n                            f.setAttribute('action', 'http://www.che168.com/pinggu/eva_' + msgResult.message[0] + '.html');\n                            f.target = '_blank';\n                            document.body.appendChild(f);\n                            f.submit();\n~~~\n\n##### 全选/全不选\n\n~~~\nfunction selectAll(objSelect) {\n            if (objSelect.checked == true) {\n                $(\"input[name='chkId']\").attr(\"checked\", true);\n                $(\"input[name='chkAll']\").attr(\"checked\", true);\n            }\n            else if (objSelect.checked == false) {\n                $(\"input[name='chkId']\").attr(\"checked\", false);\n                $(\"input[name='chkAll']\").attr(\"checked\", false);\n            }\n        }\n~~~\n\n##### js 判断浏览器\n\n~~~\n判断是否是 IE 浏览器\n    if (document.all){\n        alert(”IE浏览器”);\n    }else{\n        alert(”非IE浏览器”);\n    }\n    if (!!window.ActiveXObject){\n        alert(”IE浏览器”);\n    }else{\n        alert(”非IE浏览器”);\n    }\n判断是IE几\nvar isIE=!!window.ActiveXObject;\nvar isIE6=isIE&&!window.XMLHttpRequest;\nvar isIE8=isIE&&!!document.documentMode;\nvar isIE7=isIE&&!isIE6&&!isIE8;\nif (isIE){\n    if (isIE6){\n        alert(”ie6″);\n    }else if (isIE8){\n        alert(”ie8″);\n    }else if (isIE7){\n        alert(”ie7″);\n    }\n}\n~~~\n\n##### 判断浏览器\n\n~~~\nfunction getOs() {\n    if (navigator.userAgent.indexOf(\"MSIE 8.0\") > 0) {\n        return \"MSIE8\";\n    }\n    else if (navigator.userAgent.indexOf(\"MSIE 6.0\") > 0) {\n        return \"MSIE6\";\n    }\n    else if (navigator.userAgent.indexOf(\"MSIE 7.0\") > 0) {\n        return \"MSIE7\";\n    }\n    else if (isFirefox = navigator.userAgent.indexOf(\"Firefox\") > 0) {\n        return \"Firefox\";\n    }\n    if (navigator.userAgent.indexOf(\"Chrome\") > 0) {\n        return \"Chrome\";\n    }\n    else {\n        return \"Other\";\n    }\n}\n~~~\n\n##### JS判断两个日期大小 适合 2012-09-09 与2012-9-9 两种格式的对比\n\n~~~\n//得到日期值并转化成日期格式，replace(/\\-/g, \"\\/\")是根据验证表达式把日期转化成长日期格式，这样再进行判断就好判断了\n        function ValidateDate() {\n            var beginDate = $(\"#t_datestart\").val();\n            var endDate = $(\"#t_dateend\").val();\n            if (beginDate.length > 0 && endDate.length>0) {\n                var sDate = new Date(beginDate.replace(/\\-/g, \"\\/\"));\n                var eDate= new Date(endDate.replace(/\\-/g, \"\\/\"));\n                if (sDate > eDate) {\n                    alert('开始日期要小于结束日期');\n                    return false;\n                }\n            }\n        }\n~~~\n\n##### 移除事件\n\n~~~\nthis.moveBind = function (objId, eventType, callBack) {\n                var obj = document.getElementById(objId);\n                if (obj.removeEventListener) {\n                    obj.removeEventListener(eventType, callBack, false);\n                }\n                else if (window.detachEvent) {\n                    obj.detachEvent('on' + eventType, callBack);\n                }\n                else {\n                    obj['on' + eventType] = null;\n                }\n            }\n~~~\n\n##### 回车提交\n\n~~~\n$(\"id\").onkeypress = function (event) {\n    event = (event) ? event : ((window.event) ? window.event : \"\")\n    keyCode = event.keyCode ? event.keyCode : (event.which ? event.which : event.charCode);\n    if (keyCode == 13) {\n        $(\"SubmitLogin\").onclick();\n    }\n}\n~~~\n\n##### JS 执行计时器\n\n~~~\ntimeStart = new Date().getTime();\ntimesEnd = new Date().getTime();\ndocument.getElementById(\"time\").innerHTML = timesEnd - timeStart;\n~~~\n\n##### JS 写Cookie\n\n~~~\nfunction setCookie(name, value, expires, path, domain) {\n    if (!expires) expires = -1;\n    if (!path) path = \"/\";\n    var d = \"\" + name + \"=\" + value;\n    var e;\n    if (expires < 0) {\n        e = \"\";\n    }\n    else if (expires == 0) {\n        var f = new Date(1970, 1, 1);\n        e = \";expires=\" + f.toUTCString();\n    }\n    else {\n        var now = new Date();\n        var f = new Date(now.getTime() + expires * 1000);\n        e = \";expires=\" + f.toUTCString();\n    }\n    var dm;\n    if (!domain) {\n        dm = \"\";\n    }\n    else {\n        dm = \";domain=\" + domain;\n    }\n    document.cookie = name + \"=\" + value + \";path=\" + path + e + dm;\n};\n~~~\n\n##### JS 读Cookie\n\n~~~\nfunction readCookie(name) {\n    var nameEQ = name + \"=\";\n    var ca = document.cookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n        if (c.indexOf(nameEQ) == 0) {\n            return decodeURIComponent(c.substring(nameEQ.length, c.length))\n        }\n    } return null\n}\n~~~\n\n##### Ajax 请求\n\n~~~\nC.ajax = function (args) {\n    var self = this;\n    this.options = {\n        type: 'GET',\n        async: true,\n        contentType: 'application/x-www-form-urlencoded',\n        url: 'about:blank',\n        data: null,\n        success: {},\n        error: {}\n    };\n    this.getXmlHttp = function () {\n        var xmlHttp;\n        try {\n            xmlhttp = new XMLHttpRequest();\n        }\n        catch (e) {\n            try {\n                xmlhttp = new ActiveXObject(\"Msxml2.XMLHTTP\");\n            }\n            catch (e) {\n                xmlHttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\n            }\n        }\n        if (!xmlhttp) {\n            alert('您的浏览器不支持AJAX');\n            return false;\n        }\n        return xmlhttp;\n    };\n    this.send = function () {\n        C.each(self.options, function (key, val) {\n            self.options[key] = (args[key] == null) ? val : args[key];\n        });\n\n        var xmlHttp = new self.getXmlHttp();\n        if (self.options.type.toUpperCase() == 'GET') {\n            xmlHttp.open(self.options.type, self.options.url + (self.options.data == null ? \"\" : ((/[?]$/.test(self.options.url) ? '&' : '?') + self.options.data)), self.options.async);\n        }\n        else {\n            xmlHttp.open(self.options.type, self.options.url, self.options.async);\n            xmlHttp.setRequestHeader('Content-Length', self.options.data.length);\n        }\n        xmlHttp.setRequestHeader('Content-Type', self.options.contentType);\n        xmlHttp.onreadystatechange = function () {\n            if (xmlHttp.readyState == 4) {\n                if (xmlHttp.status == 200 || xmlHttp.status == 0) {\n                    if (typeof self.options.success == 'function') self.options.success(xmlHttp.responseText);\n                    xmlHttp = null;\n                }\n                else {\n                    if (typeof self.options.error == 'function') self.options.error('Server Status: ' + xmlHttp.status);\n                }\n            }\n        };\n\n        xmlHttp.send(self.options.type.toUpperCase() == 'POST' ? self.options.data.toString() : null);\n    };\n    this.send();\n};\n~~~\n\n##### JS StringBuilder 用法\n\n~~~\nfunction StringBuilder() {\n    this.strings = new Array;\n};\nStringBuilder.prototype.append = function (str) {\n    this.strings.push(str);\n};\nStringBuilder.prototype.toString = function () {\n    return this.strings.join('');\n};\n~~~\n\n##### JS 加载到顶部LoadJS\n\n~~~\nfunction loadJS (url, fn) {\n        var ss = document.getElementsByName('script'),\n            loaded = false;\n        for (var i = 0, len = ss.length; i < len; i++) {\n            if (ss[i].src && ss[i].getAttribute('src') == url) {\n                loaded = true;\n                break;\n            }\n        }\n        if (loaded) {\n            if (fn && typeof fn != 'undefined' && fn instanceof Function) fn();\n            return false;\n        }\n        var s = document.createElement('script'),\n            b = false;\n        s.setAttribute('type', 'text/javascript');\n        s.setAttribute('src', url);\n        s.onload = s.onreadystatechange = function () {\n            if (!b && (!this.readyState || this.readyState == 'loaded' || this.readyState == 'complete')) {\n                b = true;\n                if (fn && typeof fn != 'undefined' && fn instanceof Function) fn();\n            }\n        };\n        document.getElementsByTagName('head')[0].appendChild(s);\n    },\n    bind: function (objId, eventType, callBack) {  //适用于任何浏览器的绑定\n        var obj = document.getElementById(objId);\n        if (obj.addEventListener) {\n            obj.addEventListener(eventType, callBack, false);\n        }\n        else if (window.attachEvent) {\n            obj.attachEvent('on' + eventType, callBack);\n        }\n        else {\n            obj['on' + eventType] = callBack;\n        }\n    }\n\nfunction JSLoad (args) {\n        s = document.createElement(\"script\");\n        s.setAttribute(\"type\", \"text/javascript\");\n        s.setAttribute(\"src\", args.url);\n        s.onload = s.onreadystatechange = function () {\n            if (!s.readyState || s.readyState == \"loaded\" || s.readyState == \"complete\") {\n                if (typeof args.callback == \"function\") args.callback(this, args);\n                s.onload = s.onreadystatechange = null;\n                try {\n                    s.parentNode && s.parentNode.removeChild(s);\n                } catch (e) { }\n            }\n        };\n        document.getElementsByTagName(\"head\")[0].appendChild(s);\n    }\n~~~\n\n##### 清空 LoadJS 加载到顶部的js引用\n\n~~~\nfunction ClearHeadJs  (src) {\n        var js = document.getElementsByTagName('head')[0].children;\n        var obj = null;\n        for (var i = 0; i < js.length; i++) {\n            if (js[i].tagName.toLowerCase() == \"script\" && js[i].attributes['src'].value.indexOf(src) > 0) {\n                obj = js[i];\n            }\n        }\n        document.getElementsByTagName('head')[0].removeChild(obj);\n    };\n~~~\n\n##### JS 替换非法字符主要用在密码验证上出现的特殊字符\n\n~~~\nfunction URLencode(sStr) {\n        return escape(sStr).replace(/\\+/g, '%2B').replace(/\\\"/g, '%22').replace(/\\'/g, '%27').replace(/\\//g, '%2F');\n    };\n~~~\n\n##### 按Ctrl + Entert 直接提交表单\n\n```\ndocument.body.onkeydown = function (evt) {\n        evt = evt ? evt : (window.event ? window.event : null);\n        if (13 == evt.keyCode && evt.ctrlKey) {\n            evt.returnValue = false;\n            evt.cancel = true;\n            PostData();\n        }\n    };\n```\n\n##### 获取当前时间\n\n~~~\nfunction GetCurrentDate() {\n        var d = new Date();\n        var y = d.getYear()+1900;\n        month = add_zero(d.getMonth() + 1),\n        days = add_zero(d.getDate()),\n        hours = add_zero(d.getHours());\n        minutes = add_zero(d.getMinutes()),\n        seconds = add_zero(d.getSeconds());\n        var str = y + '-' + month + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds;\n        return str;\n    };\n    function add_zero(temp) {\n        if (temp < 10) return \"0\" + temp;\n        else return temp;\n    }\n~~~\n\n##### Js 去掉空格方法\n\n~~~\nString.prototype.Trim = function()\n{ return this.replace(/(^\\s*)|(\\s*$)/g, \"\"); }\nString.prototype.LTrim = function()\n{return this.replace(/(^\\s*)/g, \"\");}\nString.prototype.RTrim = function()\n{return this.replace(/(\\s*$)/g, \"\");}\n~~~\n\n##### js 动态移除 head 里的 js 引用\n\n~~~\nthis.ClearHeadJs = function (src) {\n        var js = document.getElementsByTagName('head')[0].children;\n        var obj = null;\n        for (var i = 0; i < js.length; i++) {\n            if (js[i].tagName.toLowerCase() == \"script\" && js[i].attributes['src'].value.indexOf(src) > 0) {\n                obj = js[i];\n            }\n        }\n        document.getElementsByTagName('head')[0].removeChild(obj);\n    };\n~~~\n\n##### 整个UL 点击事件 加在UL里的onclick里\n\n~~~\nfunction CreateFrom(url, params) {\n            var f = document.createElement(\"form\");\n            f.setAttribute(\"action\", url);\n            for (var i = 0; i < params.length; i++) {\n                var input = document.createElement(\"input\");\n                input.setAttribute(\"type\", \"hidden\");\n                input.setAttribute(\"name\", params[i].paramName);\n                input.setAttribute(\"value\", params[i].paramValue);\n                f.appendChild(input);\n            }\n            f.target = \"_blank\";\n            document.body.appendChild(f);\n            f.submit();\n        };\n~~~\n\n##### 判断浏览器使用的是哪个 JS 版本\n\n~~~\n<script language=\"javascript\">\n      var jsversion = 1.0;\n    </script>\n    <script language=\"javascript1.1\">\n      jsversion = 1.1;\n    </script>\n    <script language=\"javascript1.2\">\n      jsversion = 1.2;\n    </script>\n    <script language=\"javascript1.3\">\n      jsversion = 1.3;\n    </script>\n    <script language=\"javascript1.4\">\n      jsversion = 1.4;\n    </script>\n    <script language=\"javascript1.5\">\n      jsversion = 1.5;\n    </script>\n    <script language=\"javascript1.6\">\n      jsversion = 1.6;\n    </script>\n    <script language=\"javascript1.7\">\n      jsversion = 1.7;\n    </script>\n    <script language=\"javascript1.8\">\n      jsversion = 1.8;\n    </script>\n    <script language=\"javascript1.9\">\n      jsversion = 1.9;\n    </script>\n    <script language=\"javascript2.0\">\n      jsversion = 2.0;\n    </script>\nalert(jsversion);\n~~~\n\n##### iframe自适应高度\n\n~~~\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<title>无标题文档</title>\n<link href=\"mycss/main.css\" rel=\"stylesheet\" type=\"text/css\">\n<script type=\"text/javascript\" language=\"javascript\">\n    function iFrameHeight() {\n        var ifm= document.getElementById(\"iframepage\");\n        var subWeb = document.frames ? document.frames[\"iframepage\"].document :\nifm.contentDocument;// 子页面  兼容不同浏览器的 前面是支持ie8+;后面支持其它浏览器\n            if(ifm != null && subWeb != null) {\n            ifm.height = subWeb.body.scrollHeight;\n            }\n    }\n\tvar itvl=setInterval(\"iFrameHeight()\",100);\n\t</script>\n</head>\n<body>\n<section id=\"wrapper1\">\n<div style=\"height:20px; width:100%; background-color:#F60\">\n<a href=\"com/top.html\" target=\"myi\">111</a> <a href=\"com/top_2.html\" target=\"myi\">2222</a></div>\n<!--很恶心的问题：普通浏览看不到效果，在服务器下可以-->\n</div>\n<!--\n<iframe name=\"myi\" src=\"com/top.html\" marginheight=\"0\" marginwidth=\"0\" frameborder=\"0\" scrolling=\"no\" width=\"765\" id=\"iframepage\" name=\"iframepage\" onload=\"this.height=this.contentWindow.document.getElementById('top').scrollHeight\" ></iframe>\n-->\n<iframe src=\"com/top.html\" marginheight=\"0\" marginwidth=\"0\" frameborder=\"0\" scrolling=\"no\" width=\"765\" id=\"iframepage\" name=\"iframepage\"></iframe>\n<!-- onLoad=\"iFrameHeight()\"-->\n<div style=\"height:20px; width:100%; background-color:#F09\">\n<div>hello baby!@!!!!</div>\n</section>\n</body>\n</html>\n~~~\n","source":"_posts/常用JavaScript代码.md","raw":"---\ntitle: 常用JavaScript代码\ntags: [js,前端,代码块]\ncategories: 前端\n---\n常用JavaScript代码，有：1.手机类型判断、2.字符串长度、3.获取url中的参数、4.js 绑定事件、5.当前浏览器JS的版本、6.全选/全不选、7.移除事件、8.回车提交、9.ajax提交等\n\n##### 手机类型判断\n\n~~~\nvar BrowserInfo = {\n    userAgent: navigator.userAgent.toLowerCase()\n    isAndroid: Boolean(navigator.userAgent.match(/android/ig)),\n    isIphone: Boolean(navigator.userAgent.match(/iphone|ipod/ig)),\n    isIpad: Boolean(navigator.userAgent.match(/ipad/ig)),\n    isWeixin: Boolean(navigator.userAgent.match(/MicroMessenger/ig)),\n}\n~~~\n\n##### 返回字符串长度，汉字计数为2\n\n~~~\nfunction strLength(str) {\n            var a = 0;\n            for (var i = 0; i < str.length; i++) {\n                if (str.charCodeAt(i) > 255)\n                    a += 2;//按照预期计数增加2\n                else\n                    a++;\n            }\n            return a;\n        }\n~~~\n\n##### 获取url中的参数\n\n~~~\nfunction GetQueryStringRegExp(name,url) {\n    var reg = new RegExp(\"(^|\\\\?|&)\" + name + \"=([^&]*)(\\\\s|&|$)\", \"i\");\n    if (reg.test(url)) return decodeURIComponent(RegExp.$2.replace(/\\+/g, \" \")); return \"\";\n}\n~~~\n\n##### js 绑定事件 适用于任何浏览器的元素绑定\n\n~~~\nfunction eventBind(obj, eventType, callBack) {\n        if (obj.addEventListener) {\n            obj.addEventListener(eventType, callBack, false);\n        }\n        else if (window.attachEvent) {\n            obj.attachEvent('on' + eventType, callBack);\n        }\n        else {\n            obj['on' + eventType] = callBack;\n        }\n    };\neventBind(document, 'click', bodyClick);\n~~~\n\n##### 获得当前浏览器JS的版本\n\n~~~\nfunction getjsversion(){\n    var n = navigator;\n    var u = n.userAgent;\n    var apn = n.appName;\n    var v = n.appVersion;\n    var ie = v.indexOf('MSIE ');\n    if (ie > 0){\n        apv = parseInt(i = v.substring(ie + 5));\n        if (apv > 3) {\n            apv = parseFloat(i);\n        }\n    } else {\n        apv = parseFloat(v);\n    }\n    var isie = (apn == 'Microsoft Internet Explorer');\n    var ismac = (u.indexOf('Mac') >= 0);\n    var javascriptVersion = \"1.0\";\n    if (String && String.prototype) {\n        javascriptVersion = '1.1';\n        if (javascriptVersion.match) {\n            javascriptVersion = '1.2';\n            var tm = new Date;\n            if (tm.setUTCDate) {\n                javascriptVersion = '1.3';\n                if (isie && ismac && apv >= 5) javascriptVersion = '1.4';\n                var pn = 0;\n                if (pn.toPrecision) {\n                    javascriptVersion = '1.5';\n                    a = new Array;\n                    if (a.forEach) {\n                        javascriptVersion = '1.6';\n                        i = 0;\n                        o = new Object;\n                        tcf = new Function('o', 'var e,i=0;try{i=new Iterator(o)}catch(e){}return i');\n                        i = tcf(o);\n                        if (i && i.next) {\n                            javascriptVersion = '1.7';\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return javascriptVersion;\n}\n~~~\n\n##### 获取当前点击事件的Object对象\n\n~~~\nfunction getEvent() {\n    if (document.all) {\n        return window.event; //如果是ie\n    }\n    func = getEvent.caller;\n    while (func != null) {\n        var arg0 = func.arguments[0];\n        if (arg0) {\n            if ((arg0.constructor == Event || arg0.constructor == MouseEvent)\n|| (typeof (arg0) == \"object\" && arg0.preventDefault && arg0.stopPropagation)) {\n                return arg0;\n            }\n        }\n        func = func.caller;\n    }\n    return null;\n};\n~~~\n\n##### 字符串截取方法\n\n~~~\ngetCharactersLen: function (charStr, cutCount) {\n        if (charStr == null || charStr == '') return '';\n        var totalCount = 0;\n        var newStr = '';\n        for (var i = 0; i < charStr.length; i++) {\n            var c = charStr.charCodeAt(i);\n            if (c < 255 && c > 0) {\n                totalCount++;\n            } else {\n                totalCount += 2;\n            }\n            if (totalCount >= cutCount) {\n                newStr += charStr.charAt(i);\n                break;\n            }\n            else {\n                newStr += charStr.charAt(i);\n            }\n        }\n        return newStr;\n    }\n~~~\n\n##### JS 弹出新窗口全屏\n\n~~~\nvar tmp = window.open(\"about:blank\", \"\", \"fullscreen=1\")\n                            tmp.moveTo(0, 0);\n                            tmp.resizeTo(screen.width + 20, screen.height);\n                            tmp.focus();\n                            tmp.location.href = 'http://www.che168.com/pinggu/eva_' + msgResult.message[0] + '.html';\n\nvar config_ = \"left=0,top=0,width=\" + (window.screen.Width) + \",height=\" + (window.screen.Height);\n                            window.open('http://www.che168.com/pinggu/eva_' + msgResult.message[0] + '.html', \"winHanle\", config_);\n//模拟form提交打开新页面\nvar f = document.createElement(\"form\");\n                            f.setAttribute('action', 'http://www.che168.com/pinggu/eva_' + msgResult.message[0] + '.html');\n                            f.target = '_blank';\n                            document.body.appendChild(f);\n                            f.submit();\n~~~\n\n##### 全选/全不选\n\n~~~\nfunction selectAll(objSelect) {\n            if (objSelect.checked == true) {\n                $(\"input[name='chkId']\").attr(\"checked\", true);\n                $(\"input[name='chkAll']\").attr(\"checked\", true);\n            }\n            else if (objSelect.checked == false) {\n                $(\"input[name='chkId']\").attr(\"checked\", false);\n                $(\"input[name='chkAll']\").attr(\"checked\", false);\n            }\n        }\n~~~\n\n##### js 判断浏览器\n\n~~~\n判断是否是 IE 浏览器\n    if (document.all){\n        alert(”IE浏览器”);\n    }else{\n        alert(”非IE浏览器”);\n    }\n    if (!!window.ActiveXObject){\n        alert(”IE浏览器”);\n    }else{\n        alert(”非IE浏览器”);\n    }\n判断是IE几\nvar isIE=!!window.ActiveXObject;\nvar isIE6=isIE&&!window.XMLHttpRequest;\nvar isIE8=isIE&&!!document.documentMode;\nvar isIE7=isIE&&!isIE6&&!isIE8;\nif (isIE){\n    if (isIE6){\n        alert(”ie6″);\n    }else if (isIE8){\n        alert(”ie8″);\n    }else if (isIE7){\n        alert(”ie7″);\n    }\n}\n~~~\n\n##### 判断浏览器\n\n~~~\nfunction getOs() {\n    if (navigator.userAgent.indexOf(\"MSIE 8.0\") > 0) {\n        return \"MSIE8\";\n    }\n    else if (navigator.userAgent.indexOf(\"MSIE 6.0\") > 0) {\n        return \"MSIE6\";\n    }\n    else if (navigator.userAgent.indexOf(\"MSIE 7.0\") > 0) {\n        return \"MSIE7\";\n    }\n    else if (isFirefox = navigator.userAgent.indexOf(\"Firefox\") > 0) {\n        return \"Firefox\";\n    }\n    if (navigator.userAgent.indexOf(\"Chrome\") > 0) {\n        return \"Chrome\";\n    }\n    else {\n        return \"Other\";\n    }\n}\n~~~\n\n##### JS判断两个日期大小 适合 2012-09-09 与2012-9-9 两种格式的对比\n\n~~~\n//得到日期值并转化成日期格式，replace(/\\-/g, \"\\/\")是根据验证表达式把日期转化成长日期格式，这样再进行判断就好判断了\n        function ValidateDate() {\n            var beginDate = $(\"#t_datestart\").val();\n            var endDate = $(\"#t_dateend\").val();\n            if (beginDate.length > 0 && endDate.length>0) {\n                var sDate = new Date(beginDate.replace(/\\-/g, \"\\/\"));\n                var eDate= new Date(endDate.replace(/\\-/g, \"\\/\"));\n                if (sDate > eDate) {\n                    alert('开始日期要小于结束日期');\n                    return false;\n                }\n            }\n        }\n~~~\n\n##### 移除事件\n\n~~~\nthis.moveBind = function (objId, eventType, callBack) {\n                var obj = document.getElementById(objId);\n                if (obj.removeEventListener) {\n                    obj.removeEventListener(eventType, callBack, false);\n                }\n                else if (window.detachEvent) {\n                    obj.detachEvent('on' + eventType, callBack);\n                }\n                else {\n                    obj['on' + eventType] = null;\n                }\n            }\n~~~\n\n##### 回车提交\n\n~~~\n$(\"id\").onkeypress = function (event) {\n    event = (event) ? event : ((window.event) ? window.event : \"\")\n    keyCode = event.keyCode ? event.keyCode : (event.which ? event.which : event.charCode);\n    if (keyCode == 13) {\n        $(\"SubmitLogin\").onclick();\n    }\n}\n~~~\n\n##### JS 执行计时器\n\n~~~\ntimeStart = new Date().getTime();\ntimesEnd = new Date().getTime();\ndocument.getElementById(\"time\").innerHTML = timesEnd - timeStart;\n~~~\n\n##### JS 写Cookie\n\n~~~\nfunction setCookie(name, value, expires, path, domain) {\n    if (!expires) expires = -1;\n    if (!path) path = \"/\";\n    var d = \"\" + name + \"=\" + value;\n    var e;\n    if (expires < 0) {\n        e = \"\";\n    }\n    else if (expires == 0) {\n        var f = new Date(1970, 1, 1);\n        e = \";expires=\" + f.toUTCString();\n    }\n    else {\n        var now = new Date();\n        var f = new Date(now.getTime() + expires * 1000);\n        e = \";expires=\" + f.toUTCString();\n    }\n    var dm;\n    if (!domain) {\n        dm = \"\";\n    }\n    else {\n        dm = \";domain=\" + domain;\n    }\n    document.cookie = name + \"=\" + value + \";path=\" + path + e + dm;\n};\n~~~\n\n##### JS 读Cookie\n\n~~~\nfunction readCookie(name) {\n    var nameEQ = name + \"=\";\n    var ca = document.cookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n        if (c.indexOf(nameEQ) == 0) {\n            return decodeURIComponent(c.substring(nameEQ.length, c.length))\n        }\n    } return null\n}\n~~~\n\n##### Ajax 请求\n\n~~~\nC.ajax = function (args) {\n    var self = this;\n    this.options = {\n        type: 'GET',\n        async: true,\n        contentType: 'application/x-www-form-urlencoded',\n        url: 'about:blank',\n        data: null,\n        success: {},\n        error: {}\n    };\n    this.getXmlHttp = function () {\n        var xmlHttp;\n        try {\n            xmlhttp = new XMLHttpRequest();\n        }\n        catch (e) {\n            try {\n                xmlhttp = new ActiveXObject(\"Msxml2.XMLHTTP\");\n            }\n            catch (e) {\n                xmlHttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\n            }\n        }\n        if (!xmlhttp) {\n            alert('您的浏览器不支持AJAX');\n            return false;\n        }\n        return xmlhttp;\n    };\n    this.send = function () {\n        C.each(self.options, function (key, val) {\n            self.options[key] = (args[key] == null) ? val : args[key];\n        });\n\n        var xmlHttp = new self.getXmlHttp();\n        if (self.options.type.toUpperCase() == 'GET') {\n            xmlHttp.open(self.options.type, self.options.url + (self.options.data == null ? \"\" : ((/[?]$/.test(self.options.url) ? '&' : '?') + self.options.data)), self.options.async);\n        }\n        else {\n            xmlHttp.open(self.options.type, self.options.url, self.options.async);\n            xmlHttp.setRequestHeader('Content-Length', self.options.data.length);\n        }\n        xmlHttp.setRequestHeader('Content-Type', self.options.contentType);\n        xmlHttp.onreadystatechange = function () {\n            if (xmlHttp.readyState == 4) {\n                if (xmlHttp.status == 200 || xmlHttp.status == 0) {\n                    if (typeof self.options.success == 'function') self.options.success(xmlHttp.responseText);\n                    xmlHttp = null;\n                }\n                else {\n                    if (typeof self.options.error == 'function') self.options.error('Server Status: ' + xmlHttp.status);\n                }\n            }\n        };\n\n        xmlHttp.send(self.options.type.toUpperCase() == 'POST' ? self.options.data.toString() : null);\n    };\n    this.send();\n};\n~~~\n\n##### JS StringBuilder 用法\n\n~~~\nfunction StringBuilder() {\n    this.strings = new Array;\n};\nStringBuilder.prototype.append = function (str) {\n    this.strings.push(str);\n};\nStringBuilder.prototype.toString = function () {\n    return this.strings.join('');\n};\n~~~\n\n##### JS 加载到顶部LoadJS\n\n~~~\nfunction loadJS (url, fn) {\n        var ss = document.getElementsByName('script'),\n            loaded = false;\n        for (var i = 0, len = ss.length; i < len; i++) {\n            if (ss[i].src && ss[i].getAttribute('src') == url) {\n                loaded = true;\n                break;\n            }\n        }\n        if (loaded) {\n            if (fn && typeof fn != 'undefined' && fn instanceof Function) fn();\n            return false;\n        }\n        var s = document.createElement('script'),\n            b = false;\n        s.setAttribute('type', 'text/javascript');\n        s.setAttribute('src', url);\n        s.onload = s.onreadystatechange = function () {\n            if (!b && (!this.readyState || this.readyState == 'loaded' || this.readyState == 'complete')) {\n                b = true;\n                if (fn && typeof fn != 'undefined' && fn instanceof Function) fn();\n            }\n        };\n        document.getElementsByTagName('head')[0].appendChild(s);\n    },\n    bind: function (objId, eventType, callBack) {  //适用于任何浏览器的绑定\n        var obj = document.getElementById(objId);\n        if (obj.addEventListener) {\n            obj.addEventListener(eventType, callBack, false);\n        }\n        else if (window.attachEvent) {\n            obj.attachEvent('on' + eventType, callBack);\n        }\n        else {\n            obj['on' + eventType] = callBack;\n        }\n    }\n\nfunction JSLoad (args) {\n        s = document.createElement(\"script\");\n        s.setAttribute(\"type\", \"text/javascript\");\n        s.setAttribute(\"src\", args.url);\n        s.onload = s.onreadystatechange = function () {\n            if (!s.readyState || s.readyState == \"loaded\" || s.readyState == \"complete\") {\n                if (typeof args.callback == \"function\") args.callback(this, args);\n                s.onload = s.onreadystatechange = null;\n                try {\n                    s.parentNode && s.parentNode.removeChild(s);\n                } catch (e) { }\n            }\n        };\n        document.getElementsByTagName(\"head\")[0].appendChild(s);\n    }\n~~~\n\n##### 清空 LoadJS 加载到顶部的js引用\n\n~~~\nfunction ClearHeadJs  (src) {\n        var js = document.getElementsByTagName('head')[0].children;\n        var obj = null;\n        for (var i = 0; i < js.length; i++) {\n            if (js[i].tagName.toLowerCase() == \"script\" && js[i].attributes['src'].value.indexOf(src) > 0) {\n                obj = js[i];\n            }\n        }\n        document.getElementsByTagName('head')[0].removeChild(obj);\n    };\n~~~\n\n##### JS 替换非法字符主要用在密码验证上出现的特殊字符\n\n~~~\nfunction URLencode(sStr) {\n        return escape(sStr).replace(/\\+/g, '%2B').replace(/\\\"/g, '%22').replace(/\\'/g, '%27').replace(/\\//g, '%2F');\n    };\n~~~\n\n##### 按Ctrl + Entert 直接提交表单\n\n```\ndocument.body.onkeydown = function (evt) {\n        evt = evt ? evt : (window.event ? window.event : null);\n        if (13 == evt.keyCode && evt.ctrlKey) {\n            evt.returnValue = false;\n            evt.cancel = true;\n            PostData();\n        }\n    };\n```\n\n##### 获取当前时间\n\n~~~\nfunction GetCurrentDate() {\n        var d = new Date();\n        var y = d.getYear()+1900;\n        month = add_zero(d.getMonth() + 1),\n        days = add_zero(d.getDate()),\n        hours = add_zero(d.getHours());\n        minutes = add_zero(d.getMinutes()),\n        seconds = add_zero(d.getSeconds());\n        var str = y + '-' + month + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds;\n        return str;\n    };\n    function add_zero(temp) {\n        if (temp < 10) return \"0\" + temp;\n        else return temp;\n    }\n~~~\n\n##### Js 去掉空格方法\n\n~~~\nString.prototype.Trim = function()\n{ return this.replace(/(^\\s*)|(\\s*$)/g, \"\"); }\nString.prototype.LTrim = function()\n{return this.replace(/(^\\s*)/g, \"\");}\nString.prototype.RTrim = function()\n{return this.replace(/(\\s*$)/g, \"\");}\n~~~\n\n##### js 动态移除 head 里的 js 引用\n\n~~~\nthis.ClearHeadJs = function (src) {\n        var js = document.getElementsByTagName('head')[0].children;\n        var obj = null;\n        for (var i = 0; i < js.length; i++) {\n            if (js[i].tagName.toLowerCase() == \"script\" && js[i].attributes['src'].value.indexOf(src) > 0) {\n                obj = js[i];\n            }\n        }\n        document.getElementsByTagName('head')[0].removeChild(obj);\n    };\n~~~\n\n##### 整个UL 点击事件 加在UL里的onclick里\n\n~~~\nfunction CreateFrom(url, params) {\n            var f = document.createElement(\"form\");\n            f.setAttribute(\"action\", url);\n            for (var i = 0; i < params.length; i++) {\n                var input = document.createElement(\"input\");\n                input.setAttribute(\"type\", \"hidden\");\n                input.setAttribute(\"name\", params[i].paramName);\n                input.setAttribute(\"value\", params[i].paramValue);\n                f.appendChild(input);\n            }\n            f.target = \"_blank\";\n            document.body.appendChild(f);\n            f.submit();\n        };\n~~~\n\n##### 判断浏览器使用的是哪个 JS 版本\n\n~~~\n<script language=\"javascript\">\n      var jsversion = 1.0;\n    </script>\n    <script language=\"javascript1.1\">\n      jsversion = 1.1;\n    </script>\n    <script language=\"javascript1.2\">\n      jsversion = 1.2;\n    </script>\n    <script language=\"javascript1.3\">\n      jsversion = 1.3;\n    </script>\n    <script language=\"javascript1.4\">\n      jsversion = 1.4;\n    </script>\n    <script language=\"javascript1.5\">\n      jsversion = 1.5;\n    </script>\n    <script language=\"javascript1.6\">\n      jsversion = 1.6;\n    </script>\n    <script language=\"javascript1.7\">\n      jsversion = 1.7;\n    </script>\n    <script language=\"javascript1.8\">\n      jsversion = 1.8;\n    </script>\n    <script language=\"javascript1.9\">\n      jsversion = 1.9;\n    </script>\n    <script language=\"javascript2.0\">\n      jsversion = 2.0;\n    </script>\nalert(jsversion);\n~~~\n\n##### iframe自适应高度\n\n~~~\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<title>无标题文档</title>\n<link href=\"mycss/main.css\" rel=\"stylesheet\" type=\"text/css\">\n<script type=\"text/javascript\" language=\"javascript\">\n    function iFrameHeight() {\n        var ifm= document.getElementById(\"iframepage\");\n        var subWeb = document.frames ? document.frames[\"iframepage\"].document :\nifm.contentDocument;// 子页面  兼容不同浏览器的 前面是支持ie8+;后面支持其它浏览器\n            if(ifm != null && subWeb != null) {\n            ifm.height = subWeb.body.scrollHeight;\n            }\n    }\n\tvar itvl=setInterval(\"iFrameHeight()\",100);\n\t</script>\n</head>\n<body>\n<section id=\"wrapper1\">\n<div style=\"height:20px; width:100%; background-color:#F60\">\n<a href=\"com/top.html\" target=\"myi\">111</a> <a href=\"com/top_2.html\" target=\"myi\">2222</a></div>\n<!--很恶心的问题：普通浏览看不到效果，在服务器下可以-->\n</div>\n<!--\n<iframe name=\"myi\" src=\"com/top.html\" marginheight=\"0\" marginwidth=\"0\" frameborder=\"0\" scrolling=\"no\" width=\"765\" id=\"iframepage\" name=\"iframepage\" onload=\"this.height=this.contentWindow.document.getElementById('top').scrollHeight\" ></iframe>\n-->\n<iframe src=\"com/top.html\" marginheight=\"0\" marginwidth=\"0\" frameborder=\"0\" scrolling=\"no\" width=\"765\" id=\"iframepage\" name=\"iframepage\"></iframe>\n<!-- onLoad=\"iFrameHeight()\"-->\n<div style=\"height:20px; width:100%; background-color:#F09\">\n<div>hello baby!@!!!!</div>\n</section>\n</body>\n</html>\n~~~\n","slug":"常用JavaScript代码","published":1,"date":"2017-05-22T05:03:19.685Z","updated":"2017-05-31T00:54:27.387Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmtsx001v4wvsxrduguc7","content":"<p>常用JavaScript代码，有：1.手机类型判断、2.字符串长度、3.获取url中的参数、4.js 绑定事件、5.当前浏览器JS的版本、6.全选/全不选、7.移除事件、8.回车提交、9.ajax提交等</p>\n<h5 id=\"手机类型判断\"><a href=\"#手机类型判断\" class=\"headerlink\" title=\"手机类型判断\"></a>手机类型判断</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">var BrowserInfo = &#123;</div><div class=\"line\">    userAgent: navigator.userAgent.toLowerCase()</div><div class=\"line\">    isAndroid: Boolean(navigator.userAgent.match(/android/ig)),</div><div class=\"line\">    isIphone: Boolean(navigator.userAgent.match(/iphone|ipod/ig)),</div><div class=\"line\">    isIpad: Boolean(navigator.userAgent.match(/ipad/ig)),</div><div class=\"line\">    isWeixin: Boolean(navigator.userAgent.match(/MicroMessenger/ig)),</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"返回字符串长度，汉字计数为2\"><a href=\"#返回字符串长度，汉字计数为2\" class=\"headerlink\" title=\"返回字符串长度，汉字计数为2\"></a>返回字符串长度，汉字计数为2</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">function strLength(str) &#123;</div><div class=\"line\">            var a = 0;</div><div class=\"line\">            for (var i = 0; i &lt; str.length; i++) &#123;</div><div class=\"line\">                if (str.charCodeAt(i) &gt; 255)</div><div class=\"line\">                    a += 2;//按照预期计数增加2</div><div class=\"line\">                else</div><div class=\"line\">                    a++;</div><div class=\"line\">            &#125;</div><div class=\"line\">            return a;</div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure>\n<h5 id=\"获取url中的参数\"><a href=\"#获取url中的参数\" class=\"headerlink\" title=\"获取url中的参数\"></a>获取url中的参数</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">function GetQueryStringRegExp(name,url) &#123;</div><div class=\"line\">    var reg = new RegExp(&quot;(^|\\\\?|&amp;)&quot; + name + &quot;=([^&amp;]*)(\\\\s|&amp;|$)&quot;, &quot;i&quot;);</div><div class=\"line\">    if (reg.test(url)) return decodeURIComponent(RegExp.$2.replace(/\\+/g, &quot; &quot;)); return &quot;&quot;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"js-绑定事件-适用于任何浏览器的元素绑定\"><a href=\"#js-绑定事件-适用于任何浏览器的元素绑定\" class=\"headerlink\" title=\"js 绑定事件 适用于任何浏览器的元素绑定\"></a>js 绑定事件 适用于任何浏览器的元素绑定</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">function eventBind(obj, eventType, callBack) &#123;</div><div class=\"line\">        if (obj.addEventListener) &#123;</div><div class=\"line\">            obj.addEventListener(eventType, callBack, false);</div><div class=\"line\">        &#125;</div><div class=\"line\">        else if (window.attachEvent) &#123;</div><div class=\"line\">            obj.attachEvent(&apos;on&apos; + eventType, callBack);</div><div class=\"line\">        &#125;</div><div class=\"line\">        else &#123;</div><div class=\"line\">            obj[&apos;on&apos; + eventType] = callBack;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\">eventBind(document, &apos;click&apos;, bodyClick);</div></pre></td></tr></table></figure>\n<h5 id=\"获得当前浏览器JS的版本\"><a href=\"#获得当前浏览器JS的版本\" class=\"headerlink\" title=\"获得当前浏览器JS的版本\"></a>获得当前浏览器JS的版本</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\">function getjsversion()&#123;</div><div class=\"line\">    var n = navigator;</div><div class=\"line\">    var u = n.userAgent;</div><div class=\"line\">    var apn = n.appName;</div><div class=\"line\">    var v = n.appVersion;</div><div class=\"line\">    var ie = v.indexOf(&apos;MSIE &apos;);</div><div class=\"line\">    if (ie &gt; 0)&#123;</div><div class=\"line\">        apv = parseInt(i = v.substring(ie + 5));</div><div class=\"line\">        if (apv &gt; 3) &#123;</div><div class=\"line\">            apv = parseFloat(i);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; else &#123;</div><div class=\"line\">        apv = parseFloat(v);</div><div class=\"line\">    &#125;</div><div class=\"line\">    var isie = (apn == &apos;Microsoft Internet Explorer&apos;);</div><div class=\"line\">    var ismac = (u.indexOf(&apos;Mac&apos;) &gt;= 0);</div><div class=\"line\">    var javascriptVersion = &quot;1.0&quot;;</div><div class=\"line\">    if (String &amp;&amp; String.prototype) &#123;</div><div class=\"line\">        javascriptVersion = &apos;1.1&apos;;</div><div class=\"line\">        if (javascriptVersion.match) &#123;</div><div class=\"line\">            javascriptVersion = &apos;1.2&apos;;</div><div class=\"line\">            var tm = new Date;</div><div class=\"line\">            if (tm.setUTCDate) &#123;</div><div class=\"line\">                javascriptVersion = &apos;1.3&apos;;</div><div class=\"line\">                if (isie &amp;&amp; ismac &amp;&amp; apv &gt;= 5) javascriptVersion = &apos;1.4&apos;;</div><div class=\"line\">                var pn = 0;</div><div class=\"line\">                if (pn.toPrecision) &#123;</div><div class=\"line\">                    javascriptVersion = &apos;1.5&apos;;</div><div class=\"line\">                    a = new Array;</div><div class=\"line\">                    if (a.forEach) &#123;</div><div class=\"line\">                        javascriptVersion = &apos;1.6&apos;;</div><div class=\"line\">                        i = 0;</div><div class=\"line\">                        o = new Object;</div><div class=\"line\">                        tcf = new Function(&apos;o&apos;, &apos;var e,i=0;try&#123;i=new Iterator(o)&#125;catch(e)&#123;&#125;return i&apos;);</div><div class=\"line\">                        i = tcf(o);</div><div class=\"line\">                        if (i &amp;&amp; i.next) &#123;</div><div class=\"line\">                            javascriptVersion = &apos;1.7&apos;;</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return javascriptVersion;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"获取当前点击事件的Object对象\"><a href=\"#获取当前点击事件的Object对象\" class=\"headerlink\" title=\"获取当前点击事件的Object对象\"></a>获取当前点击事件的Object对象</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">function getEvent() &#123;</div><div class=\"line\">    if (document.all) &#123;</div><div class=\"line\">        return window.event; //如果是ie</div><div class=\"line\">    &#125;</div><div class=\"line\">    func = getEvent.caller;</div><div class=\"line\">    while (func != null) &#123;</div><div class=\"line\">        var arg0 = func.arguments[0];</div><div class=\"line\">        if (arg0) &#123;</div><div class=\"line\">            if ((arg0.constructor == Event || arg0.constructor == MouseEvent)</div><div class=\"line\">|| (typeof (arg0) == &quot;object&quot; &amp;&amp; arg0.preventDefault &amp;&amp; arg0.stopPropagation)) &#123;</div><div class=\"line\">                return arg0;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        func = func.caller;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return null;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<h5 id=\"字符串截取方法\"><a href=\"#字符串截取方法\" class=\"headerlink\" title=\"字符串截取方法\"></a>字符串截取方法</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">getCharactersLen: function (charStr, cutCount) &#123;</div><div class=\"line\">        if (charStr == null || charStr == &apos;&apos;) return &apos;&apos;;</div><div class=\"line\">        var totalCount = 0;</div><div class=\"line\">        var newStr = &apos;&apos;;</div><div class=\"line\">        for (var i = 0; i &lt; charStr.length; i++) &#123;</div><div class=\"line\">            var c = charStr.charCodeAt(i);</div><div class=\"line\">            if (c &lt; 255 &amp;&amp; c &gt; 0) &#123;</div><div class=\"line\">                totalCount++;</div><div class=\"line\">            &#125; else &#123;</div><div class=\"line\">                totalCount += 2;</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (totalCount &gt;= cutCount) &#123;</div><div class=\"line\">                newStr += charStr.charAt(i);</div><div class=\"line\">                break;</div><div class=\"line\">            &#125;</div><div class=\"line\">            else &#123;</div><div class=\"line\">                newStr += charStr.charAt(i);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return newStr;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h5 id=\"JS-弹出新窗口全屏\"><a href=\"#JS-弹出新窗口全屏\" class=\"headerlink\" title=\"JS 弹出新窗口全屏\"></a>JS 弹出新窗口全屏</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">var tmp = window.open(&quot;about:blank&quot;, &quot;&quot;, &quot;fullscreen=1&quot;)</div><div class=\"line\">                            tmp.moveTo(0, 0);</div><div class=\"line\">                            tmp.resizeTo(screen.width + 20, screen.height);</div><div class=\"line\">                            tmp.focus();</div><div class=\"line\">                            tmp.location.href = &apos;http://www.che168.com/pinggu/eva_&apos; + msgResult.message[0] + &apos;.html&apos;;</div><div class=\"line\"></div><div class=\"line\">var config_ = &quot;left=0,top=0,width=&quot; + (window.screen.Width) + &quot;,height=&quot; + (window.screen.Height);</div><div class=\"line\">                            window.open(&apos;http://www.che168.com/pinggu/eva_&apos; + msgResult.message[0] + &apos;.html&apos;, &quot;winHanle&quot;, config_);</div><div class=\"line\">//模拟form提交打开新页面</div><div class=\"line\">var f = document.createElement(&quot;form&quot;);</div><div class=\"line\">                            f.setAttribute(&apos;action&apos;, &apos;http://www.che168.com/pinggu/eva_&apos; + msgResult.message[0] + &apos;.html&apos;);</div><div class=\"line\">                            f.target = &apos;_blank&apos;;</div><div class=\"line\">                            document.body.appendChild(f);</div><div class=\"line\">                            f.submit();</div></pre></td></tr></table></figure>\n<h5 id=\"全选-全不选\"><a href=\"#全选-全不选\" class=\"headerlink\" title=\"全选/全不选\"></a>全选/全不选</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">function selectAll(objSelect) &#123;</div><div class=\"line\">            if (objSelect.checked == true) &#123;</div><div class=\"line\">                $(&quot;input[name=&apos;chkId&apos;]&quot;).attr(&quot;checked&quot;, true);</div><div class=\"line\">                $(&quot;input[name=&apos;chkAll&apos;]&quot;).attr(&quot;checked&quot;, true);</div><div class=\"line\">            &#125;</div><div class=\"line\">            else if (objSelect.checked == false) &#123;</div><div class=\"line\">                $(&quot;input[name=&apos;chkId&apos;]&quot;).attr(&quot;checked&quot;, false);</div><div class=\"line\">                $(&quot;input[name=&apos;chkAll&apos;]&quot;).attr(&quot;checked&quot;, false);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure>\n<h5 id=\"js-判断浏览器\"><a href=\"#js-判断浏览器\" class=\"headerlink\" title=\"js 判断浏览器\"></a>js 判断浏览器</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">判断是否是 IE 浏览器</div><div class=\"line\">    if (document.all)&#123;</div><div class=\"line\">        alert(”IE浏览器”);</div><div class=\"line\">    &#125;else&#123;</div><div class=\"line\">        alert(”非IE浏览器”);</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (!!window.ActiveXObject)&#123;</div><div class=\"line\">        alert(”IE浏览器”);</div><div class=\"line\">    &#125;else&#123;</div><div class=\"line\">        alert(”非IE浏览器”);</div><div class=\"line\">    &#125;</div><div class=\"line\">判断是IE几</div><div class=\"line\">var isIE=!!window.ActiveXObject;</div><div class=\"line\">var isIE6=isIE&amp;&amp;!window.XMLHttpRequest;</div><div class=\"line\">var isIE8=isIE&amp;&amp;!!document.documentMode;</div><div class=\"line\">var isIE7=isIE&amp;&amp;!isIE6&amp;&amp;!isIE8;</div><div class=\"line\">if (isIE)&#123;</div><div class=\"line\">    if (isIE6)&#123;</div><div class=\"line\">        alert(”ie6″);</div><div class=\"line\">    &#125;else if (isIE8)&#123;</div><div class=\"line\">        alert(”ie8″);</div><div class=\"line\">    &#125;else if (isIE7)&#123;</div><div class=\"line\">        alert(”ie7″);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"判断浏览器\"><a href=\"#判断浏览器\" class=\"headerlink\" title=\"判断浏览器\"></a>判断浏览器</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">function getOs() &#123;</div><div class=\"line\">    if (navigator.userAgent.indexOf(&quot;MSIE 8.0&quot;) &gt; 0) &#123;</div><div class=\"line\">        return &quot;MSIE8&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    else if (navigator.userAgent.indexOf(&quot;MSIE 6.0&quot;) &gt; 0) &#123;</div><div class=\"line\">        return &quot;MSIE6&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    else if (navigator.userAgent.indexOf(&quot;MSIE 7.0&quot;) &gt; 0) &#123;</div><div class=\"line\">        return &quot;MSIE7&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    else if (isFirefox = navigator.userAgent.indexOf(&quot;Firefox&quot;) &gt; 0) &#123;</div><div class=\"line\">        return &quot;Firefox&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (navigator.userAgent.indexOf(&quot;Chrome&quot;) &gt; 0) &#123;</div><div class=\"line\">        return &quot;Chrome&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    else &#123;</div><div class=\"line\">        return &quot;Other&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"JS判断两个日期大小-适合-2012-09-09-与2012-9-9-两种格式的对比\"><a href=\"#JS判断两个日期大小-适合-2012-09-09-与2012-9-9-两种格式的对比\" class=\"headerlink\" title=\"JS判断两个日期大小 适合 2012-09-09 与2012-9-9 两种格式的对比\"></a>JS判断两个日期大小 适合 2012-09-09 与2012-9-9 两种格式的对比</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">//得到日期值并转化成日期格式，replace(/\\-/g, &quot;\\/&quot;)是根据验证表达式把日期转化成长日期格式，这样再进行判断就好判断了</div><div class=\"line\">        function ValidateDate() &#123;</div><div class=\"line\">            var beginDate = $(&quot;#t_datestart&quot;).val();</div><div class=\"line\">            var endDate = $(&quot;#t_dateend&quot;).val();</div><div class=\"line\">            if (beginDate.length &gt; 0 &amp;&amp; endDate.length&gt;0) &#123;</div><div class=\"line\">                var sDate = new Date(beginDate.replace(/\\-/g, &quot;\\/&quot;));</div><div class=\"line\">                var eDate= new Date(endDate.replace(/\\-/g, &quot;\\/&quot;));</div><div class=\"line\">                if (sDate &gt; eDate) &#123;</div><div class=\"line\">                    alert(&apos;开始日期要小于结束日期&apos;);</div><div class=\"line\">                    return false;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure>\n<h5 id=\"移除事件\"><a href=\"#移除事件\" class=\"headerlink\" title=\"移除事件\"></a>移除事件</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">this.moveBind = function (objId, eventType, callBack) &#123;</div><div class=\"line\">                var obj = document.getElementById(objId);</div><div class=\"line\">                if (obj.removeEventListener) &#123;</div><div class=\"line\">                    obj.removeEventListener(eventType, callBack, false);</div><div class=\"line\">                &#125;</div><div class=\"line\">                else if (window.detachEvent) &#123;</div><div class=\"line\">                    obj.detachEvent(&apos;on&apos; + eventType, callBack);</div><div class=\"line\">                &#125;</div><div class=\"line\">                else &#123;</div><div class=\"line\">                    obj[&apos;on&apos; + eventType] = null;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div></pre></td></tr></table></figure>\n<h5 id=\"回车提交\"><a href=\"#回车提交\" class=\"headerlink\" title=\"回车提交\"></a>回车提交</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(&quot;id&quot;).onkeypress = function (event) &#123;</div><div class=\"line\">    event = (event) ? event : ((window.event) ? window.event : &quot;&quot;)</div><div class=\"line\">    keyCode = event.keyCode ? event.keyCode : (event.which ? event.which : event.charCode);</div><div class=\"line\">    if (keyCode == 13) &#123;</div><div class=\"line\">        $(&quot;SubmitLogin&quot;).onclick();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"JS-执行计时器\"><a href=\"#JS-执行计时器\" class=\"headerlink\" title=\"JS 执行计时器\"></a>JS 执行计时器</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">timeStart = new Date().getTime();</div><div class=\"line\">timesEnd = new Date().getTime();</div><div class=\"line\">document.getElementById(&quot;time&quot;).innerHTML = timesEnd - timeStart;</div></pre></td></tr></table></figure>\n<h5 id=\"JS-写Cookie\"><a href=\"#JS-写Cookie\" class=\"headerlink\" title=\"JS 写Cookie\"></a>JS 写Cookie</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">function setCookie(name, value, expires, path, domain) &#123;</div><div class=\"line\">    if (!expires) expires = -1;</div><div class=\"line\">    if (!path) path = &quot;/&quot;;</div><div class=\"line\">    var d = &quot;&quot; + name + &quot;=&quot; + value;</div><div class=\"line\">    var e;</div><div class=\"line\">    if (expires &lt; 0) &#123;</div><div class=\"line\">        e = &quot;&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    else if (expires == 0) &#123;</div><div class=\"line\">        var f = new Date(1970, 1, 1);</div><div class=\"line\">        e = &quot;;expires=&quot; + f.toUTCString();</div><div class=\"line\">    &#125;</div><div class=\"line\">    else &#123;</div><div class=\"line\">        var now = new Date();</div><div class=\"line\">        var f = new Date(now.getTime() + expires * 1000);</div><div class=\"line\">        e = &quot;;expires=&quot; + f.toUTCString();</div><div class=\"line\">    &#125;</div><div class=\"line\">    var dm;</div><div class=\"line\">    if (!domain) &#123;</div><div class=\"line\">        dm = &quot;&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    else &#123;</div><div class=\"line\">        dm = &quot;;domain=&quot; + domain;</div><div class=\"line\">    &#125;</div><div class=\"line\">    document.cookie = name + &quot;=&quot; + value + &quot;;path=&quot; + path + e + dm;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<h5 id=\"JS-读Cookie\"><a href=\"#JS-读Cookie\" class=\"headerlink\" title=\"JS 读Cookie\"></a>JS 读Cookie</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">function readCookie(name) &#123;</div><div class=\"line\">    var nameEQ = name + &quot;=&quot;;</div><div class=\"line\">    var ca = document.cookie.split(&apos;;&apos;);</div><div class=\"line\">    for (var i = 0; i &lt; ca.length; i++) &#123;</div><div class=\"line\">        var c = ca[i];</div><div class=\"line\">        while (c.charAt(0) == &apos; &apos;) c = c.substring(1, c.length);</div><div class=\"line\">        if (c.indexOf(nameEQ) == 0) &#123;</div><div class=\"line\">            return decodeURIComponent(c.substring(nameEQ.length, c.length))</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; return null</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"Ajax-请求\"><a href=\"#Ajax-请求\" class=\"headerlink\" title=\"Ajax 请求\"></a>Ajax 请求</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div></pre></td><td class=\"code\"><pre><div class=\"line\">C.ajax = function (args) &#123;</div><div class=\"line\">    var self = this;</div><div class=\"line\">    this.options = &#123;</div><div class=\"line\">        type: &apos;GET&apos;,</div><div class=\"line\">        async: true,</div><div class=\"line\">        contentType: &apos;application/x-www-form-urlencoded&apos;,</div><div class=\"line\">        url: &apos;about:blank&apos;,</div><div class=\"line\">        data: null,</div><div class=\"line\">        success: &#123;&#125;,</div><div class=\"line\">        error: &#123;&#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\">    this.getXmlHttp = function () &#123;</div><div class=\"line\">        var xmlHttp;</div><div class=\"line\">        try &#123;</div><div class=\"line\">            xmlhttp = new XMLHttpRequest();</div><div class=\"line\">        &#125;</div><div class=\"line\">        catch (e) &#123;</div><div class=\"line\">            try &#123;</div><div class=\"line\">                xmlhttp = new ActiveXObject(&quot;Msxml2.XMLHTTP&quot;);</div><div class=\"line\">            &#125;</div><div class=\"line\">            catch (e) &#123;</div><div class=\"line\">                xmlHttp = new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (!xmlhttp) &#123;</div><div class=\"line\">            alert(&apos;您的浏览器不支持AJAX&apos;);</div><div class=\"line\">            return false;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return xmlhttp;</div><div class=\"line\">    &#125;;</div><div class=\"line\">    this.send = function () &#123;</div><div class=\"line\">        C.each(self.options, function (key, val) &#123;</div><div class=\"line\">            self.options[key] = (args[key] == null) ? val : args[key];</div><div class=\"line\">        &#125;);</div><div class=\"line\"></div><div class=\"line\">        var xmlHttp = new self.getXmlHttp();</div><div class=\"line\">        if (self.options.type.toUpperCase() == &apos;GET&apos;) &#123;</div><div class=\"line\">            xmlHttp.open(self.options.type, self.options.url + (self.options.data == null ? &quot;&quot; : ((/[?]$/.test(self.options.url) ? &apos;&amp;&apos; : &apos;?&apos;) + self.options.data)), self.options.async);</div><div class=\"line\">        &#125;</div><div class=\"line\">        else &#123;</div><div class=\"line\">            xmlHttp.open(self.options.type, self.options.url, self.options.async);</div><div class=\"line\">            xmlHttp.setRequestHeader(&apos;Content-Length&apos;, self.options.data.length);</div><div class=\"line\">        &#125;</div><div class=\"line\">        xmlHttp.setRequestHeader(&apos;Content-Type&apos;, self.options.contentType);</div><div class=\"line\">        xmlHttp.onreadystatechange = function () &#123;</div><div class=\"line\">            if (xmlHttp.readyState == 4) &#123;</div><div class=\"line\">                if (xmlHttp.status == 200 || xmlHttp.status == 0) &#123;</div><div class=\"line\">                    if (typeof self.options.success == &apos;function&apos;) self.options.success(xmlHttp.responseText);</div><div class=\"line\">                    xmlHttp = null;</div><div class=\"line\">                &#125;</div><div class=\"line\">                else &#123;</div><div class=\"line\">                    if (typeof self.options.error == &apos;function&apos;) self.options.error(&apos;Server Status: &apos; + xmlHttp.status);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;;</div><div class=\"line\"></div><div class=\"line\">        xmlHttp.send(self.options.type.toUpperCase() == &apos;POST&apos; ? self.options.data.toString() : null);</div><div class=\"line\">    &#125;;</div><div class=\"line\">    this.send();</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<h5 id=\"JS-StringBuilder-用法\"><a href=\"#JS-StringBuilder-用法\" class=\"headerlink\" title=\"JS StringBuilder 用法\"></a>JS StringBuilder 用法</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">function StringBuilder() &#123;</div><div class=\"line\">    this.strings = new Array;</div><div class=\"line\">&#125;;</div><div class=\"line\">StringBuilder.prototype.append = function (str) &#123;</div><div class=\"line\">    this.strings.push(str);</div><div class=\"line\">&#125;;</div><div class=\"line\">StringBuilder.prototype.toString = function () &#123;</div><div class=\"line\">    return this.strings.join(&apos;&apos;);</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<h5 id=\"JS-加载到顶部LoadJS\"><a href=\"#JS-加载到顶部LoadJS\" class=\"headerlink\" title=\"JS 加载到顶部LoadJS\"></a>JS 加载到顶部LoadJS</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div></pre></td><td class=\"code\"><pre><div class=\"line\">function loadJS (url, fn) &#123;</div><div class=\"line\">        var ss = document.getElementsByName(&apos;script&apos;),</div><div class=\"line\">            loaded = false;</div><div class=\"line\">        for (var i = 0, len = ss.length; i &lt; len; i++) &#123;</div><div class=\"line\">            if (ss[i].src &amp;&amp; ss[i].getAttribute(&apos;src&apos;) == url) &#123;</div><div class=\"line\">                loaded = true;</div><div class=\"line\">                break;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (loaded) &#123;</div><div class=\"line\">            if (fn &amp;&amp; typeof fn != &apos;undefined&apos; &amp;&amp; fn instanceof Function) fn();</div><div class=\"line\">            return false;</div><div class=\"line\">        &#125;</div><div class=\"line\">        var s = document.createElement(&apos;script&apos;),</div><div class=\"line\">            b = false;</div><div class=\"line\">        s.setAttribute(&apos;type&apos;, &apos;text/javascript&apos;);</div><div class=\"line\">        s.setAttribute(&apos;src&apos;, url);</div><div class=\"line\">        s.onload = s.onreadystatechange = function () &#123;</div><div class=\"line\">            if (!b &amp;&amp; (!this.readyState || this.readyState == &apos;loaded&apos; || this.readyState == &apos;complete&apos;)) &#123;</div><div class=\"line\">                b = true;</div><div class=\"line\">                if (fn &amp;&amp; typeof fn != &apos;undefined&apos; &amp;&amp; fn instanceof Function) fn();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;;</div><div class=\"line\">        document.getElementsByTagName(&apos;head&apos;)[0].appendChild(s);</div><div class=\"line\">    &#125;,</div><div class=\"line\">    bind: function (objId, eventType, callBack) &#123;  //适用于任何浏览器的绑定</div><div class=\"line\">        var obj = document.getElementById(objId);</div><div class=\"line\">        if (obj.addEventListener) &#123;</div><div class=\"line\">            obj.addEventListener(eventType, callBack, false);</div><div class=\"line\">        &#125;</div><div class=\"line\">        else if (window.attachEvent) &#123;</div><div class=\"line\">            obj.attachEvent(&apos;on&apos; + eventType, callBack);</div><div class=\"line\">        &#125;</div><div class=\"line\">        else &#123;</div><div class=\"line\">            obj[&apos;on&apos; + eventType] = callBack;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">function JSLoad (args) &#123;</div><div class=\"line\">        s = document.createElement(&quot;script&quot;);</div><div class=\"line\">        s.setAttribute(&quot;type&quot;, &quot;text/javascript&quot;);</div><div class=\"line\">        s.setAttribute(&quot;src&quot;, args.url);</div><div class=\"line\">        s.onload = s.onreadystatechange = function () &#123;</div><div class=\"line\">            if (!s.readyState || s.readyState == &quot;loaded&quot; || s.readyState == &quot;complete&quot;) &#123;</div><div class=\"line\">                if (typeof args.callback == &quot;function&quot;) args.callback(this, args);</div><div class=\"line\">                s.onload = s.onreadystatechange = null;</div><div class=\"line\">                try &#123;</div><div class=\"line\">                    s.parentNode &amp;&amp; s.parentNode.removeChild(s);</div><div class=\"line\">                &#125; catch (e) &#123; &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;;</div><div class=\"line\">        document.getElementsByTagName(&quot;head&quot;)[0].appendChild(s);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h5 id=\"清空-LoadJS-加载到顶部的js引用\"><a href=\"#清空-LoadJS-加载到顶部的js引用\" class=\"headerlink\" title=\"清空 LoadJS 加载到顶部的js引用\"></a>清空 LoadJS 加载到顶部的js引用</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">function ClearHeadJs  (src) &#123;</div><div class=\"line\">        var js = document.getElementsByTagName(&apos;head&apos;)[0].children;</div><div class=\"line\">        var obj = null;</div><div class=\"line\">        for (var i = 0; i &lt; js.length; i++) &#123;</div><div class=\"line\">            if (js[i].tagName.toLowerCase() == &quot;script&quot; &amp;&amp; js[i].attributes[&apos;src&apos;].value.indexOf(src) &gt; 0) &#123;</div><div class=\"line\">                obj = js[i];</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        document.getElementsByTagName(&apos;head&apos;)[0].removeChild(obj);</div><div class=\"line\">    &#125;;</div></pre></td></tr></table></figure>\n<h5 id=\"JS-替换非法字符主要用在密码验证上出现的特殊字符\"><a href=\"#JS-替换非法字符主要用在密码验证上出现的特殊字符\" class=\"headerlink\" title=\"JS 替换非法字符主要用在密码验证上出现的特殊字符\"></a>JS 替换非法字符主要用在密码验证上出现的特殊字符</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">function URLencode(sStr) &#123;</div><div class=\"line\">        return escape(sStr).replace(/\\+/g, &apos;%2B&apos;).replace(/\\&quot;/g, &apos;%22&apos;).replace(/\\&apos;/g, &apos;%27&apos;).replace(/\\//g, &apos;%2F&apos;);</div><div class=\"line\">    &#125;;</div></pre></td></tr></table></figure>\n<h5 id=\"按Ctrl-Entert-直接提交表单\"><a href=\"#按Ctrl-Entert-直接提交表单\" class=\"headerlink\" title=\"按Ctrl + Entert 直接提交表单\"></a>按Ctrl + Entert 直接提交表单</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">document.body.onkeydown = function (evt) &#123;</div><div class=\"line\">        evt = evt ? evt : (window.event ? window.event : null);</div><div class=\"line\">        if (13 == evt.keyCode &amp;&amp; evt.ctrlKey) &#123;</div><div class=\"line\">            evt.returnValue = false;</div><div class=\"line\">            evt.cancel = true;</div><div class=\"line\">            PostData();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;;</div></pre></td></tr></table></figure>\n<h5 id=\"获取当前时间\"><a href=\"#获取当前时间\" class=\"headerlink\" title=\"获取当前时间\"></a>获取当前时间</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">function GetCurrentDate() &#123;</div><div class=\"line\">        var d = new Date();</div><div class=\"line\">        var y = d.getYear()+1900;</div><div class=\"line\">        month = add_zero(d.getMonth() + 1),</div><div class=\"line\">        days = add_zero(d.getDate()),</div><div class=\"line\">        hours = add_zero(d.getHours());</div><div class=\"line\">        minutes = add_zero(d.getMinutes()),</div><div class=\"line\">        seconds = add_zero(d.getSeconds());</div><div class=\"line\">        var str = y + &apos;-&apos; + month + &apos;-&apos; + days + &apos; &apos; + hours + &apos;:&apos; + minutes + &apos;:&apos; + seconds;</div><div class=\"line\">        return str;</div><div class=\"line\">    &#125;;</div><div class=\"line\">    function add_zero(temp) &#123;</div><div class=\"line\">        if (temp &lt; 10) return &quot;0&quot; + temp;</div><div class=\"line\">        else return temp;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h5 id=\"Js-去掉空格方法\"><a href=\"#Js-去掉空格方法\" class=\"headerlink\" title=\"Js 去掉空格方法\"></a>Js 去掉空格方法</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">String.prototype.Trim = function()</div><div class=\"line\">&#123; return this.replace(/(^\\s*)|(\\s*$)/g, &quot;&quot;); &#125;</div><div class=\"line\">String.prototype.LTrim = function()</div><div class=\"line\">&#123;return this.replace(/(^\\s*)/g, &quot;&quot;);&#125;</div><div class=\"line\">String.prototype.RTrim = function()</div><div class=\"line\">&#123;return this.replace(/(\\s*$)/g, &quot;&quot;);&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"js-动态移除-head-里的-js-引用\"><a href=\"#js-动态移除-head-里的-js-引用\" class=\"headerlink\" title=\"js 动态移除 head 里的 js 引用\"></a>js 动态移除 head 里的 js 引用</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">this.ClearHeadJs = function (src) &#123;</div><div class=\"line\">        var js = document.getElementsByTagName(&apos;head&apos;)[0].children;</div><div class=\"line\">        var obj = null;</div><div class=\"line\">        for (var i = 0; i &lt; js.length; i++) &#123;</div><div class=\"line\">            if (js[i].tagName.toLowerCase() == &quot;script&quot; &amp;&amp; js[i].attributes[&apos;src&apos;].value.indexOf(src) &gt; 0) &#123;</div><div class=\"line\">                obj = js[i];</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        document.getElementsByTagName(&apos;head&apos;)[0].removeChild(obj);</div><div class=\"line\">    &#125;;</div></pre></td></tr></table></figure>\n<h5 id=\"整个UL-点击事件-加在UL里的onclick里\"><a href=\"#整个UL-点击事件-加在UL里的onclick里\" class=\"headerlink\" title=\"整个UL 点击事件 加在UL里的onclick里\"></a>整个UL 点击事件 加在UL里的onclick里</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">function CreateFrom(url, params) &#123;</div><div class=\"line\">            var f = document.createElement(&quot;form&quot;);</div><div class=\"line\">            f.setAttribute(&quot;action&quot;, url);</div><div class=\"line\">            for (var i = 0; i &lt; params.length; i++) &#123;</div><div class=\"line\">                var input = document.createElement(&quot;input&quot;);</div><div class=\"line\">                input.setAttribute(&quot;type&quot;, &quot;hidden&quot;);</div><div class=\"line\">                input.setAttribute(&quot;name&quot;, params[i].paramName);</div><div class=\"line\">                input.setAttribute(&quot;value&quot;, params[i].paramValue);</div><div class=\"line\">                f.appendChild(input);</div><div class=\"line\">            &#125;</div><div class=\"line\">            f.target = &quot;_blank&quot;;</div><div class=\"line\">            document.body.appendChild(f);</div><div class=\"line\">            f.submit();</div><div class=\"line\">        &#125;;</div></pre></td></tr></table></figure>\n<h5 id=\"判断浏览器使用的是哪个-JS-版本\"><a href=\"#判断浏览器使用的是哪个-JS-版本\" class=\"headerlink\" title=\"判断浏览器使用的是哪个 JS 版本\"></a>判断浏览器使用的是哪个 JS 版本</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script language=&quot;javascript&quot;&gt;</div><div class=\"line\">      var jsversion = 1.0;</div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">    &lt;script language=&quot;javascript1.1&quot;&gt;</div><div class=\"line\">      jsversion = 1.1;</div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">    &lt;script language=&quot;javascript1.2&quot;&gt;</div><div class=\"line\">      jsversion = 1.2;</div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">    &lt;script language=&quot;javascript1.3&quot;&gt;</div><div class=\"line\">      jsversion = 1.3;</div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">    &lt;script language=&quot;javascript1.4&quot;&gt;</div><div class=\"line\">      jsversion = 1.4;</div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">    &lt;script language=&quot;javascript1.5&quot;&gt;</div><div class=\"line\">      jsversion = 1.5;</div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">    &lt;script language=&quot;javascript1.6&quot;&gt;</div><div class=\"line\">      jsversion = 1.6;</div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">    &lt;script language=&quot;javascript1.7&quot;&gt;</div><div class=\"line\">      jsversion = 1.7;</div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">    &lt;script language=&quot;javascript1.8&quot;&gt;</div><div class=\"line\">      jsversion = 1.8;</div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">    &lt;script language=&quot;javascript1.9&quot;&gt;</div><div class=\"line\">      jsversion = 1.9;</div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">    &lt;script language=&quot;javascript2.0&quot;&gt;</div><div class=\"line\">      jsversion = 2.0;</div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">alert(jsversion);</div></pre></td></tr></table></figure>\n<h5 id=\"iframe自适应高度\"><a href=\"#iframe自适应高度\" class=\"headerlink\" title=\"iframe自适应高度\"></a>iframe自适应高度</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;</div><div class=\"line\">&lt;title&gt;无标题文档&lt;/title&gt;</div><div class=\"line\">&lt;link href=&quot;mycss/main.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;</div><div class=\"line\">&lt;script type=&quot;text/javascript&quot; language=&quot;javascript&quot;&gt;</div><div class=\"line\">    function iFrameHeight() &#123;</div><div class=\"line\">        var ifm= document.getElementById(&quot;iframepage&quot;);</div><div class=\"line\">        var subWeb = document.frames ? document.frames[&quot;iframepage&quot;].document :</div><div class=\"line\">ifm.contentDocument;// 子页面  兼容不同浏览器的 前面是支持ie8+;后面支持其它浏览器</div><div class=\"line\">            if(ifm != null &amp;&amp; subWeb != null) &#123;</div><div class=\"line\">            ifm.height = subWeb.body.scrollHeight;</div><div class=\"line\">            &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">\tvar itvl=setInterval(&quot;iFrameHeight()&quot;,100);</div><div class=\"line\">\t&lt;/script&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">&lt;section id=&quot;wrapper1&quot;&gt;</div><div class=\"line\">&lt;div style=&quot;height:20px; width:100%; background-color:#F60&quot;&gt;</div><div class=\"line\">&lt;a href=&quot;com/top.html&quot; target=&quot;myi&quot;&gt;111&lt;/a&gt; &lt;a href=&quot;com/top_2.html&quot; target=&quot;myi&quot;&gt;2222&lt;/a&gt;&lt;/div&gt;</div><div class=\"line\">&lt;!--很恶心的问题：普通浏览看不到效果，在服务器下可以--&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\">&lt;!--</div><div class=\"line\">&lt;iframe name=&quot;myi&quot; src=&quot;com/top.html&quot; marginheight=&quot;0&quot; marginwidth=&quot;0&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; width=&quot;765&quot; id=&quot;iframepage&quot; name=&quot;iframepage&quot; onload=&quot;this.height=this.contentWindow.document.getElementById(&apos;top&apos;).scrollHeight&quot; &gt;&lt;/iframe&gt;</div><div class=\"line\">--&gt;</div><div class=\"line\">&lt;iframe src=&quot;com/top.html&quot; marginheight=&quot;0&quot; marginwidth=&quot;0&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; width=&quot;765&quot; id=&quot;iframepage&quot; name=&quot;iframepage&quot;&gt;&lt;/iframe&gt;</div><div class=\"line\">&lt;!-- onLoad=&quot;iFrameHeight()&quot;--&gt;</div><div class=\"line\">&lt;div style=&quot;height:20px; width:100%; background-color:#F09&quot;&gt;</div><div class=\"line\">&lt;div&gt;hello baby!@!!!!&lt;/div&gt;</div><div class=\"line\">&lt;/section&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>常用JavaScript代码，有：1.手机类型判断、2.字符串长度、3.获取url中的参数、4.js 绑定事件、5.当前浏览器JS的版本、6.全选/全不选、7.移除事件、8.回车提交、9.ajax提交等</p>\n<h5 id=\"手机类型判断\"><a href=\"#手机类型判断\" class=\"headerlink\" title=\"手机类型判断\"></a>手机类型判断</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">var BrowserInfo = &#123;</div><div class=\"line\">    userAgent: navigator.userAgent.toLowerCase()</div><div class=\"line\">    isAndroid: Boolean(navigator.userAgent.match(/android/ig)),</div><div class=\"line\">    isIphone: Boolean(navigator.userAgent.match(/iphone|ipod/ig)),</div><div class=\"line\">    isIpad: Boolean(navigator.userAgent.match(/ipad/ig)),</div><div class=\"line\">    isWeixin: Boolean(navigator.userAgent.match(/MicroMessenger/ig)),</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"返回字符串长度，汉字计数为2\"><a href=\"#返回字符串长度，汉字计数为2\" class=\"headerlink\" title=\"返回字符串长度，汉字计数为2\"></a>返回字符串长度，汉字计数为2</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">function strLength(str) &#123;</div><div class=\"line\">            var a = 0;</div><div class=\"line\">            for (var i = 0; i &lt; str.length; i++) &#123;</div><div class=\"line\">                if (str.charCodeAt(i) &gt; 255)</div><div class=\"line\">                    a += 2;//按照预期计数增加2</div><div class=\"line\">                else</div><div class=\"line\">                    a++;</div><div class=\"line\">            &#125;</div><div class=\"line\">            return a;</div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure>\n<h5 id=\"获取url中的参数\"><a href=\"#获取url中的参数\" class=\"headerlink\" title=\"获取url中的参数\"></a>获取url中的参数</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">function GetQueryStringRegExp(name,url) &#123;</div><div class=\"line\">    var reg = new RegExp(&quot;(^|\\\\?|&amp;)&quot; + name + &quot;=([^&amp;]*)(\\\\s|&amp;|$)&quot;, &quot;i&quot;);</div><div class=\"line\">    if (reg.test(url)) return decodeURIComponent(RegExp.$2.replace(/\\+/g, &quot; &quot;)); return &quot;&quot;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"js-绑定事件-适用于任何浏览器的元素绑定\"><a href=\"#js-绑定事件-适用于任何浏览器的元素绑定\" class=\"headerlink\" title=\"js 绑定事件 适用于任何浏览器的元素绑定\"></a>js 绑定事件 适用于任何浏览器的元素绑定</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">function eventBind(obj, eventType, callBack) &#123;</div><div class=\"line\">        if (obj.addEventListener) &#123;</div><div class=\"line\">            obj.addEventListener(eventType, callBack, false);</div><div class=\"line\">        &#125;</div><div class=\"line\">        else if (window.attachEvent) &#123;</div><div class=\"line\">            obj.attachEvent(&apos;on&apos; + eventType, callBack);</div><div class=\"line\">        &#125;</div><div class=\"line\">        else &#123;</div><div class=\"line\">            obj[&apos;on&apos; + eventType] = callBack;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\">eventBind(document, &apos;click&apos;, bodyClick);</div></pre></td></tr></table></figure>\n<h5 id=\"获得当前浏览器JS的版本\"><a href=\"#获得当前浏览器JS的版本\" class=\"headerlink\" title=\"获得当前浏览器JS的版本\"></a>获得当前浏览器JS的版本</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\">function getjsversion()&#123;</div><div class=\"line\">    var n = navigator;</div><div class=\"line\">    var u = n.userAgent;</div><div class=\"line\">    var apn = n.appName;</div><div class=\"line\">    var v = n.appVersion;</div><div class=\"line\">    var ie = v.indexOf(&apos;MSIE &apos;);</div><div class=\"line\">    if (ie &gt; 0)&#123;</div><div class=\"line\">        apv = parseInt(i = v.substring(ie + 5));</div><div class=\"line\">        if (apv &gt; 3) &#123;</div><div class=\"line\">            apv = parseFloat(i);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; else &#123;</div><div class=\"line\">        apv = parseFloat(v);</div><div class=\"line\">    &#125;</div><div class=\"line\">    var isie = (apn == &apos;Microsoft Internet Explorer&apos;);</div><div class=\"line\">    var ismac = (u.indexOf(&apos;Mac&apos;) &gt;= 0);</div><div class=\"line\">    var javascriptVersion = &quot;1.0&quot;;</div><div class=\"line\">    if (String &amp;&amp; String.prototype) &#123;</div><div class=\"line\">        javascriptVersion = &apos;1.1&apos;;</div><div class=\"line\">        if (javascriptVersion.match) &#123;</div><div class=\"line\">            javascriptVersion = &apos;1.2&apos;;</div><div class=\"line\">            var tm = new Date;</div><div class=\"line\">            if (tm.setUTCDate) &#123;</div><div class=\"line\">                javascriptVersion = &apos;1.3&apos;;</div><div class=\"line\">                if (isie &amp;&amp; ismac &amp;&amp; apv &gt;= 5) javascriptVersion = &apos;1.4&apos;;</div><div class=\"line\">                var pn = 0;</div><div class=\"line\">                if (pn.toPrecision) &#123;</div><div class=\"line\">                    javascriptVersion = &apos;1.5&apos;;</div><div class=\"line\">                    a = new Array;</div><div class=\"line\">                    if (a.forEach) &#123;</div><div class=\"line\">                        javascriptVersion = &apos;1.6&apos;;</div><div class=\"line\">                        i = 0;</div><div class=\"line\">                        o = new Object;</div><div class=\"line\">                        tcf = new Function(&apos;o&apos;, &apos;var e,i=0;try&#123;i=new Iterator(o)&#125;catch(e)&#123;&#125;return i&apos;);</div><div class=\"line\">                        i = tcf(o);</div><div class=\"line\">                        if (i &amp;&amp; i.next) &#123;</div><div class=\"line\">                            javascriptVersion = &apos;1.7&apos;;</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return javascriptVersion;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"获取当前点击事件的Object对象\"><a href=\"#获取当前点击事件的Object对象\" class=\"headerlink\" title=\"获取当前点击事件的Object对象\"></a>获取当前点击事件的Object对象</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">function getEvent() &#123;</div><div class=\"line\">    if (document.all) &#123;</div><div class=\"line\">        return window.event; //如果是ie</div><div class=\"line\">    &#125;</div><div class=\"line\">    func = getEvent.caller;</div><div class=\"line\">    while (func != null) &#123;</div><div class=\"line\">        var arg0 = func.arguments[0];</div><div class=\"line\">        if (arg0) &#123;</div><div class=\"line\">            if ((arg0.constructor == Event || arg0.constructor == MouseEvent)</div><div class=\"line\">|| (typeof (arg0) == &quot;object&quot; &amp;&amp; arg0.preventDefault &amp;&amp; arg0.stopPropagation)) &#123;</div><div class=\"line\">                return arg0;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        func = func.caller;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return null;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<h5 id=\"字符串截取方法\"><a href=\"#字符串截取方法\" class=\"headerlink\" title=\"字符串截取方法\"></a>字符串截取方法</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">getCharactersLen: function (charStr, cutCount) &#123;</div><div class=\"line\">        if (charStr == null || charStr == &apos;&apos;) return &apos;&apos;;</div><div class=\"line\">        var totalCount = 0;</div><div class=\"line\">        var newStr = &apos;&apos;;</div><div class=\"line\">        for (var i = 0; i &lt; charStr.length; i++) &#123;</div><div class=\"line\">            var c = charStr.charCodeAt(i);</div><div class=\"line\">            if (c &lt; 255 &amp;&amp; c &gt; 0) &#123;</div><div class=\"line\">                totalCount++;</div><div class=\"line\">            &#125; else &#123;</div><div class=\"line\">                totalCount += 2;</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (totalCount &gt;= cutCount) &#123;</div><div class=\"line\">                newStr += charStr.charAt(i);</div><div class=\"line\">                break;</div><div class=\"line\">            &#125;</div><div class=\"line\">            else &#123;</div><div class=\"line\">                newStr += charStr.charAt(i);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return newStr;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h5 id=\"JS-弹出新窗口全屏\"><a href=\"#JS-弹出新窗口全屏\" class=\"headerlink\" title=\"JS 弹出新窗口全屏\"></a>JS 弹出新窗口全屏</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">var tmp = window.open(&quot;about:blank&quot;, &quot;&quot;, &quot;fullscreen=1&quot;)</div><div class=\"line\">                            tmp.moveTo(0, 0);</div><div class=\"line\">                            tmp.resizeTo(screen.width + 20, screen.height);</div><div class=\"line\">                            tmp.focus();</div><div class=\"line\">                            tmp.location.href = &apos;http://www.che168.com/pinggu/eva_&apos; + msgResult.message[0] + &apos;.html&apos;;</div><div class=\"line\"></div><div class=\"line\">var config_ = &quot;left=0,top=0,width=&quot; + (window.screen.Width) + &quot;,height=&quot; + (window.screen.Height);</div><div class=\"line\">                            window.open(&apos;http://www.che168.com/pinggu/eva_&apos; + msgResult.message[0] + &apos;.html&apos;, &quot;winHanle&quot;, config_);</div><div class=\"line\">//模拟form提交打开新页面</div><div class=\"line\">var f = document.createElement(&quot;form&quot;);</div><div class=\"line\">                            f.setAttribute(&apos;action&apos;, &apos;http://www.che168.com/pinggu/eva_&apos; + msgResult.message[0] + &apos;.html&apos;);</div><div class=\"line\">                            f.target = &apos;_blank&apos;;</div><div class=\"line\">                            document.body.appendChild(f);</div><div class=\"line\">                            f.submit();</div></pre></td></tr></table></figure>\n<h5 id=\"全选-全不选\"><a href=\"#全选-全不选\" class=\"headerlink\" title=\"全选/全不选\"></a>全选/全不选</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">function selectAll(objSelect) &#123;</div><div class=\"line\">            if (objSelect.checked == true) &#123;</div><div class=\"line\">                $(&quot;input[name=&apos;chkId&apos;]&quot;).attr(&quot;checked&quot;, true);</div><div class=\"line\">                $(&quot;input[name=&apos;chkAll&apos;]&quot;).attr(&quot;checked&quot;, true);</div><div class=\"line\">            &#125;</div><div class=\"line\">            else if (objSelect.checked == false) &#123;</div><div class=\"line\">                $(&quot;input[name=&apos;chkId&apos;]&quot;).attr(&quot;checked&quot;, false);</div><div class=\"line\">                $(&quot;input[name=&apos;chkAll&apos;]&quot;).attr(&quot;checked&quot;, false);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure>\n<h5 id=\"js-判断浏览器\"><a href=\"#js-判断浏览器\" class=\"headerlink\" title=\"js 判断浏览器\"></a>js 判断浏览器</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">判断是否是 IE 浏览器</div><div class=\"line\">    if (document.all)&#123;</div><div class=\"line\">        alert(”IE浏览器”);</div><div class=\"line\">    &#125;else&#123;</div><div class=\"line\">        alert(”非IE浏览器”);</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (!!window.ActiveXObject)&#123;</div><div class=\"line\">        alert(”IE浏览器”);</div><div class=\"line\">    &#125;else&#123;</div><div class=\"line\">        alert(”非IE浏览器”);</div><div class=\"line\">    &#125;</div><div class=\"line\">判断是IE几</div><div class=\"line\">var isIE=!!window.ActiveXObject;</div><div class=\"line\">var isIE6=isIE&amp;&amp;!window.XMLHttpRequest;</div><div class=\"line\">var isIE8=isIE&amp;&amp;!!document.documentMode;</div><div class=\"line\">var isIE7=isIE&amp;&amp;!isIE6&amp;&amp;!isIE8;</div><div class=\"line\">if (isIE)&#123;</div><div class=\"line\">    if (isIE6)&#123;</div><div class=\"line\">        alert(”ie6″);</div><div class=\"line\">    &#125;else if (isIE8)&#123;</div><div class=\"line\">        alert(”ie8″);</div><div class=\"line\">    &#125;else if (isIE7)&#123;</div><div class=\"line\">        alert(”ie7″);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"判断浏览器\"><a href=\"#判断浏览器\" class=\"headerlink\" title=\"判断浏览器\"></a>判断浏览器</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">function getOs() &#123;</div><div class=\"line\">    if (navigator.userAgent.indexOf(&quot;MSIE 8.0&quot;) &gt; 0) &#123;</div><div class=\"line\">        return &quot;MSIE8&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    else if (navigator.userAgent.indexOf(&quot;MSIE 6.0&quot;) &gt; 0) &#123;</div><div class=\"line\">        return &quot;MSIE6&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    else if (navigator.userAgent.indexOf(&quot;MSIE 7.0&quot;) &gt; 0) &#123;</div><div class=\"line\">        return &quot;MSIE7&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    else if (isFirefox = navigator.userAgent.indexOf(&quot;Firefox&quot;) &gt; 0) &#123;</div><div class=\"line\">        return &quot;Firefox&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (navigator.userAgent.indexOf(&quot;Chrome&quot;) &gt; 0) &#123;</div><div class=\"line\">        return &quot;Chrome&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    else &#123;</div><div class=\"line\">        return &quot;Other&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"JS判断两个日期大小-适合-2012-09-09-与2012-9-9-两种格式的对比\"><a href=\"#JS判断两个日期大小-适合-2012-09-09-与2012-9-9-两种格式的对比\" class=\"headerlink\" title=\"JS判断两个日期大小 适合 2012-09-09 与2012-9-9 两种格式的对比\"></a>JS判断两个日期大小 适合 2012-09-09 与2012-9-9 两种格式的对比</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">//得到日期值并转化成日期格式，replace(/\\-/g, &quot;\\/&quot;)是根据验证表达式把日期转化成长日期格式，这样再进行判断就好判断了</div><div class=\"line\">        function ValidateDate() &#123;</div><div class=\"line\">            var beginDate = $(&quot;#t_datestart&quot;).val();</div><div class=\"line\">            var endDate = $(&quot;#t_dateend&quot;).val();</div><div class=\"line\">            if (beginDate.length &gt; 0 &amp;&amp; endDate.length&gt;0) &#123;</div><div class=\"line\">                var sDate = new Date(beginDate.replace(/\\-/g, &quot;\\/&quot;));</div><div class=\"line\">                var eDate= new Date(endDate.replace(/\\-/g, &quot;\\/&quot;));</div><div class=\"line\">                if (sDate &gt; eDate) &#123;</div><div class=\"line\">                    alert(&apos;开始日期要小于结束日期&apos;);</div><div class=\"line\">                    return false;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure>\n<h5 id=\"移除事件\"><a href=\"#移除事件\" class=\"headerlink\" title=\"移除事件\"></a>移除事件</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">this.moveBind = function (objId, eventType, callBack) &#123;</div><div class=\"line\">                var obj = document.getElementById(objId);</div><div class=\"line\">                if (obj.removeEventListener) &#123;</div><div class=\"line\">                    obj.removeEventListener(eventType, callBack, false);</div><div class=\"line\">                &#125;</div><div class=\"line\">                else if (window.detachEvent) &#123;</div><div class=\"line\">                    obj.detachEvent(&apos;on&apos; + eventType, callBack);</div><div class=\"line\">                &#125;</div><div class=\"line\">                else &#123;</div><div class=\"line\">                    obj[&apos;on&apos; + eventType] = null;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div></pre></td></tr></table></figure>\n<h5 id=\"回车提交\"><a href=\"#回车提交\" class=\"headerlink\" title=\"回车提交\"></a>回车提交</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(&quot;id&quot;).onkeypress = function (event) &#123;</div><div class=\"line\">    event = (event) ? event : ((window.event) ? window.event : &quot;&quot;)</div><div class=\"line\">    keyCode = event.keyCode ? event.keyCode : (event.which ? event.which : event.charCode);</div><div class=\"line\">    if (keyCode == 13) &#123;</div><div class=\"line\">        $(&quot;SubmitLogin&quot;).onclick();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"JS-执行计时器\"><a href=\"#JS-执行计时器\" class=\"headerlink\" title=\"JS 执行计时器\"></a>JS 执行计时器</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">timeStart = new Date().getTime();</div><div class=\"line\">timesEnd = new Date().getTime();</div><div class=\"line\">document.getElementById(&quot;time&quot;).innerHTML = timesEnd - timeStart;</div></pre></td></tr></table></figure>\n<h5 id=\"JS-写Cookie\"><a href=\"#JS-写Cookie\" class=\"headerlink\" title=\"JS 写Cookie\"></a>JS 写Cookie</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">function setCookie(name, value, expires, path, domain) &#123;</div><div class=\"line\">    if (!expires) expires = -1;</div><div class=\"line\">    if (!path) path = &quot;/&quot;;</div><div class=\"line\">    var d = &quot;&quot; + name + &quot;=&quot; + value;</div><div class=\"line\">    var e;</div><div class=\"line\">    if (expires &lt; 0) &#123;</div><div class=\"line\">        e = &quot;&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    else if (expires == 0) &#123;</div><div class=\"line\">        var f = new Date(1970, 1, 1);</div><div class=\"line\">        e = &quot;;expires=&quot; + f.toUTCString();</div><div class=\"line\">    &#125;</div><div class=\"line\">    else &#123;</div><div class=\"line\">        var now = new Date();</div><div class=\"line\">        var f = new Date(now.getTime() + expires * 1000);</div><div class=\"line\">        e = &quot;;expires=&quot; + f.toUTCString();</div><div class=\"line\">    &#125;</div><div class=\"line\">    var dm;</div><div class=\"line\">    if (!domain) &#123;</div><div class=\"line\">        dm = &quot;&quot;;</div><div class=\"line\">    &#125;</div><div class=\"line\">    else &#123;</div><div class=\"line\">        dm = &quot;;domain=&quot; + domain;</div><div class=\"line\">    &#125;</div><div class=\"line\">    document.cookie = name + &quot;=&quot; + value + &quot;;path=&quot; + path + e + dm;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<h5 id=\"JS-读Cookie\"><a href=\"#JS-读Cookie\" class=\"headerlink\" title=\"JS 读Cookie\"></a>JS 读Cookie</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">function readCookie(name) &#123;</div><div class=\"line\">    var nameEQ = name + &quot;=&quot;;</div><div class=\"line\">    var ca = document.cookie.split(&apos;;&apos;);</div><div class=\"line\">    for (var i = 0; i &lt; ca.length; i++) &#123;</div><div class=\"line\">        var c = ca[i];</div><div class=\"line\">        while (c.charAt(0) == &apos; &apos;) c = c.substring(1, c.length);</div><div class=\"line\">        if (c.indexOf(nameEQ) == 0) &#123;</div><div class=\"line\">            return decodeURIComponent(c.substring(nameEQ.length, c.length))</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; return null</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"Ajax-请求\"><a href=\"#Ajax-请求\" class=\"headerlink\" title=\"Ajax 请求\"></a>Ajax 请求</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div></pre></td><td class=\"code\"><pre><div class=\"line\">C.ajax = function (args) &#123;</div><div class=\"line\">    var self = this;</div><div class=\"line\">    this.options = &#123;</div><div class=\"line\">        type: &apos;GET&apos;,</div><div class=\"line\">        async: true,</div><div class=\"line\">        contentType: &apos;application/x-www-form-urlencoded&apos;,</div><div class=\"line\">        url: &apos;about:blank&apos;,</div><div class=\"line\">        data: null,</div><div class=\"line\">        success: &#123;&#125;,</div><div class=\"line\">        error: &#123;&#125;</div><div class=\"line\">    &#125;;</div><div class=\"line\">    this.getXmlHttp = function () &#123;</div><div class=\"line\">        var xmlHttp;</div><div class=\"line\">        try &#123;</div><div class=\"line\">            xmlhttp = new XMLHttpRequest();</div><div class=\"line\">        &#125;</div><div class=\"line\">        catch (e) &#123;</div><div class=\"line\">            try &#123;</div><div class=\"line\">                xmlhttp = new ActiveXObject(&quot;Msxml2.XMLHTTP&quot;);</div><div class=\"line\">            &#125;</div><div class=\"line\">            catch (e) &#123;</div><div class=\"line\">                xmlHttp = new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (!xmlhttp) &#123;</div><div class=\"line\">            alert(&apos;您的浏览器不支持AJAX&apos;);</div><div class=\"line\">            return false;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return xmlhttp;</div><div class=\"line\">    &#125;;</div><div class=\"line\">    this.send = function () &#123;</div><div class=\"line\">        C.each(self.options, function (key, val) &#123;</div><div class=\"line\">            self.options[key] = (args[key] == null) ? val : args[key];</div><div class=\"line\">        &#125;);</div><div class=\"line\"></div><div class=\"line\">        var xmlHttp = new self.getXmlHttp();</div><div class=\"line\">        if (self.options.type.toUpperCase() == &apos;GET&apos;) &#123;</div><div class=\"line\">            xmlHttp.open(self.options.type, self.options.url + (self.options.data == null ? &quot;&quot; : ((/[?]$/.test(self.options.url) ? &apos;&amp;&apos; : &apos;?&apos;) + self.options.data)), self.options.async);</div><div class=\"line\">        &#125;</div><div class=\"line\">        else &#123;</div><div class=\"line\">            xmlHttp.open(self.options.type, self.options.url, self.options.async);</div><div class=\"line\">            xmlHttp.setRequestHeader(&apos;Content-Length&apos;, self.options.data.length);</div><div class=\"line\">        &#125;</div><div class=\"line\">        xmlHttp.setRequestHeader(&apos;Content-Type&apos;, self.options.contentType);</div><div class=\"line\">        xmlHttp.onreadystatechange = function () &#123;</div><div class=\"line\">            if (xmlHttp.readyState == 4) &#123;</div><div class=\"line\">                if (xmlHttp.status == 200 || xmlHttp.status == 0) &#123;</div><div class=\"line\">                    if (typeof self.options.success == &apos;function&apos;) self.options.success(xmlHttp.responseText);</div><div class=\"line\">                    xmlHttp = null;</div><div class=\"line\">                &#125;</div><div class=\"line\">                else &#123;</div><div class=\"line\">                    if (typeof self.options.error == &apos;function&apos;) self.options.error(&apos;Server Status: &apos; + xmlHttp.status);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;;</div><div class=\"line\"></div><div class=\"line\">        xmlHttp.send(self.options.type.toUpperCase() == &apos;POST&apos; ? self.options.data.toString() : null);</div><div class=\"line\">    &#125;;</div><div class=\"line\">    this.send();</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<h5 id=\"JS-StringBuilder-用法\"><a href=\"#JS-StringBuilder-用法\" class=\"headerlink\" title=\"JS StringBuilder 用法\"></a>JS StringBuilder 用法</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">function StringBuilder() &#123;</div><div class=\"line\">    this.strings = new Array;</div><div class=\"line\">&#125;;</div><div class=\"line\">StringBuilder.prototype.append = function (str) &#123;</div><div class=\"line\">    this.strings.push(str);</div><div class=\"line\">&#125;;</div><div class=\"line\">StringBuilder.prototype.toString = function () &#123;</div><div class=\"line\">    return this.strings.join(&apos;&apos;);</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<h5 id=\"JS-加载到顶部LoadJS\"><a href=\"#JS-加载到顶部LoadJS\" class=\"headerlink\" title=\"JS 加载到顶部LoadJS\"></a>JS 加载到顶部LoadJS</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div></pre></td><td class=\"code\"><pre><div class=\"line\">function loadJS (url, fn) &#123;</div><div class=\"line\">        var ss = document.getElementsByName(&apos;script&apos;),</div><div class=\"line\">            loaded = false;</div><div class=\"line\">        for (var i = 0, len = ss.length; i &lt; len; i++) &#123;</div><div class=\"line\">            if (ss[i].src &amp;&amp; ss[i].getAttribute(&apos;src&apos;) == url) &#123;</div><div class=\"line\">                loaded = true;</div><div class=\"line\">                break;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        if (loaded) &#123;</div><div class=\"line\">            if (fn &amp;&amp; typeof fn != &apos;undefined&apos; &amp;&amp; fn instanceof Function) fn();</div><div class=\"line\">            return false;</div><div class=\"line\">        &#125;</div><div class=\"line\">        var s = document.createElement(&apos;script&apos;),</div><div class=\"line\">            b = false;</div><div class=\"line\">        s.setAttribute(&apos;type&apos;, &apos;text/javascript&apos;);</div><div class=\"line\">        s.setAttribute(&apos;src&apos;, url);</div><div class=\"line\">        s.onload = s.onreadystatechange = function () &#123;</div><div class=\"line\">            if (!b &amp;&amp; (!this.readyState || this.readyState == &apos;loaded&apos; || this.readyState == &apos;complete&apos;)) &#123;</div><div class=\"line\">                b = true;</div><div class=\"line\">                if (fn &amp;&amp; typeof fn != &apos;undefined&apos; &amp;&amp; fn instanceof Function) fn();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;;</div><div class=\"line\">        document.getElementsByTagName(&apos;head&apos;)[0].appendChild(s);</div><div class=\"line\">    &#125;,</div><div class=\"line\">    bind: function (objId, eventType, callBack) &#123;  //适用于任何浏览器的绑定</div><div class=\"line\">        var obj = document.getElementById(objId);</div><div class=\"line\">        if (obj.addEventListener) &#123;</div><div class=\"line\">            obj.addEventListener(eventType, callBack, false);</div><div class=\"line\">        &#125;</div><div class=\"line\">        else if (window.attachEvent) &#123;</div><div class=\"line\">            obj.attachEvent(&apos;on&apos; + eventType, callBack);</div><div class=\"line\">        &#125;</div><div class=\"line\">        else &#123;</div><div class=\"line\">            obj[&apos;on&apos; + eventType] = callBack;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">function JSLoad (args) &#123;</div><div class=\"line\">        s = document.createElement(&quot;script&quot;);</div><div class=\"line\">        s.setAttribute(&quot;type&quot;, &quot;text/javascript&quot;);</div><div class=\"line\">        s.setAttribute(&quot;src&quot;, args.url);</div><div class=\"line\">        s.onload = s.onreadystatechange = function () &#123;</div><div class=\"line\">            if (!s.readyState || s.readyState == &quot;loaded&quot; || s.readyState == &quot;complete&quot;) &#123;</div><div class=\"line\">                if (typeof args.callback == &quot;function&quot;) args.callback(this, args);</div><div class=\"line\">                s.onload = s.onreadystatechange = null;</div><div class=\"line\">                try &#123;</div><div class=\"line\">                    s.parentNode &amp;&amp; s.parentNode.removeChild(s);</div><div class=\"line\">                &#125; catch (e) &#123; &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;;</div><div class=\"line\">        document.getElementsByTagName(&quot;head&quot;)[0].appendChild(s);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h5 id=\"清空-LoadJS-加载到顶部的js引用\"><a href=\"#清空-LoadJS-加载到顶部的js引用\" class=\"headerlink\" title=\"清空 LoadJS 加载到顶部的js引用\"></a>清空 LoadJS 加载到顶部的js引用</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">function ClearHeadJs  (src) &#123;</div><div class=\"line\">        var js = document.getElementsByTagName(&apos;head&apos;)[0].children;</div><div class=\"line\">        var obj = null;</div><div class=\"line\">        for (var i = 0; i &lt; js.length; i++) &#123;</div><div class=\"line\">            if (js[i].tagName.toLowerCase() == &quot;script&quot; &amp;&amp; js[i].attributes[&apos;src&apos;].value.indexOf(src) &gt; 0) &#123;</div><div class=\"line\">                obj = js[i];</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        document.getElementsByTagName(&apos;head&apos;)[0].removeChild(obj);</div><div class=\"line\">    &#125;;</div></pre></td></tr></table></figure>\n<h5 id=\"JS-替换非法字符主要用在密码验证上出现的特殊字符\"><a href=\"#JS-替换非法字符主要用在密码验证上出现的特殊字符\" class=\"headerlink\" title=\"JS 替换非法字符主要用在密码验证上出现的特殊字符\"></a>JS 替换非法字符主要用在密码验证上出现的特殊字符</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">function URLencode(sStr) &#123;</div><div class=\"line\">        return escape(sStr).replace(/\\+/g, &apos;%2B&apos;).replace(/\\&quot;/g, &apos;%22&apos;).replace(/\\&apos;/g, &apos;%27&apos;).replace(/\\//g, &apos;%2F&apos;);</div><div class=\"line\">    &#125;;</div></pre></td></tr></table></figure>\n<h5 id=\"按Ctrl-Entert-直接提交表单\"><a href=\"#按Ctrl-Entert-直接提交表单\" class=\"headerlink\" title=\"按Ctrl + Entert 直接提交表单\"></a>按Ctrl + Entert 直接提交表单</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">document.body.onkeydown = function (evt) &#123;</div><div class=\"line\">        evt = evt ? evt : (window.event ? window.event : null);</div><div class=\"line\">        if (13 == evt.keyCode &amp;&amp; evt.ctrlKey) &#123;</div><div class=\"line\">            evt.returnValue = false;</div><div class=\"line\">            evt.cancel = true;</div><div class=\"line\">            PostData();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;;</div></pre></td></tr></table></figure>\n<h5 id=\"获取当前时间\"><a href=\"#获取当前时间\" class=\"headerlink\" title=\"获取当前时间\"></a>获取当前时间</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">function GetCurrentDate() &#123;</div><div class=\"line\">        var d = new Date();</div><div class=\"line\">        var y = d.getYear()+1900;</div><div class=\"line\">        month = add_zero(d.getMonth() + 1),</div><div class=\"line\">        days = add_zero(d.getDate()),</div><div class=\"line\">        hours = add_zero(d.getHours());</div><div class=\"line\">        minutes = add_zero(d.getMinutes()),</div><div class=\"line\">        seconds = add_zero(d.getSeconds());</div><div class=\"line\">        var str = y + &apos;-&apos; + month + &apos;-&apos; + days + &apos; &apos; + hours + &apos;:&apos; + minutes + &apos;:&apos; + seconds;</div><div class=\"line\">        return str;</div><div class=\"line\">    &#125;;</div><div class=\"line\">    function add_zero(temp) &#123;</div><div class=\"line\">        if (temp &lt; 10) return &quot;0&quot; + temp;</div><div class=\"line\">        else return temp;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h5 id=\"Js-去掉空格方法\"><a href=\"#Js-去掉空格方法\" class=\"headerlink\" title=\"Js 去掉空格方法\"></a>Js 去掉空格方法</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">String.prototype.Trim = function()</div><div class=\"line\">&#123; return this.replace(/(^\\s*)|(\\s*$)/g, &quot;&quot;); &#125;</div><div class=\"line\">String.prototype.LTrim = function()</div><div class=\"line\">&#123;return this.replace(/(^\\s*)/g, &quot;&quot;);&#125;</div><div class=\"line\">String.prototype.RTrim = function()</div><div class=\"line\">&#123;return this.replace(/(\\s*$)/g, &quot;&quot;);&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"js-动态移除-head-里的-js-引用\"><a href=\"#js-动态移除-head-里的-js-引用\" class=\"headerlink\" title=\"js 动态移除 head 里的 js 引用\"></a>js 动态移除 head 里的 js 引用</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">this.ClearHeadJs = function (src) &#123;</div><div class=\"line\">        var js = document.getElementsByTagName(&apos;head&apos;)[0].children;</div><div class=\"line\">        var obj = null;</div><div class=\"line\">        for (var i = 0; i &lt; js.length; i++) &#123;</div><div class=\"line\">            if (js[i].tagName.toLowerCase() == &quot;script&quot; &amp;&amp; js[i].attributes[&apos;src&apos;].value.indexOf(src) &gt; 0) &#123;</div><div class=\"line\">                obj = js[i];</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        document.getElementsByTagName(&apos;head&apos;)[0].removeChild(obj);</div><div class=\"line\">    &#125;;</div></pre></td></tr></table></figure>\n<h5 id=\"整个UL-点击事件-加在UL里的onclick里\"><a href=\"#整个UL-点击事件-加在UL里的onclick里\" class=\"headerlink\" title=\"整个UL 点击事件 加在UL里的onclick里\"></a>整个UL 点击事件 加在UL里的onclick里</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">function CreateFrom(url, params) &#123;</div><div class=\"line\">            var f = document.createElement(&quot;form&quot;);</div><div class=\"line\">            f.setAttribute(&quot;action&quot;, url);</div><div class=\"line\">            for (var i = 0; i &lt; params.length; i++) &#123;</div><div class=\"line\">                var input = document.createElement(&quot;input&quot;);</div><div class=\"line\">                input.setAttribute(&quot;type&quot;, &quot;hidden&quot;);</div><div class=\"line\">                input.setAttribute(&quot;name&quot;, params[i].paramName);</div><div class=\"line\">                input.setAttribute(&quot;value&quot;, params[i].paramValue);</div><div class=\"line\">                f.appendChild(input);</div><div class=\"line\">            &#125;</div><div class=\"line\">            f.target = &quot;_blank&quot;;</div><div class=\"line\">            document.body.appendChild(f);</div><div class=\"line\">            f.submit();</div><div class=\"line\">        &#125;;</div></pre></td></tr></table></figure>\n<h5 id=\"判断浏览器使用的是哪个-JS-版本\"><a href=\"#判断浏览器使用的是哪个-JS-版本\" class=\"headerlink\" title=\"判断浏览器使用的是哪个 JS 版本\"></a>判断浏览器使用的是哪个 JS 版本</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script language=&quot;javascript&quot;&gt;</div><div class=\"line\">      var jsversion = 1.0;</div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">    &lt;script language=&quot;javascript1.1&quot;&gt;</div><div class=\"line\">      jsversion = 1.1;</div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">    &lt;script language=&quot;javascript1.2&quot;&gt;</div><div class=\"line\">      jsversion = 1.2;</div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">    &lt;script language=&quot;javascript1.3&quot;&gt;</div><div class=\"line\">      jsversion = 1.3;</div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">    &lt;script language=&quot;javascript1.4&quot;&gt;</div><div class=\"line\">      jsversion = 1.4;</div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">    &lt;script language=&quot;javascript1.5&quot;&gt;</div><div class=\"line\">      jsversion = 1.5;</div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">    &lt;script language=&quot;javascript1.6&quot;&gt;</div><div class=\"line\">      jsversion = 1.6;</div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">    &lt;script language=&quot;javascript1.7&quot;&gt;</div><div class=\"line\">      jsversion = 1.7;</div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">    &lt;script language=&quot;javascript1.8&quot;&gt;</div><div class=\"line\">      jsversion = 1.8;</div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">    &lt;script language=&quot;javascript1.9&quot;&gt;</div><div class=\"line\">      jsversion = 1.9;</div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">    &lt;script language=&quot;javascript2.0&quot;&gt;</div><div class=\"line\">      jsversion = 2.0;</div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">alert(jsversion);</div></pre></td></tr></table></figure>\n<h5 id=\"iframe自适应高度\"><a href=\"#iframe自适应高度\" class=\"headerlink\" title=\"iframe自适应高度\"></a>iframe自适应高度</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;</div><div class=\"line\">&lt;title&gt;无标题文档&lt;/title&gt;</div><div class=\"line\">&lt;link href=&quot;mycss/main.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;</div><div class=\"line\">&lt;script type=&quot;text/javascript&quot; language=&quot;javascript&quot;&gt;</div><div class=\"line\">    function iFrameHeight() &#123;</div><div class=\"line\">        var ifm= document.getElementById(&quot;iframepage&quot;);</div><div class=\"line\">        var subWeb = document.frames ? document.frames[&quot;iframepage&quot;].document :</div><div class=\"line\">ifm.contentDocument;// 子页面  兼容不同浏览器的 前面是支持ie8+;后面支持其它浏览器</div><div class=\"line\">            if(ifm != null &amp;&amp; subWeb != null) &#123;</div><div class=\"line\">            ifm.height = subWeb.body.scrollHeight;</div><div class=\"line\">            &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">\tvar itvl=setInterval(&quot;iFrameHeight()&quot;,100);</div><div class=\"line\">\t&lt;/script&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">&lt;section id=&quot;wrapper1&quot;&gt;</div><div class=\"line\">&lt;div style=&quot;height:20px; width:100%; background-color:#F60&quot;&gt;</div><div class=\"line\">&lt;a href=&quot;com/top.html&quot; target=&quot;myi&quot;&gt;111&lt;/a&gt; &lt;a href=&quot;com/top_2.html&quot; target=&quot;myi&quot;&gt;2222&lt;/a&gt;&lt;/div&gt;</div><div class=\"line\">&lt;!--很恶心的问题：普通浏览看不到效果，在服务器下可以--&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\">&lt;!--</div><div class=\"line\">&lt;iframe name=&quot;myi&quot; src=&quot;com/top.html&quot; marginheight=&quot;0&quot; marginwidth=&quot;0&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; width=&quot;765&quot; id=&quot;iframepage&quot; name=&quot;iframepage&quot; onload=&quot;this.height=this.contentWindow.document.getElementById(&apos;top&apos;).scrollHeight&quot; &gt;&lt;/iframe&gt;</div><div class=\"line\">--&gt;</div><div class=\"line\">&lt;iframe src=&quot;com/top.html&quot; marginheight=&quot;0&quot; marginwidth=&quot;0&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; width=&quot;765&quot; id=&quot;iframepage&quot; name=&quot;iframepage&quot;&gt;&lt;/iframe&gt;</div><div class=\"line\">&lt;!-- onLoad=&quot;iFrameHeight()&quot;--&gt;</div><div class=\"line\">&lt;div style=&quot;height:20px; width:100%; background-color:#F09&quot;&gt;</div><div class=\"line\">&lt;div&gt;hello baby!@!!!!&lt;/div&gt;</div><div class=\"line\">&lt;/section&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n"},{"title":"搭建简单的nodejs服务器","_content":"通过一些简单配置我们就可以搭建一台基于nodejs的http服务器\n通过switch配置url路由的方法\n```\n// 这是一个简单的Node HTTP服务器,能处理当前目录的文件\n// 并能实现两种特殊的URL用于测试\n// 用HTTP://localhost:8000或http://127.0.0.1:8000连接这个服务器\n\n// 首先加载所有需要用到的模块\nvar http = require('http');        // 加载http服务api模块\nvar fs = require('fs');            // 加载fs文件服务api模块\nvar server = new http.Server();    // 创建新的HTTP服务器\nvar urlapi = require('url');        // 创建url路由api模块\nserver.listen(8000);              // 监听端口8000\n\n// 使用on方法注册事件处理,该事件一直被监听,任何的请求都会进入回调函数,执行相应的操作\nserver.on('request', function(request, response) { // 当有request请求的时候触发处理函数\n    // 解析请求的URL\n    var url = urlapi.parse(request.url);\n\n    //监听请求的网站,以当前脚本目录为根目录的url地址\n    console.log(url.pathname);\n\n    // 特殊URL会让服务器在发送响应前先等待\n    switch(url.pathname) {    //判断请求的路径信息\n    case ''||'/' : // 处理请求的网站根目录,指定加载对应的文件夹,一般以根目录的index.html为默认,nodejs是高效流处理的方案,也可以通过配置文件来配置\n        fs.readFile(\"./page/index.html\", function(err, content){  //打开请求的文件\n            if(err) {  //输出错误信息,也可以自定义错误信息\n                response.writeHead(404, { 'Content-Type':'text/plain; charset=\"UTF-8\"' });\n                response.write(err.message);\n                response.end();\n            } else {  //请求成功返回数据\n                response.writeHead(200, { 'Content-Type' : 'text/html; charset=UTF-8' });  //告诉相应头文件,返回数据的类型\n                response.write(content); //返回的内容,有时候还会加上buter数据类型\n                response.end();  //结束响应,不写的话,会一直处于响应状态,页面不会显示内容\n            }\n        });\n        break;\n    case '/test/delay':// 此处用于模拟缓慢的网络连接\n        // 使用查询字符串来获取延迟时长,或者2000毫秒\n        var delay = parseInt(url.query) || 2000;\n        // 设置响应状态和头\n        response.writeHead(200, {'Content-type':'text/plain; charset=UTF-8'});\n        // 立即开始编写响应主体\n        response.write('Sleeping for' + delay + ' milliseconds...');\n        // 在之后调用的另一个函数中完成响应\n        setTimeout(function(){\n            response.write('done.');\n            response.end();\n        }, delay);\n        break;\n\n    case '/test/mirror':// 如果请求是test/mirror,则原文返回它\n        // 响应状态和头\n        response.writeHead(200, {'Content-type':'text/plain; charset=UTF-8'});\n        // 用请求的内容开始编写响应主体\n        response.write(request.mothod + ' ' + request.url + ' HTTP/' + request.httpVersion + '\\r\\n');\n        // 所有的请求头\n        for (var h in request.headers) {\n            response.write(h + ':' + request.headers[h] + '\\r\\n');\n        }\n        response.write('\\r\\n');// 使用额外的空白行来结束头\n        // 在这些事件处理程序函数中完成响应\n        // 当请求主体的数据块完成时,把其写入响应中\n        request.on('data', function(chunk) { response.write(chunk); });\n        // 当请求结束时,响应也完成\n        request.on('end', function(chunk){ response.end(); });\n        break;\n\n    case '/json' : // 模拟JSON数据返回\n        // 响应状态和头\n        response.writeHead(200, {'Content-type':'application/json; charset=UTF-8'});\n        response.write(JSON.stringify({test:'success'}));\n        response.end();\n        break;\n\n    default:// 处理来自本地目录的文件,主要是一些静态资源文件,搭建静态服务器还有其他的方法\n        var filename = url.pathname.substring(1);    // 去掉前导'/'\n        var type = getType(filename.substring(filename.lastIndexOf('.')+1));\n        console.log(filename);  //取得文件类型  css   js  ....\n        // 异步读取文件,并将内容作为单独的数据模块传给回调函数\n        // 对于确实很大的文件,使用流API fs.createReadStream()更好\n        fs.readFile(filename, function(err, content){\n            if(err) {\n                response.writeHead(404, { 'Content-Type':'text/plain; charset=\"UTF-8\"' });\n                response.write(err.message);\n                response.end();\n            } else {\n                response.writeHead(200, { 'Content-Type' : type });\n                response.write(content);\n                response.end();\n            }\n        });\n        break;\n    }\n});\n\n//这里定义了一个用来判断文件类型的函数\nfunction getType(endTag){\n    var type=null;\n    switch(endTag){\n    case 'html' :\n          type = 'text/html; charset=UTF-8';\n        break;\n    case 'htm' :\n        type = 'text/html; charset=UTF-8';\n        break;\n    case 'js' :\n        type = 'application/javascript; charset=\"UTF-8\"';\n        break;\n    case 'css' :\n        type = 'text/css; charset=\"UTF-8\"';\n        break;\n    case 'txt' :\n        type = 'text/plain; charset=\"UTF-8\"';\n        break;\n    case 'manifest' :\n        type = 'text/cache-manifest; charset=\"UTF-8\"';\n        break;\n    default :\n        type = 'application/octet-stream';\n        break;\n    }\n    return type;\n}\n```\n","source":"_posts/搭建简单的nodejs服务器.md","raw":"---\ntitle: 搭建简单的nodejs服务器\ntags: [前端,node,js,服务器]\ncategories: nodejs\n---\n通过一些简单配置我们就可以搭建一台基于nodejs的http服务器\n通过switch配置url路由的方法\n```\n// 这是一个简单的Node HTTP服务器,能处理当前目录的文件\n// 并能实现两种特殊的URL用于测试\n// 用HTTP://localhost:8000或http://127.0.0.1:8000连接这个服务器\n\n// 首先加载所有需要用到的模块\nvar http = require('http');        // 加载http服务api模块\nvar fs = require('fs');            // 加载fs文件服务api模块\nvar server = new http.Server();    // 创建新的HTTP服务器\nvar urlapi = require('url');        // 创建url路由api模块\nserver.listen(8000);              // 监听端口8000\n\n// 使用on方法注册事件处理,该事件一直被监听,任何的请求都会进入回调函数,执行相应的操作\nserver.on('request', function(request, response) { // 当有request请求的时候触发处理函数\n    // 解析请求的URL\n    var url = urlapi.parse(request.url);\n\n    //监听请求的网站,以当前脚本目录为根目录的url地址\n    console.log(url.pathname);\n\n    // 特殊URL会让服务器在发送响应前先等待\n    switch(url.pathname) {    //判断请求的路径信息\n    case ''||'/' : // 处理请求的网站根目录,指定加载对应的文件夹,一般以根目录的index.html为默认,nodejs是高效流处理的方案,也可以通过配置文件来配置\n        fs.readFile(\"./page/index.html\", function(err, content){  //打开请求的文件\n            if(err) {  //输出错误信息,也可以自定义错误信息\n                response.writeHead(404, { 'Content-Type':'text/plain; charset=\"UTF-8\"' });\n                response.write(err.message);\n                response.end();\n            } else {  //请求成功返回数据\n                response.writeHead(200, { 'Content-Type' : 'text/html; charset=UTF-8' });  //告诉相应头文件,返回数据的类型\n                response.write(content); //返回的内容,有时候还会加上buter数据类型\n                response.end();  //结束响应,不写的话,会一直处于响应状态,页面不会显示内容\n            }\n        });\n        break;\n    case '/test/delay':// 此处用于模拟缓慢的网络连接\n        // 使用查询字符串来获取延迟时长,或者2000毫秒\n        var delay = parseInt(url.query) || 2000;\n        // 设置响应状态和头\n        response.writeHead(200, {'Content-type':'text/plain; charset=UTF-8'});\n        // 立即开始编写响应主体\n        response.write('Sleeping for' + delay + ' milliseconds...');\n        // 在之后调用的另一个函数中完成响应\n        setTimeout(function(){\n            response.write('done.');\n            response.end();\n        }, delay);\n        break;\n\n    case '/test/mirror':// 如果请求是test/mirror,则原文返回它\n        // 响应状态和头\n        response.writeHead(200, {'Content-type':'text/plain; charset=UTF-8'});\n        // 用请求的内容开始编写响应主体\n        response.write(request.mothod + ' ' + request.url + ' HTTP/' + request.httpVersion + '\\r\\n');\n        // 所有的请求头\n        for (var h in request.headers) {\n            response.write(h + ':' + request.headers[h] + '\\r\\n');\n        }\n        response.write('\\r\\n');// 使用额外的空白行来结束头\n        // 在这些事件处理程序函数中完成响应\n        // 当请求主体的数据块完成时,把其写入响应中\n        request.on('data', function(chunk) { response.write(chunk); });\n        // 当请求结束时,响应也完成\n        request.on('end', function(chunk){ response.end(); });\n        break;\n\n    case '/json' : // 模拟JSON数据返回\n        // 响应状态和头\n        response.writeHead(200, {'Content-type':'application/json; charset=UTF-8'});\n        response.write(JSON.stringify({test:'success'}));\n        response.end();\n        break;\n\n    default:// 处理来自本地目录的文件,主要是一些静态资源文件,搭建静态服务器还有其他的方法\n        var filename = url.pathname.substring(1);    // 去掉前导'/'\n        var type = getType(filename.substring(filename.lastIndexOf('.')+1));\n        console.log(filename);  //取得文件类型  css   js  ....\n        // 异步读取文件,并将内容作为单独的数据模块传给回调函数\n        // 对于确实很大的文件,使用流API fs.createReadStream()更好\n        fs.readFile(filename, function(err, content){\n            if(err) {\n                response.writeHead(404, { 'Content-Type':'text/plain; charset=\"UTF-8\"' });\n                response.write(err.message);\n                response.end();\n            } else {\n                response.writeHead(200, { 'Content-Type' : type });\n                response.write(content);\n                response.end();\n            }\n        });\n        break;\n    }\n});\n\n//这里定义了一个用来判断文件类型的函数\nfunction getType(endTag){\n    var type=null;\n    switch(endTag){\n    case 'html' :\n          type = 'text/html; charset=UTF-8';\n        break;\n    case 'htm' :\n        type = 'text/html; charset=UTF-8';\n        break;\n    case 'js' :\n        type = 'application/javascript; charset=\"UTF-8\"';\n        break;\n    case 'css' :\n        type = 'text/css; charset=\"UTF-8\"';\n        break;\n    case 'txt' :\n        type = 'text/plain; charset=\"UTF-8\"';\n        break;\n    case 'manifest' :\n        type = 'text/cache-manifest; charset=\"UTF-8\"';\n        break;\n    default :\n        type = 'application/octet-stream';\n        break;\n    }\n    return type;\n}\n```\n","slug":"搭建简单的nodejs服务器","published":1,"date":"2017-05-23T00:28:58.049Z","updated":"2017-05-25T01:00:43.922Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmtsx001x4wvsnj36wiuk","content":"<p>通过一些简单配置我们就可以搭建一台基于nodejs的http服务器<br>通过switch配置url路由的方法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 这是一个简单的Node HTTP服务器,能处理当前目录的文件</div><div class=\"line\">// 并能实现两种特殊的URL用于测试</div><div class=\"line\">// 用HTTP://localhost:8000或http://127.0.0.1:8000连接这个服务器</div><div class=\"line\"></div><div class=\"line\">// 首先加载所有需要用到的模块</div><div class=\"line\">var http = require(&apos;http&apos;);        // 加载http服务api模块</div><div class=\"line\">var fs = require(&apos;fs&apos;);            // 加载fs文件服务api模块</div><div class=\"line\">var server = new http.Server();    // 创建新的HTTP服务器</div><div class=\"line\">var urlapi = require(&apos;url&apos;);        // 创建url路由api模块</div><div class=\"line\">server.listen(8000);              // 监听端口8000</div><div class=\"line\"></div><div class=\"line\">// 使用on方法注册事件处理,该事件一直被监听,任何的请求都会进入回调函数,执行相应的操作</div><div class=\"line\">server.on(&apos;request&apos;, function(request, response) &#123; // 当有request请求的时候触发处理函数</div><div class=\"line\">    // 解析请求的URL</div><div class=\"line\">    var url = urlapi.parse(request.url);</div><div class=\"line\"></div><div class=\"line\">    //监听请求的网站,以当前脚本目录为根目录的url地址</div><div class=\"line\">    console.log(url.pathname);</div><div class=\"line\"></div><div class=\"line\">    // 特殊URL会让服务器在发送响应前先等待</div><div class=\"line\">    switch(url.pathname) &#123;    //判断请求的路径信息</div><div class=\"line\">    case &apos;&apos;||&apos;/&apos; : // 处理请求的网站根目录,指定加载对应的文件夹,一般以根目录的index.html为默认,nodejs是高效流处理的方案,也可以通过配置文件来配置</div><div class=\"line\">        fs.readFile(&quot;./page/index.html&quot;, function(err, content)&#123;  //打开请求的文件</div><div class=\"line\">            if(err) &#123;  //输出错误信息,也可以自定义错误信息</div><div class=\"line\">                response.writeHead(404, &#123; &apos;Content-Type&apos;:&apos;text/plain; charset=&quot;UTF-8&quot;&apos; &#125;);</div><div class=\"line\">                response.write(err.message);</div><div class=\"line\">                response.end();</div><div class=\"line\">            &#125; else &#123;  //请求成功返回数据</div><div class=\"line\">                response.writeHead(200, &#123; &apos;Content-Type&apos; : &apos;text/html; charset=UTF-8&apos; &#125;);  //告诉相应头文件,返回数据的类型</div><div class=\"line\">                response.write(content); //返回的内容,有时候还会加上buter数据类型</div><div class=\"line\">                response.end();  //结束响应,不写的话,会一直处于响应状态,页面不会显示内容</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">        break;</div><div class=\"line\">    case &apos;/test/delay&apos;:// 此处用于模拟缓慢的网络连接</div><div class=\"line\">        // 使用查询字符串来获取延迟时长,或者2000毫秒</div><div class=\"line\">        var delay = parseInt(url.query) || 2000;</div><div class=\"line\">        // 设置响应状态和头</div><div class=\"line\">        response.writeHead(200, &#123;&apos;Content-type&apos;:&apos;text/plain; charset=UTF-8&apos;&#125;);</div><div class=\"line\">        // 立即开始编写响应主体</div><div class=\"line\">        response.write(&apos;Sleeping for&apos; + delay + &apos; milliseconds...&apos;);</div><div class=\"line\">        // 在之后调用的另一个函数中完成响应</div><div class=\"line\">        setTimeout(function()&#123;</div><div class=\"line\">            response.write(&apos;done.&apos;);</div><div class=\"line\">            response.end();</div><div class=\"line\">        &#125;, delay);</div><div class=\"line\">        break;</div><div class=\"line\"></div><div class=\"line\">    case &apos;/test/mirror&apos;:// 如果请求是test/mirror,则原文返回它</div><div class=\"line\">        // 响应状态和头</div><div class=\"line\">        response.writeHead(200, &#123;&apos;Content-type&apos;:&apos;text/plain; charset=UTF-8&apos;&#125;);</div><div class=\"line\">        // 用请求的内容开始编写响应主体</div><div class=\"line\">        response.write(request.mothod + &apos; &apos; + request.url + &apos; HTTP/&apos; + request.httpVersion + &apos;\\r\\n&apos;);</div><div class=\"line\">        // 所有的请求头</div><div class=\"line\">        for (var h in request.headers) &#123;</div><div class=\"line\">            response.write(h + &apos;:&apos; + request.headers[h] + &apos;\\r\\n&apos;);</div><div class=\"line\">        &#125;</div><div class=\"line\">        response.write(&apos;\\r\\n&apos;);// 使用额外的空白行来结束头</div><div class=\"line\">        // 在这些事件处理程序函数中完成响应</div><div class=\"line\">        // 当请求主体的数据块完成时,把其写入响应中</div><div class=\"line\">        request.on(&apos;data&apos;, function(chunk) &#123; response.write(chunk); &#125;);</div><div class=\"line\">        // 当请求结束时,响应也完成</div><div class=\"line\">        request.on(&apos;end&apos;, function(chunk)&#123; response.end(); &#125;);</div><div class=\"line\">        break;</div><div class=\"line\"></div><div class=\"line\">    case &apos;/json&apos; : // 模拟JSON数据返回</div><div class=\"line\">        // 响应状态和头</div><div class=\"line\">        response.writeHead(200, &#123;&apos;Content-type&apos;:&apos;application/json; charset=UTF-8&apos;&#125;);</div><div class=\"line\">        response.write(JSON.stringify(&#123;test:&apos;success&apos;&#125;));</div><div class=\"line\">        response.end();</div><div class=\"line\">        break;</div><div class=\"line\"></div><div class=\"line\">    default:// 处理来自本地目录的文件,主要是一些静态资源文件,搭建静态服务器还有其他的方法</div><div class=\"line\">        var filename = url.pathname.substring(1);    // 去掉前导&apos;/&apos;</div><div class=\"line\">        var type = getType(filename.substring(filename.lastIndexOf(&apos;.&apos;)+1));</div><div class=\"line\">        console.log(filename);  //取得文件类型  css   js  ....</div><div class=\"line\">        // 异步读取文件,并将内容作为单独的数据模块传给回调函数</div><div class=\"line\">        // 对于确实很大的文件,使用流API fs.createReadStream()更好</div><div class=\"line\">        fs.readFile(filename, function(err, content)&#123;</div><div class=\"line\">            if(err) &#123;</div><div class=\"line\">                response.writeHead(404, &#123; &apos;Content-Type&apos;:&apos;text/plain; charset=&quot;UTF-8&quot;&apos; &#125;);</div><div class=\"line\">                response.write(err.message);</div><div class=\"line\">                response.end();</div><div class=\"line\">            &#125; else &#123;</div><div class=\"line\">                response.writeHead(200, &#123; &apos;Content-Type&apos; : type &#125;);</div><div class=\"line\">                response.write(content);</div><div class=\"line\">                response.end();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">        break;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">//这里定义了一个用来判断文件类型的函数</div><div class=\"line\">function getType(endTag)&#123;</div><div class=\"line\">    var type=null;</div><div class=\"line\">    switch(endTag)&#123;</div><div class=\"line\">    case &apos;html&apos; :</div><div class=\"line\">          type = &apos;text/html; charset=UTF-8&apos;;</div><div class=\"line\">        break;</div><div class=\"line\">    case &apos;htm&apos; :</div><div class=\"line\">        type = &apos;text/html; charset=UTF-8&apos;;</div><div class=\"line\">        break;</div><div class=\"line\">    case &apos;js&apos; :</div><div class=\"line\">        type = &apos;application/javascript; charset=&quot;UTF-8&quot;&apos;;</div><div class=\"line\">        break;</div><div class=\"line\">    case &apos;css&apos; :</div><div class=\"line\">        type = &apos;text/css; charset=&quot;UTF-8&quot;&apos;;</div><div class=\"line\">        break;</div><div class=\"line\">    case &apos;txt&apos; :</div><div class=\"line\">        type = &apos;text/plain; charset=&quot;UTF-8&quot;&apos;;</div><div class=\"line\">        break;</div><div class=\"line\">    case &apos;manifest&apos; :</div><div class=\"line\">        type = &apos;text/cache-manifest; charset=&quot;UTF-8&quot;&apos;;</div><div class=\"line\">        break;</div><div class=\"line\">    default :</div><div class=\"line\">        type = &apos;application/octet-stream&apos;;</div><div class=\"line\">        break;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return type;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>通过一些简单配置我们就可以搭建一台基于nodejs的http服务器<br>通过switch配置url路由的方法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 这是一个简单的Node HTTP服务器,能处理当前目录的文件</div><div class=\"line\">// 并能实现两种特殊的URL用于测试</div><div class=\"line\">// 用HTTP://localhost:8000或http://127.0.0.1:8000连接这个服务器</div><div class=\"line\"></div><div class=\"line\">// 首先加载所有需要用到的模块</div><div class=\"line\">var http = require(&apos;http&apos;);        // 加载http服务api模块</div><div class=\"line\">var fs = require(&apos;fs&apos;);            // 加载fs文件服务api模块</div><div class=\"line\">var server = new http.Server();    // 创建新的HTTP服务器</div><div class=\"line\">var urlapi = require(&apos;url&apos;);        // 创建url路由api模块</div><div class=\"line\">server.listen(8000);              // 监听端口8000</div><div class=\"line\"></div><div class=\"line\">// 使用on方法注册事件处理,该事件一直被监听,任何的请求都会进入回调函数,执行相应的操作</div><div class=\"line\">server.on(&apos;request&apos;, function(request, response) &#123; // 当有request请求的时候触发处理函数</div><div class=\"line\">    // 解析请求的URL</div><div class=\"line\">    var url = urlapi.parse(request.url);</div><div class=\"line\"></div><div class=\"line\">    //监听请求的网站,以当前脚本目录为根目录的url地址</div><div class=\"line\">    console.log(url.pathname);</div><div class=\"line\"></div><div class=\"line\">    // 特殊URL会让服务器在发送响应前先等待</div><div class=\"line\">    switch(url.pathname) &#123;    //判断请求的路径信息</div><div class=\"line\">    case &apos;&apos;||&apos;/&apos; : // 处理请求的网站根目录,指定加载对应的文件夹,一般以根目录的index.html为默认,nodejs是高效流处理的方案,也可以通过配置文件来配置</div><div class=\"line\">        fs.readFile(&quot;./page/index.html&quot;, function(err, content)&#123;  //打开请求的文件</div><div class=\"line\">            if(err) &#123;  //输出错误信息,也可以自定义错误信息</div><div class=\"line\">                response.writeHead(404, &#123; &apos;Content-Type&apos;:&apos;text/plain; charset=&quot;UTF-8&quot;&apos; &#125;);</div><div class=\"line\">                response.write(err.message);</div><div class=\"line\">                response.end();</div><div class=\"line\">            &#125; else &#123;  //请求成功返回数据</div><div class=\"line\">                response.writeHead(200, &#123; &apos;Content-Type&apos; : &apos;text/html; charset=UTF-8&apos; &#125;);  //告诉相应头文件,返回数据的类型</div><div class=\"line\">                response.write(content); //返回的内容,有时候还会加上buter数据类型</div><div class=\"line\">                response.end();  //结束响应,不写的话,会一直处于响应状态,页面不会显示内容</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">        break;</div><div class=\"line\">    case &apos;/test/delay&apos;:// 此处用于模拟缓慢的网络连接</div><div class=\"line\">        // 使用查询字符串来获取延迟时长,或者2000毫秒</div><div class=\"line\">        var delay = parseInt(url.query) || 2000;</div><div class=\"line\">        // 设置响应状态和头</div><div class=\"line\">        response.writeHead(200, &#123;&apos;Content-type&apos;:&apos;text/plain; charset=UTF-8&apos;&#125;);</div><div class=\"line\">        // 立即开始编写响应主体</div><div class=\"line\">        response.write(&apos;Sleeping for&apos; + delay + &apos; milliseconds...&apos;);</div><div class=\"line\">        // 在之后调用的另一个函数中完成响应</div><div class=\"line\">        setTimeout(function()&#123;</div><div class=\"line\">            response.write(&apos;done.&apos;);</div><div class=\"line\">            response.end();</div><div class=\"line\">        &#125;, delay);</div><div class=\"line\">        break;</div><div class=\"line\"></div><div class=\"line\">    case &apos;/test/mirror&apos;:// 如果请求是test/mirror,则原文返回它</div><div class=\"line\">        // 响应状态和头</div><div class=\"line\">        response.writeHead(200, &#123;&apos;Content-type&apos;:&apos;text/plain; charset=UTF-8&apos;&#125;);</div><div class=\"line\">        // 用请求的内容开始编写响应主体</div><div class=\"line\">        response.write(request.mothod + &apos; &apos; + request.url + &apos; HTTP/&apos; + request.httpVersion + &apos;\\r\\n&apos;);</div><div class=\"line\">        // 所有的请求头</div><div class=\"line\">        for (var h in request.headers) &#123;</div><div class=\"line\">            response.write(h + &apos;:&apos; + request.headers[h] + &apos;\\r\\n&apos;);</div><div class=\"line\">        &#125;</div><div class=\"line\">        response.write(&apos;\\r\\n&apos;);// 使用额外的空白行来结束头</div><div class=\"line\">        // 在这些事件处理程序函数中完成响应</div><div class=\"line\">        // 当请求主体的数据块完成时,把其写入响应中</div><div class=\"line\">        request.on(&apos;data&apos;, function(chunk) &#123; response.write(chunk); &#125;);</div><div class=\"line\">        // 当请求结束时,响应也完成</div><div class=\"line\">        request.on(&apos;end&apos;, function(chunk)&#123; response.end(); &#125;);</div><div class=\"line\">        break;</div><div class=\"line\"></div><div class=\"line\">    case &apos;/json&apos; : // 模拟JSON数据返回</div><div class=\"line\">        // 响应状态和头</div><div class=\"line\">        response.writeHead(200, &#123;&apos;Content-type&apos;:&apos;application/json; charset=UTF-8&apos;&#125;);</div><div class=\"line\">        response.write(JSON.stringify(&#123;test:&apos;success&apos;&#125;));</div><div class=\"line\">        response.end();</div><div class=\"line\">        break;</div><div class=\"line\"></div><div class=\"line\">    default:// 处理来自本地目录的文件,主要是一些静态资源文件,搭建静态服务器还有其他的方法</div><div class=\"line\">        var filename = url.pathname.substring(1);    // 去掉前导&apos;/&apos;</div><div class=\"line\">        var type = getType(filename.substring(filename.lastIndexOf(&apos;.&apos;)+1));</div><div class=\"line\">        console.log(filename);  //取得文件类型  css   js  ....</div><div class=\"line\">        // 异步读取文件,并将内容作为单独的数据模块传给回调函数</div><div class=\"line\">        // 对于确实很大的文件,使用流API fs.createReadStream()更好</div><div class=\"line\">        fs.readFile(filename, function(err, content)&#123;</div><div class=\"line\">            if(err) &#123;</div><div class=\"line\">                response.writeHead(404, &#123; &apos;Content-Type&apos;:&apos;text/plain; charset=&quot;UTF-8&quot;&apos; &#125;);</div><div class=\"line\">                response.write(err.message);</div><div class=\"line\">                response.end();</div><div class=\"line\">            &#125; else &#123;</div><div class=\"line\">                response.writeHead(200, &#123; &apos;Content-Type&apos; : type &#125;);</div><div class=\"line\">                response.write(content);</div><div class=\"line\">                response.end();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">        break;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">//这里定义了一个用来判断文件类型的函数</div><div class=\"line\">function getType(endTag)&#123;</div><div class=\"line\">    var type=null;</div><div class=\"line\">    switch(endTag)&#123;</div><div class=\"line\">    case &apos;html&apos; :</div><div class=\"line\">          type = &apos;text/html; charset=UTF-8&apos;;</div><div class=\"line\">        break;</div><div class=\"line\">    case &apos;htm&apos; :</div><div class=\"line\">        type = &apos;text/html; charset=UTF-8&apos;;</div><div class=\"line\">        break;</div><div class=\"line\">    case &apos;js&apos; :</div><div class=\"line\">        type = &apos;application/javascript; charset=&quot;UTF-8&quot;&apos;;</div><div class=\"line\">        break;</div><div class=\"line\">    case &apos;css&apos; :</div><div class=\"line\">        type = &apos;text/css; charset=&quot;UTF-8&quot;&apos;;</div><div class=\"line\">        break;</div><div class=\"line\">    case &apos;txt&apos; :</div><div class=\"line\">        type = &apos;text/plain; charset=&quot;UTF-8&quot;&apos;;</div><div class=\"line\">        break;</div><div class=\"line\">    case &apos;manifest&apos; :</div><div class=\"line\">        type = &apos;text/cache-manifest; charset=&quot;UTF-8&quot;&apos;;</div><div class=\"line\">        break;</div><div class=\"line\">    default :</div><div class=\"line\">        type = &apos;application/octet-stream&apos;;</div><div class=\"line\">        break;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return type;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"树莓派实现文字转语音","_content":"# [树莓派3-语音-实现文字转语音服务]\n\n**实现文字转语音服务**\n\n**说明**\n\n- 实现文字通过语音读出来\n\n**方法**\n\n**1. Festival Text to Speech**\n\n```\nsudo apt-get install festival\necho “Just what do you think you're doing, Dave?” | festival --tts\nspeak RPi’s IP address:\nhostname -I | festival -tts\n\n```\n\n**2. Espeak Text to Speech**\n\n```\nsudo apt-get install espeak\nespeak -ven+f3 -k5 -s150 \"I've just picked up a fault in the AE35 unit\"\n\n```\n\n**3. Google Text to Speech**\n\n```\nsudo nano /etc/mplayer/mplayer.conf\n\n```\n\n添加一行\n\n```\nnolirc=yes\n\n```\n\n创建 speech.sh 脚本\n\n```\nnano speech.sh\n\n```\n\n脚本内容\n\n```\n#!/bin/bash\nsay() { local IFS=+;/usr/bin/mplayer -ao alsa -really-quiet -noconsolecontrols \"http://translate.google.com/translate_tts?tl=en&q=$*\"; }\nsay $*\n\n```\n\n脚本授权，执行脚本\n\n```\nchmod u+x speech.sh\n./speech.sh Look Dave, I can see you're really upset about this.\n```\n","source":"_posts/树莓派3-语音-实现文字转语音服务.md","raw":"---\ntitle: 树莓派实现文字转语音\ntags: [树莓派,物联网,linux]\ncategories: raspberry pi\n---\n# [树莓派3-语音-实现文字转语音服务]\n\n**实现文字转语音服务**\n\n**说明**\n\n- 实现文字通过语音读出来\n\n**方法**\n\n**1. Festival Text to Speech**\n\n```\nsudo apt-get install festival\necho “Just what do you think you're doing, Dave?” | festival --tts\nspeak RPi’s IP address:\nhostname -I | festival -tts\n\n```\n\n**2. Espeak Text to Speech**\n\n```\nsudo apt-get install espeak\nespeak -ven+f3 -k5 -s150 \"I've just picked up a fault in the AE35 unit\"\n\n```\n\n**3. Google Text to Speech**\n\n```\nsudo nano /etc/mplayer/mplayer.conf\n\n```\n\n添加一行\n\n```\nnolirc=yes\n\n```\n\n创建 speech.sh 脚本\n\n```\nnano speech.sh\n\n```\n\n脚本内容\n\n```\n#!/bin/bash\nsay() { local IFS=+;/usr/bin/mplayer -ao alsa -really-quiet -noconsolecontrols \"http://translate.google.com/translate_tts?tl=en&q=$*\"; }\nsay $*\n\n```\n\n脚本授权，执行脚本\n\n```\nchmod u+x speech.sh\n./speech.sh Look Dave, I can see you're really upset about this.\n```\n","slug":"树莓派3-语音-实现文字转语音服务","published":1,"date":"2017-05-22T05:03:19.695Z","updated":"2017-05-25T01:01:19.152Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmtsx00214wvs6wt7y2tl","content":"<h1 id=\"树莓派3-语音-实现文字转语音服务\"><a href=\"#树莓派3-语音-实现文字转语音服务\" class=\"headerlink\" title=\"[树莓派3-语音-实现文字转语音服务]\"></a>[树莓派3-语音-实现文字转语音服务]</h1><p><strong>实现文字转语音服务</strong></p>\n<p><strong>说明</strong></p>\n<ul>\n<li>实现文字通过语音读出来</li>\n</ul>\n<p><strong>方法</strong></p>\n<p><strong>1. Festival Text to Speech</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install festival</div><div class=\"line\">echo “Just what do you think you&apos;re doing, Dave?” | festival --tts</div><div class=\"line\">speak RPi’s IP address:</div><div class=\"line\">hostname -I | festival -tts</div></pre></td></tr></table></figure>\n<p><strong>2. Espeak Text to Speech</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install espeak</div><div class=\"line\">espeak -ven+f3 -k5 -s150 &quot;I&apos;ve just picked up a fault in the AE35 unit&quot;</div></pre></td></tr></table></figure>\n<p><strong>3. Google Text to Speech</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/mplayer/mplayer.conf</div></pre></td></tr></table></figure>\n<p>添加一行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nolirc=yes</div></pre></td></tr></table></figure>\n<p>创建 speech.sh 脚本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nano speech.sh</div></pre></td></tr></table></figure>\n<p>脚本内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/bin/bash</div><div class=\"line\">say() &#123; local IFS=+;/usr/bin/mplayer -ao alsa -really-quiet -noconsolecontrols &quot;http://translate.google.com/translate_tts?tl=en&amp;q=$*&quot;; &#125;</div><div class=\"line\">say $*</div></pre></td></tr></table></figure>\n<p>脚本授权，执行脚本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod u+x speech.sh</div><div class=\"line\">./speech.sh Look Dave, I can see you&apos;re really upset about this.</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"树莓派3-语音-实现文字转语音服务\"><a href=\"#树莓派3-语音-实现文字转语音服务\" class=\"headerlink\" title=\"[树莓派3-语音-实现文字转语音服务]\"></a>[树莓派3-语音-实现文字转语音服务]</h1><p><strong>实现文字转语音服务</strong></p>\n<p><strong>说明</strong></p>\n<ul>\n<li>实现文字通过语音读出来</li>\n</ul>\n<p><strong>方法</strong></p>\n<p><strong>1. Festival Text to Speech</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install festival</div><div class=\"line\">echo “Just what do you think you&apos;re doing, Dave?” | festival --tts</div><div class=\"line\">speak RPi’s IP address:</div><div class=\"line\">hostname -I | festival -tts</div></pre></td></tr></table></figure>\n<p><strong>2. Espeak Text to Speech</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install espeak</div><div class=\"line\">espeak -ven+f3 -k5 -s150 &quot;I&apos;ve just picked up a fault in the AE35 unit&quot;</div></pre></td></tr></table></figure>\n<p><strong>3. Google Text to Speech</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/mplayer/mplayer.conf</div></pre></td></tr></table></figure>\n<p>添加一行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nolirc=yes</div></pre></td></tr></table></figure>\n<p>创建 speech.sh 脚本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nano speech.sh</div></pre></td></tr></table></figure>\n<p>脚本内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/bin/bash</div><div class=\"line\">say() &#123; local IFS=+;/usr/bin/mplayer -ao alsa -really-quiet -noconsolecontrols &quot;http://translate.google.com/translate_tts?tl=en&amp;q=$*&quot;; &#125;</div><div class=\"line\">say $*</div></pre></td></tr></table></figure>\n<p>脚本授权，执行脚本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod u+x speech.sh</div><div class=\"line\">./speech.sh Look Dave, I can see you&apos;re really upset about this.</div></pre></td></tr></table></figure>\n"},{"title":"树莓派常用设置","_content":"## 开启root账号\n\n为了方便折腾，第一时间启用 ROOT 账号\n\n# 设置 root 账号的密码，会让你输入两次新密码 \n\nsudo passwd root\n\n# 启用 root 账号登录 \n\nsudo passwd --unlock root\n\n# 进入root账户\n\nsu root\n\n# 修改ssh配置\n\nnano /etc/ssh/sshd_config\n\n修改 PermitRootLogin without-password 为 PermitRootLogin yes，crtl+o保存，ctrl+x关闭。\n\n# 保存后重启\n\nreboot\n\n# 重新打开putty，输入用户名root和密码\n\nroot\n\n登陆完毕\n\n## 扩展可用空间\n\n镜像只占了一部分，还有tf卡还有很多剩余空间没有利用。\n\n\\# 进入配置面板\nsudo raspi-config\n选第1项 Expand Filesystem\n\\# 扩展后重启 reboot ,扩展后可以通过命令查看SD卡的可用空间\ndf -h\n![](/images/raspberry-ros-config.png)\n## 更改时区\n\n\\# 进入配置面板\nsudo raspi-config\n选第5项 Internationalisation Options\n选第2项 Change Timezone\n选择 Asia\n选择 Shanghai\n\n# 接桌面\n\n## 自带桌面\n\n因为之前下载的是自带桌面的系统，所以没什么可说的，很简单。安装下面两个软件就行。\n\nsudo apt-get install tightvncserver\nsudo apt-get install xrdp\n\n如果提示Unable……apt-get update……之类的，就更新一下。\n\napt-get update\n\n然后再执行之前的那两条指令\n\n安装完成后，就可以用windows自带的远程桌面工具，连接进入树莓派桌面\n\n## i3桌面（用不到）\n\n官方系统是有自带桌面的，不用装这个，这个是是我自己折腾玩的，只做记录用。\n\n\\# 如果下载的是精简版系统，是没有桌面的，最好装个i3之类的桌面\n\\#（安装之后Alt+1等数字切换界面，Alt+Enter新建界面，Alt+Shift+Q关闭界面）\napt-get install x-window-system-core\napt-get install i3\nmkdir ~/.i3\nnano ~/.i3/config\n\\# 粘贴内容如下（等号线以内的部分）这个是配置文件是网上找来的备份记录一下：\n\n```\n# This file has been auto-generated by i3-config-wizard(1).\n# It will not be overwritten, so edit it as you like.\n#\n# Should you change your keyboard layout somewhen, delete\n# this file and re-run i3-config-wizard(1).\n#\n\n# i3 config file (v4)\n#\n# Please see http://i3wm.org/docs/userguide.html for a complete reference!\n\nset $mod Mod1\n\n# Font for window titles. Will also be used by the bar unless a different font\n# is used in the bar {} block below. ISO 10646 = Unicode\n#font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1\n#font -wenquanyi-wenquanyi bitmap song-medium-r-normal--12-120-75-75-p-119-iso10646-1\nfont xft:monaco 10\n# The font above is very space-efficient, that is, it looks good, sharp and\n# clear in small sizes. However, if you need a lot of unicode glyphs or\n# right-to-left text rendering, you should instead use pango for rendering and\n# chose a FreeType font, such as:\n# font pango:DejaVu Sans Mono 10\n\n# Use Mouse+$mod to drag floating windows to their wanted position\nfloating_modifier $mod\n\n# 自定义\nbindsym $mode+m exec emacs\n# 无边框：$mod+u\n# 普通模式：$mod+t\nbindsym $mod+t border normal\nbindsym $mod+u border none\n# 自动把打开的程序放到指定工作区\nassign [class=\"(?i)firefox\"] → 1\nassign [class=\"(?i)emacs\"] → 2\nassign [class=\"(?i)amule\"] → 3\n\n# 暂存器使用\n# mod shift -  隐藏当前窗口\n# mod -\t       现实第一个暂存的窗口\nbindsym $mod+Shift+minus move scratchpad\nbindsym $mod+minus scratchpad show\n\n# start a terminal\nbindsym $mod+Return exec i3-sensible-terminal\n\n# kill focused window\nbindsym $mod+Shift+q kill\n\n# start dmenu (a program launcher)\nbindsym $mod+d exec dmenu_run\n# There also is the (new) i3-dmenu-desktop which only displays applications\n# shipping a .desktop file. It is a wrapper around dmenu, so you need that\n# installed.\n# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop\n\n# change focus\nbindsym $mod+j focus left\nbindsym $mod+k focus down\nbindsym $mod+l focus up\nbindsym $mod+semicolon focus right\n\n# alternatively, you can use the cursor keys:\nbindsym $mod+Left focus left\nbindsym $mod+Down focus down\nbindsym $mod+Up focus up\nbindsym $mod+Right focus right\n\n# move focused window\nbindsym $mod+Shift+j move left\nbindsym $mod+Shift+k move down\nbindsym $mod+Shift+l move up\nbindsym $mod+Shift+semicolon move right\n\n# alternatively, you can use the cursor keys:\nbindsym $mod+Shift+Left move left\nbindsym $mod+Shift+Down move down\nbindsym $mod+Shift+Up move up\nbindsym $mod+Shift+Right move right\n\n# split in horizontal orientation\nbindsym $mod+h split h\n\n# split in vertical orientation\nbindsym $mod+v split v\n\n# enter fullscreen mode for the focused container\nbindsym $mod+f fullscreen\n\n# change container layout (stacked, tabbed, toggle split)\nbindsym $mod+s layout stacking\nbindsym $mod+w layout tabbed\nbindsym $mod+e layout toggle split\n\n# toggle tiling / floating\nbindsym $mod+Shift+space floating toggle\n\n# change focus between tiling / floating windows\nbindsym $mod+space focus mode_toggle\n\n# focus the parent container\nbindsym $mod+a focus parent\n\n# focus the child container\n#bindsym $mod+d focus child\n\n# switch to workspace\nbindsym $mod+1 workspace 1\nbindsym $mod+2 workspace 2\nbindsym $mod+3 workspace 3\nbindsym $mod+4 workspace 4\nbindsym $mod+5 workspace 5\nbindsym $mod+6 workspace 6\nbindsym $mod+7 workspace 7\nbindsym $mod+8 workspace 8\nbindsym $mod+9 workspace 9\nbindsym $mod+0 workspace 10\n\n# move focused container to workspace\nbindsym $mod+Shift+1 move container to workspace 1\nbindsym $mod+Shift+2 move container to workspace 2\nbindsym $mod+Shift+3 move container to workspace 3\nbindsym $mod+Shift+4 move container to workspace 4\nbindsym $mod+Shift+5 move container to workspace 5\nbindsym $mod+Shift+6 move container to workspace 6\nbindsym $mod+Shift+7 move container to workspace 7\nbindsym $mod+Shift+8 move container to workspace 8\nbindsym $mod+Shift+9 move container to workspace 9\nbindsym $mod+Shift+0 move container to workspace 10\n\n# reload the configuration file\nbindsym $mod+Shift+c reload\n# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)\nbindsym $mod+Shift+r restart\n# exit i3 (logs you out of your X session)\nbindsym $mod+Shift+e exec \"i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'\"\n\n# resize window (you can also use the mouse for that)\nmode \"resize\" {\n        # These bindings trigger as soon as you enter the resize mode\n\n        # Pressing left will shrink the window’s width.\n        # Pressing right will grow the window’s width.\n        # Pressing up will shrink the window’s height.\n        # Pressing down will grow the window’s height.\n        bindsym j resize shrink width 10 px or 10 ppt\n        bindsym k resize grow height 10 px or 10 ppt\n        bindsym l resize shrink height 10 px or 10 ppt\n        bindsym semicolon resize grow width 10 px or 10 ppt\n\n        # same bindings, but for the arrow keys\n        bindsym Left resize shrink width 10 px or 10 ppt\n        bindsym Down resize grow height 10 px or 10 ppt\n        bindsym Up resize shrink height 10 px or 10 ppt\n        bindsym Right resize grow width 10 px or 10 ppt\n\n        # back to normal: Enter or Escape\n        bindsym Return mode \"default\"\n        bindsym Escape mode \"default\"\n}\n\nbindsym $mod+r mode \"resize\"\n\n# Startups #\nexec --no-startup-id fcitx\nexec --no-startup-id volumeicon\n\n# Start i3bar to display a workspace bar (plus the system information i3status\n# finds out, if available)\nbar {\n\tposition top\n        status_command conky -c ~/.conkyrc\n    colors {\n        background #555555\n        statusline #ffffff\n        focused_workspace  #4c7899 #285577 #ffffff\n        active_workspace   #333333 #5f676a #ffffff\n        inactive_workspace #333333 #222222 #888888\n        urgent_workspace   #2f343a #900000 #ffffff\n    }\n\n}\n\n```\n\n装i3还可以装系统运行监视工具conky，很不错\n\napt-get install conky\n","source":"_posts/树莓派常用设置.md","raw":"---\ntitle: 树莓派常用设置\ntags: [树莓派,物联网,linux]\ncategories: raspberry pi\n---\n## 开启root账号\n\n为了方便折腾，第一时间启用 ROOT 账号\n\n# 设置 root 账号的密码，会让你输入两次新密码 \n\nsudo passwd root\n\n# 启用 root 账号登录 \n\nsudo passwd --unlock root\n\n# 进入root账户\n\nsu root\n\n# 修改ssh配置\n\nnano /etc/ssh/sshd_config\n\n修改 PermitRootLogin without-password 为 PermitRootLogin yes，crtl+o保存，ctrl+x关闭。\n\n# 保存后重启\n\nreboot\n\n# 重新打开putty，输入用户名root和密码\n\nroot\n\n登陆完毕\n\n## 扩展可用空间\n\n镜像只占了一部分，还有tf卡还有很多剩余空间没有利用。\n\n\\# 进入配置面板\nsudo raspi-config\n选第1项 Expand Filesystem\n\\# 扩展后重启 reboot ,扩展后可以通过命令查看SD卡的可用空间\ndf -h\n![](/images/raspberry-ros-config.png)\n## 更改时区\n\n\\# 进入配置面板\nsudo raspi-config\n选第5项 Internationalisation Options\n选第2项 Change Timezone\n选择 Asia\n选择 Shanghai\n\n# 接桌面\n\n## 自带桌面\n\n因为之前下载的是自带桌面的系统，所以没什么可说的，很简单。安装下面两个软件就行。\n\nsudo apt-get install tightvncserver\nsudo apt-get install xrdp\n\n如果提示Unable……apt-get update……之类的，就更新一下。\n\napt-get update\n\n然后再执行之前的那两条指令\n\n安装完成后，就可以用windows自带的远程桌面工具，连接进入树莓派桌面\n\n## i3桌面（用不到）\n\n官方系统是有自带桌面的，不用装这个，这个是是我自己折腾玩的，只做记录用。\n\n\\# 如果下载的是精简版系统，是没有桌面的，最好装个i3之类的桌面\n\\#（安装之后Alt+1等数字切换界面，Alt+Enter新建界面，Alt+Shift+Q关闭界面）\napt-get install x-window-system-core\napt-get install i3\nmkdir ~/.i3\nnano ~/.i3/config\n\\# 粘贴内容如下（等号线以内的部分）这个是配置文件是网上找来的备份记录一下：\n\n```\n# This file has been auto-generated by i3-config-wizard(1).\n# It will not be overwritten, so edit it as you like.\n#\n# Should you change your keyboard layout somewhen, delete\n# this file and re-run i3-config-wizard(1).\n#\n\n# i3 config file (v4)\n#\n# Please see http://i3wm.org/docs/userguide.html for a complete reference!\n\nset $mod Mod1\n\n# Font for window titles. Will also be used by the bar unless a different font\n# is used in the bar {} block below. ISO 10646 = Unicode\n#font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1\n#font -wenquanyi-wenquanyi bitmap song-medium-r-normal--12-120-75-75-p-119-iso10646-1\nfont xft:monaco 10\n# The font above is very space-efficient, that is, it looks good, sharp and\n# clear in small sizes. However, if you need a lot of unicode glyphs or\n# right-to-left text rendering, you should instead use pango for rendering and\n# chose a FreeType font, such as:\n# font pango:DejaVu Sans Mono 10\n\n# Use Mouse+$mod to drag floating windows to their wanted position\nfloating_modifier $mod\n\n# 自定义\nbindsym $mode+m exec emacs\n# 无边框：$mod+u\n# 普通模式：$mod+t\nbindsym $mod+t border normal\nbindsym $mod+u border none\n# 自动把打开的程序放到指定工作区\nassign [class=\"(?i)firefox\"] → 1\nassign [class=\"(?i)emacs\"] → 2\nassign [class=\"(?i)amule\"] → 3\n\n# 暂存器使用\n# mod shift -  隐藏当前窗口\n# mod -\t       现实第一个暂存的窗口\nbindsym $mod+Shift+minus move scratchpad\nbindsym $mod+minus scratchpad show\n\n# start a terminal\nbindsym $mod+Return exec i3-sensible-terminal\n\n# kill focused window\nbindsym $mod+Shift+q kill\n\n# start dmenu (a program launcher)\nbindsym $mod+d exec dmenu_run\n# There also is the (new) i3-dmenu-desktop which only displays applications\n# shipping a .desktop file. It is a wrapper around dmenu, so you need that\n# installed.\n# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop\n\n# change focus\nbindsym $mod+j focus left\nbindsym $mod+k focus down\nbindsym $mod+l focus up\nbindsym $mod+semicolon focus right\n\n# alternatively, you can use the cursor keys:\nbindsym $mod+Left focus left\nbindsym $mod+Down focus down\nbindsym $mod+Up focus up\nbindsym $mod+Right focus right\n\n# move focused window\nbindsym $mod+Shift+j move left\nbindsym $mod+Shift+k move down\nbindsym $mod+Shift+l move up\nbindsym $mod+Shift+semicolon move right\n\n# alternatively, you can use the cursor keys:\nbindsym $mod+Shift+Left move left\nbindsym $mod+Shift+Down move down\nbindsym $mod+Shift+Up move up\nbindsym $mod+Shift+Right move right\n\n# split in horizontal orientation\nbindsym $mod+h split h\n\n# split in vertical orientation\nbindsym $mod+v split v\n\n# enter fullscreen mode for the focused container\nbindsym $mod+f fullscreen\n\n# change container layout (stacked, tabbed, toggle split)\nbindsym $mod+s layout stacking\nbindsym $mod+w layout tabbed\nbindsym $mod+e layout toggle split\n\n# toggle tiling / floating\nbindsym $mod+Shift+space floating toggle\n\n# change focus between tiling / floating windows\nbindsym $mod+space focus mode_toggle\n\n# focus the parent container\nbindsym $mod+a focus parent\n\n# focus the child container\n#bindsym $mod+d focus child\n\n# switch to workspace\nbindsym $mod+1 workspace 1\nbindsym $mod+2 workspace 2\nbindsym $mod+3 workspace 3\nbindsym $mod+4 workspace 4\nbindsym $mod+5 workspace 5\nbindsym $mod+6 workspace 6\nbindsym $mod+7 workspace 7\nbindsym $mod+8 workspace 8\nbindsym $mod+9 workspace 9\nbindsym $mod+0 workspace 10\n\n# move focused container to workspace\nbindsym $mod+Shift+1 move container to workspace 1\nbindsym $mod+Shift+2 move container to workspace 2\nbindsym $mod+Shift+3 move container to workspace 3\nbindsym $mod+Shift+4 move container to workspace 4\nbindsym $mod+Shift+5 move container to workspace 5\nbindsym $mod+Shift+6 move container to workspace 6\nbindsym $mod+Shift+7 move container to workspace 7\nbindsym $mod+Shift+8 move container to workspace 8\nbindsym $mod+Shift+9 move container to workspace 9\nbindsym $mod+Shift+0 move container to workspace 10\n\n# reload the configuration file\nbindsym $mod+Shift+c reload\n# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)\nbindsym $mod+Shift+r restart\n# exit i3 (logs you out of your X session)\nbindsym $mod+Shift+e exec \"i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'\"\n\n# resize window (you can also use the mouse for that)\nmode \"resize\" {\n        # These bindings trigger as soon as you enter the resize mode\n\n        # Pressing left will shrink the window’s width.\n        # Pressing right will grow the window’s width.\n        # Pressing up will shrink the window’s height.\n        # Pressing down will grow the window’s height.\n        bindsym j resize shrink width 10 px or 10 ppt\n        bindsym k resize grow height 10 px or 10 ppt\n        bindsym l resize shrink height 10 px or 10 ppt\n        bindsym semicolon resize grow width 10 px or 10 ppt\n\n        # same bindings, but for the arrow keys\n        bindsym Left resize shrink width 10 px or 10 ppt\n        bindsym Down resize grow height 10 px or 10 ppt\n        bindsym Up resize shrink height 10 px or 10 ppt\n        bindsym Right resize grow width 10 px or 10 ppt\n\n        # back to normal: Enter or Escape\n        bindsym Return mode \"default\"\n        bindsym Escape mode \"default\"\n}\n\nbindsym $mod+r mode \"resize\"\n\n# Startups #\nexec --no-startup-id fcitx\nexec --no-startup-id volumeicon\n\n# Start i3bar to display a workspace bar (plus the system information i3status\n# finds out, if available)\nbar {\n\tposition top\n        status_command conky -c ~/.conkyrc\n    colors {\n        background #555555\n        statusline #ffffff\n        focused_workspace  #4c7899 #285577 #ffffff\n        active_workspace   #333333 #5f676a #ffffff\n        inactive_workspace #333333 #222222 #888888\n        urgent_workspace   #2f343a #900000 #ffffff\n    }\n\n}\n\n```\n\n装i3还可以装系统运行监视工具conky，很不错\n\napt-get install conky\n","slug":"树莓派常用设置","published":1,"date":"2017-05-22T05:03:19.699Z","updated":"2017-05-26T09:11:55.163Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmtsx00234wvsizokeu0a","content":"<h2 id=\"开启root账号\"><a href=\"#开启root账号\" class=\"headerlink\" title=\"开启root账号\"></a>开启root账号</h2><p>为了方便折腾，第一时间启用 ROOT 账号</p>\n<h1 id=\"设置-root-账号的密码，会让你输入两次新密码\"><a href=\"#设置-root-账号的密码，会让你输入两次新密码\" class=\"headerlink\" title=\"设置 root 账号的密码，会让你输入两次新密码\"></a>设置 root 账号的密码，会让你输入两次新密码</h1><p>sudo passwd root</p>\n<h1 id=\"启用-root-账号登录\"><a href=\"#启用-root-账号登录\" class=\"headerlink\" title=\"启用 root 账号登录\"></a>启用 root 账号登录</h1><p>sudo passwd –unlock root</p>\n<h1 id=\"进入root账户\"><a href=\"#进入root账户\" class=\"headerlink\" title=\"进入root账户\"></a>进入root账户</h1><p>su root</p>\n<h1 id=\"修改ssh配置\"><a href=\"#修改ssh配置\" class=\"headerlink\" title=\"修改ssh配置\"></a>修改ssh配置</h1><p>nano /etc/ssh/sshd_config</p>\n<p>修改 PermitRootLogin without-password 为 PermitRootLogin yes，crtl+o保存，ctrl+x关闭。</p>\n<h1 id=\"保存后重启\"><a href=\"#保存后重启\" class=\"headerlink\" title=\"保存后重启\"></a>保存后重启</h1><p>reboot</p>\n<h1 id=\"重新打开putty，输入用户名root和密码\"><a href=\"#重新打开putty，输入用户名root和密码\" class=\"headerlink\" title=\"重新打开putty，输入用户名root和密码\"></a>重新打开putty，输入用户名root和密码</h1><p>root</p>\n<p>登陆完毕</p>\n<h2 id=\"扩展可用空间\"><a href=\"#扩展可用空间\" class=\"headerlink\" title=\"扩展可用空间\"></a>扩展可用空间</h2><p>镜像只占了一部分，还有tf卡还有很多剩余空间没有利用。</p>\n<p># 进入配置面板<br>sudo raspi-config<br>选第1项 Expand Filesystem<br># 扩展后重启 reboot ,扩展后可以通过命令查看SD卡的可用空间<br>df -h<br><img src=\"/images/raspberry-ros-config.png\" alt=\"\"></p>\n<h2 id=\"更改时区\"><a href=\"#更改时区\" class=\"headerlink\" title=\"更改时区\"></a>更改时区</h2><p># 进入配置面板<br>sudo raspi-config<br>选第5项 Internationalisation Options<br>选第2项 Change Timezone<br>选择 Asia<br>选择 Shanghai</p>\n<h1 id=\"接桌面\"><a href=\"#接桌面\" class=\"headerlink\" title=\"接桌面\"></a>接桌面</h1><h2 id=\"自带桌面\"><a href=\"#自带桌面\" class=\"headerlink\" title=\"自带桌面\"></a>自带桌面</h2><p>因为之前下载的是自带桌面的系统，所以没什么可说的，很简单。安装下面两个软件就行。</p>\n<p>sudo apt-get install tightvncserver<br>sudo apt-get install xrdp</p>\n<p>如果提示Unable……apt-get update……之类的，就更新一下。</p>\n<p>apt-get update</p>\n<p>然后再执行之前的那两条指令</p>\n<p>安装完成后，就可以用windows自带的远程桌面工具，连接进入树莓派桌面</p>\n<h2 id=\"i3桌面（用不到）\"><a href=\"#i3桌面（用不到）\" class=\"headerlink\" title=\"i3桌面（用不到）\"></a>i3桌面（用不到）</h2><p>官方系统是有自带桌面的，不用装这个，这个是是我自己折腾玩的，只做记录用。</p>\n<p># 如果下载的是精简版系统，是没有桌面的，最好装个i3之类的桌面<br>#（安装之后Alt+1等数字切换界面，Alt+Enter新建界面，Alt+Shift+Q关闭界面）<br>apt-get install x-window-system-core<br>apt-get install i3<br>mkdir ~/.i3<br>nano ~/.i3/config<br># 粘贴内容如下（等号线以内的部分）这个是配置文件是网上找来的备份记录一下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div></pre></td><td class=\"code\"><pre><div class=\"line\"># This file has been auto-generated by i3-config-wizard(1).</div><div class=\"line\"># It will not be overwritten, so edit it as you like.</div><div class=\"line\">#</div><div class=\"line\"># Should you change your keyboard layout somewhen, delete</div><div class=\"line\"># this file and re-run i3-config-wizard(1).</div><div class=\"line\">#</div><div class=\"line\"></div><div class=\"line\"># i3 config file (v4)</div><div class=\"line\">#</div><div class=\"line\"># Please see http://i3wm.org/docs/userguide.html for a complete reference!</div><div class=\"line\"></div><div class=\"line\">set $mod Mod1</div><div class=\"line\"></div><div class=\"line\"># Font for window titles. Will also be used by the bar unless a different font</div><div class=\"line\"># is used in the bar &#123;&#125; block below. ISO 10646 = Unicode</div><div class=\"line\">#font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1</div><div class=\"line\">#font -wenquanyi-wenquanyi bitmap song-medium-r-normal--12-120-75-75-p-119-iso10646-1</div><div class=\"line\">font xft:monaco 10</div><div class=\"line\"># The font above is very space-efficient, that is, it looks good, sharp and</div><div class=\"line\"># clear in small sizes. However, if you need a lot of unicode glyphs or</div><div class=\"line\"># right-to-left text rendering, you should instead use pango for rendering and</div><div class=\"line\"># chose a FreeType font, such as:</div><div class=\"line\"># font pango:DejaVu Sans Mono 10</div><div class=\"line\"></div><div class=\"line\"># Use Mouse+$mod to drag floating windows to their wanted position</div><div class=\"line\">floating_modifier $mod</div><div class=\"line\"></div><div class=\"line\"># 自定义</div><div class=\"line\">bindsym $mode+m exec emacs</div><div class=\"line\"># 无边框：$mod+u</div><div class=\"line\"># 普通模式：$mod+t</div><div class=\"line\">bindsym $mod+t border normal</div><div class=\"line\">bindsym $mod+u border none</div><div class=\"line\"># 自动把打开的程序放到指定工作区</div><div class=\"line\">assign [class=&quot;(?i)firefox&quot;] → 1</div><div class=\"line\">assign [class=&quot;(?i)emacs&quot;] → 2</div><div class=\"line\">assign [class=&quot;(?i)amule&quot;] → 3</div><div class=\"line\"></div><div class=\"line\"># 暂存器使用</div><div class=\"line\"># mod shift -  隐藏当前窗口</div><div class=\"line\"># mod -\t       现实第一个暂存的窗口</div><div class=\"line\">bindsym $mod+Shift+minus move scratchpad</div><div class=\"line\">bindsym $mod+minus scratchpad show</div><div class=\"line\"></div><div class=\"line\"># start a terminal</div><div class=\"line\">bindsym $mod+Return exec i3-sensible-terminal</div><div class=\"line\"></div><div class=\"line\"># kill focused window</div><div class=\"line\">bindsym $mod+Shift+q kill</div><div class=\"line\"></div><div class=\"line\"># start dmenu (a program launcher)</div><div class=\"line\">bindsym $mod+d exec dmenu_run</div><div class=\"line\"># There also is the (new) i3-dmenu-desktop which only displays applications</div><div class=\"line\"># shipping a .desktop file. It is a wrapper around dmenu, so you need that</div><div class=\"line\"># installed.</div><div class=\"line\"># bindsym $mod+d exec --no-startup-id i3-dmenu-desktop</div><div class=\"line\"></div><div class=\"line\"># change focus</div><div class=\"line\">bindsym $mod+j focus left</div><div class=\"line\">bindsym $mod+k focus down</div><div class=\"line\">bindsym $mod+l focus up</div><div class=\"line\">bindsym $mod+semicolon focus right</div><div class=\"line\"></div><div class=\"line\"># alternatively, you can use the cursor keys:</div><div class=\"line\">bindsym $mod+Left focus left</div><div class=\"line\">bindsym $mod+Down focus down</div><div class=\"line\">bindsym $mod+Up focus up</div><div class=\"line\">bindsym $mod+Right focus right</div><div class=\"line\"></div><div class=\"line\"># move focused window</div><div class=\"line\">bindsym $mod+Shift+j move left</div><div class=\"line\">bindsym $mod+Shift+k move down</div><div class=\"line\">bindsym $mod+Shift+l move up</div><div class=\"line\">bindsym $mod+Shift+semicolon move right</div><div class=\"line\"></div><div class=\"line\"># alternatively, you can use the cursor keys:</div><div class=\"line\">bindsym $mod+Shift+Left move left</div><div class=\"line\">bindsym $mod+Shift+Down move down</div><div class=\"line\">bindsym $mod+Shift+Up move up</div><div class=\"line\">bindsym $mod+Shift+Right move right</div><div class=\"line\"></div><div class=\"line\"># split in horizontal orientation</div><div class=\"line\">bindsym $mod+h split h</div><div class=\"line\"></div><div class=\"line\"># split in vertical orientation</div><div class=\"line\">bindsym $mod+v split v</div><div class=\"line\"></div><div class=\"line\"># enter fullscreen mode for the focused container</div><div class=\"line\">bindsym $mod+f fullscreen</div><div class=\"line\"></div><div class=\"line\"># change container layout (stacked, tabbed, toggle split)</div><div class=\"line\">bindsym $mod+s layout stacking</div><div class=\"line\">bindsym $mod+w layout tabbed</div><div class=\"line\">bindsym $mod+e layout toggle split</div><div class=\"line\"></div><div class=\"line\"># toggle tiling / floating</div><div class=\"line\">bindsym $mod+Shift+space floating toggle</div><div class=\"line\"></div><div class=\"line\"># change focus between tiling / floating windows</div><div class=\"line\">bindsym $mod+space focus mode_toggle</div><div class=\"line\"></div><div class=\"line\"># focus the parent container</div><div class=\"line\">bindsym $mod+a focus parent</div><div class=\"line\"></div><div class=\"line\"># focus the child container</div><div class=\"line\">#bindsym $mod+d focus child</div><div class=\"line\"></div><div class=\"line\"># switch to workspace</div><div class=\"line\">bindsym $mod+1 workspace 1</div><div class=\"line\">bindsym $mod+2 workspace 2</div><div class=\"line\">bindsym $mod+3 workspace 3</div><div class=\"line\">bindsym $mod+4 workspace 4</div><div class=\"line\">bindsym $mod+5 workspace 5</div><div class=\"line\">bindsym $mod+6 workspace 6</div><div class=\"line\">bindsym $mod+7 workspace 7</div><div class=\"line\">bindsym $mod+8 workspace 8</div><div class=\"line\">bindsym $mod+9 workspace 9</div><div class=\"line\">bindsym $mod+0 workspace 10</div><div class=\"line\"></div><div class=\"line\"># move focused container to workspace</div><div class=\"line\">bindsym $mod+Shift+1 move container to workspace 1</div><div class=\"line\">bindsym $mod+Shift+2 move container to workspace 2</div><div class=\"line\">bindsym $mod+Shift+3 move container to workspace 3</div><div class=\"line\">bindsym $mod+Shift+4 move container to workspace 4</div><div class=\"line\">bindsym $mod+Shift+5 move container to workspace 5</div><div class=\"line\">bindsym $mod+Shift+6 move container to workspace 6</div><div class=\"line\">bindsym $mod+Shift+7 move container to workspace 7</div><div class=\"line\">bindsym $mod+Shift+8 move container to workspace 8</div><div class=\"line\">bindsym $mod+Shift+9 move container to workspace 9</div><div class=\"line\">bindsym $mod+Shift+0 move container to workspace 10</div><div class=\"line\"></div><div class=\"line\"># reload the configuration file</div><div class=\"line\">bindsym $mod+Shift+c reload</div><div class=\"line\"># restart i3 inplace (preserves your layout/session, can be used to upgrade i3)</div><div class=\"line\">bindsym $mod+Shift+r restart</div><div class=\"line\"># exit i3 (logs you out of your X session)</div><div class=\"line\">bindsym $mod+Shift+e exec &quot;i3-nagbar -t warning -m &apos;You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.&apos; -b &apos;Yes, exit i3&apos; &apos;i3-msg exit&apos;&quot;</div><div class=\"line\"></div><div class=\"line\"># resize window (you can also use the mouse for that)</div><div class=\"line\">mode &quot;resize&quot; &#123;</div><div class=\"line\">        # These bindings trigger as soon as you enter the resize mode</div><div class=\"line\"></div><div class=\"line\">        # Pressing left will shrink the window’s width.</div><div class=\"line\">        # Pressing right will grow the window’s width.</div><div class=\"line\">        # Pressing up will shrink the window’s height.</div><div class=\"line\">        # Pressing down will grow the window’s height.</div><div class=\"line\">        bindsym j resize shrink width 10 px or 10 ppt</div><div class=\"line\">        bindsym k resize grow height 10 px or 10 ppt</div><div class=\"line\">        bindsym l resize shrink height 10 px or 10 ppt</div><div class=\"line\">        bindsym semicolon resize grow width 10 px or 10 ppt</div><div class=\"line\"></div><div class=\"line\">        # same bindings, but for the arrow keys</div><div class=\"line\">        bindsym Left resize shrink width 10 px or 10 ppt</div><div class=\"line\">        bindsym Down resize grow height 10 px or 10 ppt</div><div class=\"line\">        bindsym Up resize shrink height 10 px or 10 ppt</div><div class=\"line\">        bindsym Right resize grow width 10 px or 10 ppt</div><div class=\"line\"></div><div class=\"line\">        # back to normal: Enter or Escape</div><div class=\"line\">        bindsym Return mode &quot;default&quot;</div><div class=\"line\">        bindsym Escape mode &quot;default&quot;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">bindsym $mod+r mode &quot;resize&quot;</div><div class=\"line\"></div><div class=\"line\"># Startups #</div><div class=\"line\">exec --no-startup-id fcitx</div><div class=\"line\">exec --no-startup-id volumeicon</div><div class=\"line\"></div><div class=\"line\"># Start i3bar to display a workspace bar (plus the system information i3status</div><div class=\"line\"># finds out, if available)</div><div class=\"line\">bar &#123;</div><div class=\"line\">\tposition top</div><div class=\"line\">        status_command conky -c ~/.conkyrc</div><div class=\"line\">    colors &#123;</div><div class=\"line\">        background #555555</div><div class=\"line\">        statusline #ffffff</div><div class=\"line\">        focused_workspace  #4c7899 #285577 #ffffff</div><div class=\"line\">        active_workspace   #333333 #5f676a #ffffff</div><div class=\"line\">        inactive_workspace #333333 #222222 #888888</div><div class=\"line\">        urgent_workspace   #2f343a #900000 #ffffff</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>装i3还可以装系统运行监视工具conky，很不错</p>\n<p>apt-get install conky</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"开启root账号\"><a href=\"#开启root账号\" class=\"headerlink\" title=\"开启root账号\"></a>开启root账号</h2><p>为了方便折腾，第一时间启用 ROOT 账号</p>\n<h1 id=\"设置-root-账号的密码，会让你输入两次新密码\"><a href=\"#设置-root-账号的密码，会让你输入两次新密码\" class=\"headerlink\" title=\"设置 root 账号的密码，会让你输入两次新密码\"></a>设置 root 账号的密码，会让你输入两次新密码</h1><p>sudo passwd root</p>\n<h1 id=\"启用-root-账号登录\"><a href=\"#启用-root-账号登录\" class=\"headerlink\" title=\"启用 root 账号登录\"></a>启用 root 账号登录</h1><p>sudo passwd –unlock root</p>\n<h1 id=\"进入root账户\"><a href=\"#进入root账户\" class=\"headerlink\" title=\"进入root账户\"></a>进入root账户</h1><p>su root</p>\n<h1 id=\"修改ssh配置\"><a href=\"#修改ssh配置\" class=\"headerlink\" title=\"修改ssh配置\"></a>修改ssh配置</h1><p>nano /etc/ssh/sshd_config</p>\n<p>修改 PermitRootLogin without-password 为 PermitRootLogin yes，crtl+o保存，ctrl+x关闭。</p>\n<h1 id=\"保存后重启\"><a href=\"#保存后重启\" class=\"headerlink\" title=\"保存后重启\"></a>保存后重启</h1><p>reboot</p>\n<h1 id=\"重新打开putty，输入用户名root和密码\"><a href=\"#重新打开putty，输入用户名root和密码\" class=\"headerlink\" title=\"重新打开putty，输入用户名root和密码\"></a>重新打开putty，输入用户名root和密码</h1><p>root</p>\n<p>登陆完毕</p>\n<h2 id=\"扩展可用空间\"><a href=\"#扩展可用空间\" class=\"headerlink\" title=\"扩展可用空间\"></a>扩展可用空间</h2><p>镜像只占了一部分，还有tf卡还有很多剩余空间没有利用。</p>\n<p># 进入配置面板<br>sudo raspi-config<br>选第1项 Expand Filesystem<br># 扩展后重启 reboot ,扩展后可以通过命令查看SD卡的可用空间<br>df -h<br><img src=\"/images/raspberry-ros-config.png\" alt=\"\"></p>\n<h2 id=\"更改时区\"><a href=\"#更改时区\" class=\"headerlink\" title=\"更改时区\"></a>更改时区</h2><p># 进入配置面板<br>sudo raspi-config<br>选第5项 Internationalisation Options<br>选第2项 Change Timezone<br>选择 Asia<br>选择 Shanghai</p>\n<h1 id=\"接桌面\"><a href=\"#接桌面\" class=\"headerlink\" title=\"接桌面\"></a>接桌面</h1><h2 id=\"自带桌面\"><a href=\"#自带桌面\" class=\"headerlink\" title=\"自带桌面\"></a>自带桌面</h2><p>因为之前下载的是自带桌面的系统，所以没什么可说的，很简单。安装下面两个软件就行。</p>\n<p>sudo apt-get install tightvncserver<br>sudo apt-get install xrdp</p>\n<p>如果提示Unable……apt-get update……之类的，就更新一下。</p>\n<p>apt-get update</p>\n<p>然后再执行之前的那两条指令</p>\n<p>安装完成后，就可以用windows自带的远程桌面工具，连接进入树莓派桌面</p>\n<h2 id=\"i3桌面（用不到）\"><a href=\"#i3桌面（用不到）\" class=\"headerlink\" title=\"i3桌面（用不到）\"></a>i3桌面（用不到）</h2><p>官方系统是有自带桌面的，不用装这个，这个是是我自己折腾玩的，只做记录用。</p>\n<p># 如果下载的是精简版系统，是没有桌面的，最好装个i3之类的桌面<br>#（安装之后Alt+1等数字切换界面，Alt+Enter新建界面，Alt+Shift+Q关闭界面）<br>apt-get install x-window-system-core<br>apt-get install i3<br>mkdir ~/.i3<br>nano ~/.i3/config<br># 粘贴内容如下（等号线以内的部分）这个是配置文件是网上找来的备份记录一下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div></pre></td><td class=\"code\"><pre><div class=\"line\"># This file has been auto-generated by i3-config-wizard(1).</div><div class=\"line\"># It will not be overwritten, so edit it as you like.</div><div class=\"line\">#</div><div class=\"line\"># Should you change your keyboard layout somewhen, delete</div><div class=\"line\"># this file and re-run i3-config-wizard(1).</div><div class=\"line\">#</div><div class=\"line\"></div><div class=\"line\"># i3 config file (v4)</div><div class=\"line\">#</div><div class=\"line\"># Please see http://i3wm.org/docs/userguide.html for a complete reference!</div><div class=\"line\"></div><div class=\"line\">set $mod Mod1</div><div class=\"line\"></div><div class=\"line\"># Font for window titles. Will also be used by the bar unless a different font</div><div class=\"line\"># is used in the bar &#123;&#125; block below. ISO 10646 = Unicode</div><div class=\"line\">#font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1</div><div class=\"line\">#font -wenquanyi-wenquanyi bitmap song-medium-r-normal--12-120-75-75-p-119-iso10646-1</div><div class=\"line\">font xft:monaco 10</div><div class=\"line\"># The font above is very space-efficient, that is, it looks good, sharp and</div><div class=\"line\"># clear in small sizes. However, if you need a lot of unicode glyphs or</div><div class=\"line\"># right-to-left text rendering, you should instead use pango for rendering and</div><div class=\"line\"># chose a FreeType font, such as:</div><div class=\"line\"># font pango:DejaVu Sans Mono 10</div><div class=\"line\"></div><div class=\"line\"># Use Mouse+$mod to drag floating windows to their wanted position</div><div class=\"line\">floating_modifier $mod</div><div class=\"line\"></div><div class=\"line\"># 自定义</div><div class=\"line\">bindsym $mode+m exec emacs</div><div class=\"line\"># 无边框：$mod+u</div><div class=\"line\"># 普通模式：$mod+t</div><div class=\"line\">bindsym $mod+t border normal</div><div class=\"line\">bindsym $mod+u border none</div><div class=\"line\"># 自动把打开的程序放到指定工作区</div><div class=\"line\">assign [class=&quot;(?i)firefox&quot;] → 1</div><div class=\"line\">assign [class=&quot;(?i)emacs&quot;] → 2</div><div class=\"line\">assign [class=&quot;(?i)amule&quot;] → 3</div><div class=\"line\"></div><div class=\"line\"># 暂存器使用</div><div class=\"line\"># mod shift -  隐藏当前窗口</div><div class=\"line\"># mod -\t       现实第一个暂存的窗口</div><div class=\"line\">bindsym $mod+Shift+minus move scratchpad</div><div class=\"line\">bindsym $mod+minus scratchpad show</div><div class=\"line\"></div><div class=\"line\"># start a terminal</div><div class=\"line\">bindsym $mod+Return exec i3-sensible-terminal</div><div class=\"line\"></div><div class=\"line\"># kill focused window</div><div class=\"line\">bindsym $mod+Shift+q kill</div><div class=\"line\"></div><div class=\"line\"># start dmenu (a program launcher)</div><div class=\"line\">bindsym $mod+d exec dmenu_run</div><div class=\"line\"># There also is the (new) i3-dmenu-desktop which only displays applications</div><div class=\"line\"># shipping a .desktop file. It is a wrapper around dmenu, so you need that</div><div class=\"line\"># installed.</div><div class=\"line\"># bindsym $mod+d exec --no-startup-id i3-dmenu-desktop</div><div class=\"line\"></div><div class=\"line\"># change focus</div><div class=\"line\">bindsym $mod+j focus left</div><div class=\"line\">bindsym $mod+k focus down</div><div class=\"line\">bindsym $mod+l focus up</div><div class=\"line\">bindsym $mod+semicolon focus right</div><div class=\"line\"></div><div class=\"line\"># alternatively, you can use the cursor keys:</div><div class=\"line\">bindsym $mod+Left focus left</div><div class=\"line\">bindsym $mod+Down focus down</div><div class=\"line\">bindsym $mod+Up focus up</div><div class=\"line\">bindsym $mod+Right focus right</div><div class=\"line\"></div><div class=\"line\"># move focused window</div><div class=\"line\">bindsym $mod+Shift+j move left</div><div class=\"line\">bindsym $mod+Shift+k move down</div><div class=\"line\">bindsym $mod+Shift+l move up</div><div class=\"line\">bindsym $mod+Shift+semicolon move right</div><div class=\"line\"></div><div class=\"line\"># alternatively, you can use the cursor keys:</div><div class=\"line\">bindsym $mod+Shift+Left move left</div><div class=\"line\">bindsym $mod+Shift+Down move down</div><div class=\"line\">bindsym $mod+Shift+Up move up</div><div class=\"line\">bindsym $mod+Shift+Right move right</div><div class=\"line\"></div><div class=\"line\"># split in horizontal orientation</div><div class=\"line\">bindsym $mod+h split h</div><div class=\"line\"></div><div class=\"line\"># split in vertical orientation</div><div class=\"line\">bindsym $mod+v split v</div><div class=\"line\"></div><div class=\"line\"># enter fullscreen mode for the focused container</div><div class=\"line\">bindsym $mod+f fullscreen</div><div class=\"line\"></div><div class=\"line\"># change container layout (stacked, tabbed, toggle split)</div><div class=\"line\">bindsym $mod+s layout stacking</div><div class=\"line\">bindsym $mod+w layout tabbed</div><div class=\"line\">bindsym $mod+e layout toggle split</div><div class=\"line\"></div><div class=\"line\"># toggle tiling / floating</div><div class=\"line\">bindsym $mod+Shift+space floating toggle</div><div class=\"line\"></div><div class=\"line\"># change focus between tiling / floating windows</div><div class=\"line\">bindsym $mod+space focus mode_toggle</div><div class=\"line\"></div><div class=\"line\"># focus the parent container</div><div class=\"line\">bindsym $mod+a focus parent</div><div class=\"line\"></div><div class=\"line\"># focus the child container</div><div class=\"line\">#bindsym $mod+d focus child</div><div class=\"line\"></div><div class=\"line\"># switch to workspace</div><div class=\"line\">bindsym $mod+1 workspace 1</div><div class=\"line\">bindsym $mod+2 workspace 2</div><div class=\"line\">bindsym $mod+3 workspace 3</div><div class=\"line\">bindsym $mod+4 workspace 4</div><div class=\"line\">bindsym $mod+5 workspace 5</div><div class=\"line\">bindsym $mod+6 workspace 6</div><div class=\"line\">bindsym $mod+7 workspace 7</div><div class=\"line\">bindsym $mod+8 workspace 8</div><div class=\"line\">bindsym $mod+9 workspace 9</div><div class=\"line\">bindsym $mod+0 workspace 10</div><div class=\"line\"></div><div class=\"line\"># move focused container to workspace</div><div class=\"line\">bindsym $mod+Shift+1 move container to workspace 1</div><div class=\"line\">bindsym $mod+Shift+2 move container to workspace 2</div><div class=\"line\">bindsym $mod+Shift+3 move container to workspace 3</div><div class=\"line\">bindsym $mod+Shift+4 move container to workspace 4</div><div class=\"line\">bindsym $mod+Shift+5 move container to workspace 5</div><div class=\"line\">bindsym $mod+Shift+6 move container to workspace 6</div><div class=\"line\">bindsym $mod+Shift+7 move container to workspace 7</div><div class=\"line\">bindsym $mod+Shift+8 move container to workspace 8</div><div class=\"line\">bindsym $mod+Shift+9 move container to workspace 9</div><div class=\"line\">bindsym $mod+Shift+0 move container to workspace 10</div><div class=\"line\"></div><div class=\"line\"># reload the configuration file</div><div class=\"line\">bindsym $mod+Shift+c reload</div><div class=\"line\"># restart i3 inplace (preserves your layout/session, can be used to upgrade i3)</div><div class=\"line\">bindsym $mod+Shift+r restart</div><div class=\"line\"># exit i3 (logs you out of your X session)</div><div class=\"line\">bindsym $mod+Shift+e exec &quot;i3-nagbar -t warning -m &apos;You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.&apos; -b &apos;Yes, exit i3&apos; &apos;i3-msg exit&apos;&quot;</div><div class=\"line\"></div><div class=\"line\"># resize window (you can also use the mouse for that)</div><div class=\"line\">mode &quot;resize&quot; &#123;</div><div class=\"line\">        # These bindings trigger as soon as you enter the resize mode</div><div class=\"line\"></div><div class=\"line\">        # Pressing left will shrink the window’s width.</div><div class=\"line\">        # Pressing right will grow the window’s width.</div><div class=\"line\">        # Pressing up will shrink the window’s height.</div><div class=\"line\">        # Pressing down will grow the window’s height.</div><div class=\"line\">        bindsym j resize shrink width 10 px or 10 ppt</div><div class=\"line\">        bindsym k resize grow height 10 px or 10 ppt</div><div class=\"line\">        bindsym l resize shrink height 10 px or 10 ppt</div><div class=\"line\">        bindsym semicolon resize grow width 10 px or 10 ppt</div><div class=\"line\"></div><div class=\"line\">        # same bindings, but for the arrow keys</div><div class=\"line\">        bindsym Left resize shrink width 10 px or 10 ppt</div><div class=\"line\">        bindsym Down resize grow height 10 px or 10 ppt</div><div class=\"line\">        bindsym Up resize shrink height 10 px or 10 ppt</div><div class=\"line\">        bindsym Right resize grow width 10 px or 10 ppt</div><div class=\"line\"></div><div class=\"line\">        # back to normal: Enter or Escape</div><div class=\"line\">        bindsym Return mode &quot;default&quot;</div><div class=\"line\">        bindsym Escape mode &quot;default&quot;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">bindsym $mod+r mode &quot;resize&quot;</div><div class=\"line\"></div><div class=\"line\"># Startups #</div><div class=\"line\">exec --no-startup-id fcitx</div><div class=\"line\">exec --no-startup-id volumeicon</div><div class=\"line\"></div><div class=\"line\"># Start i3bar to display a workspace bar (plus the system information i3status</div><div class=\"line\"># finds out, if available)</div><div class=\"line\">bar &#123;</div><div class=\"line\">\tposition top</div><div class=\"line\">        status_command conky -c ~/.conkyrc</div><div class=\"line\">    colors &#123;</div><div class=\"line\">        background #555555</div><div class=\"line\">        statusline #ffffff</div><div class=\"line\">        focused_workspace  #4c7899 #285577 #ffffff</div><div class=\"line\">        active_workspace   #333333 #5f676a #ffffff</div><div class=\"line\">        inactive_workspace #333333 #222222 #888888</div><div class=\"line\">        urgent_workspace   #2f343a #900000 #ffffff</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>装i3还可以装系统运行监视工具conky，很不错</p>\n<p>apt-get install conky</p>\n"},{"title":"树莓派设置支持中文","_content":"# 树莓派设置支持中文\n\n默认的树莓派系统是不支持中文显示的，打开网页看到一大堆的乱码，按照以下方法可以设置树莓派支持中文显示和中文输入法\n\n1.\n\n> sudo apt-get install ttf-wqy-zenhei\n\n2.\n\n> sudo apt-get install scim-pinyin\n\n3.配置中文显示\n\n> sudo raspi-config\n\n依次选择\n\n5 Internationalisation Options\n\nI1 Change Locale\n\nzh_CN.UTF-8 UTF-8\n\nC.UTF-8\n\n选OK，保存设置\n\n4.\n\n> sudo reboot\n\n重启完成后就可以看到支持中文显示了，\n\n按下键盘Ctrl ＋ Space，可以将输入法切换到拼音输入法\n","source":"_posts/树莓派设置支持中文.md","raw":"---\ntitle: 树莓派设置支持中文\ntags: [树莓派,物联网,linux]\ncategories: raspberry pi\n---\n# 树莓派设置支持中文\n\n默认的树莓派系统是不支持中文显示的，打开网页看到一大堆的乱码，按照以下方法可以设置树莓派支持中文显示和中文输入法\n\n1.\n\n> sudo apt-get install ttf-wqy-zenhei\n\n2.\n\n> sudo apt-get install scim-pinyin\n\n3.配置中文显示\n\n> sudo raspi-config\n\n依次选择\n\n5 Internationalisation Options\n\nI1 Change Locale\n\nzh_CN.UTF-8 UTF-8\n\nC.UTF-8\n\n选OK，保存设置\n\n4.\n\n> sudo reboot\n\n重启完成后就可以看到支持中文显示了，\n\n按下键盘Ctrl ＋ Space，可以将输入法切换到拼音输入法\n","slug":"树莓派设置支持中文","published":1,"date":"2017-05-22T05:03:19.700Z","updated":"2017-05-25T01:01:36.046Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmtsx00254wvslkuaa2sc","content":"<h1 id=\"树莓派设置支持中文\"><a href=\"#树莓派设置支持中文\" class=\"headerlink\" title=\"树莓派设置支持中文\"></a>树莓派设置支持中文</h1><p>默认的树莓派系统是不支持中文显示的，打开网页看到一大堆的乱码，按照以下方法可以设置树莓派支持中文显示和中文输入法</p>\n<p>1.</p>\n<blockquote>\n<p>sudo apt-get install ttf-wqy-zenhei</p>\n</blockquote>\n<p>2.</p>\n<blockquote>\n<p>sudo apt-get install scim-pinyin</p>\n</blockquote>\n<p>3.配置中文显示</p>\n<blockquote>\n<p>sudo raspi-config</p>\n</blockquote>\n<p>依次选择</p>\n<p>5 Internationalisation Options</p>\n<p>I1 Change Locale</p>\n<p>zh_CN.UTF-8 UTF-8</p>\n<p>C.UTF-8</p>\n<p>选OK，保存设置</p>\n<p>4.</p>\n<blockquote>\n<p>sudo reboot</p>\n</blockquote>\n<p>重启完成后就可以看到支持中文显示了，</p>\n<p>按下键盘Ctrl ＋ Space，可以将输入法切换到拼音输入法</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"树莓派设置支持中文\"><a href=\"#树莓派设置支持中文\" class=\"headerlink\" title=\"树莓派设置支持中文\"></a>树莓派设置支持中文</h1><p>默认的树莓派系统是不支持中文显示的，打开网页看到一大堆的乱码，按照以下方法可以设置树莓派支持中文显示和中文输入法</p>\n<p>1.</p>\n<blockquote>\n<p>sudo apt-get install ttf-wqy-zenhei</p>\n</blockquote>\n<p>2.</p>\n<blockquote>\n<p>sudo apt-get install scim-pinyin</p>\n</blockquote>\n<p>3.配置中文显示</p>\n<blockquote>\n<p>sudo raspi-config</p>\n</blockquote>\n<p>依次选择</p>\n<p>5 Internationalisation Options</p>\n<p>I1 Change Locale</p>\n<p>zh_CN.UTF-8 UTF-8</p>\n<p>C.UTF-8</p>\n<p>选OK，保存设置</p>\n<p>4.</p>\n<blockquote>\n<p>sudo reboot</p>\n</blockquote>\n<p>重启完成后就可以看到支持中文显示了，</p>\n<p>按下键盘Ctrl ＋ Space，可以将输入法切换到拼音输入法</p>\n"},{"title":"移动web资源整理","_content":"#### 目录\n\n  meta基础知识\n        H5页面窗口自动调整到设备宽度，并禁止用户缩放页面\n        忽略将页面中的数字识别为电话号码\n        忽略Android平台中对邮箱地址的识别\n        当网站添加到主屏幕快速启动方式，可隐藏地址栏，仅针对ios的safari (new)\n        将网站添加到主屏幕快速启动方式，仅针对ios的safari顶端状态条的样式\n        viewport模板 (new)\n    常见问题\n        移动端如何定义字体font-family\n        移动端字体单位font-size选择px还是rem (new)\n        移动端touch事件(区分webkit 和 winphone) (new)\n        移动端click屏幕产生200-300 ms的延迟响应\n        触摸事件的响应顺序\n        什么是Retina 显示屏，带来了什么问题\n        ios系统中元素被触摸时产生的半透明灰色遮罩怎么去掉\n        部分android系统中元素被点击时产生的边框怎么去掉\n        winphone系统a、input标签被点击时产生的半透明灰色背景怎么去掉\n        webkit表单元素的默认外观怎么重置 (new)\n        webkit表单输入框placeholder的颜色值能改变么\n        webkit表单输入框placeholder的文字能换行么\n        IE10（winphone8）表单元素默认外观如何重置\n        禁止ios 长按时不触发系统的菜单，禁止ios&android长按时下载图片\n        禁止ios和android用户选中文字\n        打电话发短信写邮件怎么实现\n        模拟按钮hover效果 (new)\n        屏幕旋转的事件和样式\n        audio元素和video元素在ios和andriod中无法自动播放\n        摇一摇功能  (new)\n        手机拍照和上传图片\n        微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整\n        消除transition闪屏\n        开启硬件加速\n        取消input在ios下，输入的时候英文首字母的默认大写\n        android上去掉语音输入按钮\n        android 2.3 bug\n        android 4.x bug\n        设计高性能CSS3动画的几个要素\n        fixed bug\n        如何阻止windows Phone的默认触摸事件\n        播放视频不全屏 (new)\n    常用的移动端框架\n        zepto.js\n        iscroll.js\n        underscore.js\n        滑屏框架\n        flex布局 (new)\n        FastClick\n        Sea.js\n##### meta基础知识\nH5页面窗口自动调整到设备宽度，并禁止用户缩放页面\n```\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no\" />\n```\n忽略将页面中的数字识别为电话号码\n```\n<meta name=\"format-detection\" content=\"telephone=no\" />\n```\n忽略Android平台中对邮箱地址的识别\n```\n<meta name=\"format-detection\" content=\"email=no\" />\n```\n当网站添加到主屏幕快速启动方式，可隐藏地址栏，仅针对ios的safari\n```\n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n<!-- ios7.0版本以后，safari上已看不到效果 -->\n```\n将网站添加到主屏幕快速启动方式，仅针对ios的safari顶端状态条的样式\n```\n<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\n<!-- 可选default、black、black-translucent -->\n```\n##### viewport模板\n\nviewport模板——通用\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no\" name=\"viewport\">\n<meta content=\"yes\" name=\"apple-mobile-web-app-capable\">\n<meta content=\"black\" name=\"apple-mobile-web-app-status-bar-style\">\n<meta content=\"telephone=no\" name=\"format-detection\">\n<meta content=\"email=no\" name=\"format-detection\">\n<title>标题</title>\n<link rel=\"stylesheet\" href=\"index.css\">\n</head>\n\n<body>\n这里开始内容\n</body>\n\n</html>\n```\nviewport模板 - target-densitydpi=device-dpi，android 2.3.5以下版本不支持\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=750, user-scalable=no, target-densitydpi=device-dpi\"><!-- width取值与页面定义的宽度一致 -->\n<meta content=\"yes\" name=\"apple-mobile-web-app-capable\">\n<meta content=\"black\" name=\"apple-mobile-web-app-status-bar-style\">\n<meta content=\"telephone=no\" name=\"format-detection\">\n<meta content=\"email=no\" name=\"format-detection\">\n<title>标题</title>\n<link rel=\"stylesheet\" href=\"index.css\">\n</head>\n\n<body>\n这里开始内容\n</body>\n\n</html>\n```\n参考案例：http://action.weixin.qq.com/payact/readtemplate?t=mobile/2015/wxzfsht/index_tmpl\n#### 常见问题\n##### 移动端如何定义字体font-family\n\n中文字体使用系统默认即可，英文用Helvetica\n```\n@font-face {\n    font-family: 'MicrosoftYaHei';\n    src: url('MicrosoftYaHei.eot'); /* IE9 Compat Modes */\n    src: url('MicrosoftYaHei.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\n             url('MicrosoftYaHei.woff') format('woff'), /* Modern Browsers */\n             url('MicrosoftYaHei.ttf')  format('truetype'), /* Safari, Android, iOS */\n             url('MicrosoftYaHei.svg#MicrosoftYaHei') format('svg'); /* Legacy iOS */\n   }\n```\n```\n/* 移动端定义字体的代码 */\nbody{font-family:Helvetica;}\n```\n##### 移动端字体单位font-size选择px还是rem\n\n对于只需要适配少部分手机设备，且分辨率对页面影响不大的，使用px即可\n\n对于需要适配各种移动设备，使用rem，例如只需要适配iPhone和iPad等分辨率差别比较挺大的设备\n\nrem配置参考，适合视觉稿宽度为640px的：\n```\n\n\n<meta content=\"width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no\" name=\"viewport\">\n\n\n```\n```\nhtml{font-size:10px}\n@media screen and (min-width:321px) and (max-width:375px){html{font-size:11px}}\n@media screen and (min-width:376px) and (max-width:414px){html{font-size:12px}}\n@media screen and (min-width:415px) and (max-width:639px){html{font-size:15px}}\n@media screen and (min-width:640px) and (max-width:719px){html{font-size:20px}}\n@media screen and (min-width:720px) and (max-width:749px){html{font-size:22.5px}}\n@media screen and (min-width:750px) and (max-width:799px){html{font-size:23.5px}}\n@media screen and (min-width:800px){html{font-size:25px}}\n```\n##### 移动端touch事件(区分webkit 和 winphone)\n\n当用户手指放在移动设备在屏幕上滑动会触发的touch事件\n\n以下支持webkit\n\n    touchstart——当手指触碰屏幕时候发生。不管当前有多少只手指\n    touchmove——当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，会调用event的preventDefault()可以阻止默认情况的发生：阻止页面滚动\n    touchend——当手指离开屏幕时触发\n    touchcancel——系统停止跟踪触摸时候会触发。例如在触摸过程中突然页面alert()一个提示框，此时会触发该事件，这个事件比较少用\n\nTouchEvent\n\n    touches：屏幕上所有手指的信息\n    targetTouches：手指在目标区域的手指信息\n    changedTouches：最近一次触发该事件的手指信息\n    touchend时，touches与targetTouches信息会被删除，changedTouches保存的最后一次的信息，最好用于计算手指信息\n\n参数信息(changedTouches[0])\n\n    clientX、clientY在显示区的坐标\n    target：当前元素\n\n参考：https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent\n\n以下支持winphone 8\n\n    MSPointerDown——当手指触碰屏幕时候发生。不管当前有多少只手指\n    MSPointerMove——当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，会调用css的html{-ms-touch-action: none;}可以阻止默认情况的发生：阻止页面滚动\n    MSPointerUp——当手指离开屏幕时触发\n\n##### 移动端click屏幕产生200-300 ms的延迟响应\n\n移动设备上的web网页是有300ms延迟的，玩玩会造成按钮点击延迟甚至是点击失效。\n\n以下是历史原因，来源一个公司内一个同事的分享：\n\n2007年苹果发布首款iphone上IOS系统搭载的safari为了将适用于PC端上大屏幕的网页能比较好的展示在手机端上，使用了双击缩放(double tap to zoom)的方案，比如你在手机上用浏览器打开一个PC上的网页，你可能在看到页面内容虽然可以撑满整个屏幕，但是字体、图片都很小看不清，此时可以快速双击屏幕上的某一部分，你就能看清该部分放大后的内容，再次双击后能回到原始状态。\n\n双击缩放是指用手指在屏幕上快速点击两次，iOS 自带的 Safari 浏览器会将网页缩放至原始比例。\n\n原因就出在浏览器需要如何判断快速点击上，当用户在屏幕上单击某一个元素时候，例如跳转链接<a href=\"#\"></a>，此处浏览器会先捕获该次单击，但浏览器不能决定用户是单纯要点击链接还是要双击该部分区域进行缩放操作，所以，捕获第一次单击后，浏览器会先Hold一段时间t，如果在t时间区间里用户未进行下一次点击，则浏览器会做单击跳转链接的处理，如果t时间里用户进行了第二次单击操作，则浏览器会禁止跳转，转而进行对该部分区域页面的缩放操作。那么这个时间区间t有多少呢？在IOS safari下，大概为300毫秒。这就是延迟的由来。造成的后果用户纯粹单击页面，页面需要过一段时间才响应，给用户慢体验感觉，对于web开发者来说是，页面js捕获click事件的回调函数处理，需要300ms后才生效，也就间接导致影响其他业务逻辑的处理。\n\n解决方案：\n\n    fastclick可以解决在手机上点击事件的300ms延迟\n    zepto的touch模块，tap事件也是为了解决在click的延迟问题\n\n##### 触摸事件的响应顺序\n```\n1、ontouchstart\n2、ontouchmove\n3、ontouchend\n4、onclick\n```\n解决300ms延迟的问题，也可以通过绑定ontouchstart事件，加快对事件的响应\n##### 什么是Retina 显示屏，带来了什么问题\n\nretina：一种具备超高像素密度的液晶屏，同样大小的屏幕上显示的像素点由1个变为多个，如在同样带下的屏幕上，苹果设备的retina显示屏中，像素点1个变为4个\n\n在高清显示屏中的位图被放大，图片会变得模糊，因此移动端的视觉稿通常会设计为传统PC的2倍\n\n那么，前端的应对方案是：\n\n设计稿切出来的图片长宽保证为偶数，并使用backgroud-size把图片缩小为原来的1/2\n\n```\n//例如图片宽高为：200px*200px，那么写法如下\n.css{width:100px;height:100px;background-size:100px 100px;}\n```\n其它元素的取值为原来的1/2，例如视觉稿40px的字体，使用样式的写法为20px\n```\n.css{font-size:20px}\n```\n##### ios系统中元素被触摸时产生的半透明灰色遮罩怎么去掉\n\nios用户点击一个链接，会出现一个半透明灰色遮罩, 如果想要禁用，可设置-webkit-tap-highlight-color的alpha值为0，也就是属性值的最后一位设置为0就可以去除半透明灰色遮罩\n```\na,button,input,textarea{-webkit-tap-highlight-color: rgba(0,0,0,0;)}\n```\n##### 部分android系统中元素被点击时产生的边框怎么去掉\n\nandroid用户点击一个链接，会出现一个边框或者半透明灰色遮罩, 不同生产商定义出来额效果不一样，可设置-webkit-tap-highlight-color的alpha值为0去除部分机器自带的效果\n```\na,button,input,textarea{\n-webkit-tap-highlight-color: rgba(0,0,0,0;)\n-webkit-user-modify:read-write-plaintext-only;\n}\n```\n-webkit-user-modify有个副作用，就是输入法不再能够输入多个字符\n\n另外，有些机型去除不了，如小米2\n\n对于按钮类还有个办法，不使用a或者input标签，直接用div标签\n\n参考《如何去除android上a标签产生的边框》\n##### winphone系统a、input标签被点击时产生的半透明灰色背景怎么去掉\n\n```\n<meta name=\"msapplication-tap-highlight\" content=\"no\">\n```\n##### webkit表单元素的默认外观怎么重置\n\n通用\n```\n.css{-webkit-appearance:none;}\n```\n伪元素改变number类型input框的默认样式\n```\ninput[type=number]::-webkit-textfield-decoration-container {\n    background-color: transparent;\n}\ninput[type=number]::-webkit-inner-spin-button {\n     -webkit-appearance: none;\n}\ninput[type=number]::-webkit-outer-spin-button {\n     -webkit-appearance: none;\n}\n```\n##### webkit表单输入框placeholder的颜色值能改变么\n```\ninput::-webkit-input-placeholder{color:#AAAAAA;}\ninput:focus::-webkit-input-placeholder{color:#EEEEEE;}\n```\n##### webkit表单输入框placeholder的文字能换行么\n\nios可以，android不行~\n\n在textarea标签下都可以换行~\n##### IE10（winphone8）表单元素默认外观如何重置\n\n禁用 select 默认下拉箭头\n\n::-ms-expand 适用于表单选择控件下拉箭头的修改，有多个属性值，设置它隐藏 (display:none) 并使用背景图片来修饰可得到我们想要的效果。\n```\nselect::-ms-expand {\ndisplay: none;\n}\n```\n##### 禁用 radio 和 checkbox 默认样式\n\n::-ms-check 适用于表单复选框或单选按钮默认图标的修改，同样有多个属性值，设置它隐藏 (display:none) 并使用背景图片来修饰可得到我们想要的效果。\n```\ninput[type=radio]::-ms-check,input[type=checkbox]::-ms-check{\ndisplay: none;\n}\n```\n##### 禁用PC端表单输入框默认清除按钮\n\n当表单文本输入框输入内容后会显示文本清除按钮，::-ms-clear 适用于该清除按钮的修改，同样设置使它隐藏 (display:none) 并使用背景图片来修饰可得到我们想要的效果。\n```\ninput[type=text]::-ms-clear,input[type=tel]::-ms-clear,input[type=number]::-ms-clear{\ndisplay: none;\n}\n```\n##### 禁止ios 长按时不触发系统的菜单，禁止ios&android长按时下载图片\n```\n.css{-webkit-touch-callout: none}\n```\n##### 禁止ios和android用户选中文字\n```\n.css{-webkit-user-select:none}\n```\n####打电话发短信写邮件怎么实现\n\n打电话\n```\n<a href=\"tel:0755-10086\">打电话给:0755-10086</a>\n```\n发短信，winphone系统无效\n```\n<a href=\"sms:10086\">发短信给: 10086</a>\n```\n写邮件，可参考《移动web页面给用户发送邮件的方法》\n```\n<a href=\"mailto:peun@foxmail.com\">peun@foxmail.com</a>\n```\n##### 模拟按钮hover效果\n\n移动端触摸按钮的效果，可明示用户有些事情正要发生，是一个比较好体验，但是移动设备中并没有鼠标指针，使用css的hover并不能满足我们的需求，还好国外有个激活移动端css的active效果。\n\n直接在body上添加ontouchstart，同样可激活移动端css的active效果，比较推荐这种方式，代码如下：\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no\" name=\"viewport\">\n<meta content=\"yes\" name=\"apple-mobile-web-app-capable\">\n<meta content=\"black\" name=\"apple-mobile-web-app-status-bar-style\">\n<meta content=\"telephone=no\" name=\"format-detection\">\n<meta content=\"email=no\" name=\"format-detection\">\n<style type=\"text/css\">\na{-webkit-tap-highlight-color: rgba(0,0,0,0);}\n.btn-blue{display:block;height:42px;line-height:42px;text-align:center;border-radius:4px;font-size:18px;color:#FFFFFF;background-color: #4185F3;}\n.btn-blue:active{background-color: #357AE8;}\n</style>\n</head>\n<body ontouchstart>\n<div class=\"btn-blue\">按钮</div>\n\n</body>\n</html>\n```\n或者：\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no\" name=\"viewport\">\n<meta content=\"yes\" name=\"apple-mobile-web-app-capable\">\n<meta content=\"black\" name=\"apple-mobile-web-app-status-bar-style\">\n<meta content=\"telephone=no\" name=\"format-detection\">\n<meta content=\"email=no\" name=\"format-detection\">\n<style type=\"text/css\">\na{-webkit-tap-highlight-color: rgba(0,0,0,0);}\n.btn-blue{display:block;height:42px;line-height:42px;text-align:center;border-radius:4px;font-size:18px;color:#FFFFFF;background-color: #4185F3;}\n.btn-blue:active{background-color: #357AE8;}\n</style>\n</head>\n<body>\n\n<div class=\"btn-blue\">按钮</div>\n\n<script type=\"text/javascript\">\ndocument.addEventListener(\"touchstart\", function(){}, true)\n</script>\n</body>\n</html>\n```\n兼容性ios5+、部分android 4+、winphone 8\n\n要做到全兼容的办法，可通过绑定ontouchstart和ontouchend来控制按钮的类名\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no\" name=\"viewport\">\n<meta content=\"yes\" name=\"apple-mobile-web-app-capable\">\n<meta content=\"black\" name=\"apple-mobile-web-app-status-bar-style\">\n<meta content=\"telephone=no\" name=\"format-detection\">\n<meta content=\"email=no\" name=\"format-detection\">\n<style type=\"text/css\">\na{-webkit-tap-highlight-color: rgba(0,0,0,0);}\n.btn-blue{display:block;height:42px;line-height:42px;text-align:center;border-radius:4px;font-size:18px;color:#FFFFFF;background-color: #4185F3;}\n.btn-blue-on{background-color: #357AE8;}\n</style>\n</head>\n<body>\n\n<div class=\"btn-blue\">按钮</div>\n\n<script type=\"text/javascript\">\nvar btnBlue = document.querySelector(\".btn-blue\");\nbtnBlue.ontouchstart = function(){\n    this.className = \"btn-blue btn-blue-on\"\n}\nbtnBlue.ontouchend = function(){\n    this.className = \"btn-blue\"\n}\n</script>\n</body>\n</html>\n```\n#### 屏幕旋转的事件和样式\n事件\n\nwindow.orientation，取值：正负90表示横屏模式、0和180表现为竖屏模式；\n```\nwindow.onorientationchange = function(){\n    switch(window.orientation){\n        case -90:\n        case 90:\n        alert(\"横屏:\" + window.orientation);\n        case 0:\n        case 180:\n        alert(\"竖屏:\" + window.orientation);\n        break;\n    }\n}\n```\n样式\n```\n//竖屏时使用的样式\n@media all and (orientation:portrait) {\n.css{}\n}\n\n//横屏时使用的样式\n@media all and (orientation:landscape) {\n.css{}\n}\n```\n#### audio元素和video元素在ios和andriod中无法自动播放\n\n应对方案：触屏即播\n```\n$('html').one('touchstart',function(){\n    audio.play()\n})\n```\n#### 摇一摇功能\n\nHTML5 deviceMotion：封装了运动传感器数据的事件，可以获取手机运动状态下的运动加速度等数据。\n#### 手机拍照和上传图片\n\n<input type=\"file\">的accept 属性\n```\n<!-- 选择照片 -->\n<input type=file accept=\"image/*\">\n<!-- 选择视频 -->\n<input type=file accept=\"video/*\">\n```\n使用总结：\n\n    ios 有拍照、录像、选取本地图片功能\n    部分android只有选取本地图片功能\n    winphone不支持\n    input控件默认外观丑陋\n\n#### 微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整\n\n原因\n\n    android侧是复写了layoutinflater 对textview做了统一处理\n    ios侧是修改了body.style.webkitTextSizeAdjust值\n\n解决方案：\n\n    android使用以下代码，该接口只在微信浏览器下有效\n```\n/**\n * 页面加入这段代码可使Android机器页面不再受到用户字体缩放强制改变大小\n * 但是会有一个1秒左右的延迟，期间可以考虑通过loading展示\n * 仅供参考\n */\n(function(){\n    if (typeof(WeixinJSBridge) == \"undefined\") {\n        document.addEventListener(\"WeixinJSBridgeReady\", function (e) {\n            setTimeout(function(){\n                WeixinJSBridge.invoke('setFontSizeCallback',{\"fontSize\":0}, function(res) {\n                    alert(JSON.stringify(res));\n                });\n            },0);\n        });\n    } else {\n        setTimeout(function(){\n            WeixinJSBridge.invoke('setFontSizeCallback',{\"fontSize\":0}, function(res) {\n                alert(JSON.stringify(res));\n            });\n        },0);\n    }\n})();\n```\n\nios使用-webkit-text-size-adjust禁止调整字体大小\n```\nbody{-webkit-text-size-adjust: 100%!important;}\n```\n最好的解决方案：\n\n    整个页面用rem或者百分比布局\n#### 消除transition闪屏\n\n网络都是这么写的，但我并没有测试出来\n```\n.css{\n/*设置内嵌的元素在 3D 空间如何呈现：保留 3D*/\n-webkit-transform-style: preserve-3d;\n/*（设置进行转换的元素的背面在面对用户时是否可见：隐藏）*/\n-webkit-backface-visibility: hidden;\n}\n```\n#### 开启硬件加速\n\n    解决页面闪白\n    保证动画流畅\n```\n.css {\n   -webkit-transform: translate3d(0, 0, 0);\n   -moz-transform: translate3d(0, 0, 0);\n   -ms-transform: translate3d(0, 0, 0);\n   transform: translate3d(0, 0, 0);\n}\n```\n#### 取消input在ios下，输入的时候英文首字母的默认大写\n```\n<input autocapitalize=\"off\" autocorrect=\"off\" />\n```\n##### android 上去掉语音输入按钮\n```\ninput::-webkit-input-speech-button {display: none}\n```\nandroid 2.3 bug\n\n    @-webkit-keyframes 需要以0%开始100%结束，0%的百分号不能去掉\n    after和before伪类无法使用动画animation\n    border-radius不支持%单位\n    translate百分比的写法和scale在一起会导致失效，例如-webkit-transform: translate(-50%,-50%) scale(-0.5, 1)\n\nandroid 4.x bug\n\n    三星 Galaxy S4中自带浏览器不支持border-radius缩写\n    同时设置border-radius和背景色的时候，背景色会溢出到圆角以外部分\n    部分手机(如三星)，a链接支持鼠标:visited事件，也就是说链接访问后文字变为紫色\n    android无法同时播放多音频audio\n#### 设计高性能CSS3动画的几个要素\n\n        尽可能地使用合成属性transform和opacity来设计CSS3动画，不使用position的left和top来定位\n        利用translate3D开启GPU加速\n\n    参考《High Performance Animations》\n#### fixed bug\n\n        ios下fixed元素容易定位出错，软键盘弹出时，影响fixed元素定位\n        android下fixed表现要比iOS更好，软键盘弹出时，不会影响fixed元素定位\n        ios4下不支持position:fixed\n\n    解决方案\n\n        可用isroll.js，暂无完美方案\n\n    参考\n\n    《移动端web页面使用position:fixed问题总结》\n\n    《使用iScroll.js解决ios4下不支持position:fixed的问题》\n#### 如何阻止windows Phone的默认触摸事件\n\n    winphone下默认触摸事件事件使用e.preventDefault是无效的\n\n    目前解决方法是使用样式来禁用\n```\n\n\nhtml{-ms-touch-action: none;}/* 禁止winphone默认触摸事件 */\n\n```\n#### 播放视频不全屏\n```\n<!--\n1.目前只有ios7+、winphone8+支持自动播放\n2.支持Airplay的设备（如：音箱、Apple TV)播放\nx-webkit-airplay=\"true\"\n3.播放视频不全屏，ios7、、winphone8+支持，部分android4+支持（含华为、小米、魅族）\nwebkit-playsinline=\"true\"\n4.ios 10 : playsinline\n5.ios 8、9 ：https://github.com/bfred-it/iphone-inline-video\n-->\n<video x-webkit-airplay=\"true\" webkit-playsinline=\"true\" preload=\"auto\" autoplay src=\"http://\"></video>\n<video playsinline preload=\"auto\" autoplay src=\"http://\"></video>\n```\n\n常用的移动端框架\nzepto.js\n\n语法与jquery几乎一样，会jquery基本会zepto~\n\n最新版本已经更新到1.16\n\n官网：http://zeptojs.com/\n\n中文(非官网)：http://www.css88.com/doc/zeptojs_api/\n\n常使用的扩展模块：\n\n浏览器检测：https://github.com/madrobby/zepto/blob/master/src/detect.js\n\ntap事件：https://github.com/madrobby/zepto/blob/master/src/touch.js\niscroll.js\n\n解决页面不支持弹性滚动，不支持fixed引起的问题~\n\n实现下拉刷新，滑屏，缩放等功能~\n\n最新版本已经更新到5.0\n\n官网：http://cubiq.org/iscroll-5\nunderscore.js\n\n笔者没用过，不过听说好用，推荐给大家~\n\n该库提供了一整套函数式编程的实用功能，但是没有扩展任何JavaScript内置对象。\n\n最新版本已经更新到1.8.2\n\n官网：http://underscorejs.org/\n滑屏框架\n\n适合上下滑屏、左右滑屏等滑屏切换页面的效果\n\nslip.js\n\niSlider.js\n\nfullpage.js\n\nswiper.js\nflex布局\n\nflex布局目前可使用在移动中，并非所有的语法都全兼容，但以下写法笔者实践过，效果良好~\n```\n/* ============================================================\n   flex：定义布局为盒模型\n   flex-v：盒模型垂直布局\n   flex-1：子元素占据剩余的空间\n   flex-align-center：子元素垂直居中\n   flex-pack-center：子元素水平居中\n   flex-pack-justify：子元素两端对齐\n   兼容性：ios 4+、android 2.3+、winphone8+\n   ============================================================ */\n.flex{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}\n.flex-v{-webkit-box-orient:vertical;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}\n.flex-1{-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;}\n.flex-align-center{-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;}\n.flex-pack-center{-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}\n.flex-pack-justify{-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}\n```\n示例：两端对齐\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no\" name=\"viewport\">\n<meta content=\"yes\" name=\"apple-mobile-web-app-capable\">\n<meta content=\"black\" name=\"apple-mobile-web-app-status-bar-style\">\n<meta content=\"telephone=no\" name=\"format-detection\">\n<meta content=\"email=no\" name=\"format-detection\">\n<style type=\"text/css\">\n/* ============================================================\n   flex：定义布局为盒模型\n   flex-v：盒模型垂直布局\n   flex-1：子元素占据剩余的空间\n   flex-align-center：子元素垂直居中\n   flex-pack-center：子元素水平居中\n   flex-pack-justify：子元素两端对齐\n   兼容性：ios 4+、android 2.3+、winphone8+\n   ============================================================ */\n.flex{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}\n.flex-v{-webkit-box-orient:vertical;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}\n.flex-1{-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;}\n.flex-align-center{-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;}\n.flex-pack-center{-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}\n.flex-pack-justify{-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}\n</style>\n</head>\n<body>\n\n<div class=\"flex flex-pack-justify\">\n    <div>模块一</div>\n    <div>模块二</div>\n    <div>模块三</div>\n    <div>模块四</div>\n</div>\n\n</body>\n</html>\n```\n使用注意：\n\n    flex下的子元素必须为块级元素，非块级元素在android2.3机器下flex失效\n    flex下的子元素宽度和高度不能超过父元素，否则会导致子元素定位错误，例如水平垂直居中\n\n参考：\n\nflexyboxes\n\n“老”的Flexbox和“新”的Flexbox\n\n跨浏览器的Flexbox\nFastClick\n\n消除在移动浏览器上触发click事件与一个物理Tap(敲击)之间的300延迟\n\n参考《FastClick》\nSea.js\n\n提供简单、极致的模块化开发体验\n\n    简单友好的模块定义规范：Sea.js 遵循 CMD 规范，可以像 Node.js 一般书写模块代码。\n    自然直观的代码组织方式：依赖的自动加载、配置的简洁清晰，可以让我们更多地享受编码的乐趣。\n\n地址：http://seajs.org/docs/\n","source":"_posts/移动web资源整理.md","raw":"---\ntitle: 移动web资源整理\ntags: [前端,移动端,WEB]\ncategories: 移动端\n---\n#### 目录\n\n  meta基础知识\n        H5页面窗口自动调整到设备宽度，并禁止用户缩放页面\n        忽略将页面中的数字识别为电话号码\n        忽略Android平台中对邮箱地址的识别\n        当网站添加到主屏幕快速启动方式，可隐藏地址栏，仅针对ios的safari (new)\n        将网站添加到主屏幕快速启动方式，仅针对ios的safari顶端状态条的样式\n        viewport模板 (new)\n    常见问题\n        移动端如何定义字体font-family\n        移动端字体单位font-size选择px还是rem (new)\n        移动端touch事件(区分webkit 和 winphone) (new)\n        移动端click屏幕产生200-300 ms的延迟响应\n        触摸事件的响应顺序\n        什么是Retina 显示屏，带来了什么问题\n        ios系统中元素被触摸时产生的半透明灰色遮罩怎么去掉\n        部分android系统中元素被点击时产生的边框怎么去掉\n        winphone系统a、input标签被点击时产生的半透明灰色背景怎么去掉\n        webkit表单元素的默认外观怎么重置 (new)\n        webkit表单输入框placeholder的颜色值能改变么\n        webkit表单输入框placeholder的文字能换行么\n        IE10（winphone8）表单元素默认外观如何重置\n        禁止ios 长按时不触发系统的菜单，禁止ios&android长按时下载图片\n        禁止ios和android用户选中文字\n        打电话发短信写邮件怎么实现\n        模拟按钮hover效果 (new)\n        屏幕旋转的事件和样式\n        audio元素和video元素在ios和andriod中无法自动播放\n        摇一摇功能  (new)\n        手机拍照和上传图片\n        微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整\n        消除transition闪屏\n        开启硬件加速\n        取消input在ios下，输入的时候英文首字母的默认大写\n        android上去掉语音输入按钮\n        android 2.3 bug\n        android 4.x bug\n        设计高性能CSS3动画的几个要素\n        fixed bug\n        如何阻止windows Phone的默认触摸事件\n        播放视频不全屏 (new)\n    常用的移动端框架\n        zepto.js\n        iscroll.js\n        underscore.js\n        滑屏框架\n        flex布局 (new)\n        FastClick\n        Sea.js\n##### meta基础知识\nH5页面窗口自动调整到设备宽度，并禁止用户缩放页面\n```\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no\" />\n```\n忽略将页面中的数字识别为电话号码\n```\n<meta name=\"format-detection\" content=\"telephone=no\" />\n```\n忽略Android平台中对邮箱地址的识别\n```\n<meta name=\"format-detection\" content=\"email=no\" />\n```\n当网站添加到主屏幕快速启动方式，可隐藏地址栏，仅针对ios的safari\n```\n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n<!-- ios7.0版本以后，safari上已看不到效果 -->\n```\n将网站添加到主屏幕快速启动方式，仅针对ios的safari顶端状态条的样式\n```\n<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" />\n<!-- 可选default、black、black-translucent -->\n```\n##### viewport模板\n\nviewport模板——通用\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no\" name=\"viewport\">\n<meta content=\"yes\" name=\"apple-mobile-web-app-capable\">\n<meta content=\"black\" name=\"apple-mobile-web-app-status-bar-style\">\n<meta content=\"telephone=no\" name=\"format-detection\">\n<meta content=\"email=no\" name=\"format-detection\">\n<title>标题</title>\n<link rel=\"stylesheet\" href=\"index.css\">\n</head>\n\n<body>\n这里开始内容\n</body>\n\n</html>\n```\nviewport模板 - target-densitydpi=device-dpi，android 2.3.5以下版本不支持\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=750, user-scalable=no, target-densitydpi=device-dpi\"><!-- width取值与页面定义的宽度一致 -->\n<meta content=\"yes\" name=\"apple-mobile-web-app-capable\">\n<meta content=\"black\" name=\"apple-mobile-web-app-status-bar-style\">\n<meta content=\"telephone=no\" name=\"format-detection\">\n<meta content=\"email=no\" name=\"format-detection\">\n<title>标题</title>\n<link rel=\"stylesheet\" href=\"index.css\">\n</head>\n\n<body>\n这里开始内容\n</body>\n\n</html>\n```\n参考案例：http://action.weixin.qq.com/payact/readtemplate?t=mobile/2015/wxzfsht/index_tmpl\n#### 常见问题\n##### 移动端如何定义字体font-family\n\n中文字体使用系统默认即可，英文用Helvetica\n```\n@font-face {\n    font-family: 'MicrosoftYaHei';\n    src: url('MicrosoftYaHei.eot'); /* IE9 Compat Modes */\n    src: url('MicrosoftYaHei.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\n             url('MicrosoftYaHei.woff') format('woff'), /* Modern Browsers */\n             url('MicrosoftYaHei.ttf')  format('truetype'), /* Safari, Android, iOS */\n             url('MicrosoftYaHei.svg#MicrosoftYaHei') format('svg'); /* Legacy iOS */\n   }\n```\n```\n/* 移动端定义字体的代码 */\nbody{font-family:Helvetica;}\n```\n##### 移动端字体单位font-size选择px还是rem\n\n对于只需要适配少部分手机设备，且分辨率对页面影响不大的，使用px即可\n\n对于需要适配各种移动设备，使用rem，例如只需要适配iPhone和iPad等分辨率差别比较挺大的设备\n\nrem配置参考，适合视觉稿宽度为640px的：\n```\n\n\n<meta content=\"width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no\" name=\"viewport\">\n\n\n```\n```\nhtml{font-size:10px}\n@media screen and (min-width:321px) and (max-width:375px){html{font-size:11px}}\n@media screen and (min-width:376px) and (max-width:414px){html{font-size:12px}}\n@media screen and (min-width:415px) and (max-width:639px){html{font-size:15px}}\n@media screen and (min-width:640px) and (max-width:719px){html{font-size:20px}}\n@media screen and (min-width:720px) and (max-width:749px){html{font-size:22.5px}}\n@media screen and (min-width:750px) and (max-width:799px){html{font-size:23.5px}}\n@media screen and (min-width:800px){html{font-size:25px}}\n```\n##### 移动端touch事件(区分webkit 和 winphone)\n\n当用户手指放在移动设备在屏幕上滑动会触发的touch事件\n\n以下支持webkit\n\n    touchstart——当手指触碰屏幕时候发生。不管当前有多少只手指\n    touchmove——当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，会调用event的preventDefault()可以阻止默认情况的发生：阻止页面滚动\n    touchend——当手指离开屏幕时触发\n    touchcancel——系统停止跟踪触摸时候会触发。例如在触摸过程中突然页面alert()一个提示框，此时会触发该事件，这个事件比较少用\n\nTouchEvent\n\n    touches：屏幕上所有手指的信息\n    targetTouches：手指在目标区域的手指信息\n    changedTouches：最近一次触发该事件的手指信息\n    touchend时，touches与targetTouches信息会被删除，changedTouches保存的最后一次的信息，最好用于计算手指信息\n\n参数信息(changedTouches[0])\n\n    clientX、clientY在显示区的坐标\n    target：当前元素\n\n参考：https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent\n\n以下支持winphone 8\n\n    MSPointerDown——当手指触碰屏幕时候发生。不管当前有多少只手指\n    MSPointerMove——当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，会调用css的html{-ms-touch-action: none;}可以阻止默认情况的发生：阻止页面滚动\n    MSPointerUp——当手指离开屏幕时触发\n\n##### 移动端click屏幕产生200-300 ms的延迟响应\n\n移动设备上的web网页是有300ms延迟的，玩玩会造成按钮点击延迟甚至是点击失效。\n\n以下是历史原因，来源一个公司内一个同事的分享：\n\n2007年苹果发布首款iphone上IOS系统搭载的safari为了将适用于PC端上大屏幕的网页能比较好的展示在手机端上，使用了双击缩放(double tap to zoom)的方案，比如你在手机上用浏览器打开一个PC上的网页，你可能在看到页面内容虽然可以撑满整个屏幕，但是字体、图片都很小看不清，此时可以快速双击屏幕上的某一部分，你就能看清该部分放大后的内容，再次双击后能回到原始状态。\n\n双击缩放是指用手指在屏幕上快速点击两次，iOS 自带的 Safari 浏览器会将网页缩放至原始比例。\n\n原因就出在浏览器需要如何判断快速点击上，当用户在屏幕上单击某一个元素时候，例如跳转链接<a href=\"#\"></a>，此处浏览器会先捕获该次单击，但浏览器不能决定用户是单纯要点击链接还是要双击该部分区域进行缩放操作，所以，捕获第一次单击后，浏览器会先Hold一段时间t，如果在t时间区间里用户未进行下一次点击，则浏览器会做单击跳转链接的处理，如果t时间里用户进行了第二次单击操作，则浏览器会禁止跳转，转而进行对该部分区域页面的缩放操作。那么这个时间区间t有多少呢？在IOS safari下，大概为300毫秒。这就是延迟的由来。造成的后果用户纯粹单击页面，页面需要过一段时间才响应，给用户慢体验感觉，对于web开发者来说是，页面js捕获click事件的回调函数处理，需要300ms后才生效，也就间接导致影响其他业务逻辑的处理。\n\n解决方案：\n\n    fastclick可以解决在手机上点击事件的300ms延迟\n    zepto的touch模块，tap事件也是为了解决在click的延迟问题\n\n##### 触摸事件的响应顺序\n```\n1、ontouchstart\n2、ontouchmove\n3、ontouchend\n4、onclick\n```\n解决300ms延迟的问题，也可以通过绑定ontouchstart事件，加快对事件的响应\n##### 什么是Retina 显示屏，带来了什么问题\n\nretina：一种具备超高像素密度的液晶屏，同样大小的屏幕上显示的像素点由1个变为多个，如在同样带下的屏幕上，苹果设备的retina显示屏中，像素点1个变为4个\n\n在高清显示屏中的位图被放大，图片会变得模糊，因此移动端的视觉稿通常会设计为传统PC的2倍\n\n那么，前端的应对方案是：\n\n设计稿切出来的图片长宽保证为偶数，并使用backgroud-size把图片缩小为原来的1/2\n\n```\n//例如图片宽高为：200px*200px，那么写法如下\n.css{width:100px;height:100px;background-size:100px 100px;}\n```\n其它元素的取值为原来的1/2，例如视觉稿40px的字体，使用样式的写法为20px\n```\n.css{font-size:20px}\n```\n##### ios系统中元素被触摸时产生的半透明灰色遮罩怎么去掉\n\nios用户点击一个链接，会出现一个半透明灰色遮罩, 如果想要禁用，可设置-webkit-tap-highlight-color的alpha值为0，也就是属性值的最后一位设置为0就可以去除半透明灰色遮罩\n```\na,button,input,textarea{-webkit-tap-highlight-color: rgba(0,0,0,0;)}\n```\n##### 部分android系统中元素被点击时产生的边框怎么去掉\n\nandroid用户点击一个链接，会出现一个边框或者半透明灰色遮罩, 不同生产商定义出来额效果不一样，可设置-webkit-tap-highlight-color的alpha值为0去除部分机器自带的效果\n```\na,button,input,textarea{\n-webkit-tap-highlight-color: rgba(0,0,0,0;)\n-webkit-user-modify:read-write-plaintext-only;\n}\n```\n-webkit-user-modify有个副作用，就是输入法不再能够输入多个字符\n\n另外，有些机型去除不了，如小米2\n\n对于按钮类还有个办法，不使用a或者input标签，直接用div标签\n\n参考《如何去除android上a标签产生的边框》\n##### winphone系统a、input标签被点击时产生的半透明灰色背景怎么去掉\n\n```\n<meta name=\"msapplication-tap-highlight\" content=\"no\">\n```\n##### webkit表单元素的默认外观怎么重置\n\n通用\n```\n.css{-webkit-appearance:none;}\n```\n伪元素改变number类型input框的默认样式\n```\ninput[type=number]::-webkit-textfield-decoration-container {\n    background-color: transparent;\n}\ninput[type=number]::-webkit-inner-spin-button {\n     -webkit-appearance: none;\n}\ninput[type=number]::-webkit-outer-spin-button {\n     -webkit-appearance: none;\n}\n```\n##### webkit表单输入框placeholder的颜色值能改变么\n```\ninput::-webkit-input-placeholder{color:#AAAAAA;}\ninput:focus::-webkit-input-placeholder{color:#EEEEEE;}\n```\n##### webkit表单输入框placeholder的文字能换行么\n\nios可以，android不行~\n\n在textarea标签下都可以换行~\n##### IE10（winphone8）表单元素默认外观如何重置\n\n禁用 select 默认下拉箭头\n\n::-ms-expand 适用于表单选择控件下拉箭头的修改，有多个属性值，设置它隐藏 (display:none) 并使用背景图片来修饰可得到我们想要的效果。\n```\nselect::-ms-expand {\ndisplay: none;\n}\n```\n##### 禁用 radio 和 checkbox 默认样式\n\n::-ms-check 适用于表单复选框或单选按钮默认图标的修改，同样有多个属性值，设置它隐藏 (display:none) 并使用背景图片来修饰可得到我们想要的效果。\n```\ninput[type=radio]::-ms-check,input[type=checkbox]::-ms-check{\ndisplay: none;\n}\n```\n##### 禁用PC端表单输入框默认清除按钮\n\n当表单文本输入框输入内容后会显示文本清除按钮，::-ms-clear 适用于该清除按钮的修改，同样设置使它隐藏 (display:none) 并使用背景图片来修饰可得到我们想要的效果。\n```\ninput[type=text]::-ms-clear,input[type=tel]::-ms-clear,input[type=number]::-ms-clear{\ndisplay: none;\n}\n```\n##### 禁止ios 长按时不触发系统的菜单，禁止ios&android长按时下载图片\n```\n.css{-webkit-touch-callout: none}\n```\n##### 禁止ios和android用户选中文字\n```\n.css{-webkit-user-select:none}\n```\n####打电话发短信写邮件怎么实现\n\n打电话\n```\n<a href=\"tel:0755-10086\">打电话给:0755-10086</a>\n```\n发短信，winphone系统无效\n```\n<a href=\"sms:10086\">发短信给: 10086</a>\n```\n写邮件，可参考《移动web页面给用户发送邮件的方法》\n```\n<a href=\"mailto:peun@foxmail.com\">peun@foxmail.com</a>\n```\n##### 模拟按钮hover效果\n\n移动端触摸按钮的效果，可明示用户有些事情正要发生，是一个比较好体验，但是移动设备中并没有鼠标指针，使用css的hover并不能满足我们的需求，还好国外有个激活移动端css的active效果。\n\n直接在body上添加ontouchstart，同样可激活移动端css的active效果，比较推荐这种方式，代码如下：\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no\" name=\"viewport\">\n<meta content=\"yes\" name=\"apple-mobile-web-app-capable\">\n<meta content=\"black\" name=\"apple-mobile-web-app-status-bar-style\">\n<meta content=\"telephone=no\" name=\"format-detection\">\n<meta content=\"email=no\" name=\"format-detection\">\n<style type=\"text/css\">\na{-webkit-tap-highlight-color: rgba(0,0,0,0);}\n.btn-blue{display:block;height:42px;line-height:42px;text-align:center;border-radius:4px;font-size:18px;color:#FFFFFF;background-color: #4185F3;}\n.btn-blue:active{background-color: #357AE8;}\n</style>\n</head>\n<body ontouchstart>\n<div class=\"btn-blue\">按钮</div>\n\n</body>\n</html>\n```\n或者：\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no\" name=\"viewport\">\n<meta content=\"yes\" name=\"apple-mobile-web-app-capable\">\n<meta content=\"black\" name=\"apple-mobile-web-app-status-bar-style\">\n<meta content=\"telephone=no\" name=\"format-detection\">\n<meta content=\"email=no\" name=\"format-detection\">\n<style type=\"text/css\">\na{-webkit-tap-highlight-color: rgba(0,0,0,0);}\n.btn-blue{display:block;height:42px;line-height:42px;text-align:center;border-radius:4px;font-size:18px;color:#FFFFFF;background-color: #4185F3;}\n.btn-blue:active{background-color: #357AE8;}\n</style>\n</head>\n<body>\n\n<div class=\"btn-blue\">按钮</div>\n\n<script type=\"text/javascript\">\ndocument.addEventListener(\"touchstart\", function(){}, true)\n</script>\n</body>\n</html>\n```\n兼容性ios5+、部分android 4+、winphone 8\n\n要做到全兼容的办法，可通过绑定ontouchstart和ontouchend来控制按钮的类名\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no\" name=\"viewport\">\n<meta content=\"yes\" name=\"apple-mobile-web-app-capable\">\n<meta content=\"black\" name=\"apple-mobile-web-app-status-bar-style\">\n<meta content=\"telephone=no\" name=\"format-detection\">\n<meta content=\"email=no\" name=\"format-detection\">\n<style type=\"text/css\">\na{-webkit-tap-highlight-color: rgba(0,0,0,0);}\n.btn-blue{display:block;height:42px;line-height:42px;text-align:center;border-radius:4px;font-size:18px;color:#FFFFFF;background-color: #4185F3;}\n.btn-blue-on{background-color: #357AE8;}\n</style>\n</head>\n<body>\n\n<div class=\"btn-blue\">按钮</div>\n\n<script type=\"text/javascript\">\nvar btnBlue = document.querySelector(\".btn-blue\");\nbtnBlue.ontouchstart = function(){\n    this.className = \"btn-blue btn-blue-on\"\n}\nbtnBlue.ontouchend = function(){\n    this.className = \"btn-blue\"\n}\n</script>\n</body>\n</html>\n```\n#### 屏幕旋转的事件和样式\n事件\n\nwindow.orientation，取值：正负90表示横屏模式、0和180表现为竖屏模式；\n```\nwindow.onorientationchange = function(){\n    switch(window.orientation){\n        case -90:\n        case 90:\n        alert(\"横屏:\" + window.orientation);\n        case 0:\n        case 180:\n        alert(\"竖屏:\" + window.orientation);\n        break;\n    }\n}\n```\n样式\n```\n//竖屏时使用的样式\n@media all and (orientation:portrait) {\n.css{}\n}\n\n//横屏时使用的样式\n@media all and (orientation:landscape) {\n.css{}\n}\n```\n#### audio元素和video元素在ios和andriod中无法自动播放\n\n应对方案：触屏即播\n```\n$('html').one('touchstart',function(){\n    audio.play()\n})\n```\n#### 摇一摇功能\n\nHTML5 deviceMotion：封装了运动传感器数据的事件，可以获取手机运动状态下的运动加速度等数据。\n#### 手机拍照和上传图片\n\n<input type=\"file\">的accept 属性\n```\n<!-- 选择照片 -->\n<input type=file accept=\"image/*\">\n<!-- 选择视频 -->\n<input type=file accept=\"video/*\">\n```\n使用总结：\n\n    ios 有拍照、录像、选取本地图片功能\n    部分android只有选取本地图片功能\n    winphone不支持\n    input控件默认外观丑陋\n\n#### 微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整\n\n原因\n\n    android侧是复写了layoutinflater 对textview做了统一处理\n    ios侧是修改了body.style.webkitTextSizeAdjust值\n\n解决方案：\n\n    android使用以下代码，该接口只在微信浏览器下有效\n```\n/**\n * 页面加入这段代码可使Android机器页面不再受到用户字体缩放强制改变大小\n * 但是会有一个1秒左右的延迟，期间可以考虑通过loading展示\n * 仅供参考\n */\n(function(){\n    if (typeof(WeixinJSBridge) == \"undefined\") {\n        document.addEventListener(\"WeixinJSBridgeReady\", function (e) {\n            setTimeout(function(){\n                WeixinJSBridge.invoke('setFontSizeCallback',{\"fontSize\":0}, function(res) {\n                    alert(JSON.stringify(res));\n                });\n            },0);\n        });\n    } else {\n        setTimeout(function(){\n            WeixinJSBridge.invoke('setFontSizeCallback',{\"fontSize\":0}, function(res) {\n                alert(JSON.stringify(res));\n            });\n        },0);\n    }\n})();\n```\n\nios使用-webkit-text-size-adjust禁止调整字体大小\n```\nbody{-webkit-text-size-adjust: 100%!important;}\n```\n最好的解决方案：\n\n    整个页面用rem或者百分比布局\n#### 消除transition闪屏\n\n网络都是这么写的，但我并没有测试出来\n```\n.css{\n/*设置内嵌的元素在 3D 空间如何呈现：保留 3D*/\n-webkit-transform-style: preserve-3d;\n/*（设置进行转换的元素的背面在面对用户时是否可见：隐藏）*/\n-webkit-backface-visibility: hidden;\n}\n```\n#### 开启硬件加速\n\n    解决页面闪白\n    保证动画流畅\n```\n.css {\n   -webkit-transform: translate3d(0, 0, 0);\n   -moz-transform: translate3d(0, 0, 0);\n   -ms-transform: translate3d(0, 0, 0);\n   transform: translate3d(0, 0, 0);\n}\n```\n#### 取消input在ios下，输入的时候英文首字母的默认大写\n```\n<input autocapitalize=\"off\" autocorrect=\"off\" />\n```\n##### android 上去掉语音输入按钮\n```\ninput::-webkit-input-speech-button {display: none}\n```\nandroid 2.3 bug\n\n    @-webkit-keyframes 需要以0%开始100%结束，0%的百分号不能去掉\n    after和before伪类无法使用动画animation\n    border-radius不支持%单位\n    translate百分比的写法和scale在一起会导致失效，例如-webkit-transform: translate(-50%,-50%) scale(-0.5, 1)\n\nandroid 4.x bug\n\n    三星 Galaxy S4中自带浏览器不支持border-radius缩写\n    同时设置border-radius和背景色的时候，背景色会溢出到圆角以外部分\n    部分手机(如三星)，a链接支持鼠标:visited事件，也就是说链接访问后文字变为紫色\n    android无法同时播放多音频audio\n#### 设计高性能CSS3动画的几个要素\n\n        尽可能地使用合成属性transform和opacity来设计CSS3动画，不使用position的left和top来定位\n        利用translate3D开启GPU加速\n\n    参考《High Performance Animations》\n#### fixed bug\n\n        ios下fixed元素容易定位出错，软键盘弹出时，影响fixed元素定位\n        android下fixed表现要比iOS更好，软键盘弹出时，不会影响fixed元素定位\n        ios4下不支持position:fixed\n\n    解决方案\n\n        可用isroll.js，暂无完美方案\n\n    参考\n\n    《移动端web页面使用position:fixed问题总结》\n\n    《使用iScroll.js解决ios4下不支持position:fixed的问题》\n#### 如何阻止windows Phone的默认触摸事件\n\n    winphone下默认触摸事件事件使用e.preventDefault是无效的\n\n    目前解决方法是使用样式来禁用\n```\n\n\nhtml{-ms-touch-action: none;}/* 禁止winphone默认触摸事件 */\n\n```\n#### 播放视频不全屏\n```\n<!--\n1.目前只有ios7+、winphone8+支持自动播放\n2.支持Airplay的设备（如：音箱、Apple TV)播放\nx-webkit-airplay=\"true\"\n3.播放视频不全屏，ios7、、winphone8+支持，部分android4+支持（含华为、小米、魅族）\nwebkit-playsinline=\"true\"\n4.ios 10 : playsinline\n5.ios 8、9 ：https://github.com/bfred-it/iphone-inline-video\n-->\n<video x-webkit-airplay=\"true\" webkit-playsinline=\"true\" preload=\"auto\" autoplay src=\"http://\"></video>\n<video playsinline preload=\"auto\" autoplay src=\"http://\"></video>\n```\n\n常用的移动端框架\nzepto.js\n\n语法与jquery几乎一样，会jquery基本会zepto~\n\n最新版本已经更新到1.16\n\n官网：http://zeptojs.com/\n\n中文(非官网)：http://www.css88.com/doc/zeptojs_api/\n\n常使用的扩展模块：\n\n浏览器检测：https://github.com/madrobby/zepto/blob/master/src/detect.js\n\ntap事件：https://github.com/madrobby/zepto/blob/master/src/touch.js\niscroll.js\n\n解决页面不支持弹性滚动，不支持fixed引起的问题~\n\n实现下拉刷新，滑屏，缩放等功能~\n\n最新版本已经更新到5.0\n\n官网：http://cubiq.org/iscroll-5\nunderscore.js\n\n笔者没用过，不过听说好用，推荐给大家~\n\n该库提供了一整套函数式编程的实用功能，但是没有扩展任何JavaScript内置对象。\n\n最新版本已经更新到1.8.2\n\n官网：http://underscorejs.org/\n滑屏框架\n\n适合上下滑屏、左右滑屏等滑屏切换页面的效果\n\nslip.js\n\niSlider.js\n\nfullpage.js\n\nswiper.js\nflex布局\n\nflex布局目前可使用在移动中，并非所有的语法都全兼容，但以下写法笔者实践过，效果良好~\n```\n/* ============================================================\n   flex：定义布局为盒模型\n   flex-v：盒模型垂直布局\n   flex-1：子元素占据剩余的空间\n   flex-align-center：子元素垂直居中\n   flex-pack-center：子元素水平居中\n   flex-pack-justify：子元素两端对齐\n   兼容性：ios 4+、android 2.3+、winphone8+\n   ============================================================ */\n.flex{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}\n.flex-v{-webkit-box-orient:vertical;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}\n.flex-1{-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;}\n.flex-align-center{-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;}\n.flex-pack-center{-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}\n.flex-pack-justify{-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}\n```\n示例：两端对齐\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no\" name=\"viewport\">\n<meta content=\"yes\" name=\"apple-mobile-web-app-capable\">\n<meta content=\"black\" name=\"apple-mobile-web-app-status-bar-style\">\n<meta content=\"telephone=no\" name=\"format-detection\">\n<meta content=\"email=no\" name=\"format-detection\">\n<style type=\"text/css\">\n/* ============================================================\n   flex：定义布局为盒模型\n   flex-v：盒模型垂直布局\n   flex-1：子元素占据剩余的空间\n   flex-align-center：子元素垂直居中\n   flex-pack-center：子元素水平居中\n   flex-pack-justify：子元素两端对齐\n   兼容性：ios 4+、android 2.3+、winphone8+\n   ============================================================ */\n.flex{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}\n.flex-v{-webkit-box-orient:vertical;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}\n.flex-1{-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;}\n.flex-align-center{-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;}\n.flex-pack-center{-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}\n.flex-pack-justify{-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}\n</style>\n</head>\n<body>\n\n<div class=\"flex flex-pack-justify\">\n    <div>模块一</div>\n    <div>模块二</div>\n    <div>模块三</div>\n    <div>模块四</div>\n</div>\n\n</body>\n</html>\n```\n使用注意：\n\n    flex下的子元素必须为块级元素，非块级元素在android2.3机器下flex失效\n    flex下的子元素宽度和高度不能超过父元素，否则会导致子元素定位错误，例如水平垂直居中\n\n参考：\n\nflexyboxes\n\n“老”的Flexbox和“新”的Flexbox\n\n跨浏览器的Flexbox\nFastClick\n\n消除在移动浏览器上触发click事件与一个物理Tap(敲击)之间的300延迟\n\n参考《FastClick》\nSea.js\n\n提供简单、极致的模块化开发体验\n\n    简单友好的模块定义规范：Sea.js 遵循 CMD 规范，可以像 Node.js 一般书写模块代码。\n    自然直观的代码组织方式：依赖的自动加载、配置的简洁清晰，可以让我们更多地享受编码的乐趣。\n\n地址：http://seajs.org/docs/\n","slug":"移动web资源整理","published":1,"date":"2017-05-26T05:30:48.449Z","updated":"2017-05-26T05:48:08.445Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmttc002a4wvs65g4e6bv","content":"<h4 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h4><p>  meta基础知识<br>        H5页面窗口自动调整到设备宽度，并禁止用户缩放页面<br>        忽略将页面中的数字识别为电话号码<br>        忽略Android平台中对邮箱地址的识别<br>        当网站添加到主屏幕快速启动方式，可隐藏地址栏，仅针对ios的safari (new)<br>        将网站添加到主屏幕快速启动方式，仅针对ios的safari顶端状态条的样式<br>        viewport模板 (new)<br>    常见问题<br>        移动端如何定义字体font-family<br>        移动端字体单位font-size选择px还是rem (new)<br>        移动端touch事件(区分webkit 和 winphone) (new)<br>        移动端click屏幕产生200-300 ms的延迟响应<br>        触摸事件的响应顺序<br>        什么是Retina 显示屏，带来了什么问题<br>        ios系统中元素被触摸时产生的半透明灰色遮罩怎么去掉<br>        部分android系统中元素被点击时产生的边框怎么去掉<br>        winphone系统a、input标签被点击时产生的半透明灰色背景怎么去掉<br>        webkit表单元素的默认外观怎么重置 (new)<br>        webkit表单输入框placeholder的颜色值能改变么<br>        webkit表单输入框placeholder的文字能换行么<br>        IE10（winphone8）表单元素默认外观如何重置<br>        禁止ios 长按时不触发系统的菜单，禁止ios&amp;android长按时下载图片<br>        禁止ios和android用户选中文字<br>        打电话发短信写邮件怎么实现<br>        模拟按钮hover效果 (new)<br>        屏幕旋转的事件和样式<br>        audio元素和video元素在ios和andriod中无法自动播放<br>        摇一摇功能  (new)<br>        手机拍照和上传图片<br>        微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整<br>        消除transition闪屏<br>        开启硬件加速<br>        取消input在ios下，输入的时候英文首字母的默认大写<br>        android上去掉语音输入按钮<br>        android 2.3 bug<br>        android 4.x bug<br>        设计高性能CSS3动画的几个要素<br>        fixed bug<br>        如何阻止windows Phone的默认触摸事件<br>        播放视频不全屏 (new)<br>    常用的移动端框架<br>        zepto.js<br>        iscroll.js<br>        underscore.js<br>        滑屏框架<br>        flex布局 (new)<br>        FastClick<br>        Sea.js</p>\n<h5 id=\"meta基础知识\"><a href=\"#meta基础知识\" class=\"headerlink\" title=\"meta基础知识\"></a>meta基础知识</h5><p>H5页面窗口自动调整到设备宽度，并禁止用户缩放页面<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>忽略将页面中的数字识别为电话号码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>忽略Android平台中对邮箱地址的识别<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;format-detection&quot; content=&quot;email=no&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>当网站添加到主屏幕快速启动方式，可隐藏地址栏，仅针对ios的safari<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot; /&gt;</div><div class=\"line\">&lt;!-- ios7.0版本以后，safari上已看不到效果 --&gt;</div></pre></td></tr></table></figure></p>\n<p>将网站添加到主屏幕快速启动方式，仅针对ios的safari顶端状态条的样式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;apple-mobile-web-app-status-bar-style&quot; content=&quot;black&quot; /&gt;</div><div class=\"line\">&lt;!-- 可选default、black、black-translucent --&gt;</div></pre></td></tr></table></figure></p>\n<h5 id=\"viewport模板\"><a href=\"#viewport模板\" class=\"headerlink\" title=\"viewport模板\"></a>viewport模板</h5><p>viewport模板——通用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;meta charset=&quot;utf-8&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no&quot; name=&quot;viewport&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;yes&quot; name=&quot;apple-mobile-web-app-capable&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;black&quot; name=&quot;apple-mobile-web-app-status-bar-style&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;telephone=no&quot; name=&quot;format-detection&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;email=no&quot; name=&quot;format-detection&quot;&gt;</div><div class=\"line\">&lt;title&gt;标题&lt;/title&gt;</div><div class=\"line\">&lt;link rel=&quot;stylesheet&quot; href=&quot;index.css&quot;&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">这里开始内容</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure></p>\n<p>viewport模板 - target-densitydpi=device-dpi，android 2.3.5以下版本不支持<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;meta charset=&quot;utf-8&quot;&gt;</div><div class=\"line\">&lt;meta name=&quot;viewport&quot; content=&quot;width=750, user-scalable=no, target-densitydpi=device-dpi&quot;&gt;&lt;!-- width取值与页面定义的宽度一致 --&gt;</div><div class=\"line\">&lt;meta content=&quot;yes&quot; name=&quot;apple-mobile-web-app-capable&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;black&quot; name=&quot;apple-mobile-web-app-status-bar-style&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;telephone=no&quot; name=&quot;format-detection&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;email=no&quot; name=&quot;format-detection&quot;&gt;</div><div class=\"line\">&lt;title&gt;标题&lt;/title&gt;</div><div class=\"line\">&lt;link rel=&quot;stylesheet&quot; href=&quot;index.css&quot;&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">这里开始内容</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure></p>\n<p>参考案例：<a href=\"http://action.weixin.qq.com/payact/readtemplate?t=mobile/2015/wxzfsht/index_tmpl\" target=\"_blank\" rel=\"external\">http://action.weixin.qq.com/payact/readtemplate?t=mobile/2015/wxzfsht/index_tmpl</a></p>\n<h4 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h4><h5 id=\"移动端如何定义字体font-family\"><a href=\"#移动端如何定义字体font-family\" class=\"headerlink\" title=\"移动端如何定义字体font-family\"></a>移动端如何定义字体font-family</h5><p>中文字体使用系统默认即可，英文用Helvetica<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">@font-face &#123;</div><div class=\"line\">    font-family: &apos;MicrosoftYaHei&apos;;</div><div class=\"line\">    src: url(&apos;MicrosoftYaHei.eot&apos;); /* IE9 Compat Modes */</div><div class=\"line\">    src: url(&apos;MicrosoftYaHei.eot?#iefix&apos;) format(&apos;embedded-opentype&apos;), /* IE6-IE8 */</div><div class=\"line\">             url(&apos;MicrosoftYaHei.woff&apos;) format(&apos;woff&apos;), /* Modern Browsers */</div><div class=\"line\">             url(&apos;MicrosoftYaHei.ttf&apos;)  format(&apos;truetype&apos;), /* Safari, Android, iOS */</div><div class=\"line\">             url(&apos;MicrosoftYaHei.svg#MicrosoftYaHei&apos;) format(&apos;svg&apos;); /* Legacy iOS */</div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">/* 移动端定义字体的代码 */</div><div class=\"line\">body&#123;font-family:Helvetica;&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"移动端字体单位font-size选择px还是rem\"><a href=\"#移动端字体单位font-size选择px还是rem\" class=\"headerlink\" title=\"移动端字体单位font-size选择px还是rem\"></a>移动端字体单位font-size选择px还是rem</h5><p>对于只需要适配少部分手机设备，且分辨率对页面影响不大的，使用px即可</p>\n<p>对于需要适配各种移动设备，使用rem，例如只需要适配iPhone和iPad等分辨率差别比较挺大的设备</p>\n<p>rem配置参考，适合视觉稿宽度为640px的：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&lt;meta content=&quot;width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no&quot; name=&quot;viewport&quot;&gt;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">html&#123;font-size:10px&#125;</div><div class=\"line\">@media screen and (min-width:321px) and (max-width:375px)&#123;html&#123;font-size:11px&#125;&#125;</div><div class=\"line\">@media screen and (min-width:376px) and (max-width:414px)&#123;html&#123;font-size:12px&#125;&#125;</div><div class=\"line\">@media screen and (min-width:415px) and (max-width:639px)&#123;html&#123;font-size:15px&#125;&#125;</div><div class=\"line\">@media screen and (min-width:640px) and (max-width:719px)&#123;html&#123;font-size:20px&#125;&#125;</div><div class=\"line\">@media screen and (min-width:720px) and (max-width:749px)&#123;html&#123;font-size:22.5px&#125;&#125;</div><div class=\"line\">@media screen and (min-width:750px) and (max-width:799px)&#123;html&#123;font-size:23.5px&#125;&#125;</div><div class=\"line\">@media screen and (min-width:800px)&#123;html&#123;font-size:25px&#125;&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"移动端touch事件-区分webkit-和-winphone\"><a href=\"#移动端touch事件-区分webkit-和-winphone\" class=\"headerlink\" title=\"移动端touch事件(区分webkit 和 winphone)\"></a>移动端touch事件(区分webkit 和 winphone)</h5><p>当用户手指放在移动设备在屏幕上滑动会触发的touch事件</p>\n<p>以下支持webkit</p>\n<pre><code>touchstart——当手指触碰屏幕时候发生。不管当前有多少只手指\ntouchmove——当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，会调用event的preventDefault()可以阻止默认情况的发生：阻止页面滚动\ntouchend——当手指离开屏幕时触发\ntouchcancel——系统停止跟踪触摸时候会触发。例如在触摸过程中突然页面alert()一个提示框，此时会触发该事件，这个事件比较少用\n</code></pre><p>TouchEvent</p>\n<pre><code>touches：屏幕上所有手指的信息\ntargetTouches：手指在目标区域的手指信息\nchangedTouches：最近一次触发该事件的手指信息\ntouchend时，touches与targetTouches信息会被删除，changedTouches保存的最后一次的信息，最好用于计算手指信息\n</code></pre><p>参数信息(changedTouches[0])</p>\n<pre><code>clientX、clientY在显示区的坐标\ntarget：当前元素\n</code></pre><p>参考：<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent</a></p>\n<p>以下支持winphone 8</p>\n<pre><code>MSPointerDown——当手指触碰屏幕时候发生。不管当前有多少只手指\nMSPointerMove——当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，会调用css的html{-ms-touch-action: none;}可以阻止默认情况的发生：阻止页面滚动\nMSPointerUp——当手指离开屏幕时触发\n</code></pre><h5 id=\"移动端click屏幕产生200-300-ms的延迟响应\"><a href=\"#移动端click屏幕产生200-300-ms的延迟响应\" class=\"headerlink\" title=\"移动端click屏幕产生200-300 ms的延迟响应\"></a>移动端click屏幕产生200-300 ms的延迟响应</h5><p>移动设备上的web网页是有300ms延迟的，玩玩会造成按钮点击延迟甚至是点击失效。</p>\n<p>以下是历史原因，来源一个公司内一个同事的分享：</p>\n<p>2007年苹果发布首款iphone上IOS系统搭载的safari为了将适用于PC端上大屏幕的网页能比较好的展示在手机端上，使用了双击缩放(double tap to zoom)的方案，比如你在手机上用浏览器打开一个PC上的网页，你可能在看到页面内容虽然可以撑满整个屏幕，但是字体、图片都很小看不清，此时可以快速双击屏幕上的某一部分，你就能看清该部分放大后的内容，再次双击后能回到原始状态。</p>\n<p>双击缩放是指用手指在屏幕上快速点击两次，iOS 自带的 Safari 浏览器会将网页缩放至原始比例。</p>\n<p>原因就出在浏览器需要如何判断快速点击上，当用户在屏幕上单击某一个元素时候，例如跳转链接<a href=\"#\"></a>，此处浏览器会先捕获该次单击，但浏览器不能决定用户是单纯要点击链接还是要双击该部分区域进行缩放操作，所以，捕获第一次单击后，浏览器会先Hold一段时间t，如果在t时间区间里用户未进行下一次点击，则浏览器会做单击跳转链接的处理，如果t时间里用户进行了第二次单击操作，则浏览器会禁止跳转，转而进行对该部分区域页面的缩放操作。那么这个时间区间t有多少呢？在IOS safari下，大概为300毫秒。这就是延迟的由来。造成的后果用户纯粹单击页面，页面需要过一段时间才响应，给用户慢体验感觉，对于web开发者来说是，页面js捕获click事件的回调函数处理，需要300ms后才生效，也就间接导致影响其他业务逻辑的处理。</p>\n<p>解决方案：</p>\n<pre><code>fastclick可以解决在手机上点击事件的300ms延迟\nzepto的touch模块，tap事件也是为了解决在click的延迟问题\n</code></pre><h5 id=\"触摸事件的响应顺序\"><a href=\"#触摸事件的响应顺序\" class=\"headerlink\" title=\"触摸事件的响应顺序\"></a>触摸事件的响应顺序</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">1、ontouchstart</div><div class=\"line\">2、ontouchmove</div><div class=\"line\">3、ontouchend</div><div class=\"line\">4、onclick</div></pre></td></tr></table></figure>\n<p>解决300ms延迟的问题，也可以通过绑定ontouchstart事件，加快对事件的响应</p>\n<h5 id=\"什么是Retina-显示屏，带来了什么问题\"><a href=\"#什么是Retina-显示屏，带来了什么问题\" class=\"headerlink\" title=\"什么是Retina 显示屏，带来了什么问题\"></a>什么是Retina 显示屏，带来了什么问题</h5><p>retina：一种具备超高像素密度的液晶屏，同样大小的屏幕上显示的像素点由1个变为多个，如在同样带下的屏幕上，苹果设备的retina显示屏中，像素点1个变为4个</p>\n<p>在高清显示屏中的位图被放大，图片会变得模糊，因此移动端的视觉稿通常会设计为传统PC的2倍</p>\n<p>那么，前端的应对方案是：</p>\n<p>设计稿切出来的图片长宽保证为偶数，并使用backgroud-size把图片缩小为原来的1/2</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">//例如图片宽高为：200px*200px，那么写法如下</div><div class=\"line\">.css&#123;width:100px;height:100px;background-size:100px 100px;&#125;</div></pre></td></tr></table></figure>\n<p>其它元素的取值为原来的1/2，例如视觉稿40px的字体，使用样式的写法为20px<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">.css&#123;font-size:20px&#125;</div></pre></td></tr></table></figure></p>\n<h5 id=\"ios系统中元素被触摸时产生的半透明灰色遮罩怎么去掉\"><a href=\"#ios系统中元素被触摸时产生的半透明灰色遮罩怎么去掉\" class=\"headerlink\" title=\"ios系统中元素被触摸时产生的半透明灰色遮罩怎么去掉\"></a>ios系统中元素被触摸时产生的半透明灰色遮罩怎么去掉</h5><p>ios用户点击一个链接，会出现一个半透明灰色遮罩, 如果想要禁用，可设置-webkit-tap-highlight-color的alpha值为0，也就是属性值的最后一位设置为0就可以去除半透明灰色遮罩<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">a,button,input,textarea&#123;-webkit-tap-highlight-color: rgba(0,0,0,0;)&#125;</div></pre></td></tr></table></figure></p>\n<h5 id=\"部分android系统中元素被点击时产生的边框怎么去掉\"><a href=\"#部分android系统中元素被点击时产生的边框怎么去掉\" class=\"headerlink\" title=\"部分android系统中元素被点击时产生的边框怎么去掉\"></a>部分android系统中元素被点击时产生的边框怎么去掉</h5><p>android用户点击一个链接，会出现一个边框或者半透明灰色遮罩, 不同生产商定义出来额效果不一样，可设置-webkit-tap-highlight-color的alpha值为0去除部分机器自带的效果<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">a,button,input,textarea&#123;</div><div class=\"line\">-webkit-tap-highlight-color: rgba(0,0,0,0;)</div><div class=\"line\">-webkit-user-modify:read-write-plaintext-only;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>-webkit-user-modify有个副作用，就是输入法不再能够输入多个字符</p>\n<p>另外，有些机型去除不了，如小米2</p>\n<p>对于按钮类还有个办法，不使用a或者input标签，直接用div标签</p>\n<p>参考《如何去除android上a标签产生的边框》</p>\n<h5 id=\"winphone系统a、input标签被点击时产生的半透明灰色背景怎么去掉\"><a href=\"#winphone系统a、input标签被点击时产生的半透明灰色背景怎么去掉\" class=\"headerlink\" title=\"winphone系统a、input标签被点击时产生的半透明灰色背景怎么去掉\"></a>winphone系统a、input标签被点击时产生的半透明灰色背景怎么去掉</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;msapplication-tap-highlight&quot; content=&quot;no&quot;&gt;</div></pre></td></tr></table></figure>\n<h5 id=\"webkit表单元素的默认外观怎么重置\"><a href=\"#webkit表单元素的默认外观怎么重置\" class=\"headerlink\" title=\"webkit表单元素的默认外观怎么重置\"></a>webkit表单元素的默认外观怎么重置</h5><p>通用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">.css&#123;-webkit-appearance:none;&#125;</div></pre></td></tr></table></figure></p>\n<p>伪元素改变number类型input框的默认样式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">input[type=number]::-webkit-textfield-decoration-container &#123;</div><div class=\"line\">    background-color: transparent;</div><div class=\"line\">&#125;</div><div class=\"line\">input[type=number]::-webkit-inner-spin-button &#123;</div><div class=\"line\">     -webkit-appearance: none;</div><div class=\"line\">&#125;</div><div class=\"line\">input[type=number]::-webkit-outer-spin-button &#123;</div><div class=\"line\">     -webkit-appearance: none;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h5 id=\"webkit表单输入框placeholder的颜色值能改变么\"><a href=\"#webkit表单输入框placeholder的颜色值能改变么\" class=\"headerlink\" title=\"webkit表单输入框placeholder的颜色值能改变么\"></a>webkit表单输入框placeholder的颜色值能改变么</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">input::-webkit-input-placeholder&#123;color:#AAAAAA;&#125;</div><div class=\"line\">input:focus::-webkit-input-placeholder&#123;color:#EEEEEE;&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"webkit表单输入框placeholder的文字能换行么\"><a href=\"#webkit表单输入框placeholder的文字能换行么\" class=\"headerlink\" title=\"webkit表单输入框placeholder的文字能换行么\"></a>webkit表单输入框placeholder的文字能换行么</h5><p>ios可以，android不行~</p>\n<p>在textarea标签下都可以换行~</p>\n<h5 id=\"IE10（winphone8）表单元素默认外观如何重置\"><a href=\"#IE10（winphone8）表单元素默认外观如何重置\" class=\"headerlink\" title=\"IE10（winphone8）表单元素默认外观如何重置\"></a>IE10（winphone8）表单元素默认外观如何重置</h5><p>禁用 select 默认下拉箭头</p>\n<p>::-ms-expand 适用于表单选择控件下拉箭头的修改，有多个属性值，设置它隐藏 (display:none) 并使用背景图片来修饰可得到我们想要的效果。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">select::-ms-expand &#123;</div><div class=\"line\">display: none;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h5 id=\"禁用-radio-和-checkbox-默认样式\"><a href=\"#禁用-radio-和-checkbox-默认样式\" class=\"headerlink\" title=\"禁用 radio 和 checkbox 默认样式\"></a>禁用 radio 和 checkbox 默认样式</h5><p>::-ms-check 适用于表单复选框或单选按钮默认图标的修改，同样有多个属性值，设置它隐藏 (display:none) 并使用背景图片来修饰可得到我们想要的效果。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">input[type=radio]::-ms-check,input[type=checkbox]::-ms-check&#123;</div><div class=\"line\">display: none;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h5 id=\"禁用PC端表单输入框默认清除按钮\"><a href=\"#禁用PC端表单输入框默认清除按钮\" class=\"headerlink\" title=\"禁用PC端表单输入框默认清除按钮\"></a>禁用PC端表单输入框默认清除按钮</h5><p>当表单文本输入框输入内容后会显示文本清除按钮，::-ms-clear 适用于该清除按钮的修改，同样设置使它隐藏 (display:none) 并使用背景图片来修饰可得到我们想要的效果。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">input[type=text]::-ms-clear,input[type=tel]::-ms-clear,input[type=number]::-ms-clear&#123;</div><div class=\"line\">display: none;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h5 id=\"禁止ios-长按时不触发系统的菜单，禁止ios-amp-android长按时下载图片\"><a href=\"#禁止ios-长按时不触发系统的菜单，禁止ios-amp-android长按时下载图片\" class=\"headerlink\" title=\"禁止ios 长按时不触发系统的菜单，禁止ios&amp;android长按时下载图片\"></a>禁止ios 长按时不触发系统的菜单，禁止ios&amp;android长按时下载图片</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">.css&#123;-webkit-touch-callout: none&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"禁止ios和android用户选中文字\"><a href=\"#禁止ios和android用户选中文字\" class=\"headerlink\" title=\"禁止ios和android用户选中文字\"></a>禁止ios和android用户选中文字</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">.css&#123;-webkit-user-select:none&#125;</div></pre></td></tr></table></figure>\n<p>####打电话发短信写邮件怎么实现</p>\n<p>打电话<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;tel:0755-10086&quot;&gt;打电话给:0755-10086&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p>发短信，winphone系统无效<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;sms:10086&quot;&gt;发短信给: 10086&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p>写邮件，可参考《移动web页面给用户发送邮件的方法》<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;mailto:peun@foxmail.com&quot;&gt;peun@foxmail.com&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<h5 id=\"模拟按钮hover效果\"><a href=\"#模拟按钮hover效果\" class=\"headerlink\" title=\"模拟按钮hover效果\"></a>模拟按钮hover效果</h5><p>移动端触摸按钮的效果，可明示用户有些事情正要发生，是一个比较好体验，但是移动设备中并没有鼠标指针，使用css的hover并不能满足我们的需求，还好国外有个激活移动端css的active效果。</p>\n<p>直接在body上添加ontouchstart，同样可激活移动端css的active效果，比较推荐这种方式，代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;meta charset=&quot;utf-8&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no&quot; name=&quot;viewport&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;yes&quot; name=&quot;apple-mobile-web-app-capable&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;black&quot; name=&quot;apple-mobile-web-app-status-bar-style&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;telephone=no&quot; name=&quot;format-detection&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;email=no&quot; name=&quot;format-detection&quot;&gt;</div><div class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</div><div class=\"line\">a&#123;-webkit-tap-highlight-color: rgba(0,0,0,0);&#125;</div><div class=\"line\">.btn-blue&#123;display:block;height:42px;line-height:42px;text-align:center;border-radius:4px;font-size:18px;color:#FFFFFF;background-color: #4185F3;&#125;</div><div class=\"line\">.btn-blue:active&#123;background-color: #357AE8;&#125;</div><div class=\"line\">&lt;/style&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body ontouchstart&gt;</div><div class=\"line\">&lt;div class=&quot;btn-blue&quot;&gt;按钮&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure></p>\n<p>或者：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;meta charset=&quot;utf-8&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no&quot; name=&quot;viewport&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;yes&quot; name=&quot;apple-mobile-web-app-capable&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;black&quot; name=&quot;apple-mobile-web-app-status-bar-style&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;telephone=no&quot; name=&quot;format-detection&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;email=no&quot; name=&quot;format-detection&quot;&gt;</div><div class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</div><div class=\"line\">a&#123;-webkit-tap-highlight-color: rgba(0,0,0,0);&#125;</div><div class=\"line\">.btn-blue&#123;display:block;height:42px;line-height:42px;text-align:center;border-radius:4px;font-size:18px;color:#FFFFFF;background-color: #4185F3;&#125;</div><div class=\"line\">.btn-blue:active&#123;background-color: #357AE8;&#125;</div><div class=\"line\">&lt;/style&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;div class=&quot;btn-blue&quot;&gt;按钮&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class=\"line\">document.addEventListener(&quot;touchstart&quot;, function()&#123;&#125;, true)</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure></p>\n<p>兼容性ios5+、部分android 4+、winphone 8</p>\n<p>要做到全兼容的办法，可通过绑定ontouchstart和ontouchend来控制按钮的类名<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;meta charset=&quot;utf-8&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no&quot; name=&quot;viewport&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;yes&quot; name=&quot;apple-mobile-web-app-capable&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;black&quot; name=&quot;apple-mobile-web-app-status-bar-style&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;telephone=no&quot; name=&quot;format-detection&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;email=no&quot; name=&quot;format-detection&quot;&gt;</div><div class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</div><div class=\"line\">a&#123;-webkit-tap-highlight-color: rgba(0,0,0,0);&#125;</div><div class=\"line\">.btn-blue&#123;display:block;height:42px;line-height:42px;text-align:center;border-radius:4px;font-size:18px;color:#FFFFFF;background-color: #4185F3;&#125;</div><div class=\"line\">.btn-blue-on&#123;background-color: #357AE8;&#125;</div><div class=\"line\">&lt;/style&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;div class=&quot;btn-blue&quot;&gt;按钮&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class=\"line\">var btnBlue = document.querySelector(&quot;.btn-blue&quot;);</div><div class=\"line\">btnBlue.ontouchstart = function()&#123;</div><div class=\"line\">    this.className = &quot;btn-blue btn-blue-on&quot;</div><div class=\"line\">&#125;</div><div class=\"line\">btnBlue.ontouchend = function()&#123;</div><div class=\"line\">    this.className = &quot;btn-blue&quot;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure></p>\n<h4 id=\"屏幕旋转的事件和样式\"><a href=\"#屏幕旋转的事件和样式\" class=\"headerlink\" title=\"屏幕旋转的事件和样式\"></a>屏幕旋转的事件和样式</h4><p>事件</p>\n<p>window.orientation，取值：正负90表示横屏模式、0和180表现为竖屏模式；<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">window.onorientationchange = function()&#123;</div><div class=\"line\">    switch(window.orientation)&#123;</div><div class=\"line\">        case -90:</div><div class=\"line\">        case 90:</div><div class=\"line\">        alert(&quot;横屏:&quot; + window.orientation);</div><div class=\"line\">        case 0:</div><div class=\"line\">        case 180:</div><div class=\"line\">        alert(&quot;竖屏:&quot; + window.orientation);</div><div class=\"line\">        break;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>样式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">//竖屏时使用的样式</div><div class=\"line\">@media all and (orientation:portrait) &#123;</div><div class=\"line\">.css&#123;&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">//横屏时使用的样式</div><div class=\"line\">@media all and (orientation:landscape) &#123;</div><div class=\"line\">.css&#123;&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"audio元素和video元素在ios和andriod中无法自动播放\"><a href=\"#audio元素和video元素在ios和andriod中无法自动播放\" class=\"headerlink\" title=\"audio元素和video元素在ios和andriod中无法自动播放\"></a>audio元素和video元素在ios和andriod中无法自动播放</h4><p>应对方案：触屏即播<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(&apos;html&apos;).one(&apos;touchstart&apos;,function()&#123;</div><div class=\"line\">    audio.play()</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<h4 id=\"摇一摇功能\"><a href=\"#摇一摇功能\" class=\"headerlink\" title=\"摇一摇功能\"></a>摇一摇功能</h4><p>HTML5 deviceMotion：封装了运动传感器数据的事件，可以获取手机运动状态下的运动加速度等数据。</p>\n<h4 id=\"手机拍照和上传图片\"><a href=\"#手机拍照和上传图片\" class=\"headerlink\" title=\"手机拍照和上传图片\"></a>手机拍照和上传图片</h4><p><input type=\"file\">的accept 属性<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 选择照片 --&gt;</div><div class=\"line\">&lt;input type=file accept=&quot;image/*&quot;&gt;</div><div class=\"line\">&lt;!-- 选择视频 --&gt;</div><div class=\"line\">&lt;input type=file accept=&quot;video/*&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>使用总结：</p>\n<pre><code>ios 有拍照、录像、选取本地图片功能\n部分android只有选取本地图片功能\nwinphone不支持\ninput控件默认外观丑陋\n</code></pre><h4 id=\"微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整\"><a href=\"#微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整\" class=\"headerlink\" title=\"微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整\"></a>微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整</h4><p>原因</p>\n<pre><code>android侧是复写了layoutinflater 对textview做了统一处理\nios侧是修改了body.style.webkitTextSizeAdjust值\n</code></pre><p>解决方案：</p>\n<pre><code>android使用以下代码，该接口只在微信浏览器下有效\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">/**</div><div class=\"line\"> * 页面加入这段代码可使Android机器页面不再受到用户字体缩放强制改变大小</div><div class=\"line\"> * 但是会有一个1秒左右的延迟，期间可以考虑通过loading展示</div><div class=\"line\"> * 仅供参考</div><div class=\"line\"> */</div><div class=\"line\">(function()&#123;</div><div class=\"line\">    if (typeof(WeixinJSBridge) == &quot;undefined&quot;) &#123;</div><div class=\"line\">        document.addEventListener(&quot;WeixinJSBridgeReady&quot;, function (e) &#123;</div><div class=\"line\">            setTimeout(function()&#123;</div><div class=\"line\">                WeixinJSBridge.invoke(&apos;setFontSizeCallback&apos;,&#123;&quot;fontSize&quot;:0&#125;, function(res) &#123;</div><div class=\"line\">                    alert(JSON.stringify(res));</div><div class=\"line\">                &#125;);</div><div class=\"line\">            &#125;,0);</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125; else &#123;</div><div class=\"line\">        setTimeout(function()&#123;</div><div class=\"line\">            WeixinJSBridge.invoke(&apos;setFontSizeCallback&apos;,&#123;&quot;fontSize&quot;:0&#125;, function(res) &#123;</div><div class=\"line\">                alert(JSON.stringify(res));</div><div class=\"line\">            &#125;);</div><div class=\"line\">        &#125;,0);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)();</div></pre></td></tr></table></figure>\n<p>ios使用-webkit-text-size-adjust禁止调整字体大小<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">body&#123;-webkit-text-size-adjust: 100%!important;&#125;</div></pre></td></tr></table></figure></p>\n<p>最好的解决方案：</p>\n<pre><code>整个页面用rem或者百分比布局\n</code></pre><h4 id=\"消除transition闪屏\"><a href=\"#消除transition闪屏\" class=\"headerlink\" title=\"消除transition闪屏\"></a>消除transition闪屏</h4><p>网络都是这么写的，但我并没有测试出来<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">.css&#123;</div><div class=\"line\">/*设置内嵌的元素在 3D 空间如何呈现：保留 3D*/</div><div class=\"line\">-webkit-transform-style: preserve-3d;</div><div class=\"line\">/*（设置进行转换的元素的背面在面对用户时是否可见：隐藏）*/</div><div class=\"line\">-webkit-backface-visibility: hidden;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"开启硬件加速\"><a href=\"#开启硬件加速\" class=\"headerlink\" title=\"开启硬件加速\"></a>开启硬件加速</h4><pre><code>解决页面闪白\n保证动画流畅\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">.css &#123;</div><div class=\"line\">   -webkit-transform: translate3d(0, 0, 0);</div><div class=\"line\">   -moz-transform: translate3d(0, 0, 0);</div><div class=\"line\">   -ms-transform: translate3d(0, 0, 0);</div><div class=\"line\">   transform: translate3d(0, 0, 0);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"取消input在ios下，输入的时候英文首字母的默认大写\"><a href=\"#取消input在ios下，输入的时候英文首字母的默认大写\" class=\"headerlink\" title=\"取消input在ios下，输入的时候英文首字母的默认大写\"></a>取消input在ios下，输入的时候英文首字母的默认大写</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input autocapitalize=&quot;off&quot; autocorrect=&quot;off&quot; /&gt;</div></pre></td></tr></table></figure>\n<h5 id=\"android-上去掉语音输入按钮\"><a href=\"#android-上去掉语音输入按钮\" class=\"headerlink\" title=\"android 上去掉语音输入按钮\"></a>android 上去掉语音输入按钮</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">input::-webkit-input-speech-button &#123;display: none&#125;</div></pre></td></tr></table></figure>\n<p>android 2.3 bug</p>\n<pre><code>@-webkit-keyframes 需要以0%开始100%结束，0%的百分号不能去掉\nafter和before伪类无法使用动画animation\nborder-radius不支持%单位\ntranslate百分比的写法和scale在一起会导致失效，例如-webkit-transform: translate(-50%,-50%) scale(-0.5, 1)\n</code></pre><p>android 4.x bug</p>\n<pre><code>三星 Galaxy S4中自带浏览器不支持border-radius缩写\n同时设置border-radius和背景色的时候，背景色会溢出到圆角以外部分\n部分手机(如三星)，a链接支持鼠标:visited事件，也就是说链接访问后文字变为紫色\nandroid无法同时播放多音频audio\n</code></pre><h4 id=\"设计高性能CSS3动画的几个要素\"><a href=\"#设计高性能CSS3动画的几个要素\" class=\"headerlink\" title=\"设计高性能CSS3动画的几个要素\"></a>设计高性能CSS3动画的几个要素</h4><pre><code>    尽可能地使用合成属性transform和opacity来设计CSS3动画，不使用position的left和top来定位\n    利用translate3D开启GPU加速\n\n参考《High Performance Animations》\n</code></pre><h4 id=\"fixed-bug\"><a href=\"#fixed-bug\" class=\"headerlink\" title=\"fixed bug\"></a>fixed bug</h4><pre><code>    ios下fixed元素容易定位出错，软键盘弹出时，影响fixed元素定位\n    android下fixed表现要比iOS更好，软键盘弹出时，不会影响fixed元素定位\n    ios4下不支持position:fixed\n\n解决方案\n\n    可用isroll.js，暂无完美方案\n\n参考\n\n《移动端web页面使用position:fixed问题总结》\n\n《使用iScroll.js解决ios4下不支持position:fixed的问题》\n</code></pre><h4 id=\"如何阻止windows-Phone的默认触摸事件\"><a href=\"#如何阻止windows-Phone的默认触摸事件\" class=\"headerlink\" title=\"如何阻止windows Phone的默认触摸事件\"></a>如何阻止windows Phone的默认触摸事件</h4><pre><code>winphone下默认触摸事件事件使用e.preventDefault是无效的\n\n目前解决方法是使用样式来禁用\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">html&#123;-ms-touch-action: none;&#125;/* 禁止winphone默认触摸事件 */</div></pre></td></tr></table></figure>\n<h4 id=\"播放视频不全屏\"><a href=\"#播放视频不全屏\" class=\"headerlink\" title=\"播放视频不全屏\"></a>播放视频不全屏</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!--</div><div class=\"line\">1.目前只有ios7+、winphone8+支持自动播放</div><div class=\"line\">2.支持Airplay的设备（如：音箱、Apple TV)播放</div><div class=\"line\">x-webkit-airplay=&quot;true&quot;</div><div class=\"line\">3.播放视频不全屏，ios7、、winphone8+支持，部分android4+支持（含华为、小米、魅族）</div><div class=\"line\">webkit-playsinline=&quot;true&quot;</div><div class=\"line\">4.ios 10 : playsinline</div><div class=\"line\">5.ios 8、9 ：https://github.com/bfred-it/iphone-inline-video</div><div class=\"line\">--&gt;</div><div class=\"line\">&lt;video x-webkit-airplay=&quot;true&quot; webkit-playsinline=&quot;true&quot; preload=&quot;auto&quot; autoplay src=&quot;http://&quot;&gt;&lt;/video&gt;</div><div class=\"line\">&lt;video playsinline preload=&quot;auto&quot; autoplay src=&quot;http://&quot;&gt;&lt;/video&gt;</div></pre></td></tr></table></figure>\n<p>常用的移动端框架<br>zepto.js</p>\n<p>语法与jquery几乎一样，会jquery基本会zepto~</p>\n<p>最新版本已经更新到1.16</p>\n<p>官网：<a href=\"http://zeptojs.com/\" target=\"_blank\" rel=\"external\">http://zeptojs.com/</a></p>\n<p>中文(非官网)：<a href=\"http://www.css88.com/doc/zeptojs_api/\" target=\"_blank\" rel=\"external\">http://www.css88.com/doc/zeptojs_api/</a></p>\n<p>常使用的扩展模块：</p>\n<p>浏览器检测：<a href=\"https://github.com/madrobby/zepto/blob/master/src/detect.js\" target=\"_blank\" rel=\"external\">https://github.com/madrobby/zepto/blob/master/src/detect.js</a></p>\n<p>tap事件：<a href=\"https://github.com/madrobby/zepto/blob/master/src/touch.js\" target=\"_blank\" rel=\"external\">https://github.com/madrobby/zepto/blob/master/src/touch.js</a><br>iscroll.js</p>\n<p>解决页面不支持弹性滚动，不支持fixed引起的问题~</p>\n<p>实现下拉刷新，滑屏，缩放等功能~</p>\n<p>最新版本已经更新到5.0</p>\n<p>官网：<a href=\"http://cubiq.org/iscroll-5\" target=\"_blank\" rel=\"external\">http://cubiq.org/iscroll-5</a><br>underscore.js</p>\n<p>笔者没用过，不过听说好用，推荐给大家~</p>\n<p>该库提供了一整套函数式编程的实用功能，但是没有扩展任何JavaScript内置对象。</p>\n<p>最新版本已经更新到1.8.2</p>\n<p>官网：<a href=\"http://underscorejs.org/\" target=\"_blank\" rel=\"external\">http://underscorejs.org/</a><br>滑屏框架</p>\n<p>适合上下滑屏、左右滑屏等滑屏切换页面的效果</p>\n<p>slip.js</p>\n<p>iSlider.js</p>\n<p>fullpage.js</p>\n<p>swiper.js<br>flex布局</p>\n<p>flex布局目前可使用在移动中，并非所有的语法都全兼容，但以下写法笔者实践过，效果良好~<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">/* ============================================================</div><div class=\"line\">   flex：定义布局为盒模型</div><div class=\"line\">   flex-v：盒模型垂直布局</div><div class=\"line\">   flex-1：子元素占据剩余的空间</div><div class=\"line\">   flex-align-center：子元素垂直居中</div><div class=\"line\">   flex-pack-center：子元素水平居中</div><div class=\"line\">   flex-pack-justify：子元素两端对齐</div><div class=\"line\">   兼容性：ios 4+、android 2.3+、winphone8+</div><div class=\"line\">   ============================================================ */</div><div class=\"line\">.flex&#123;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;&#125;</div><div class=\"line\">.flex-v&#123;-webkit-box-orient:vertical;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;&#125;</div><div class=\"line\">.flex-1&#123;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;&#125;</div><div class=\"line\">.flex-align-center&#123;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;&#125;</div><div class=\"line\">.flex-pack-center&#123;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;&#125;</div><div class=\"line\">.flex-pack-justify&#123;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;&#125;</div></pre></td></tr></table></figure></p>\n<p>示例：两端对齐<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;meta charset=&quot;utf-8&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no&quot; name=&quot;viewport&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;yes&quot; name=&quot;apple-mobile-web-app-capable&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;black&quot; name=&quot;apple-mobile-web-app-status-bar-style&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;telephone=no&quot; name=&quot;format-detection&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;email=no&quot; name=&quot;format-detection&quot;&gt;</div><div class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</div><div class=\"line\">/* ============================================================</div><div class=\"line\">   flex：定义布局为盒模型</div><div class=\"line\">   flex-v：盒模型垂直布局</div><div class=\"line\">   flex-1：子元素占据剩余的空间</div><div class=\"line\">   flex-align-center：子元素垂直居中</div><div class=\"line\">   flex-pack-center：子元素水平居中</div><div class=\"line\">   flex-pack-justify：子元素两端对齐</div><div class=\"line\">   兼容性：ios 4+、android 2.3+、winphone8+</div><div class=\"line\">   ============================================================ */</div><div class=\"line\">.flex&#123;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;&#125;</div><div class=\"line\">.flex-v&#123;-webkit-box-orient:vertical;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;&#125;</div><div class=\"line\">.flex-1&#123;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;&#125;</div><div class=\"line\">.flex-align-center&#123;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;&#125;</div><div class=\"line\">.flex-pack-center&#123;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;&#125;</div><div class=\"line\">.flex-pack-justify&#123;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;&#125;</div><div class=\"line\">&lt;/style&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;div class=&quot;flex flex-pack-justify&quot;&gt;</div><div class=\"line\">    &lt;div&gt;模块一&lt;/div&gt;</div><div class=\"line\">    &lt;div&gt;模块二&lt;/div&gt;</div><div class=\"line\">    &lt;div&gt;模块三&lt;/div&gt;</div><div class=\"line\">    &lt;div&gt;模块四&lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure></p>\n<p>使用注意：</p>\n<pre><code>flex下的子元素必须为块级元素，非块级元素在android2.3机器下flex失效\nflex下的子元素宽度和高度不能超过父元素，否则会导致子元素定位错误，例如水平垂直居中\n</code></pre><p>参考：</p>\n<p>flexyboxes</p>\n<p>“老”的Flexbox和“新”的Flexbox</p>\n<p>跨浏览器的Flexbox<br>FastClick</p>\n<p>消除在移动浏览器上触发click事件与一个物理Tap(敲击)之间的300延迟</p>\n<p>参考《FastClick》<br>Sea.js</p>\n<p>提供简单、极致的模块化开发体验</p>\n<pre><code>简单友好的模块定义规范：Sea.js 遵循 CMD 规范，可以像 Node.js 一般书写模块代码。\n自然直观的代码组织方式：依赖的自动加载、配置的简洁清晰，可以让我们更多地享受编码的乐趣。\n</code></pre><p>地址：<a href=\"http://seajs.org/docs/\" target=\"_blank\" rel=\"external\">http://seajs.org/docs/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h4><p>  meta基础知识<br>        H5页面窗口自动调整到设备宽度，并禁止用户缩放页面<br>        忽略将页面中的数字识别为电话号码<br>        忽略Android平台中对邮箱地址的识别<br>        当网站添加到主屏幕快速启动方式，可隐藏地址栏，仅针对ios的safari (new)<br>        将网站添加到主屏幕快速启动方式，仅针对ios的safari顶端状态条的样式<br>        viewport模板 (new)<br>    常见问题<br>        移动端如何定义字体font-family<br>        移动端字体单位font-size选择px还是rem (new)<br>        移动端touch事件(区分webkit 和 winphone) (new)<br>        移动端click屏幕产生200-300 ms的延迟响应<br>        触摸事件的响应顺序<br>        什么是Retina 显示屏，带来了什么问题<br>        ios系统中元素被触摸时产生的半透明灰色遮罩怎么去掉<br>        部分android系统中元素被点击时产生的边框怎么去掉<br>        winphone系统a、input标签被点击时产生的半透明灰色背景怎么去掉<br>        webkit表单元素的默认外观怎么重置 (new)<br>        webkit表单输入框placeholder的颜色值能改变么<br>        webkit表单输入框placeholder的文字能换行么<br>        IE10（winphone8）表单元素默认外观如何重置<br>        禁止ios 长按时不触发系统的菜单，禁止ios&amp;android长按时下载图片<br>        禁止ios和android用户选中文字<br>        打电话发短信写邮件怎么实现<br>        模拟按钮hover效果 (new)<br>        屏幕旋转的事件和样式<br>        audio元素和video元素在ios和andriod中无法自动播放<br>        摇一摇功能  (new)<br>        手机拍照和上传图片<br>        微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整<br>        消除transition闪屏<br>        开启硬件加速<br>        取消input在ios下，输入的时候英文首字母的默认大写<br>        android上去掉语音输入按钮<br>        android 2.3 bug<br>        android 4.x bug<br>        设计高性能CSS3动画的几个要素<br>        fixed bug<br>        如何阻止windows Phone的默认触摸事件<br>        播放视频不全屏 (new)<br>    常用的移动端框架<br>        zepto.js<br>        iscroll.js<br>        underscore.js<br>        滑屏框架<br>        flex布局 (new)<br>        FastClick<br>        Sea.js</p>\n<h5 id=\"meta基础知识\"><a href=\"#meta基础知识\" class=\"headerlink\" title=\"meta基础知识\"></a>meta基础知识</h5><p>H5页面窗口自动调整到设备宽度，并禁止用户缩放页面<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>忽略将页面中的数字识别为电话号码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>忽略Android平台中对邮箱地址的识别<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;format-detection&quot; content=&quot;email=no&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>当网站添加到主屏幕快速启动方式，可隐藏地址栏，仅针对ios的safari<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot; /&gt;</div><div class=\"line\">&lt;!-- ios7.0版本以后，safari上已看不到效果 --&gt;</div></pre></td></tr></table></figure></p>\n<p>将网站添加到主屏幕快速启动方式，仅针对ios的safari顶端状态条的样式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;apple-mobile-web-app-status-bar-style&quot; content=&quot;black&quot; /&gt;</div><div class=\"line\">&lt;!-- 可选default、black、black-translucent --&gt;</div></pre></td></tr></table></figure></p>\n<h5 id=\"viewport模板\"><a href=\"#viewport模板\" class=\"headerlink\" title=\"viewport模板\"></a>viewport模板</h5><p>viewport模板——通用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;meta charset=&quot;utf-8&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no&quot; name=&quot;viewport&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;yes&quot; name=&quot;apple-mobile-web-app-capable&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;black&quot; name=&quot;apple-mobile-web-app-status-bar-style&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;telephone=no&quot; name=&quot;format-detection&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;email=no&quot; name=&quot;format-detection&quot;&gt;</div><div class=\"line\">&lt;title&gt;标题&lt;/title&gt;</div><div class=\"line\">&lt;link rel=&quot;stylesheet&quot; href=&quot;index.css&quot;&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">这里开始内容</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure></p>\n<p>viewport模板 - target-densitydpi=device-dpi，android 2.3.5以下版本不支持<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;meta charset=&quot;utf-8&quot;&gt;</div><div class=\"line\">&lt;meta name=&quot;viewport&quot; content=&quot;width=750, user-scalable=no, target-densitydpi=device-dpi&quot;&gt;&lt;!-- width取值与页面定义的宽度一致 --&gt;</div><div class=\"line\">&lt;meta content=&quot;yes&quot; name=&quot;apple-mobile-web-app-capable&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;black&quot; name=&quot;apple-mobile-web-app-status-bar-style&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;telephone=no&quot; name=&quot;format-detection&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;email=no&quot; name=&quot;format-detection&quot;&gt;</div><div class=\"line\">&lt;title&gt;标题&lt;/title&gt;</div><div class=\"line\">&lt;link rel=&quot;stylesheet&quot; href=&quot;index.css&quot;&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">这里开始内容</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure></p>\n<p>参考案例：<a href=\"http://action.weixin.qq.com/payact/readtemplate?t=mobile/2015/wxzfsht/index_tmpl\" target=\"_blank\" rel=\"external\">http://action.weixin.qq.com/payact/readtemplate?t=mobile/2015/wxzfsht/index_tmpl</a></p>\n<h4 id=\"常见问题\"><a href=\"#常见问题\" class=\"headerlink\" title=\"常见问题\"></a>常见问题</h4><h5 id=\"移动端如何定义字体font-family\"><a href=\"#移动端如何定义字体font-family\" class=\"headerlink\" title=\"移动端如何定义字体font-family\"></a>移动端如何定义字体font-family</h5><p>中文字体使用系统默认即可，英文用Helvetica<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">@font-face &#123;</div><div class=\"line\">    font-family: &apos;MicrosoftYaHei&apos;;</div><div class=\"line\">    src: url(&apos;MicrosoftYaHei.eot&apos;); /* IE9 Compat Modes */</div><div class=\"line\">    src: url(&apos;MicrosoftYaHei.eot?#iefix&apos;) format(&apos;embedded-opentype&apos;), /* IE6-IE8 */</div><div class=\"line\">             url(&apos;MicrosoftYaHei.woff&apos;) format(&apos;woff&apos;), /* Modern Browsers */</div><div class=\"line\">             url(&apos;MicrosoftYaHei.ttf&apos;)  format(&apos;truetype&apos;), /* Safari, Android, iOS */</div><div class=\"line\">             url(&apos;MicrosoftYaHei.svg#MicrosoftYaHei&apos;) format(&apos;svg&apos;); /* Legacy iOS */</div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">/* 移动端定义字体的代码 */</div><div class=\"line\">body&#123;font-family:Helvetica;&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"移动端字体单位font-size选择px还是rem\"><a href=\"#移动端字体单位font-size选择px还是rem\" class=\"headerlink\" title=\"移动端字体单位font-size选择px还是rem\"></a>移动端字体单位font-size选择px还是rem</h5><p>对于只需要适配少部分手机设备，且分辨率对页面影响不大的，使用px即可</p>\n<p>对于需要适配各种移动设备，使用rem，例如只需要适配iPhone和iPad等分辨率差别比较挺大的设备</p>\n<p>rem配置参考，适合视觉稿宽度为640px的：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&lt;meta content=&quot;width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no&quot; name=&quot;viewport&quot;&gt;</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">html&#123;font-size:10px&#125;</div><div class=\"line\">@media screen and (min-width:321px) and (max-width:375px)&#123;html&#123;font-size:11px&#125;&#125;</div><div class=\"line\">@media screen and (min-width:376px) and (max-width:414px)&#123;html&#123;font-size:12px&#125;&#125;</div><div class=\"line\">@media screen and (min-width:415px) and (max-width:639px)&#123;html&#123;font-size:15px&#125;&#125;</div><div class=\"line\">@media screen and (min-width:640px) and (max-width:719px)&#123;html&#123;font-size:20px&#125;&#125;</div><div class=\"line\">@media screen and (min-width:720px) and (max-width:749px)&#123;html&#123;font-size:22.5px&#125;&#125;</div><div class=\"line\">@media screen and (min-width:750px) and (max-width:799px)&#123;html&#123;font-size:23.5px&#125;&#125;</div><div class=\"line\">@media screen and (min-width:800px)&#123;html&#123;font-size:25px&#125;&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"移动端touch事件-区分webkit-和-winphone\"><a href=\"#移动端touch事件-区分webkit-和-winphone\" class=\"headerlink\" title=\"移动端touch事件(区分webkit 和 winphone)\"></a>移动端touch事件(区分webkit 和 winphone)</h5><p>当用户手指放在移动设备在屏幕上滑动会触发的touch事件</p>\n<p>以下支持webkit</p>\n<pre><code>touchstart——当手指触碰屏幕时候发生。不管当前有多少只手指\ntouchmove——当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，会调用event的preventDefault()可以阻止默认情况的发生：阻止页面滚动\ntouchend——当手指离开屏幕时触发\ntouchcancel——系统停止跟踪触摸时候会触发。例如在触摸过程中突然页面alert()一个提示框，此时会触发该事件，这个事件比较少用\n</code></pre><p>TouchEvent</p>\n<pre><code>touches：屏幕上所有手指的信息\ntargetTouches：手指在目标区域的手指信息\nchangedTouches：最近一次触发该事件的手指信息\ntouchend时，touches与targetTouches信息会被删除，changedTouches保存的最后一次的信息，最好用于计算手指信息\n</code></pre><p>参数信息(changedTouches[0])</p>\n<pre><code>clientX、clientY在显示区的坐标\ntarget：当前元素\n</code></pre><p>参考：<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent</a></p>\n<p>以下支持winphone 8</p>\n<pre><code>MSPointerDown——当手指触碰屏幕时候发生。不管当前有多少只手指\nMSPointerMove——当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，会调用css的html{-ms-touch-action: none;}可以阻止默认情况的发生：阻止页面滚动\nMSPointerUp——当手指离开屏幕时触发\n</code></pre><h5 id=\"移动端click屏幕产生200-300-ms的延迟响应\"><a href=\"#移动端click屏幕产生200-300-ms的延迟响应\" class=\"headerlink\" title=\"移动端click屏幕产生200-300 ms的延迟响应\"></a>移动端click屏幕产生200-300 ms的延迟响应</h5><p>移动设备上的web网页是有300ms延迟的，玩玩会造成按钮点击延迟甚至是点击失效。</p>\n<p>以下是历史原因，来源一个公司内一个同事的分享：</p>\n<p>2007年苹果发布首款iphone上IOS系统搭载的safari为了将适用于PC端上大屏幕的网页能比较好的展示在手机端上，使用了双击缩放(double tap to zoom)的方案，比如你在手机上用浏览器打开一个PC上的网页，你可能在看到页面内容虽然可以撑满整个屏幕，但是字体、图片都很小看不清，此时可以快速双击屏幕上的某一部分，你就能看清该部分放大后的内容，再次双击后能回到原始状态。</p>\n<p>双击缩放是指用手指在屏幕上快速点击两次，iOS 自带的 Safari 浏览器会将网页缩放至原始比例。</p>\n<p>原因就出在浏览器需要如何判断快速点击上，当用户在屏幕上单击某一个元素时候，例如跳转链接<a href=\"#\"></a>，此处浏览器会先捕获该次单击，但浏览器不能决定用户是单纯要点击链接还是要双击该部分区域进行缩放操作，所以，捕获第一次单击后，浏览器会先Hold一段时间t，如果在t时间区间里用户未进行下一次点击，则浏览器会做单击跳转链接的处理，如果t时间里用户进行了第二次单击操作，则浏览器会禁止跳转，转而进行对该部分区域页面的缩放操作。那么这个时间区间t有多少呢？在IOS safari下，大概为300毫秒。这就是延迟的由来。造成的后果用户纯粹单击页面，页面需要过一段时间才响应，给用户慢体验感觉，对于web开发者来说是，页面js捕获click事件的回调函数处理，需要300ms后才生效，也就间接导致影响其他业务逻辑的处理。</p>\n<p>解决方案：</p>\n<pre><code>fastclick可以解决在手机上点击事件的300ms延迟\nzepto的touch模块，tap事件也是为了解决在click的延迟问题\n</code></pre><h5 id=\"触摸事件的响应顺序\"><a href=\"#触摸事件的响应顺序\" class=\"headerlink\" title=\"触摸事件的响应顺序\"></a>触摸事件的响应顺序</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">1、ontouchstart</div><div class=\"line\">2、ontouchmove</div><div class=\"line\">3、ontouchend</div><div class=\"line\">4、onclick</div></pre></td></tr></table></figure>\n<p>解决300ms延迟的问题，也可以通过绑定ontouchstart事件，加快对事件的响应</p>\n<h5 id=\"什么是Retina-显示屏，带来了什么问题\"><a href=\"#什么是Retina-显示屏，带来了什么问题\" class=\"headerlink\" title=\"什么是Retina 显示屏，带来了什么问题\"></a>什么是Retina 显示屏，带来了什么问题</h5><p>retina：一种具备超高像素密度的液晶屏，同样大小的屏幕上显示的像素点由1个变为多个，如在同样带下的屏幕上，苹果设备的retina显示屏中，像素点1个变为4个</p>\n<p>在高清显示屏中的位图被放大，图片会变得模糊，因此移动端的视觉稿通常会设计为传统PC的2倍</p>\n<p>那么，前端的应对方案是：</p>\n<p>设计稿切出来的图片长宽保证为偶数，并使用backgroud-size把图片缩小为原来的1/2</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">//例如图片宽高为：200px*200px，那么写法如下</div><div class=\"line\">.css&#123;width:100px;height:100px;background-size:100px 100px;&#125;</div></pre></td></tr></table></figure>\n<p>其它元素的取值为原来的1/2，例如视觉稿40px的字体，使用样式的写法为20px<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">.css&#123;font-size:20px&#125;</div></pre></td></tr></table></figure></p>\n<h5 id=\"ios系统中元素被触摸时产生的半透明灰色遮罩怎么去掉\"><a href=\"#ios系统中元素被触摸时产生的半透明灰色遮罩怎么去掉\" class=\"headerlink\" title=\"ios系统中元素被触摸时产生的半透明灰色遮罩怎么去掉\"></a>ios系统中元素被触摸时产生的半透明灰色遮罩怎么去掉</h5><p>ios用户点击一个链接，会出现一个半透明灰色遮罩, 如果想要禁用，可设置-webkit-tap-highlight-color的alpha值为0，也就是属性值的最后一位设置为0就可以去除半透明灰色遮罩<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">a,button,input,textarea&#123;-webkit-tap-highlight-color: rgba(0,0,0,0;)&#125;</div></pre></td></tr></table></figure></p>\n<h5 id=\"部分android系统中元素被点击时产生的边框怎么去掉\"><a href=\"#部分android系统中元素被点击时产生的边框怎么去掉\" class=\"headerlink\" title=\"部分android系统中元素被点击时产生的边框怎么去掉\"></a>部分android系统中元素被点击时产生的边框怎么去掉</h5><p>android用户点击一个链接，会出现一个边框或者半透明灰色遮罩, 不同生产商定义出来额效果不一样，可设置-webkit-tap-highlight-color的alpha值为0去除部分机器自带的效果<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">a,button,input,textarea&#123;</div><div class=\"line\">-webkit-tap-highlight-color: rgba(0,0,0,0;)</div><div class=\"line\">-webkit-user-modify:read-write-plaintext-only;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>-webkit-user-modify有个副作用，就是输入法不再能够输入多个字符</p>\n<p>另外，有些机型去除不了，如小米2</p>\n<p>对于按钮类还有个办法，不使用a或者input标签，直接用div标签</p>\n<p>参考《如何去除android上a标签产生的边框》</p>\n<h5 id=\"winphone系统a、input标签被点击时产生的半透明灰色背景怎么去掉\"><a href=\"#winphone系统a、input标签被点击时产生的半透明灰色背景怎么去掉\" class=\"headerlink\" title=\"winphone系统a、input标签被点击时产生的半透明灰色背景怎么去掉\"></a>winphone系统a、input标签被点击时产生的半透明灰色背景怎么去掉</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta name=&quot;msapplication-tap-highlight&quot; content=&quot;no&quot;&gt;</div></pre></td></tr></table></figure>\n<h5 id=\"webkit表单元素的默认外观怎么重置\"><a href=\"#webkit表单元素的默认外观怎么重置\" class=\"headerlink\" title=\"webkit表单元素的默认外观怎么重置\"></a>webkit表单元素的默认外观怎么重置</h5><p>通用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">.css&#123;-webkit-appearance:none;&#125;</div></pre></td></tr></table></figure></p>\n<p>伪元素改变number类型input框的默认样式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">input[type=number]::-webkit-textfield-decoration-container &#123;</div><div class=\"line\">    background-color: transparent;</div><div class=\"line\">&#125;</div><div class=\"line\">input[type=number]::-webkit-inner-spin-button &#123;</div><div class=\"line\">     -webkit-appearance: none;</div><div class=\"line\">&#125;</div><div class=\"line\">input[type=number]::-webkit-outer-spin-button &#123;</div><div class=\"line\">     -webkit-appearance: none;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h5 id=\"webkit表单输入框placeholder的颜色值能改变么\"><a href=\"#webkit表单输入框placeholder的颜色值能改变么\" class=\"headerlink\" title=\"webkit表单输入框placeholder的颜色值能改变么\"></a>webkit表单输入框placeholder的颜色值能改变么</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">input::-webkit-input-placeholder&#123;color:#AAAAAA;&#125;</div><div class=\"line\">input:focus::-webkit-input-placeholder&#123;color:#EEEEEE;&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"webkit表单输入框placeholder的文字能换行么\"><a href=\"#webkit表单输入框placeholder的文字能换行么\" class=\"headerlink\" title=\"webkit表单输入框placeholder的文字能换行么\"></a>webkit表单输入框placeholder的文字能换行么</h5><p>ios可以，android不行~</p>\n<p>在textarea标签下都可以换行~</p>\n<h5 id=\"IE10（winphone8）表单元素默认外观如何重置\"><a href=\"#IE10（winphone8）表单元素默认外观如何重置\" class=\"headerlink\" title=\"IE10（winphone8）表单元素默认外观如何重置\"></a>IE10（winphone8）表单元素默认外观如何重置</h5><p>禁用 select 默认下拉箭头</p>\n<p>::-ms-expand 适用于表单选择控件下拉箭头的修改，有多个属性值，设置它隐藏 (display:none) 并使用背景图片来修饰可得到我们想要的效果。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">select::-ms-expand &#123;</div><div class=\"line\">display: none;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h5 id=\"禁用-radio-和-checkbox-默认样式\"><a href=\"#禁用-radio-和-checkbox-默认样式\" class=\"headerlink\" title=\"禁用 radio 和 checkbox 默认样式\"></a>禁用 radio 和 checkbox 默认样式</h5><p>::-ms-check 适用于表单复选框或单选按钮默认图标的修改，同样有多个属性值，设置它隐藏 (display:none) 并使用背景图片来修饰可得到我们想要的效果。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">input[type=radio]::-ms-check,input[type=checkbox]::-ms-check&#123;</div><div class=\"line\">display: none;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h5 id=\"禁用PC端表单输入框默认清除按钮\"><a href=\"#禁用PC端表单输入框默认清除按钮\" class=\"headerlink\" title=\"禁用PC端表单输入框默认清除按钮\"></a>禁用PC端表单输入框默认清除按钮</h5><p>当表单文本输入框输入内容后会显示文本清除按钮，::-ms-clear 适用于该清除按钮的修改，同样设置使它隐藏 (display:none) 并使用背景图片来修饰可得到我们想要的效果。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">input[type=text]::-ms-clear,input[type=tel]::-ms-clear,input[type=number]::-ms-clear&#123;</div><div class=\"line\">display: none;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h5 id=\"禁止ios-长按时不触发系统的菜单，禁止ios-amp-android长按时下载图片\"><a href=\"#禁止ios-长按时不触发系统的菜单，禁止ios-amp-android长按时下载图片\" class=\"headerlink\" title=\"禁止ios 长按时不触发系统的菜单，禁止ios&amp;android长按时下载图片\"></a>禁止ios 长按时不触发系统的菜单，禁止ios&amp;android长按时下载图片</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">.css&#123;-webkit-touch-callout: none&#125;</div></pre></td></tr></table></figure>\n<h5 id=\"禁止ios和android用户选中文字\"><a href=\"#禁止ios和android用户选中文字\" class=\"headerlink\" title=\"禁止ios和android用户选中文字\"></a>禁止ios和android用户选中文字</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">.css&#123;-webkit-user-select:none&#125;</div></pre></td></tr></table></figure>\n<p>####打电话发短信写邮件怎么实现</p>\n<p>打电话<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;tel:0755-10086&quot;&gt;打电话给:0755-10086&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p>发短信，winphone系统无效<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;sms:10086&quot;&gt;发短信给: 10086&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p>写邮件，可参考《移动web页面给用户发送邮件的方法》<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;mailto:peun@foxmail.com&quot;&gt;peun@foxmail.com&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<h5 id=\"模拟按钮hover效果\"><a href=\"#模拟按钮hover效果\" class=\"headerlink\" title=\"模拟按钮hover效果\"></a>模拟按钮hover效果</h5><p>移动端触摸按钮的效果，可明示用户有些事情正要发生，是一个比较好体验，但是移动设备中并没有鼠标指针，使用css的hover并不能满足我们的需求，还好国外有个激活移动端css的active效果。</p>\n<p>直接在body上添加ontouchstart，同样可激活移动端css的active效果，比较推荐这种方式，代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;meta charset=&quot;utf-8&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no&quot; name=&quot;viewport&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;yes&quot; name=&quot;apple-mobile-web-app-capable&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;black&quot; name=&quot;apple-mobile-web-app-status-bar-style&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;telephone=no&quot; name=&quot;format-detection&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;email=no&quot; name=&quot;format-detection&quot;&gt;</div><div class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</div><div class=\"line\">a&#123;-webkit-tap-highlight-color: rgba(0,0,0,0);&#125;</div><div class=\"line\">.btn-blue&#123;display:block;height:42px;line-height:42px;text-align:center;border-radius:4px;font-size:18px;color:#FFFFFF;background-color: #4185F3;&#125;</div><div class=\"line\">.btn-blue:active&#123;background-color: #357AE8;&#125;</div><div class=\"line\">&lt;/style&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body ontouchstart&gt;</div><div class=\"line\">&lt;div class=&quot;btn-blue&quot;&gt;按钮&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure></p>\n<p>或者：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;meta charset=&quot;utf-8&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no&quot; name=&quot;viewport&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;yes&quot; name=&quot;apple-mobile-web-app-capable&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;black&quot; name=&quot;apple-mobile-web-app-status-bar-style&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;telephone=no&quot; name=&quot;format-detection&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;email=no&quot; name=&quot;format-detection&quot;&gt;</div><div class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</div><div class=\"line\">a&#123;-webkit-tap-highlight-color: rgba(0,0,0,0);&#125;</div><div class=\"line\">.btn-blue&#123;display:block;height:42px;line-height:42px;text-align:center;border-radius:4px;font-size:18px;color:#FFFFFF;background-color: #4185F3;&#125;</div><div class=\"line\">.btn-blue:active&#123;background-color: #357AE8;&#125;</div><div class=\"line\">&lt;/style&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;div class=&quot;btn-blue&quot;&gt;按钮&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class=\"line\">document.addEventListener(&quot;touchstart&quot;, function()&#123;&#125;, true)</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure></p>\n<p>兼容性ios5+、部分android 4+、winphone 8</p>\n<p>要做到全兼容的办法，可通过绑定ontouchstart和ontouchend来控制按钮的类名<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;meta charset=&quot;utf-8&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no&quot; name=&quot;viewport&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;yes&quot; name=&quot;apple-mobile-web-app-capable&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;black&quot; name=&quot;apple-mobile-web-app-status-bar-style&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;telephone=no&quot; name=&quot;format-detection&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;email=no&quot; name=&quot;format-detection&quot;&gt;</div><div class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</div><div class=\"line\">a&#123;-webkit-tap-highlight-color: rgba(0,0,0,0);&#125;</div><div class=\"line\">.btn-blue&#123;display:block;height:42px;line-height:42px;text-align:center;border-radius:4px;font-size:18px;color:#FFFFFF;background-color: #4185F3;&#125;</div><div class=\"line\">.btn-blue-on&#123;background-color: #357AE8;&#125;</div><div class=\"line\">&lt;/style&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;div class=&quot;btn-blue&quot;&gt;按钮&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class=\"line\">var btnBlue = document.querySelector(&quot;.btn-blue&quot;);</div><div class=\"line\">btnBlue.ontouchstart = function()&#123;</div><div class=\"line\">    this.className = &quot;btn-blue btn-blue-on&quot;</div><div class=\"line\">&#125;</div><div class=\"line\">btnBlue.ontouchend = function()&#123;</div><div class=\"line\">    this.className = &quot;btn-blue&quot;</div><div class=\"line\">&#125;</div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure></p>\n<h4 id=\"屏幕旋转的事件和样式\"><a href=\"#屏幕旋转的事件和样式\" class=\"headerlink\" title=\"屏幕旋转的事件和样式\"></a>屏幕旋转的事件和样式</h4><p>事件</p>\n<p>window.orientation，取值：正负90表示横屏模式、0和180表现为竖屏模式；<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">window.onorientationchange = function()&#123;</div><div class=\"line\">    switch(window.orientation)&#123;</div><div class=\"line\">        case -90:</div><div class=\"line\">        case 90:</div><div class=\"line\">        alert(&quot;横屏:&quot; + window.orientation);</div><div class=\"line\">        case 0:</div><div class=\"line\">        case 180:</div><div class=\"line\">        alert(&quot;竖屏:&quot; + window.orientation);</div><div class=\"line\">        break;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>样式<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">//竖屏时使用的样式</div><div class=\"line\">@media all and (orientation:portrait) &#123;</div><div class=\"line\">.css&#123;&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">//横屏时使用的样式</div><div class=\"line\">@media all and (orientation:landscape) &#123;</div><div class=\"line\">.css&#123;&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"audio元素和video元素在ios和andriod中无法自动播放\"><a href=\"#audio元素和video元素在ios和andriod中无法自动播放\" class=\"headerlink\" title=\"audio元素和video元素在ios和andriod中无法自动播放\"></a>audio元素和video元素在ios和andriod中无法自动播放</h4><p>应对方案：触屏即播<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(&apos;html&apos;).one(&apos;touchstart&apos;,function()&#123;</div><div class=\"line\">    audio.play()</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<h4 id=\"摇一摇功能\"><a href=\"#摇一摇功能\" class=\"headerlink\" title=\"摇一摇功能\"></a>摇一摇功能</h4><p>HTML5 deviceMotion：封装了运动传感器数据的事件，可以获取手机运动状态下的运动加速度等数据。</p>\n<h4 id=\"手机拍照和上传图片\"><a href=\"#手机拍照和上传图片\" class=\"headerlink\" title=\"手机拍照和上传图片\"></a>手机拍照和上传图片</h4><p><input type=\"file\">的accept 属性<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 选择照片 --&gt;</div><div class=\"line\">&lt;input type=file accept=&quot;image/*&quot;&gt;</div><div class=\"line\">&lt;!-- 选择视频 --&gt;</div><div class=\"line\">&lt;input type=file accept=&quot;video/*&quot;&gt;</div></pre></td></tr></table></figure></p>\n<p>使用总结：</p>\n<pre><code>ios 有拍照、录像、选取本地图片功能\n部分android只有选取本地图片功能\nwinphone不支持\ninput控件默认外观丑陋\n</code></pre><h4 id=\"微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整\"><a href=\"#微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整\" class=\"headerlink\" title=\"微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整\"></a>微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整</h4><p>原因</p>\n<pre><code>android侧是复写了layoutinflater 对textview做了统一处理\nios侧是修改了body.style.webkitTextSizeAdjust值\n</code></pre><p>解决方案：</p>\n<pre><code>android使用以下代码，该接口只在微信浏览器下有效\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">/**</div><div class=\"line\"> * 页面加入这段代码可使Android机器页面不再受到用户字体缩放强制改变大小</div><div class=\"line\"> * 但是会有一个1秒左右的延迟，期间可以考虑通过loading展示</div><div class=\"line\"> * 仅供参考</div><div class=\"line\"> */</div><div class=\"line\">(function()&#123;</div><div class=\"line\">    if (typeof(WeixinJSBridge) == &quot;undefined&quot;) &#123;</div><div class=\"line\">        document.addEventListener(&quot;WeixinJSBridgeReady&quot;, function (e) &#123;</div><div class=\"line\">            setTimeout(function()&#123;</div><div class=\"line\">                WeixinJSBridge.invoke(&apos;setFontSizeCallback&apos;,&#123;&quot;fontSize&quot;:0&#125;, function(res) &#123;</div><div class=\"line\">                    alert(JSON.stringify(res));</div><div class=\"line\">                &#125;);</div><div class=\"line\">            &#125;,0);</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125; else &#123;</div><div class=\"line\">        setTimeout(function()&#123;</div><div class=\"line\">            WeixinJSBridge.invoke(&apos;setFontSizeCallback&apos;,&#123;&quot;fontSize&quot;:0&#125;, function(res) &#123;</div><div class=\"line\">                alert(JSON.stringify(res));</div><div class=\"line\">            &#125;);</div><div class=\"line\">        &#125;,0);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)();</div></pre></td></tr></table></figure>\n<p>ios使用-webkit-text-size-adjust禁止调整字体大小<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">body&#123;-webkit-text-size-adjust: 100%!important;&#125;</div></pre></td></tr></table></figure></p>\n<p>最好的解决方案：</p>\n<pre><code>整个页面用rem或者百分比布局\n</code></pre><h4 id=\"消除transition闪屏\"><a href=\"#消除transition闪屏\" class=\"headerlink\" title=\"消除transition闪屏\"></a>消除transition闪屏</h4><p>网络都是这么写的，但我并没有测试出来<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">.css&#123;</div><div class=\"line\">/*设置内嵌的元素在 3D 空间如何呈现：保留 3D*/</div><div class=\"line\">-webkit-transform-style: preserve-3d;</div><div class=\"line\">/*（设置进行转换的元素的背面在面对用户时是否可见：隐藏）*/</div><div class=\"line\">-webkit-backface-visibility: hidden;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"开启硬件加速\"><a href=\"#开启硬件加速\" class=\"headerlink\" title=\"开启硬件加速\"></a>开启硬件加速</h4><pre><code>解决页面闪白\n保证动画流畅\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">.css &#123;</div><div class=\"line\">   -webkit-transform: translate3d(0, 0, 0);</div><div class=\"line\">   -moz-transform: translate3d(0, 0, 0);</div><div class=\"line\">   -ms-transform: translate3d(0, 0, 0);</div><div class=\"line\">   transform: translate3d(0, 0, 0);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"取消input在ios下，输入的时候英文首字母的默认大写\"><a href=\"#取消input在ios下，输入的时候英文首字母的默认大写\" class=\"headerlink\" title=\"取消input在ios下，输入的时候英文首字母的默认大写\"></a>取消input在ios下，输入的时候英文首字母的默认大写</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;input autocapitalize=&quot;off&quot; autocorrect=&quot;off&quot; /&gt;</div></pre></td></tr></table></figure>\n<h5 id=\"android-上去掉语音输入按钮\"><a href=\"#android-上去掉语音输入按钮\" class=\"headerlink\" title=\"android 上去掉语音输入按钮\"></a>android 上去掉语音输入按钮</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">input::-webkit-input-speech-button &#123;display: none&#125;</div></pre></td></tr></table></figure>\n<p>android 2.3 bug</p>\n<pre><code>@-webkit-keyframes 需要以0%开始100%结束，0%的百分号不能去掉\nafter和before伪类无法使用动画animation\nborder-radius不支持%单位\ntranslate百分比的写法和scale在一起会导致失效，例如-webkit-transform: translate(-50%,-50%) scale(-0.5, 1)\n</code></pre><p>android 4.x bug</p>\n<pre><code>三星 Galaxy S4中自带浏览器不支持border-radius缩写\n同时设置border-radius和背景色的时候，背景色会溢出到圆角以外部分\n部分手机(如三星)，a链接支持鼠标:visited事件，也就是说链接访问后文字变为紫色\nandroid无法同时播放多音频audio\n</code></pre><h4 id=\"设计高性能CSS3动画的几个要素\"><a href=\"#设计高性能CSS3动画的几个要素\" class=\"headerlink\" title=\"设计高性能CSS3动画的几个要素\"></a>设计高性能CSS3动画的几个要素</h4><pre><code>    尽可能地使用合成属性transform和opacity来设计CSS3动画，不使用position的left和top来定位\n    利用translate3D开启GPU加速\n\n参考《High Performance Animations》\n</code></pre><h4 id=\"fixed-bug\"><a href=\"#fixed-bug\" class=\"headerlink\" title=\"fixed bug\"></a>fixed bug</h4><pre><code>    ios下fixed元素容易定位出错，软键盘弹出时，影响fixed元素定位\n    android下fixed表现要比iOS更好，软键盘弹出时，不会影响fixed元素定位\n    ios4下不支持position:fixed\n\n解决方案\n\n    可用isroll.js，暂无完美方案\n\n参考\n\n《移动端web页面使用position:fixed问题总结》\n\n《使用iScroll.js解决ios4下不支持position:fixed的问题》\n</code></pre><h4 id=\"如何阻止windows-Phone的默认触摸事件\"><a href=\"#如何阻止windows-Phone的默认触摸事件\" class=\"headerlink\" title=\"如何阻止windows Phone的默认触摸事件\"></a>如何阻止windows Phone的默认触摸事件</h4><pre><code>winphone下默认触摸事件事件使用e.preventDefault是无效的\n\n目前解决方法是使用样式来禁用\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">html&#123;-ms-touch-action: none;&#125;/* 禁止winphone默认触摸事件 */</div></pre></td></tr></table></figure>\n<h4 id=\"播放视频不全屏\"><a href=\"#播放视频不全屏\" class=\"headerlink\" title=\"播放视频不全屏\"></a>播放视频不全屏</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!--</div><div class=\"line\">1.目前只有ios7+、winphone8+支持自动播放</div><div class=\"line\">2.支持Airplay的设备（如：音箱、Apple TV)播放</div><div class=\"line\">x-webkit-airplay=&quot;true&quot;</div><div class=\"line\">3.播放视频不全屏，ios7、、winphone8+支持，部分android4+支持（含华为、小米、魅族）</div><div class=\"line\">webkit-playsinline=&quot;true&quot;</div><div class=\"line\">4.ios 10 : playsinline</div><div class=\"line\">5.ios 8、9 ：https://github.com/bfred-it/iphone-inline-video</div><div class=\"line\">--&gt;</div><div class=\"line\">&lt;video x-webkit-airplay=&quot;true&quot; webkit-playsinline=&quot;true&quot; preload=&quot;auto&quot; autoplay src=&quot;http://&quot;&gt;&lt;/video&gt;</div><div class=\"line\">&lt;video playsinline preload=&quot;auto&quot; autoplay src=&quot;http://&quot;&gt;&lt;/video&gt;</div></pre></td></tr></table></figure>\n<p>常用的移动端框架<br>zepto.js</p>\n<p>语法与jquery几乎一样，会jquery基本会zepto~</p>\n<p>最新版本已经更新到1.16</p>\n<p>官网：<a href=\"http://zeptojs.com/\" target=\"_blank\" rel=\"external\">http://zeptojs.com/</a></p>\n<p>中文(非官网)：<a href=\"http://www.css88.com/doc/zeptojs_api/\" target=\"_blank\" rel=\"external\">http://www.css88.com/doc/zeptojs_api/</a></p>\n<p>常使用的扩展模块：</p>\n<p>浏览器检测：<a href=\"https://github.com/madrobby/zepto/blob/master/src/detect.js\" target=\"_blank\" rel=\"external\">https://github.com/madrobby/zepto/blob/master/src/detect.js</a></p>\n<p>tap事件：<a href=\"https://github.com/madrobby/zepto/blob/master/src/touch.js\" target=\"_blank\" rel=\"external\">https://github.com/madrobby/zepto/blob/master/src/touch.js</a><br>iscroll.js</p>\n<p>解决页面不支持弹性滚动，不支持fixed引起的问题~</p>\n<p>实现下拉刷新，滑屏，缩放等功能~</p>\n<p>最新版本已经更新到5.0</p>\n<p>官网：<a href=\"http://cubiq.org/iscroll-5\" target=\"_blank\" rel=\"external\">http://cubiq.org/iscroll-5</a><br>underscore.js</p>\n<p>笔者没用过，不过听说好用，推荐给大家~</p>\n<p>该库提供了一整套函数式编程的实用功能，但是没有扩展任何JavaScript内置对象。</p>\n<p>最新版本已经更新到1.8.2</p>\n<p>官网：<a href=\"http://underscorejs.org/\" target=\"_blank\" rel=\"external\">http://underscorejs.org/</a><br>滑屏框架</p>\n<p>适合上下滑屏、左右滑屏等滑屏切换页面的效果</p>\n<p>slip.js</p>\n<p>iSlider.js</p>\n<p>fullpage.js</p>\n<p>swiper.js<br>flex布局</p>\n<p>flex布局目前可使用在移动中，并非所有的语法都全兼容，但以下写法笔者实践过，效果良好~<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">/* ============================================================</div><div class=\"line\">   flex：定义布局为盒模型</div><div class=\"line\">   flex-v：盒模型垂直布局</div><div class=\"line\">   flex-1：子元素占据剩余的空间</div><div class=\"line\">   flex-align-center：子元素垂直居中</div><div class=\"line\">   flex-pack-center：子元素水平居中</div><div class=\"line\">   flex-pack-justify：子元素两端对齐</div><div class=\"line\">   兼容性：ios 4+、android 2.3+、winphone8+</div><div class=\"line\">   ============================================================ */</div><div class=\"line\">.flex&#123;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;&#125;</div><div class=\"line\">.flex-v&#123;-webkit-box-orient:vertical;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;&#125;</div><div class=\"line\">.flex-1&#123;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;&#125;</div><div class=\"line\">.flex-align-center&#123;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;&#125;</div><div class=\"line\">.flex-pack-center&#123;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;&#125;</div><div class=\"line\">.flex-pack-justify&#123;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;&#125;</div></pre></td></tr></table></figure></p>\n<p>示例：两端对齐<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;meta charset=&quot;utf-8&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no&quot; name=&quot;viewport&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;yes&quot; name=&quot;apple-mobile-web-app-capable&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;black&quot; name=&quot;apple-mobile-web-app-status-bar-style&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;telephone=no&quot; name=&quot;format-detection&quot;&gt;</div><div class=\"line\">&lt;meta content=&quot;email=no&quot; name=&quot;format-detection&quot;&gt;</div><div class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</div><div class=\"line\">/* ============================================================</div><div class=\"line\">   flex：定义布局为盒模型</div><div class=\"line\">   flex-v：盒模型垂直布局</div><div class=\"line\">   flex-1：子元素占据剩余的空间</div><div class=\"line\">   flex-align-center：子元素垂直居中</div><div class=\"line\">   flex-pack-center：子元素水平居中</div><div class=\"line\">   flex-pack-justify：子元素两端对齐</div><div class=\"line\">   兼容性：ios 4+、android 2.3+、winphone8+</div><div class=\"line\">   ============================================================ */</div><div class=\"line\">.flex&#123;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;&#125;</div><div class=\"line\">.flex-v&#123;-webkit-box-orient:vertical;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;&#125;</div><div class=\"line\">.flex-1&#123;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1;&#125;</div><div class=\"line\">.flex-align-center&#123;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;&#125;</div><div class=\"line\">.flex-pack-center&#123;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;&#125;</div><div class=\"line\">.flex-pack-justify&#123;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;&#125;</div><div class=\"line\">&lt;/style&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;div class=&quot;flex flex-pack-justify&quot;&gt;</div><div class=\"line\">    &lt;div&gt;模块一&lt;/div&gt;</div><div class=\"line\">    &lt;div&gt;模块二&lt;/div&gt;</div><div class=\"line\">    &lt;div&gt;模块三&lt;/div&gt;</div><div class=\"line\">    &lt;div&gt;模块四&lt;/div&gt;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure></p>\n<p>使用注意：</p>\n<pre><code>flex下的子元素必须为块级元素，非块级元素在android2.3机器下flex失效\nflex下的子元素宽度和高度不能超过父元素，否则会导致子元素定位错误，例如水平垂直居中\n</code></pre><p>参考：</p>\n<p>flexyboxes</p>\n<p>“老”的Flexbox和“新”的Flexbox</p>\n<p>跨浏览器的Flexbox<br>FastClick</p>\n<p>消除在移动浏览器上触发click事件与一个物理Tap(敲击)之间的300延迟</p>\n<p>参考《FastClick》<br>Sea.js</p>\n<p>提供简单、极致的模块化开发体验</p>\n<pre><code>简单友好的模块定义规范：Sea.js 遵循 CMD 规范，可以像 Node.js 一般书写模块代码。\n自然直观的代码组织方式：依赖的自动加载、配置的简洁清晰，可以让我们更多地享受编码的乐趣。\n</code></pre><p>地址：<a href=\"http://seajs.org/docs/\" target=\"_blank\" rel=\"external\">http://seajs.org/docs/</a></p>\n"},{"title":"移动端WEB给用户发送邮件","_content":"#### mailto使用方法\n\n1、基础写法\n\n当浏览者点击这个链接时，浏览器会自动调用默认的客户端电子邮件程序，并在收件人框中自动填上收件人的地址下面\n```\n<a href=\"mailto:peun@foxmail.com\">单击这里给peun发电子邮件</a>\n```\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151116114810108-1436165533.jpg\n2、在收件人地址后用?cc=开头，填写抄送地址(android存在兼容问题)\n```\n<a href=\"mailto:peun@foxmail.com?cc=lina@qq.com\">单击这里给peun发电子邮件</a>\n```\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151116114824155-71907555.jpg\n3、紧跟着抄送地址之后，写上&bcc=，填上密件抄送地址(android存在兼容问题)\n```\n<a href=\"mailto:peun@foxmail.com?cc=lina@qq.com&bcc=luna@qq.com\">单击这里给peun发电子邮件</a>\n```\n注意：在添加这些功能时，第一个功能以\"?\"开头，后面的以\"&\"开头\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151116114835780-1630655331.jpg\n4、包含多个收件人、抄送、密件抄送人，用分号隔(;)开多个收件人的地址即可实现\n```\n<a href=\"mailto:peun@foxmail.com;dana@foxmail.com\">单击这里给peun发电子邮件</a>\n```\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151116114851436-1245383931.jpg\n5、包含主题，用?subject=可以填上主题\n```\n<a href=\"mailto:peun@foxmail.com?subject=【邀请函】\">单击这里给peun发电子邮件</a>\n```\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151116114914030-2074510330.jpg\n\n6、包含内容，用?body=可以填上内容\n\n内容包含文本，使用%0A给文本换行\n```\n<a href=\"mailto:peun@foxmail.com?body=邀请您参加腾讯onepiece分享%0A%0A期待您的到来%0A%0Apeunzhang\">单击这里给peun发电子邮件</a>\n```\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151116115920765-333659373.jpg\n内容包含链接，含http(s)://等的文本自动转化为链接\n```\n<a href=\"mailto:peun@foxmail.com?body=http://www.cnblogs.com/PeunZhang/\">单击这里给peun发电子邮件</a>\n```\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151116115252436-619314432.jpg\n内容包含图片，PC端不支持\n```\n<a href=\"mailto:peun@foxmail.com?body=<img src='http://images.cnblogs.com/cnblogs_com/PeunZhang/286351/o_peunzhang_cnblogs_code.png' width='200' height='200'>\">单击这里给peun发电子邮件</a>\n```\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151116115300061-1441809387.jpg\n8、完整示例，如果mailto后面同时有多个参数的话，第一个参数必须以“?”开头，后面的每一个都以“&”开头\n```\n<a href=\"mailto:aaa@xxx.com;bbb@xxx.com;ccc@xxx.com?cc=ddd@yyy.com;eee@yyy.com&bcc=fff@zzz.com&subject=【邀请函】&body=邀请您参加腾讯onepiece分享\">单击这里给peun发电子邮件</a>\n```\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151116120359452-1156860153.jpg\n知道基本的用法后，回到微信商户通的需求点，有了以下的界面：\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151110135935181-17939860.jpg\n发送成功后，在QQ邮箱打开的界面：\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151110135648853-154642654.jpg\n重点代码展示：\n\nHTML\n\n```\n<a href=\"javascript:;\" class=\"btn btn-green form-btn\" id=\"sendBtn\">打开邮箱</a>\n```\njavascript\n```\nvar txt = \"?subject=［微信支付停车场行业资源包v1.0］&body=停车场行业 - 微信支付行业设计方案资源包v1.0%0A%0A\"\n            + \"http://action.weixin.qq.com/payact/readtemplate?t=/mobile/merchant/project/parking/download_tmpl%0A%0A\"\n            + \"里面含有：%0A%0A1.停车场行业方案设计模版.ai%0A2.停车场前端页面开发文件.html%0A%0A\"\n            + \"您可以用源文件直接编辑后印刷或开发。%0A%0A\"\n            + \"资源包如果有最新版本会第一时间更新。欢迎继续关注微信支付行业设计方案，或者分享给您的商业伙伴。%0A%0A\"\n            + \"微信支付行业设计方案：%0A%0A\"\n            + \"<img src='http://ol.weixin.qq.com/public/demo/parking/parking_discount/img/code.png' width='200' height='200'>\";\n\nvar sendBtn = document.getElementById(\"sendBtn\"),\n    sendName = document.getElementById(\"sendName\");\nsendBtn.addEventListener(\"click\",function(e){\n        sendNameVal = document.getElementById(\"sendName\").value;\n        if (filter.test(sendNameVal) == false) {\n            e.preventDefault();\n            removeClass(info,\"hide\")\n        }\n        else\n        if(filter.test(sendNameVal) == true){\n            sendBtn.setAttribute(\"href\",\"mailto:\" + sendNameVal + txt);\n        }\n    })\n```\n缺点\n\n    部分用户打开邮箱后不知道是自己给自己发送邮件\n    部分用户没有手机邮箱账户，点击打开邮件后不会设置，放弃下载\n    邮件成功后，被部分客户端当做垃圾邮件处理，用户找不到邮件\n\n于是在此缺点的上补充了手机自带的复制功能，保证用户可以拿到下载链接，完善后下载量也提升了~\n\n长按a标签弹出系统默认菜单，点复制(拷贝)，保证用户有办法可以拿到下载链接：\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151116140743186-890588449.jpg\n重点代码展示：\n\nHTML\n```\n<a href=\"http://action.weixin.qq.com/payact/readtemplate?t=mobile/merchant/project/parking/download_tmpl\" target=\"_blank\" class=\"copy\">http://action.weixin.qq.com/payact/readtemplate?t=mobile/merchant/project/parking/download_tmpl</a>\n```\ncss\n```\n .copy{-webkit-touch-callout: default;}\n```\njavascript\n```\n//检测平台，PC端可点击a，移动端禁止a\n    function mobilePreventA(e){\n        var system = {\n            win: false,\n            mac: false,\n            xll: false,\n            ipad:false\n        };\n        var p = navigator.platform;\n        system.win = p.indexOf(\"Win\") == 0;\n        system.mac = p.indexOf(\"Mac\") == 0;\n        system.x11 = (p == \"X11\") || (p.indexOf(\"Linux\") == 0);\n        if (!(system.win || system.mac || system.xll)) {\n             e.preventDefault();\n        }\n    }\n    var copyBtn = document.querySelector(\".copy\");\n    copyBtn.addEventListener(\"click\",function(e){\n        mobilePreventA(e);\n    })\n```\n缺点\n\n    需要发送下载链接到PC的微信或者QQ等，操作不方便\n\n调用QQ邮件分享功能\n\nQQ邮件分享功能\n\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151116134553921-1856479774.jpg\n重点代码展示：\n```\n<script type=\"text/javascript\">\n(function(){\nvar p = {\nurl:location.href,\nto:'qqmail',\ndesc:'', /*默认分享理由(可选)*/\nsummary:'请打开http://www.cnblogs.com/PeunZhang/下载',/*摘要(可选)*/\ntitle:'资源下载',/*分享标题(可选)*/\nsite:'白树博客',/*分享来源 如：腾讯网(可选)*/\npics:'ttp://images.cnblogs.com/cnblogs_com/PeunZhang/286351/o_peunzhang_cnblogs_code.png' /*分享图片的路径(可选)*/\n};\nvar s = [];\nfor(var i in p){\ns.push(i + '=' + encodeURIComponent(p[i]||''));\n}\ndocument.write([\"<a target='_blank' \", 'href=\"http://mail.qq.com/cgi-bin/qm_share?', s.join(\"&\"), '\"', ' style=\"cursor:pointer;text-decoration:none;outline:none\"><img src=\"http://rescdn.qqmail.com/zh_CN/htmledition/images/function/qm_open/ico_share_01.png\"/></a>'].join(\"\"));\n})();\n```\n缺点\n\n    移动端并没有做兼容，手机设备上操作难度大\n    没有设置viewport，页面内容特别小\n    没有微信登陆授权操作，需要手动输入QQ账号\n\n出处：http://peunzhang.cnblogs.com/\n","source":"_posts/移动web页面给用户发送邮件的方法.md","raw":"---\ntitle: 移动端WEB给用户发送邮件\ntags: [前端,移动端,WEB,邮件]\ncategories: 移动端\n---\n#### mailto使用方法\n\n1、基础写法\n\n当浏览者点击这个链接时，浏览器会自动调用默认的客户端电子邮件程序，并在收件人框中自动填上收件人的地址下面\n```\n<a href=\"mailto:peun@foxmail.com\">单击这里给peun发电子邮件</a>\n```\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151116114810108-1436165533.jpg\n2、在收件人地址后用?cc=开头，填写抄送地址(android存在兼容问题)\n```\n<a href=\"mailto:peun@foxmail.com?cc=lina@qq.com\">单击这里给peun发电子邮件</a>\n```\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151116114824155-71907555.jpg\n3、紧跟着抄送地址之后，写上&bcc=，填上密件抄送地址(android存在兼容问题)\n```\n<a href=\"mailto:peun@foxmail.com?cc=lina@qq.com&bcc=luna@qq.com\">单击这里给peun发电子邮件</a>\n```\n注意：在添加这些功能时，第一个功能以\"?\"开头，后面的以\"&\"开头\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151116114835780-1630655331.jpg\n4、包含多个收件人、抄送、密件抄送人，用分号隔(;)开多个收件人的地址即可实现\n```\n<a href=\"mailto:peun@foxmail.com;dana@foxmail.com\">单击这里给peun发电子邮件</a>\n```\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151116114851436-1245383931.jpg\n5、包含主题，用?subject=可以填上主题\n```\n<a href=\"mailto:peun@foxmail.com?subject=【邀请函】\">单击这里给peun发电子邮件</a>\n```\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151116114914030-2074510330.jpg\n\n6、包含内容，用?body=可以填上内容\n\n内容包含文本，使用%0A给文本换行\n```\n<a href=\"mailto:peun@foxmail.com?body=邀请您参加腾讯onepiece分享%0A%0A期待您的到来%0A%0Apeunzhang\">单击这里给peun发电子邮件</a>\n```\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151116115920765-333659373.jpg\n内容包含链接，含http(s)://等的文本自动转化为链接\n```\n<a href=\"mailto:peun@foxmail.com?body=http://www.cnblogs.com/PeunZhang/\">单击这里给peun发电子邮件</a>\n```\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151116115252436-619314432.jpg\n内容包含图片，PC端不支持\n```\n<a href=\"mailto:peun@foxmail.com?body=<img src='http://images.cnblogs.com/cnblogs_com/PeunZhang/286351/o_peunzhang_cnblogs_code.png' width='200' height='200'>\">单击这里给peun发电子邮件</a>\n```\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151116115300061-1441809387.jpg\n8、完整示例，如果mailto后面同时有多个参数的话，第一个参数必须以“?”开头，后面的每一个都以“&”开头\n```\n<a href=\"mailto:aaa@xxx.com;bbb@xxx.com;ccc@xxx.com?cc=ddd@yyy.com;eee@yyy.com&bcc=fff@zzz.com&subject=【邀请函】&body=邀请您参加腾讯onepiece分享\">单击这里给peun发电子邮件</a>\n```\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151116120359452-1156860153.jpg\n知道基本的用法后，回到微信商户通的需求点，有了以下的界面：\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151110135935181-17939860.jpg\n发送成功后，在QQ邮箱打开的界面：\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151110135648853-154642654.jpg\n重点代码展示：\n\nHTML\n\n```\n<a href=\"javascript:;\" class=\"btn btn-green form-btn\" id=\"sendBtn\">打开邮箱</a>\n```\njavascript\n```\nvar txt = \"?subject=［微信支付停车场行业资源包v1.0］&body=停车场行业 - 微信支付行业设计方案资源包v1.0%0A%0A\"\n            + \"http://action.weixin.qq.com/payact/readtemplate?t=/mobile/merchant/project/parking/download_tmpl%0A%0A\"\n            + \"里面含有：%0A%0A1.停车场行业方案设计模版.ai%0A2.停车场前端页面开发文件.html%0A%0A\"\n            + \"您可以用源文件直接编辑后印刷或开发。%0A%0A\"\n            + \"资源包如果有最新版本会第一时间更新。欢迎继续关注微信支付行业设计方案，或者分享给您的商业伙伴。%0A%0A\"\n            + \"微信支付行业设计方案：%0A%0A\"\n            + \"<img src='http://ol.weixin.qq.com/public/demo/parking/parking_discount/img/code.png' width='200' height='200'>\";\n\nvar sendBtn = document.getElementById(\"sendBtn\"),\n    sendName = document.getElementById(\"sendName\");\nsendBtn.addEventListener(\"click\",function(e){\n        sendNameVal = document.getElementById(\"sendName\").value;\n        if (filter.test(sendNameVal) == false) {\n            e.preventDefault();\n            removeClass(info,\"hide\")\n        }\n        else\n        if(filter.test(sendNameVal) == true){\n            sendBtn.setAttribute(\"href\",\"mailto:\" + sendNameVal + txt);\n        }\n    })\n```\n缺点\n\n    部分用户打开邮箱后不知道是自己给自己发送邮件\n    部分用户没有手机邮箱账户，点击打开邮件后不会设置，放弃下载\n    邮件成功后，被部分客户端当做垃圾邮件处理，用户找不到邮件\n\n于是在此缺点的上补充了手机自带的复制功能，保证用户可以拿到下载链接，完善后下载量也提升了~\n\n长按a标签弹出系统默认菜单，点复制(拷贝)，保证用户有办法可以拿到下载链接：\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151116140743186-890588449.jpg\n重点代码展示：\n\nHTML\n```\n<a href=\"http://action.weixin.qq.com/payact/readtemplate?t=mobile/merchant/project/parking/download_tmpl\" target=\"_blank\" class=\"copy\">http://action.weixin.qq.com/payact/readtemplate?t=mobile/merchant/project/parking/download_tmpl</a>\n```\ncss\n```\n .copy{-webkit-touch-callout: default;}\n```\njavascript\n```\n//检测平台，PC端可点击a，移动端禁止a\n    function mobilePreventA(e){\n        var system = {\n            win: false,\n            mac: false,\n            xll: false,\n            ipad:false\n        };\n        var p = navigator.platform;\n        system.win = p.indexOf(\"Win\") == 0;\n        system.mac = p.indexOf(\"Mac\") == 0;\n        system.x11 = (p == \"X11\") || (p.indexOf(\"Linux\") == 0);\n        if (!(system.win || system.mac || system.xll)) {\n             e.preventDefault();\n        }\n    }\n    var copyBtn = document.querySelector(\".copy\");\n    copyBtn.addEventListener(\"click\",function(e){\n        mobilePreventA(e);\n    })\n```\n缺点\n\n    需要发送下载链接到PC的微信或者QQ等，操作不方便\n\n调用QQ邮件分享功能\n\nQQ邮件分享功能\n\nhttp://images2015.cnblogs.com/blog/278431/201511/278431-20151116134553921-1856479774.jpg\n重点代码展示：\n```\n<script type=\"text/javascript\">\n(function(){\nvar p = {\nurl:location.href,\nto:'qqmail',\ndesc:'', /*默认分享理由(可选)*/\nsummary:'请打开http://www.cnblogs.com/PeunZhang/下载',/*摘要(可选)*/\ntitle:'资源下载',/*分享标题(可选)*/\nsite:'白树博客',/*分享来源 如：腾讯网(可选)*/\npics:'ttp://images.cnblogs.com/cnblogs_com/PeunZhang/286351/o_peunzhang_cnblogs_code.png' /*分享图片的路径(可选)*/\n};\nvar s = [];\nfor(var i in p){\ns.push(i + '=' + encodeURIComponent(p[i]||''));\n}\ndocument.write([\"<a target='_blank' \", 'href=\"http://mail.qq.com/cgi-bin/qm_share?', s.join(\"&\"), '\"', ' style=\"cursor:pointer;text-decoration:none;outline:none\"><img src=\"http://rescdn.qqmail.com/zh_CN/htmledition/images/function/qm_open/ico_share_01.png\"/></a>'].join(\"\"));\n})();\n```\n缺点\n\n    移动端并没有做兼容，手机设备上操作难度大\n    没有设置viewport，页面内容特别小\n    没有微信登陆授权操作，需要手动输入QQ账号\n\n出处：http://peunzhang.cnblogs.com/\n","slug":"移动web页面给用户发送邮件的方法","published":1,"date":"2017-05-26T03:54:39.360Z","updated":"2017-05-26T04:02:08.534Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmttc002d4wvsmdqgh84m","content":"<h4 id=\"mailto使用方法\"><a href=\"#mailto使用方法\" class=\"headerlink\" title=\"mailto使用方法\"></a>mailto使用方法</h4><p>1、基础写法</p>\n<p>当浏览者点击这个链接时，浏览器会自动调用默认的客户端电子邮件程序，并在收件人框中自动填上收件人的地址下面<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;mailto:peun@foxmail.com&quot;&gt;单击这里给peun发电子邮件&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151116114810108-1436165533.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151116114810108-1436165533.jpg</a><br>2、在收件人地址后用?cc=开头，填写抄送地址(android存在兼容问题)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;mailto:peun@foxmail.com?cc=lina@qq.com&quot;&gt;单击这里给peun发电子邮件&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151116114824155-71907555.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151116114824155-71907555.jpg</a><br>3、紧跟着抄送地址之后，写上&amp;bcc=，填上密件抄送地址(android存在兼容问题)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;mailto:peun@foxmail.com?cc=lina@qq.com&amp;bcc=luna@qq.com&quot;&gt;单击这里给peun发电子邮件&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p>注意：在添加这些功能时，第一个功能以”?”开头，后面的以”&amp;”开头<br><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151116114835780-1630655331.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151116114835780-1630655331.jpg</a><br>4、包含多个收件人、抄送、密件抄送人，用分号隔(;)开多个收件人的地址即可实现<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;mailto:peun@foxmail.com;dana@foxmail.com&quot;&gt;单击这里给peun发电子邮件&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151116114851436-1245383931.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151116114851436-1245383931.jpg</a><br>5、包含主题，用?subject=可以填上主题<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;mailto:peun@foxmail.com?subject=【邀请函】&quot;&gt;单击这里给peun发电子邮件&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151116114914030-2074510330.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151116114914030-2074510330.jpg</a></p>\n<p>6、包含内容，用?body=可以填上内容</p>\n<p>内容包含文本，使用%0A给文本换行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;mailto:peun@foxmail.com?body=邀请您参加腾讯onepiece分享%0A%0A期待您的到来%0A%0Apeunzhang&quot;&gt;单击这里给peun发电子邮件&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151116115920765-333659373.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151116115920765-333659373.jpg</a><br>内容包含链接，含http(s)://等的文本自动转化为链接<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;mailto:peun@foxmail.com?body=http://www.cnblogs.com/PeunZhang/&quot;&gt;单击这里给peun发电子邮件&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151116115252436-619314432.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151116115252436-619314432.jpg</a><br>内容包含图片，PC端不支持<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;mailto:peun@foxmail.com?body=&lt;img src=&apos;http://images.cnblogs.com/cnblogs_com/PeunZhang/286351/o_peunzhang_cnblogs_code.png&apos; width=&apos;200&apos; height=&apos;200&apos;&gt;&quot;&gt;单击这里给peun发电子邮件&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151116115300061-1441809387.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151116115300061-1441809387.jpg</a><br>8、完整示例，如果mailto后面同时有多个参数的话，第一个参数必须以“?”开头，后面的每一个都以“&amp;”开头<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;mailto:aaa@xxx.com;bbb@xxx.com;ccc@xxx.com?cc=ddd@yyy.com;eee@yyy.com&amp;bcc=fff@zzz.com&amp;subject=【邀请函】&amp;body=邀请您参加腾讯onepiece分享&quot;&gt;单击这里给peun发电子邮件&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151116120359452-1156860153.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151116120359452-1156860153.jpg</a><br>知道基本的用法后，回到微信商户通的需求点，有了以下的界面：<br><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151110135935181-17939860.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151110135935181-17939860.jpg</a><br>发送成功后，在QQ邮箱打开的界面：<br><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151110135648853-154642654.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151110135648853-154642654.jpg</a><br>重点代码展示：</p>\n<p>HTML</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;javascript:;&quot; class=&quot;btn btn-green form-btn&quot; id=&quot;sendBtn&quot;&gt;打开邮箱&lt;/a&gt;</div></pre></td></tr></table></figure>\n<p>javascript<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">var txt = &quot;?subject=［微信支付停车场行业资源包v1.0］&amp;body=停车场行业 - 微信支付行业设计方案资源包v1.0%0A%0A&quot;</div><div class=\"line\">            + &quot;http://action.weixin.qq.com/payact/readtemplate?t=/mobile/merchant/project/parking/download_tmpl%0A%0A&quot;</div><div class=\"line\">            + &quot;里面含有：%0A%0A1.停车场行业方案设计模版.ai%0A2.停车场前端页面开发文件.html%0A%0A&quot;</div><div class=\"line\">            + &quot;您可以用源文件直接编辑后印刷或开发。%0A%0A&quot;</div><div class=\"line\">            + &quot;资源包如果有最新版本会第一时间更新。欢迎继续关注微信支付行业设计方案，或者分享给您的商业伙伴。%0A%0A&quot;</div><div class=\"line\">            + &quot;微信支付行业设计方案：%0A%0A&quot;</div><div class=\"line\">            + &quot;&lt;img src=&apos;http://ol.weixin.qq.com/public/demo/parking/parking_discount/img/code.png&apos; width=&apos;200&apos; height=&apos;200&apos;&gt;&quot;;</div><div class=\"line\"></div><div class=\"line\">var sendBtn = document.getElementById(&quot;sendBtn&quot;),</div><div class=\"line\">    sendName = document.getElementById(&quot;sendName&quot;);</div><div class=\"line\">sendBtn.addEventListener(&quot;click&quot;,function(e)&#123;</div><div class=\"line\">        sendNameVal = document.getElementById(&quot;sendName&quot;).value;</div><div class=\"line\">        if (filter.test(sendNameVal) == false) &#123;</div><div class=\"line\">            e.preventDefault();</div><div class=\"line\">            removeClass(info,&quot;hide&quot;)</div><div class=\"line\">        &#125;</div><div class=\"line\">        else</div><div class=\"line\">        if(filter.test(sendNameVal) == true)&#123;</div><div class=\"line\">            sendBtn.setAttribute(&quot;href&quot;,&quot;mailto:&quot; + sendNameVal + txt);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;)</div></pre></td></tr></table></figure></p>\n<p>缺点</p>\n<pre><code>部分用户打开邮箱后不知道是自己给自己发送邮件\n部分用户没有手机邮箱账户，点击打开邮件后不会设置，放弃下载\n邮件成功后，被部分客户端当做垃圾邮件处理，用户找不到邮件\n</code></pre><p>于是在此缺点的上补充了手机自带的复制功能，保证用户可以拿到下载链接，完善后下载量也提升了~</p>\n<p>长按a标签弹出系统默认菜单，点复制(拷贝)，保证用户有办法可以拿到下载链接：<br><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151116140743186-890588449.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151116140743186-890588449.jpg</a><br>重点代码展示：</p>\n<p>HTML<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;http://action.weixin.qq.com/payact/readtemplate?t=mobile/merchant/project/parking/download_tmpl&quot; target=&quot;_blank&quot; class=&quot;copy&quot;&gt;http://action.weixin.qq.com/payact/readtemplate?t=mobile/merchant/project/parking/download_tmpl&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p>css<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">.copy&#123;-webkit-touch-callout: default;&#125;</div></pre></td></tr></table></figure></p>\n<p>javascript<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">//检测平台，PC端可点击a，移动端禁止a</div><div class=\"line\">    function mobilePreventA(e)&#123;</div><div class=\"line\">        var system = &#123;</div><div class=\"line\">            win: false,</div><div class=\"line\">            mac: false,</div><div class=\"line\">            xll: false,</div><div class=\"line\">            ipad:false</div><div class=\"line\">        &#125;;</div><div class=\"line\">        var p = navigator.platform;</div><div class=\"line\">        system.win = p.indexOf(&quot;Win&quot;) == 0;</div><div class=\"line\">        system.mac = p.indexOf(&quot;Mac&quot;) == 0;</div><div class=\"line\">        system.x11 = (p == &quot;X11&quot;) || (p.indexOf(&quot;Linux&quot;) == 0);</div><div class=\"line\">        if (!(system.win || system.mac || system.xll)) &#123;</div><div class=\"line\">             e.preventDefault();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    var copyBtn = document.querySelector(&quot;.copy&quot;);</div><div class=\"line\">    copyBtn.addEventListener(&quot;click&quot;,function(e)&#123;</div><div class=\"line\">        mobilePreventA(e);</div><div class=\"line\">    &#125;)</div></pre></td></tr></table></figure></p>\n<p>缺点</p>\n<pre><code>需要发送下载链接到PC的微信或者QQ等，操作不方便\n</code></pre><p>调用QQ邮件分享功能</p>\n<p>QQ邮件分享功能</p>\n<p><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151116134553921-1856479774.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151116134553921-1856479774.jpg</a><br>重点代码展示：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class=\"line\">(function()&#123;</div><div class=\"line\">var p = &#123;</div><div class=\"line\">url:location.href,</div><div class=\"line\">to:&apos;qqmail&apos;,</div><div class=\"line\">desc:&apos;&apos;, /*默认分享理由(可选)*/</div><div class=\"line\">summary:&apos;请打开http://www.cnblogs.com/PeunZhang/下载&apos;,/*摘要(可选)*/</div><div class=\"line\">title:&apos;资源下载&apos;,/*分享标题(可选)*/</div><div class=\"line\">site:&apos;白树博客&apos;,/*分享来源 如：腾讯网(可选)*/</div><div class=\"line\">pics:&apos;ttp://images.cnblogs.com/cnblogs_com/PeunZhang/286351/o_peunzhang_cnblogs_code.png&apos; /*分享图片的路径(可选)*/</div><div class=\"line\">&#125;;</div><div class=\"line\">var s = [];</div><div class=\"line\">for(var i in p)&#123;</div><div class=\"line\">s.push(i + &apos;=&apos; + encodeURIComponent(p[i]||&apos;&apos;));</div><div class=\"line\">&#125;</div><div class=\"line\">document.write([&quot;&lt;a target=&apos;_blank&apos; &quot;, &apos;href=&quot;http://mail.qq.com/cgi-bin/qm_share?&apos;, s.join(&quot;&amp;&quot;), &apos;&quot;&apos;, &apos; style=&quot;cursor:pointer;text-decoration:none;outline:none&quot;&gt;&lt;img src=&quot;http://rescdn.qqmail.com/zh_CN/htmledition/images/function/qm_open/ico_share_01.png&quot;/&gt;&lt;/a&gt;&apos;].join(&quot;&quot;));</div><div class=\"line\">&#125;)();</div></pre></td></tr></table></figure></p>\n<p>缺点</p>\n<pre><code>移动端并没有做兼容，手机设备上操作难度大\n没有设置viewport，页面内容特别小\n没有微信登陆授权操作，需要手动输入QQ账号\n</code></pre><p>出处：<a href=\"http://peunzhang.cnblogs.com/\" target=\"_blank\" rel=\"external\">http://peunzhang.cnblogs.com/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"mailto使用方法\"><a href=\"#mailto使用方法\" class=\"headerlink\" title=\"mailto使用方法\"></a>mailto使用方法</h4><p>1、基础写法</p>\n<p>当浏览者点击这个链接时，浏览器会自动调用默认的客户端电子邮件程序，并在收件人框中自动填上收件人的地址下面<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;mailto:peun@foxmail.com&quot;&gt;单击这里给peun发电子邮件&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151116114810108-1436165533.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151116114810108-1436165533.jpg</a><br>2、在收件人地址后用?cc=开头，填写抄送地址(android存在兼容问题)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;mailto:peun@foxmail.com?cc=lina@qq.com&quot;&gt;单击这里给peun发电子邮件&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151116114824155-71907555.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151116114824155-71907555.jpg</a><br>3、紧跟着抄送地址之后，写上&amp;bcc=，填上密件抄送地址(android存在兼容问题)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;mailto:peun@foxmail.com?cc=lina@qq.com&amp;bcc=luna@qq.com&quot;&gt;单击这里给peun发电子邮件&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p>注意：在添加这些功能时，第一个功能以”?”开头，后面的以”&amp;”开头<br><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151116114835780-1630655331.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151116114835780-1630655331.jpg</a><br>4、包含多个收件人、抄送、密件抄送人，用分号隔(;)开多个收件人的地址即可实现<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;mailto:peun@foxmail.com;dana@foxmail.com&quot;&gt;单击这里给peun发电子邮件&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151116114851436-1245383931.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151116114851436-1245383931.jpg</a><br>5、包含主题，用?subject=可以填上主题<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;mailto:peun@foxmail.com?subject=【邀请函】&quot;&gt;单击这里给peun发电子邮件&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151116114914030-2074510330.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151116114914030-2074510330.jpg</a></p>\n<p>6、包含内容，用?body=可以填上内容</p>\n<p>内容包含文本，使用%0A给文本换行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;mailto:peun@foxmail.com?body=邀请您参加腾讯onepiece分享%0A%0A期待您的到来%0A%0Apeunzhang&quot;&gt;单击这里给peun发电子邮件&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151116115920765-333659373.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151116115920765-333659373.jpg</a><br>内容包含链接，含http(s)://等的文本自动转化为链接<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;mailto:peun@foxmail.com?body=http://www.cnblogs.com/PeunZhang/&quot;&gt;单击这里给peun发电子邮件&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151116115252436-619314432.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151116115252436-619314432.jpg</a><br>内容包含图片，PC端不支持<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;mailto:peun@foxmail.com?body=&lt;img src=&apos;http://images.cnblogs.com/cnblogs_com/PeunZhang/286351/o_peunzhang_cnblogs_code.png&apos; width=&apos;200&apos; height=&apos;200&apos;&gt;&quot;&gt;单击这里给peun发电子邮件&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151116115300061-1441809387.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151116115300061-1441809387.jpg</a><br>8、完整示例，如果mailto后面同时有多个参数的话，第一个参数必须以“?”开头，后面的每一个都以“&amp;”开头<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;mailto:aaa@xxx.com;bbb@xxx.com;ccc@xxx.com?cc=ddd@yyy.com;eee@yyy.com&amp;bcc=fff@zzz.com&amp;subject=【邀请函】&amp;body=邀请您参加腾讯onepiece分享&quot;&gt;单击这里给peun发电子邮件&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151116120359452-1156860153.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151116120359452-1156860153.jpg</a><br>知道基本的用法后，回到微信商户通的需求点，有了以下的界面：<br><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151110135935181-17939860.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151110135935181-17939860.jpg</a><br>发送成功后，在QQ邮箱打开的界面：<br><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151110135648853-154642654.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151110135648853-154642654.jpg</a><br>重点代码展示：</p>\n<p>HTML</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;javascript:;&quot; class=&quot;btn btn-green form-btn&quot; id=&quot;sendBtn&quot;&gt;打开邮箱&lt;/a&gt;</div></pre></td></tr></table></figure>\n<p>javascript<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">var txt = &quot;?subject=［微信支付停车场行业资源包v1.0］&amp;body=停车场行业 - 微信支付行业设计方案资源包v1.0%0A%0A&quot;</div><div class=\"line\">            + &quot;http://action.weixin.qq.com/payact/readtemplate?t=/mobile/merchant/project/parking/download_tmpl%0A%0A&quot;</div><div class=\"line\">            + &quot;里面含有：%0A%0A1.停车场行业方案设计模版.ai%0A2.停车场前端页面开发文件.html%0A%0A&quot;</div><div class=\"line\">            + &quot;您可以用源文件直接编辑后印刷或开发。%0A%0A&quot;</div><div class=\"line\">            + &quot;资源包如果有最新版本会第一时间更新。欢迎继续关注微信支付行业设计方案，或者分享给您的商业伙伴。%0A%0A&quot;</div><div class=\"line\">            + &quot;微信支付行业设计方案：%0A%0A&quot;</div><div class=\"line\">            + &quot;&lt;img src=&apos;http://ol.weixin.qq.com/public/demo/parking/parking_discount/img/code.png&apos; width=&apos;200&apos; height=&apos;200&apos;&gt;&quot;;</div><div class=\"line\"></div><div class=\"line\">var sendBtn = document.getElementById(&quot;sendBtn&quot;),</div><div class=\"line\">    sendName = document.getElementById(&quot;sendName&quot;);</div><div class=\"line\">sendBtn.addEventListener(&quot;click&quot;,function(e)&#123;</div><div class=\"line\">        sendNameVal = document.getElementById(&quot;sendName&quot;).value;</div><div class=\"line\">        if (filter.test(sendNameVal) == false) &#123;</div><div class=\"line\">            e.preventDefault();</div><div class=\"line\">            removeClass(info,&quot;hide&quot;)</div><div class=\"line\">        &#125;</div><div class=\"line\">        else</div><div class=\"line\">        if(filter.test(sendNameVal) == true)&#123;</div><div class=\"line\">            sendBtn.setAttribute(&quot;href&quot;,&quot;mailto:&quot; + sendNameVal + txt);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;)</div></pre></td></tr></table></figure></p>\n<p>缺点</p>\n<pre><code>部分用户打开邮箱后不知道是自己给自己发送邮件\n部分用户没有手机邮箱账户，点击打开邮件后不会设置，放弃下载\n邮件成功后，被部分客户端当做垃圾邮件处理，用户找不到邮件\n</code></pre><p>于是在此缺点的上补充了手机自带的复制功能，保证用户可以拿到下载链接，完善后下载量也提升了~</p>\n<p>长按a标签弹出系统默认菜单，点复制(拷贝)，保证用户有办法可以拿到下载链接：<br><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151116140743186-890588449.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151116140743186-890588449.jpg</a><br>重点代码展示：</p>\n<p>HTML<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;http://action.weixin.qq.com/payact/readtemplate?t=mobile/merchant/project/parking/download_tmpl&quot; target=&quot;_blank&quot; class=&quot;copy&quot;&gt;http://action.weixin.qq.com/payact/readtemplate?t=mobile/merchant/project/parking/download_tmpl&lt;/a&gt;</div></pre></td></tr></table></figure></p>\n<p>css<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">.copy&#123;-webkit-touch-callout: default;&#125;</div></pre></td></tr></table></figure></p>\n<p>javascript<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">//检测平台，PC端可点击a，移动端禁止a</div><div class=\"line\">    function mobilePreventA(e)&#123;</div><div class=\"line\">        var system = &#123;</div><div class=\"line\">            win: false,</div><div class=\"line\">            mac: false,</div><div class=\"line\">            xll: false,</div><div class=\"line\">            ipad:false</div><div class=\"line\">        &#125;;</div><div class=\"line\">        var p = navigator.platform;</div><div class=\"line\">        system.win = p.indexOf(&quot;Win&quot;) == 0;</div><div class=\"line\">        system.mac = p.indexOf(&quot;Mac&quot;) == 0;</div><div class=\"line\">        system.x11 = (p == &quot;X11&quot;) || (p.indexOf(&quot;Linux&quot;) == 0);</div><div class=\"line\">        if (!(system.win || system.mac || system.xll)) &#123;</div><div class=\"line\">             e.preventDefault();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    var copyBtn = document.querySelector(&quot;.copy&quot;);</div><div class=\"line\">    copyBtn.addEventListener(&quot;click&quot;,function(e)&#123;</div><div class=\"line\">        mobilePreventA(e);</div><div class=\"line\">    &#125;)</div></pre></td></tr></table></figure></p>\n<p>缺点</p>\n<pre><code>需要发送下载链接到PC的微信或者QQ等，操作不方便\n</code></pre><p>调用QQ邮件分享功能</p>\n<p>QQ邮件分享功能</p>\n<p><a href=\"http://images2015.cnblogs.com/blog/278431/201511/278431-20151116134553921-1856479774.jpg\" target=\"_blank\" rel=\"external\">http://images2015.cnblogs.com/blog/278431/201511/278431-20151116134553921-1856479774.jpg</a><br>重点代码展示：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</div><div class=\"line\">(function()&#123;</div><div class=\"line\">var p = &#123;</div><div class=\"line\">url:location.href,</div><div class=\"line\">to:&apos;qqmail&apos;,</div><div class=\"line\">desc:&apos;&apos;, /*默认分享理由(可选)*/</div><div class=\"line\">summary:&apos;请打开http://www.cnblogs.com/PeunZhang/下载&apos;,/*摘要(可选)*/</div><div class=\"line\">title:&apos;资源下载&apos;,/*分享标题(可选)*/</div><div class=\"line\">site:&apos;白树博客&apos;,/*分享来源 如：腾讯网(可选)*/</div><div class=\"line\">pics:&apos;ttp://images.cnblogs.com/cnblogs_com/PeunZhang/286351/o_peunzhang_cnblogs_code.png&apos; /*分享图片的路径(可选)*/</div><div class=\"line\">&#125;;</div><div class=\"line\">var s = [];</div><div class=\"line\">for(var i in p)&#123;</div><div class=\"line\">s.push(i + &apos;=&apos; + encodeURIComponent(p[i]||&apos;&apos;));</div><div class=\"line\">&#125;</div><div class=\"line\">document.write([&quot;&lt;a target=&apos;_blank&apos; &quot;, &apos;href=&quot;http://mail.qq.com/cgi-bin/qm_share?&apos;, s.join(&quot;&amp;&quot;), &apos;&quot;&apos;, &apos; style=&quot;cursor:pointer;text-decoration:none;outline:none&quot;&gt;&lt;img src=&quot;http://rescdn.qqmail.com/zh_CN/htmledition/images/function/qm_open/ico_share_01.png&quot;/&gt;&lt;/a&gt;&apos;].join(&quot;&quot;));</div><div class=\"line\">&#125;)();</div></pre></td></tr></table></figure></p>\n<p>缺点</p>\n<pre><code>移动端并没有做兼容，手机设备上操作难度大\n没有设置viewport，页面内容特别小\n没有微信登陆授权操作，需要手动输入QQ账号\n</code></pre><p>出处：<a href=\"http://peunzhang.cnblogs.com/\" target=\"_blank\" rel=\"external\">http://peunzhang.cnblogs.com/</a></p>\n"},{"title":"树莓派扩展SD卡","_content":"# [树莓派3-配置-根分区扩展到整张SD卡](http://www.ncnynl.com/archives/201612/1154.html)\n\n**树莓派3-配置-根分区扩展到整张SD卡**\n\n**说明**\n\n- 介绍如何实现根分区扩展到整张SD卡\n\n**步骤**\n\n- 安装raspi-config(已安装忽略)\n\n```\n$ sudo apt-get install  raspi-config\n\n```\n\n- 运行raspi-config\n\n```\n$ sudo raspi-config\n\n```\n\n- 界面选择，Expand Filesystem （也有版本为expand_rootfs）， 选择并确定后\n  ![raspberry-ros-config](C:\\Users\\Administrator.F77\\Desktop\\新建文件夹\\raspberry-ros-config.png)\n\n\n- 查看空间\n\n```\n$ df -h\n\n```\n\n- 效果，/dev/root之前为7G，现在增加到15G\n\n```\npi@pi-desktop:/var$ df -h\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/root        15G  7.2G  7.4G  50% /\ndevtmpfs        459M     0  459M   0% /dev\ntmpfs           463M  316K  463M   1% /dev/shm\ntmpfs           463M   13M  451M   3% /run\ntmpfs           5.0M  4.0K  5.0M   1% /run/lock\ntmpfs           463M     0  463M   0% /sys/fs/cgroup\n/dev/mmcblk0p1   64M   20M   45M  32% /boot\ntmpfs            93M   24K   93M   1% /run/user/1000\n```\n","source":"_posts/树莓派3-配置-根分区扩展到整张SD卡.md","raw":"---\ntitle: 树莓派扩展SD卡\ntags: [树莓派,物联网,linux]\ncategories: raspberry pi\n---\n# [树莓派3-配置-根分区扩展到整张SD卡](http://www.ncnynl.com/archives/201612/1154.html)\n\n**树莓派3-配置-根分区扩展到整张SD卡**\n\n**说明**\n\n- 介绍如何实现根分区扩展到整张SD卡\n\n**步骤**\n\n- 安装raspi-config(已安装忽略)\n\n```\n$ sudo apt-get install  raspi-config\n\n```\n\n- 运行raspi-config\n\n```\n$ sudo raspi-config\n\n```\n\n- 界面选择，Expand Filesystem （也有版本为expand_rootfs）， 选择并确定后\n  ![raspberry-ros-config](C:\\Users\\Administrator.F77\\Desktop\\新建文件夹\\raspberry-ros-config.png)\n\n\n- 查看空间\n\n```\n$ df -h\n\n```\n\n- 效果，/dev/root之前为7G，现在增加到15G\n\n```\npi@pi-desktop:/var$ df -h\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/root        15G  7.2G  7.4G  50% /\ndevtmpfs        459M     0  459M   0% /dev\ntmpfs           463M  316K  463M   1% /dev/shm\ntmpfs           463M   13M  451M   3% /run\ntmpfs           5.0M  4.0K  5.0M   1% /run/lock\ntmpfs           463M     0  463M   0% /sys/fs/cgroup\n/dev/mmcblk0p1   64M   20M   45M  32% /boot\ntmpfs            93M   24K   93M   1% /run/user/1000\n```\n","slug":"树莓派3-配置-根分区扩展到整张SD卡","published":1,"date":"2017-05-22T05:03:19.697Z","updated":"2017-05-25T01:01:09.779Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3fbmttc002h4wvsnxoewmjr","content":"<h1 id=\"树莓派3-配置-根分区扩展到整张SD卡\"><a href=\"#树莓派3-配置-根分区扩展到整张SD卡\" class=\"headerlink\" title=\"树莓派3-配置-根分区扩展到整张SD卡\"></a><a href=\"http://www.ncnynl.com/archives/201612/1154.html\" target=\"_blank\" rel=\"external\">树莓派3-配置-根分区扩展到整张SD卡</a></h1><p><strong>树莓派3-配置-根分区扩展到整张SD卡</strong></p>\n<p><strong>说明</strong></p>\n<ul>\n<li>介绍如何实现根分区扩展到整张SD卡</li>\n</ul>\n<p><strong>步骤</strong></p>\n<ul>\n<li>安装raspi-config(已安装忽略)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get install  raspi-config</div></pre></td></tr></table></figure>\n<ul>\n<li>运行raspi-config</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo raspi-config</div></pre></td></tr></table></figure>\n<ul>\n<li>界面选择，Expand Filesystem （也有版本为expand_rootfs）， 选择并确定后<br><img src=\"C:\\Users\\Administrator.F77\\Desktop\\新建文件夹\\raspberry-ros-config.png\" alt=\"raspberry-ros-config\"></li>\n</ul>\n<ul>\n<li>查看空间</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ df -h</div></pre></td></tr></table></figure>\n<ul>\n<li>效果，/dev/root之前为7G，现在增加到15G</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">pi@pi-desktop:/var$ df -h</div><div class=\"line\">Filesystem      Size  Used Avail Use% Mounted on</div><div class=\"line\">/dev/root        15G  7.2G  7.4G  50% /</div><div class=\"line\">devtmpfs        459M     0  459M   0% /dev</div><div class=\"line\">tmpfs           463M  316K  463M   1% /dev/shm</div><div class=\"line\">tmpfs           463M   13M  451M   3% /run</div><div class=\"line\">tmpfs           5.0M  4.0K  5.0M   1% /run/lock</div><div class=\"line\">tmpfs           463M     0  463M   0% /sys/fs/cgroup</div><div class=\"line\">/dev/mmcblk0p1   64M   20M   45M  32% /boot</div><div class=\"line\">tmpfs            93M   24K   93M   1% /run/user/1000</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"树莓派3-配置-根分区扩展到整张SD卡\"><a href=\"#树莓派3-配置-根分区扩展到整张SD卡\" class=\"headerlink\" title=\"树莓派3-配置-根分区扩展到整张SD卡\"></a><a href=\"http://www.ncnynl.com/archives/201612/1154.html\" target=\"_blank\" rel=\"external\">树莓派3-配置-根分区扩展到整张SD卡</a></h1><p><strong>树莓派3-配置-根分区扩展到整张SD卡</strong></p>\n<p><strong>说明</strong></p>\n<ul>\n<li>介绍如何实现根分区扩展到整张SD卡</li>\n</ul>\n<p><strong>步骤</strong></p>\n<ul>\n<li>安装raspi-config(已安装忽略)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get install  raspi-config</div></pre></td></tr></table></figure>\n<ul>\n<li>运行raspi-config</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo raspi-config</div></pre></td></tr></table></figure>\n<ul>\n<li>界面选择，Expand Filesystem （也有版本为expand_rootfs）， 选择并确定后<br><img src=\"C:\\Users\\Administrator.F77\\Desktop\\新建文件夹\\raspberry-ros-config.png\" alt=\"raspberry-ros-config\"></li>\n</ul>\n<ul>\n<li>查看空间</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ df -h</div></pre></td></tr></table></figure>\n<ul>\n<li>效果，/dev/root之前为7G，现在增加到15G</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">pi@pi-desktop:/var$ df -h</div><div class=\"line\">Filesystem      Size  Used Avail Use% Mounted on</div><div class=\"line\">/dev/root        15G  7.2G  7.4G  50% /</div><div class=\"line\">devtmpfs        459M     0  459M   0% /dev</div><div class=\"line\">tmpfs           463M  316K  463M   1% /dev/shm</div><div class=\"line\">tmpfs           463M   13M  451M   3% /run</div><div class=\"line\">tmpfs           5.0M  4.0K  5.0M   1% /run/lock</div><div class=\"line\">tmpfs           463M     0  463M   0% /sys/fs/cgroup</div><div class=\"line\">/dev/mmcblk0p1   64M   20M   45M  32% /boot</div><div class=\"line\">tmpfs            93M   24K   93M   1% /run/user/1000</div></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj3fbmtqr00014wvsjnk3eql3","category_id":"cj3fbmtr600034wvsjkhl9pk7","_id":"cj3fbmtrm000b4wvsp8kcthty"},{"post_id":"cj3fbmtrm00074wvsbbt3yalv","category_id":"cj3fbmtr600034wvsjkhl9pk7","_id":"cj3fbmtrm000f4wvsf9y3hlp6"},{"post_id":"cj3fbmtrm000a4wvsv1xk16zc","category_id":"cj3fbmtrm00084wvse46hwaw2","_id":"cj3fbmts1000h4wvsi3my5oe1"},{"post_id":"cj3fbmtr600024wvsf3ryjm4o","category_id":"cj3fbmtrm00084wvse46hwaw2","_id":"cj3fbmts1000l4wvsxv1phqjp"},{"post_id":"cj3fbmtrm000g4wvsk78nesrm","category_id":"cj3fbmtrm00084wvse46hwaw2","_id":"cj3fbmts1000o4wvsgk5oz2wt"},{"post_id":"cj3fbmtr600054wvszsuvgita","category_id":"cj3fbmtr600034wvsjkhl9pk7","_id":"cj3fbmts1000s4wvs4kp8c9qw"},{"post_id":"cj3fbmts1000i4wvsbl0gppqe","category_id":"cj3fbmtrm00084wvse46hwaw2","_id":"cj3fbmts1000w4wvszh0tsvho"},{"post_id":"cj3fbmts1000m4wvs0ciwu5ye","category_id":"cj3fbmtrm00084wvse46hwaw2","_id":"cj3fbmts1000z4wvs6s5h6m3c"},{"post_id":"cj3fbmtrm00064wvsqltbgn6v","category_id":"cj3fbmts1000j4wvso08fs42j","_id":"cj3fbmts100124wvsthj175fh"},{"post_id":"cj3fbmtrm000c4wvs5zhzpv9d","category_id":"cj3fbmts1000r4wvs1xva1mu5","_id":"cj3fbmtsh00144wvswfztkhgw"},{"post_id":"cj3fbmts100104wvs46v7u1ry","category_id":"cj3fbmtr600034wvsjkhl9pk7","_id":"cj3fbmtsh00184wvsfz9jmixu"},{"post_id":"cj3fbmts100134wvsrk995ndn","category_id":"cj3fbmtr600034wvsjkhl9pk7","_id":"cj3fbmtsh001b4wvsvcvoteyu"},{"post_id":"cj3fbmts1000p4wvse8pb8vxr","category_id":"cj3fbmts1000y4wvs4sblg2vx","_id":"cj3fbmtsh001g4wvsnexsxoaw"},{"post_id":"cj3fbmtsh00194wvs3hm5xl4q","category_id":"cj3fbmtsh00164wvs1xnt33h9","_id":"cj3fbmtsh001j4wvseycvq1zo"},{"post_id":"cj3fbmts1000u4wvsitimdl9q","category_id":"cj3fbmtsh00164wvs1xnt33h9","_id":"cj3fbmtsh001n4wvs2ocokaw6"},{"post_id":"cj3fbmts1000x4wvshwkxu0s2","category_id":"cj3fbmtsh00164wvs1xnt33h9","_id":"cj3fbmtsx001r4wvsih5nm8a4"},{"post_id":"cj3fbmtsh001k4wvs2q9k7m9v","category_id":"cj3fbmts1000r4wvs1xva1mu5","_id":"cj3fbmtsx001w4wvstfhpj4af"},{"post_id":"cj3fbmtsh001o4wvsvtgnl9rj","category_id":"cj3fbmts1000r4wvs1xva1mu5","_id":"cj3fbmtsx001y4wvsh58iav3t"},{"post_id":"cj3fbmtsh00154wvsytqojs9g","category_id":"cj3fbmtsh001l4wvsmjazijeq","_id":"cj3fbmtsx00224wvssfol8f3q"},{"post_id":"cj3fbmtsx001v4wvsxrduguc7","category_id":"cj3fbmtr600034wvsjkhl9pk7","_id":"cj3fbmtsx00244wvs4h2tjram"},{"post_id":"cj3fbmtsh001c4wvsg5dnzyel","category_id":"cj3fbmtsx001t4wvsqipusg01","_id":"cj3fbmtsx00274wvstckin8qh"},{"post_id":"cj3fbmtsx001x4wvsnj36wiuk","category_id":"cj3fbmtsh001l4wvsmjazijeq","_id":"cj3fbmttc002b4wvs5llhpv41"},{"post_id":"cj3fbmtsx00214wvs6wt7y2tl","category_id":"cj3fbmts1000r4wvs1xva1mu5","_id":"cj3fbmttc002e4wvsjcgodttv"},{"post_id":"cj3fbmtsx00234wvsizokeu0a","category_id":"cj3fbmts1000r4wvs1xva1mu5","_id":"cj3fbmttc002i4wvsnbdm9fh6"},{"post_id":"cj3fbmtsh001h4wvs27py1gvm","category_id":"cj3fbmtsx001z4wvsj5i6u8tw","_id":"cj3fbmttc002k4wvs3eawrgz5"},{"post_id":"cj3fbmtsx00254wvslkuaa2sc","category_id":"cj3fbmts1000r4wvs1xva1mu5","_id":"cj3fbmttc002n4wvsaas3bifj"},{"post_id":"cj3fbmttc002a4wvs65g4e6bv","category_id":"cj3fbmtsx00264wvse8fcv366","_id":"cj3fbmttc002o4wvsivgy208b"},{"post_id":"cj3fbmtsx001q4wvsjsmvnbep","category_id":"cj3fbmtsx00264wvse8fcv366","_id":"cj3fbmttc002q4wvs5pgki2jk"},{"post_id":"cj3fbmttc002d4wvsmdqgh84m","category_id":"cj3fbmtsx00264wvse8fcv366","_id":"cj3fbmttc002s4wvsry54wvay"},{"post_id":"cj3fbmttc002h4wvsnxoewmjr","category_id":"cj3fbmts1000r4wvs1xva1mu5","_id":"cj3fbmttc002v4wvsz7j4iovd"}],"PostTag":[{"post_id":"cj3fbmtqr00014wvsjnk3eql3","tag_id":"cj3fbmtr600044wvswps41857","_id":"cj3fbmts1000n4wvsaf7sdqw2"},{"post_id":"cj3fbmtqr00014wvsjnk3eql3","tag_id":"cj3fbmtrm00094wvsr0xw536r","_id":"cj3fbmts1000q4wvsn3ac4l9t"},{"post_id":"cj3fbmtqr00014wvsjnk3eql3","tag_id":"cj3fbmtrm000e4wvsi0t8ylt5","_id":"cj3fbmts1000v4wvsuzsu6zcz"},{"post_id":"cj3fbmtr600024wvsf3ryjm4o","tag_id":"cj3fbmts1000k4wvs5khaes19","_id":"cj3fbmtsh001a4wvstw9vtlia"},{"post_id":"cj3fbmtr600024wvsf3ryjm4o","tag_id":"cj3fbmts1000t4wvskn1e77c2","_id":"cj3fbmtsh001d4wvsbzxony7n"},{"post_id":"cj3fbmtr600024wvsf3ryjm4o","tag_id":"cj3fbmts100114wvs9p4jq49l","_id":"cj3fbmtsh001i4wvssctnfbfx"},{"post_id":"cj3fbmtr600054wvszsuvgita","tag_id":"cj3fbmtr600044wvswps41857","_id":"cj3fbmtsx001p4wvs44y0hk92"},{"post_id":"cj3fbmtr600054wvszsuvgita","tag_id":"cj3fbmtsh001f4wvsfw0fq2rz","_id":"cj3fbmtsx001s4wvsp5w6d66y"},{"post_id":"cj3fbmtrm00064wvsqltbgn6v","tag_id":"cj3fbmts100114wvs9p4jq49l","_id":"cj3fbmttc00294wvs6ovkdi1f"},{"post_id":"cj3fbmtrm00064wvsqltbgn6v","tag_id":"cj3fbmtsx001u4wvsoxftpjj7","_id":"cj3fbmttc002c4wvsn5ljxsaz"},{"post_id":"cj3fbmtrm00064wvsqltbgn6v","tag_id":"cj3fbmtsx00204wvsws7de4om","_id":"cj3fbmttc002g4wvsf6vnmq7t"},{"post_id":"cj3fbmtrm00074wvsbbt3yalv","tag_id":"cj3fbmtr600044wvswps41857","_id":"cj3fbmttc002j4wvsp25i2wc9"},{"post_id":"cj3fbmtrm00074wvsbbt3yalv","tag_id":"cj3fbmttc00284wvsxdc1wxk0","_id":"cj3fbmttc002m4wvsanrl80za"},{"post_id":"cj3fbmtrm000a4wvsv1xk16zc","tag_id":"cj3fbmts100114wvs9p4jq49l","_id":"cj3fbmttc002r4wvsdqc77brj"},{"post_id":"cj3fbmtrm000a4wvsv1xk16zc","tag_id":"cj3fbmts1000k4wvs5khaes19","_id":"cj3fbmttc002t4wvs20swbg8m"},{"post_id":"cj3fbmtrm000c4wvs5zhzpv9d","tag_id":"cj3fbmttc002p4wvsc7bqucf8","_id":"cj3fbmttc002z4wvs492k3nmy"},{"post_id":"cj3fbmtrm000c4wvs5zhzpv9d","tag_id":"cj3fbmttc002u4wvs7rg5584l","_id":"cj3fbmttc00304wvsjjws0xdi"},{"post_id":"cj3fbmtrm000c4wvs5zhzpv9d","tag_id":"cj3fbmts100114wvs9p4jq49l","_id":"cj3fbmttc00324wvszqswpv4o"},{"post_id":"cj3fbmtrm000c4wvs5zhzpv9d","tag_id":"cj3fbmttc002x4wvsm0ji81wy","_id":"cj3fbmttc00334wvslglqe1bg"},{"post_id":"cj3fbmtrm000g4wvsk78nesrm","tag_id":"cj3fbmts1000k4wvs5khaes19","_id":"cj3fbmttc00364wvsc8il4699"},{"post_id":"cj3fbmtrm000g4wvsk78nesrm","tag_id":"cj3fbmttc00314wvsklui41nh","_id":"cj3fbmttc00374wvsuyx4hovs"},{"post_id":"cj3fbmtrm000g4wvsk78nesrm","tag_id":"cj3fbmts100114wvs9p4jq49l","_id":"cj3fbmttc00394wvsptnygxf3"},{"post_id":"cj3fbmts1000i4wvsbl0gppqe","tag_id":"cj3fbmts1000k4wvs5khaes19","_id":"cj3fbmttc003c4wvswbtf0ya8"},{"post_id":"cj3fbmts1000i4wvsbl0gppqe","tag_id":"cj3fbmttc00384wvs3mmfuycw","_id":"cj3fbmttc003d4wvsrchmelvf"},{"post_id":"cj3fbmts1000i4wvsbl0gppqe","tag_id":"cj3fbmts100114wvs9p4jq49l","_id":"cj3fbmttc003f4wvs85zjjqhx"},{"post_id":"cj3fbmts1000m4wvs0ciwu5ye","tag_id":"cj3fbmts1000k4wvs5khaes19","_id":"cj3fbmtts003h4wvsp27np2j6"},{"post_id":"cj3fbmts1000m4wvs0ciwu5ye","tag_id":"cj3fbmttc003b4wvsfiaxsxoe","_id":"cj3fbmtts003i4wvslcavja09"},{"post_id":"cj3fbmts1000m4wvs0ciwu5ye","tag_id":"cj3fbmts100114wvs9p4jq49l","_id":"cj3fbmtts003k4wvs7ilhp7a9"},{"post_id":"cj3fbmts1000p4wvse8pb8vxr","tag_id":"cj3fbmtts003g4wvsicfcluqb","_id":"cj3fbmtts003m4wvslpcpxsi4"},{"post_id":"cj3fbmts1000p4wvse8pb8vxr","tag_id":"cj3fbmtts003j4wvsfh7i0mf0","_id":"cj3fbmtts003n4wvsrhyfk3ih"},{"post_id":"cj3fbmts1000u4wvsitimdl9q","tag_id":"cj3fbmtts003l4wvsv0ttzvd1","_id":"cj3fbmtts003q4wvsgtj7jkb3"},{"post_id":"cj3fbmts1000u4wvsitimdl9q","tag_id":"cj3fbmtts003o4wvsk87nbmxb","_id":"cj3fbmtts003r4wvsf74x08j5"},{"post_id":"cj3fbmts1000u4wvsitimdl9q","tag_id":"cj3fbmtr600044wvswps41857","_id":"cj3fbmtts003t4wvsnxdtm3al"},{"post_id":"cj3fbmts1000x4wvshwkxu0s2","tag_id":"cj3fbmtts003l4wvsv0ttzvd1","_id":"cj3fbmtts003v4wvs7qxwfl0x"},{"post_id":"cj3fbmts1000x4wvshwkxu0s2","tag_id":"cj3fbmtr600044wvswps41857","_id":"cj3fbmtts003w4wvsdx7ztdee"},{"post_id":"cj3fbmts1000x4wvshwkxu0s2","tag_id":"cj3fbmtts003s4wvsfpki4fek","_id":"cj3fbmtu8003y4wvs1pw25511"},{"post_id":"cj3fbmts100104wvs46v7u1ry","tag_id":"cj3fbmtr600044wvswps41857","_id":"cj3fbmtu8003z4wvs0dc7pjnh"},{"post_id":"cj3fbmts100104wvs46v7u1ry","tag_id":"cj3fbmtrm00094wvsr0xw536r","_id":"cj3fbmtu800414wvsr7ssm9o9"},{"post_id":"cj3fbmts100104wvs46v7u1ry","tag_id":"cj3fbmtts003u4wvscoson45c","_id":"cj3fbmtu800424wvsksq55s39"},{"post_id":"cj3fbmts100134wvsrk995ndn","tag_id":"cj3fbmtts003x4wvss6fdqdno","_id":"cj3fbmtu800454wvsepaqrnlk"},{"post_id":"cj3fbmts100134wvsrk995ndn","tag_id":"cj3fbmtr600044wvswps41857","_id":"cj3fbmtu800464wvs9untz21z"},{"post_id":"cj3fbmts100134wvsrk995ndn","tag_id":"cj3fbmttc00284wvsxdc1wxk0","_id":"cj3fbmtu800484wvslimqya8c"},{"post_id":"cj3fbmts100134wvsrk995ndn","tag_id":"cj3fbmtu800434wvs5nscnivz","_id":"cj3fbmtu800494wvs1yibv6n9"},{"post_id":"cj3fbmtsh00154wvsytqojs9g","tag_id":"cj3fbmtu800444wvszkoozmzd","_id":"cj3fbmtu8004c4wvs9cnu54zc"},{"post_id":"cj3fbmtsh00154wvsytqojs9g","tag_id":"cj3fbmtu800474wvsimfparkt","_id":"cj3fbmtu8004d4wvs1xqbgkyc"},{"post_id":"cj3fbmtsh00154wvsytqojs9g","tag_id":"cj3fbmtr600044wvswps41857","_id":"cj3fbmtu8004f4wvszk3ictiv"},{"post_id":"cj3fbmtsh00154wvsytqojs9g","tag_id":"cj3fbmtu8004a4wvsyry2gr5l","_id":"cj3fbmtu8004g4wvsag6la5dy"},{"post_id":"cj3fbmtsh00194wvs3hm5xl4q","tag_id":"cj3fbmtts003l4wvsv0ttzvd1","_id":"cj3fbmtu8004i4wvs55yddb4i"},{"post_id":"cj3fbmtsh00194wvs3hm5xl4q","tag_id":"cj3fbmtr600044wvswps41857","_id":"cj3fbmtu8004j4wvspsechsi6"},{"post_id":"cj3fbmtsh00194wvs3hm5xl4q","tag_id":"cj3fbmtu800474wvsimfparkt","_id":"cj3fbmtu8004l4wvse22iokcq"},{"post_id":"cj3fbmtsh00194wvs3hm5xl4q","tag_id":"cj3fbmtrm00094wvsr0xw536r","_id":"cj3fbmtu8004m4wvs82y6tppq"},{"post_id":"cj3fbmtsh001c4wvsg5dnzyel","tag_id":"cj3fbmtu8004h4wvs011gm4li","_id":"cj3fbmtu8004o4wvsjl4e2dmy"},{"post_id":"cj3fbmtsh001c4wvsg5dnzyel","tag_id":"cj3fbmtr600044wvswps41857","_id":"cj3fbmtu8004p4wvstigmnj8t"},{"post_id":"cj3fbmtsh001c4wvsg5dnzyel","tag_id":"cj3fbmtrm00094wvsr0xw536r","_id":"cj3fbmtu8004r4wvssqiy7ggu"},{"post_id":"cj3fbmtsh001h4wvs27py1gvm","tag_id":"cj3fbmtu8004k4wvsh5qu4mke","_id":"cj3fbmtu8004s4wvsaa1ick2v"},{"post_id":"cj3fbmtsh001h4wvs27py1gvm","tag_id":"cj3fbmtr600044wvswps41857","_id":"cj3fbmtu8004u4wvsquz27i51"},{"post_id":"cj3fbmtsh001k4wvs2q9k7m9v","tag_id":"cj3fbmttc002p4wvsc7bqucf8","_id":"cj3fbmtu8004v4wvsnjul616h"},{"post_id":"cj3fbmtsh001k4wvs2q9k7m9v","tag_id":"cj3fbmttc002u4wvs7rg5584l","_id":"cj3fbmtun004x4wvst8pvd4qq"},{"post_id":"cj3fbmtsh001k4wvs2q9k7m9v","tag_id":"cj3fbmts100114wvs9p4jq49l","_id":"cj3fbmtun004y4wvsuhuo4dtc"},{"post_id":"cj3fbmtsh001o4wvsvtgnl9rj","tag_id":"cj3fbmttc002p4wvsc7bqucf8","_id":"cj3fbmtun00504wvsumhx9lrv"},{"post_id":"cj3fbmtsh001o4wvsvtgnl9rj","tag_id":"cj3fbmttc002u4wvs7rg5584l","_id":"cj3fbmtun00514wvshd3qwx65"},{"post_id":"cj3fbmtsh001o4wvsvtgnl9rj","tag_id":"cj3fbmts100114wvs9p4jq49l","_id":"cj3fbmtun00534wvsbhcaaeaa"},{"post_id":"cj3fbmtsx001q4wvsjsmvnbep","tag_id":"cj3fbmtr600044wvswps41857","_id":"cj3fbmtun00554wvsrg3fr0m3"},{"post_id":"cj3fbmtsx001q4wvsjsmvnbep","tag_id":"cj3fbmtun004z4wvspoeefhxx","_id":"cj3fbmtun00564wvs0efm4az1"},{"post_id":"cj3fbmtsx001q4wvsjsmvnbep","tag_id":"cj3fbmtun00524wvsg7pcp06m","_id":"cj3fbmtun00584wvszcdgez4l"},{"post_id":"cj3fbmtsx001v4wvsxrduguc7","tag_id":"cj3fbmtrm00094wvsr0xw536r","_id":"cj3fbmtun00594wvscuosdc0i"},{"post_id":"cj3fbmtsx001v4wvsxrduguc7","tag_id":"cj3fbmtr600044wvswps41857","_id":"cj3fbmtun005b4wvsu616rw3f"},{"post_id":"cj3fbmtsx001v4wvsxrduguc7","tag_id":"cj3fbmtts003u4wvscoson45c","_id":"cj3fbmtun005c4wvshf2qzs73"},{"post_id":"cj3fbmtsx001x4wvsnj36wiuk","tag_id":"cj3fbmtr600044wvswps41857","_id":"cj3fbmtun005e4wvsg8s8y6xx"},{"post_id":"cj3fbmtsx001x4wvsnj36wiuk","tag_id":"cj3fbmtu800474wvsimfparkt","_id":"cj3fbmtun005f4wvsmbrgphmy"},{"post_id":"cj3fbmtsx001x4wvsnj36wiuk","tag_id":"cj3fbmtrm00094wvsr0xw536r","_id":"cj3fbmtun005h4wvsfbkbgs8c"},{"post_id":"cj3fbmtsx001x4wvsnj36wiuk","tag_id":"cj3fbmtun005a4wvse5xexax2","_id":"cj3fbmtun005i4wvswa5ms7ph"},{"post_id":"cj3fbmtsx00214wvs6wt7y2tl","tag_id":"cj3fbmttc002p4wvsc7bqucf8","_id":"cj3fbmtun005k4wvsqzsrf2hr"},{"post_id":"cj3fbmtsx00214wvs6wt7y2tl","tag_id":"cj3fbmttc002u4wvs7rg5584l","_id":"cj3fbmtun005l4wvsk80s0mc2"},{"post_id":"cj3fbmtsx00214wvs6wt7y2tl","tag_id":"cj3fbmts100114wvs9p4jq49l","_id":"cj3fbmtun005n4wvsc9rokqxe"},{"post_id":"cj3fbmtsx00234wvsizokeu0a","tag_id":"cj3fbmttc002p4wvsc7bqucf8","_id":"cj3fbmtun005p4wvsusu69v7b"},{"post_id":"cj3fbmtsx00234wvsizokeu0a","tag_id":"cj3fbmttc002u4wvs7rg5584l","_id":"cj3fbmtun005q4wvs2hdw3aza"},{"post_id":"cj3fbmtsx00234wvsizokeu0a","tag_id":"cj3fbmts100114wvs9p4jq49l","_id":"cj3fbmtun005s4wvsrci2soiv"},{"post_id":"cj3fbmtsx00254wvslkuaa2sc","tag_id":"cj3fbmttc002p4wvsc7bqucf8","_id":"cj3fbmtun005u4wvsoh0h9v3z"},{"post_id":"cj3fbmtsx00254wvslkuaa2sc","tag_id":"cj3fbmttc002u4wvs7rg5584l","_id":"cj3fbmtun005v4wvs1j8cepf7"},{"post_id":"cj3fbmtsx00254wvslkuaa2sc","tag_id":"cj3fbmts100114wvs9p4jq49l","_id":"cj3fbmtun005x4wvslo30nvl3"},{"post_id":"cj3fbmttc002a4wvs65g4e6bv","tag_id":"cj3fbmtr600044wvswps41857","_id":"cj3fbmtun005z4wvsaklsaqcm"},{"post_id":"cj3fbmttc002a4wvs65g4e6bv","tag_id":"cj3fbmtun004z4wvspoeefhxx","_id":"cj3fbmtun00604wvsyi48t8db"},{"post_id":"cj3fbmttc002a4wvs65g4e6bv","tag_id":"cj3fbmtun00524wvsg7pcp06m","_id":"cj3fbmtun00624wvsrasmetzx"},{"post_id":"cj3fbmttc002d4wvsmdqgh84m","tag_id":"cj3fbmtr600044wvswps41857","_id":"cj3fbmtun00654wvsrgt04pnf"},{"post_id":"cj3fbmttc002d4wvsmdqgh84m","tag_id":"cj3fbmtun004z4wvspoeefhxx","_id":"cj3fbmtv300664wvsfykpoz3y"},{"post_id":"cj3fbmttc002d4wvsmdqgh84m","tag_id":"cj3fbmtun00524wvsg7pcp06m","_id":"cj3fbmtv300684wvsnjn7d3bf"},{"post_id":"cj3fbmttc002d4wvsmdqgh84m","tag_id":"cj3fbmtun00634wvskdgz3o3x","_id":"cj3fbmtv300694wvs4gasce8c"},{"post_id":"cj3fbmttc002h4wvsnxoewmjr","tag_id":"cj3fbmttc002p4wvsc7bqucf8","_id":"cj3fbmtv3006a4wvsk7gfbeci"},{"post_id":"cj3fbmttc002h4wvsnxoewmjr","tag_id":"cj3fbmttc002u4wvs7rg5584l","_id":"cj3fbmtv3006b4wvs9frnik4p"},{"post_id":"cj3fbmttc002h4wvsnxoewmjr","tag_id":"cj3fbmts100114wvs9p4jq49l","_id":"cj3fbmtv3006c4wvsvroad1w4"}],"Tag":[{"name":"前端","_id":"cj3fbmtr600044wvswps41857"},{"name":"js","_id":"cj3fbmtrm00094wvsr0xw536r"},{"name":"正则表达式","_id":"cj3fbmtrm000e4wvsi0t8ylt5"},{"name":"fedora","_id":"cj3fbmts1000k4wvs5khaes19"},{"name":"SSH","_id":"cj3fbmts1000t4wvskn1e77c2"},{"name":"linux","_id":"cj3fbmts100114wvs9p4jq49l"},{"name":"SASS","_id":"cj3fbmtsh001f4wvsfw0fq2rz"},{"name":"Tomcat","_id":"cj3fbmtsx001u4wvsoxftpjj7"},{"name":"java","_id":"cj3fbmtsx00204wvsws7de4om"},{"name":"css","_id":"cj3fbmttc00284wvsxdc1wxk0"},{"name":"树莓派","_id":"cj3fbmttc002p4wvsc7bqucf8"},{"name":"物联网","_id":"cj3fbmttc002u4wvs7rg5584l"},{"name":"远程登录","_id":"cj3fbmttc002x4wvsm0ji81wy"},{"name":"vlc","_id":"cj3fbmttc00314wvsklui41nh"},{"name":"清理垃圾","_id":"cj3fbmttc00384wvs3mmfuycw"},{"name":"转换","_id":"cj3fbmttc003b4wvsfiaxsxoe"},{"name":"github","_id":"cj3fbmtts003g4wvsicfcluqb"},{"name":"域名","_id":"cj3fbmtts003j4wvsfh7i0mf0"},{"name":"hexo","_id":"cj3fbmtts003l4wvsv0ttzvd1"},{"name":"主题","_id":"cj3fbmtts003o4wvsk87nbmxb"},{"name":"命令","_id":"cj3fbmtts003s4wvsfpki4fek"},{"name":"代码块","_id":"cj3fbmtts003u4wvscoson45c"},{"name":"less","_id":"cj3fbmtts003x4wvss6fdqdno"},{"name":"格式化","_id":"cj3fbmtu800434wvs5nscnivz"},{"name":"npm","_id":"cj3fbmtu800444wvszkoozmzd"},{"name":"node","_id":"cj3fbmtu800474wvsimfparkt"},{"name":"卸载","_id":"cj3fbmtu8004a4wvsyry2gr5l"},{"name":"react","_id":"cj3fbmtu8004h4wvs011gm4li"},{"name":"html","_id":"cj3fbmtu8004k4wvsh5qu4mke"},{"name":"移动端","_id":"cj3fbmtun004z4wvspoeefhxx"},{"name":"WEB","_id":"cj3fbmtun00524wvsg7pcp06m"},{"name":"服务器","_id":"cj3fbmtun005a4wvse5xexax2"},{"name":"邮件","_id":"cj3fbmtun00634wvskdgz3o3x"}]}}